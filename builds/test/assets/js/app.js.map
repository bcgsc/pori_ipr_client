{"version":3,"sources":["app.js","indefiniteArticle.js","analysis.api.js","bioapps.js","complete.js","jira.js","knowledgebase.js","lims.js","pog.js","pogDataHistory.js","project.api.js","pubmed.js","session.js","socket.js","therapeuticOptions.js","user.js","vardb.js","analysis_report/recent.api.js","germline/germline_report.api.js","germline/germline_review.api.js","germline/germline_variant.api.js","probe/alterations.js","probe/signature.js","probe/testInformation.js","reports/geneViewer.js","reports/image.js","reports/pog.analysis_reports.js","summary/analystComments.js","summary/genomicAlterationsIdentified.js","summary/genomicEventsTherapeutic.js","summary/microbial.js","summary/mutationSummary.js","summary/pathwayAnalysis.js","summary/patientInformation.js","summary/probeTarget.js","summary/tumourAnalysis.js","summary/variantCounts.js","tracking/definition.js","tracking/hook.api.js","tracking/state.js","tracking/task.js","tracking/ticket_template.js","tracking/tracking.js","reports/genomic/appendices.js","reports/genomic/copyNumberAnalyses/cnv.js","reports/genomic/expressionAnalysis/drugTarget.js","reports/genomic/expressionAnalysis/outlier.js","reports/genomic/expressionAnalysis/proteinExpression.js","reports/genomic/detailedGenomicAnalysis/alterations.js","reports/genomic/detailedGenomicAnalysis/kbAssociationMap.js","reports/genomic/detailedGenomicAnalysis/targetedGene.js","reports/genomic/presentation/presentation.api.js","reports/genomic/somaticMutations/mutationSignature.js","reports/genomic/somaticMutations/smallMutations.js","reports/genomic/structuralVariation/sv.js","acl.js","knowledgeBase.js","lodash.js","recentReportService.js","ticketBody.js","toastService.js","userSettings.js","focus/focus.js","ipr-cnv/ipr-cnv.js","ipr-copypaste/ipr-copypaste.js","ipr-dataViewer/ipr-dataViewer.js","ipr-discussion-entry/ipr-discussion-entry.js","ipr-gene-viewer/ipr-gene-viewer.js","ipr-genomicAlteration/ipr-genomicAlteration.js","ipr-mutation-landscape/ipr-mutation-landscape.js","ipr-outlier/ipr-outlier.js","ipr-paginate/ipr-paginate.js","ipr-pog-role/ipr-pog-role.js","ipr-progressor/ipr-progressor.js","ipr-random-quote/ipr-random-quote.js","ipr-recent-reports/ipr-recent-reports.js","ipr-report-card/ipr-report-card.js","ipr-report-listing-card/ipr-report-listing-card.js","ipr-report-state/ipr-report-state.js","ipr-report-table/ipr-report-table.js","ipr-section-hide/ipr-section-hide.js","ipr-smallMutations/ipr-smallMutations.js","ipr-sv/ipr-sv.js","ipr-ticket-body/ipr-ticket-body.js","ipr-tracking-card/ipr-tracking-card.js","ipr-tracking-card/ipr-tracking-card.state.js","ipr-tracking-card/ipr-tracking-card.task.js","ipr-tracking-checkin/ipr-tracking-checkin.js","ipr-tumourContent/ipr-tumourContent.js","uiBreadcrumbs/uiBreadcrumbs.js","print/ipr-print-dga-alteration/ipr-print-dga-alteration.js","print/ipr-print-diagram/ipr-print-diagram.js","access.js","application.js","breadcumb.js","router.js","dashboard/report/genomic/appendices/appendices.js","dashboard/report/genomic/diseaseSpecificAnalysis/diseaseSpecificAnalysis.js","dashboard/report/genomic/analystComments/analystComments.js","dashboard/report/genomic/copyNumberAnalyses/copyNumberAnalyses.js","dashboard/report/genomic/history/history.detail.js","dashboard/report/genomic/history/history.export.js","dashboard/report/genomic/history/history.js","dashboard/report/genomic/microbial/microbial.js","dashboard/report/genomic/knowledgebase/knowledgebase.js","dashboard/report/genomic/meta/meta.js","dashboard/report/genomic/pathwayAnalysis/pathwayAnalysis.js","dashboard/report/genomic/smallMutations/smallMutations.js","dashboard/report/genomic/spearman/spearman.js","dashboard/report/genomic/structuralVariation/structuralVariation.js","dashboard/report/genomic/summary/summary.js","dashboard/report/genomic/therapeutic/therapeutic.edit.js","dashboard/report/genomic/therapeutic/therapeutic.js","dashboard/report/probe/appendices/appendices.js","dashboard/report/probe/detailedGenomicAnalysis/detailedGenomicAnalysis.js","dashboard/report/probe/meta/meta.js","dashboard/report/probe/summary/summary.js","dashboard/report/genomic/expressionAnalysis/version01/expressionAnalysis.js","dashboard/report/genomic/expressionAnalysis/version02/expressionAnalysis.js","dashboard/report/genomic/presentation/discussion/discussion.js","dashboard/report/genomic/knowledgebase/alterations/alterations.edit.js","dashboard/report/genomic/knowledgebase/alterations/alterations.js","dashboard/report/genomic/presentation/slide/slide.js","print/report/genomic/sections/analystComments/analystComments.js","print/report/genomic/sections/appendices/appendices.js","print/report/genomic/sections/copyNumberAnalysis/copyNumberAnalysis.js","print/report/genomic/sections/copyNumberAnalysis/copyNumberAnalysisCNVLOH.js","print/report/genomic/sections/dga/dga.js","print/report/genomic/sections/diseaseSpecificAnalysis/diseaseSpecificAnalysis.js","print/report/genomic/sections/expressionAnalysis/expressionAnalysis.js","print/report/genomic/sections/pathwayAnalysis/pathwayAnalysis.js","print/report/genomic/sections/presentation/slide.js","print/report/genomic/sections/somaticMutations/somaticMutations.js","print/report/genomic/sections/structuralVariants/structuralVariants.js","print/report/genomic/sections/summary/summary.js","print/report/genomic/sections/therapeuticOptions/therapeuticOptions.js","print/report/probe/sections/alterations/alterations.js","print/report/probe/sections/appendices/appendices.js","print/report/probe/sections/summary/summary.js","dashboard/dashboard.js","dashboard/feedback.js","dashboard/loadPOG.js","dashboard/toolbar.js","errors/error.js","print/print.js","dashboard/admin/admin.js","dashboard/biopsy/biopsy.js","dashboard/adminbar/adminbar.js","dashboard/home/home.js","dashboard/germline/germline.js","dashboard/pog/pog.js","dashboard/knowledgebase/knowledgebase.js","dashboard/report/report.js","dashboard/tracking/tracking.js","public/login/login.js","dashboard/admin/user/group.edit.js","dashboard/admin/user/group.js","dashboard/admin/user/user.edit.js","dashboard/admin/user/userList.js","dashboard/admin/user/users.js","dashboard/biopsy/board/board.add.js","dashboard/biopsy/board/board.edit.js","dashboard/biopsy/board/board.edit_comparator.js","dashboard/biopsy/board/board.js","dashboard/germline/board/board.js","dashboard/germline/report/report.js","dashboard/pog/analysis/analysis.edit.js","dashboard/pog/analysis/analysis.js","dashboard/knowledgebase/dashboard/dashboard.js","dashboard/knowledgebase/events/events.edit.js","dashboard/knowledgebase/events/events.filter.js","dashboard/knowledgebase/events/events.js","dashboard/knowledgebase/references/references.edit.js","dashboard/knowledgebase/references/references.filter.js","dashboard/knowledgebase/references/references.js","dashboard/knowledgebase/references/references.view.js","dashboard/report/genomic/genomic.js","dashboard/report/listing/listing.js","dashboard/report/probe/probe.js","dashboard/reports/clinician/clinician.js","dashboard/reports/dashboard/dashboard.js","dashboard/reports/genomic/genomic.js","dashboard/reports/probe/probe.js","print/report/probe/probe.js","print/report/genomic/genomic.js","dashboard/tracking/board/board.js","dashboard/tracking/board/board.lane.checkin.js","dashboard/tracking/board/board.lane.js","dashboard/tracking/assignment/assignment.js","dashboard/tracking/assignment/assignment.ticket_template.js","dashboard/tracking/definition/definition.hook.js","dashboard/tracking/definition/definition.js","dashboard/tracking/definition/definition.ticket.js"],"names":["app","angular","module","run","httpErrorHandler","$rootScope","toastService","$on","event","eventData","serverError","message","$inject","filter","noun","indexOf","charAt","factory","_","$http","$q","api","CONFIG","ENDPOINTS","API","$analysis","all","params","resolve","reject","get","then","result","data","error","extended","ident","add","post","catch","err","update","payload","copy","analysis","Array","isArray","put","comparators","e","token","$bioapps","cancer_goup","method","url","headers","Authorization","undefined","console","log","dicts","alterations","type","variant","evidence","disease","association","zygosity","referenceTypes","knowledgebase","sampleType","preClinicalModel","Alterations","Type","query","toLowerCase","chain","_alterations","keys","alteration","map","startCase","value","getter","$user","apiProxy","$jira","$session","ticket","create","project","summary","description","options","deferred","defer","fields","key","issuetype","name","subtask","priority","assignee","components","parent","labels","l","replace","security","authorization","withCredentials","response","status","body","promise","title","resp","session","login","username","password","current","projects","getSecurityLevels","$kb","vocabulary","validate","events","input","events_expression","genevar","metrics","diseaseOntology","history","entry","references","limit","offset","filters","processFilters","forEach","join","opts","count","reference","comments","remove","delete","$lims","req","sample","pogs","op","content","field","source","library","names","illumina_run","libraries","_pogs","$pog","val","push","id","POGID","load","xhttp","XMLHttpRequest","onreadystatechange","stateChange","readyState","notify","responseText","open","send","destroy","user","bind","role","unbind","export","csv","$history","report","detail","revert","comment","restore","tag","search","$project","$pubmed","article","pmid","JSON","parse","parseInt","$localStorage","localStorageKey","_token","initialized","me","getToken","when","store","defaults","common","init","_me","logout","socketFactory","_ready","myIoSocket","io","connect","SOCKET","socket","ioSocket","on","emit","bcgscIprToken","msg","ready","$therapeutic","one","retrieve","service","_groups","Promise","self","groups","isAdmin","aGroups","g","length","group","member","VARDB","authHeader","$varDB","variantLibraries","chromosome","position","ref","alt","opt","libraryMeta","results","$recent","addOrUpdate","state","$report","biopsy","patient","reports","flash_token","$review","review","$variant","$APC","getAll","pog","getType","gene","$signature","sign","revoke","$testInformation","$gv","$image","expDensityGraphs","mutationSummary","subtypePlots","bindUser","unbindUser","$ac","revokeSign","$gai","gai","_gai","cascade","$get","$microbial","$ms","$pa","$pi","pi","$pt","$ta","$vc","$definition","definition","userLoad","$hook","hook","$state","filtered","getState","$task","getByIdent","getTaskByState","task","checkInTask","outcome","patch","checkInTaskIdent","revokeCheckin","checkin","assignUser","$template","getDefTasks","template","$tracking","track","$appendices","tcga","$cnv","$drugTarget","$outlier","$protein","$kbAssoc","$map","assoc","$tg","$presentation","discussion","slide","reuslt","$mutationSignature","$smallMutations","$sv","u","actions","view","allow","edit","analyses","tracking","resources","germline","resource","r","permission","allows","intersection","mapValues","rejects","action","a","inGroup","find","injectUser","processReferences","output","k","refs","ors","ands","split","orGroup","i","events_expression_expanded","disease_list","context","$window","lodash","window","$mdToast","errorMessage","toastOpen","show","templateUrl","locals","hideDelay","controller","$scope","class_style","closeToast","hide","userSettings","$us","settings","setting","save","directive","$timeout","link","scope","element","attrs","$watch","focusMe","focus","restrict","transclude","cnvs","attr","copyFilter","copyChange","match","text","changeCopyTooltip","copyTooltip","simple","textContent","$parse","$mdDialog","hidden","openDialog","clickOutsideToClose","ignored","merge","v","cancel","editing","entryCache","removed","cancelEdit","f","showSimple","loading","samples","therapeutic","prognostic","diagnostic","biological","unknown","groupEntries","row","alterationType","children","values","kbMatches","trigger","refType","prependLink","cleanPMID","updateRow","$event","targetEvent","clickOutToClose","rowEvent","createRow","therapeuticContext","effect","mutationSignature","mode","nnlsNormal","mutationSort","col","order","selectedSigs","modifier","ms","addToSelection","signature","seek","pull","updateSelectedSigs","s","sortMutations","processSignature","isSelectedMutation","found","m","toggleNnlsNormalize","sigs","nnlsMax","nnls","pearson","toFixed","pearsonColour","Math","round","nnlsColour","sortBy","reverse","outliers","gv","total","refresh","newVal","oldVal","prevPage","nextPage","indefiniteArticleFilter","removeEntry","confirm","firstName","lastName","ariaLabel","ok","stages","active","changeStage","stage","quotes","quote","random","$interval","toState","toParams","fromState","fromParams","findOrCreate","analysis_report","splice","goTo","go","POG","index","findIndex","goToReport","checkProbeGenomic","getTumourContent","tumourAnalysis","tumourContent","getPloidy","ploidy","getReport","getRoleUser","users","parsedState","clinician","pagination","paginate","bound","states","clearSearch","showSearch","focusSearch","filterCache","refreshReports","displaySearch","readState","paginated","searchText","mutations","vardbVarLib","mutation","location","refAlt","$vardb","step","vardbLibs","total_pog_libraries","meta","svs","svDetails","sv","$_scope","ensemblName","first","svg","DOMParser","parseFromString","xmlSVG","getElementsByTagName","setTimeout","svgImage","document","getElementById","appendChild","ownerDocument","importNode","documentElement","panzoom","svgPanZoom","preventMouseEventsDefault","enableControlIcons","resize","fit","center","domElement","selection","sel","createRange","selectionStart","startPos","endPos","selectionEnd","scrollTop","substring","noTasks","classList","tasks","showTasks","disableTasks","checkStates","hold","openUserWindow","mouseLeft","closeUserWindow","keepOpen","keepUserWindow","unKeepUserWindow","getTaskStateCount","t","getFirstOutcome","o","getTasks","checkTaskCompletion","completeTasks","showTask","escapeToClose","showState","updateStatus","updateState","assign","assignedTo","searchUsers","addCheckin","showAssignUser","toggleCheckIn","updateTask","removeCheckin","moment","outcomeType","toISOString","cause","colourCode","tc","addClass","$interpolate","elem","displaynameProperty","abstractProxyProperty","dataProxy","breadcrumbs","$current","updateBreadcrumbsArray","workingState","displayName","currentState","getWorkingState","getDisplayName","stateAlreadyInBreadcrumbs","proxyState","route","proxyStateName","abstract","getObjectValue","interpolationContext","propertyReference","globals","objectPath","propertyArray","isDefined","alreadyUsed","frame","disablePan","disableMouseWheelZoom","disableZoom","disableDblClickZoom","config","$httpProvider","interceptors","httpInterceptors","responseError","$broadcast","showLoader","PROJECT","$mdDateLocaleProvider","formatDate","date","format","$locationProvider","$urlRouterProvider","$stateProvider","$urlMatcherFactoryProvider","html5Mode","strictMode","otherwise","$injector","$location","path","views","breadcrumbProxy","$userSettings","$acl","currentUser","NAME","$stateParams","myRoles","POGUsers","testInformation","$ti","genomicEvents","$alterations","approvedThisCancer","approvedOtherCancer","tcgaAcronyms","vc","pt","microbial","$comments","pathway","$pathway","targetedGenes","images","subtypePlotImages","mutationSummaryImages","smallMutations","$smallMuts","$outliers","drugTargets","densityGraphs","discussions","slides","tags","unknownAlterations","ref_count","events_count","definitions","myDefinitions","slug","lane","hooks","ticket_templates","$ticket","templates","_clinicianMode","SES_permissionResource","SES_permissionAction","hashClean","String","hasSubtypePlot","Object","$sce","analystComments","commentsHTML","trustAsHtml","updateComments","$invalid","$setDirty","$error","errorField","$setTouched","updatedComment","alert","cnvGroups","titleMap","clinical","nostic","commonAmplified","homodTumourSupress","highlyExpOncoGain","lowlyExpTSloss","processCNV","container","cnvVariant","details","tagSelected","newEntry","new","previousEntry","previous","tagSearch","selectedItem","disableButton","test","changeFields","changed","newTag","removeTag","cachedTag","toast","highlightAction","highlightClass","undo","cached","transformChip","isObject","findChanges","preVal","command","runExport","concat","h","showUnknown","disableUnknownButtons","createNewKBEntry","toggleUnknown","rowID","unshift","groupAlterations","collection","roles","reportSettingsChanged","reportCache","roleFilter","puser","addUser","suggestedRole","checkChange","reportVersion","kbVersion","stringify","updateSettings","FileUploader","processSVG","innerHTML","style","panZoom","controlIconsEnabled","process","progress","filename","uploader","alias","fn","item","onErrorItem","fileItem","info","onAfterAddingFile","file","onProgressItem","initiateUpload","startedUpload","uploadItem","onCompleteItem","processMutations","muts","mutationType","pickCompatator","comparator","diseaseExpressionComparator","processMutationSummaryImages","ssorted","barplot","indel","snv","densityPlot","legend","indel_snv","sorted","snv_indel","img","pieces","visible","getMutationSummaryImage","graph","c","colourHex","hex","StrucVars","fusionOmicSupport","processSvs","structVars","svVariant","$tumourAnalysis","$patientInformation","$mutationSummary","snvPercentileCategory","snvPercentileTCGACategory","snvPercentileDiseaseCategory","indelPercentileCategory","indelPercentileTCGACategory","indelPercentileDiseaseCategory","ta","patientInformation","species","integrationSite","mutationMask","variantCounts","cnv","smallMutation","expressionOutlier","structuralVariant","toMutations","variantCategory","geneVariant","processVariants","variants","geneVariants","setMutationMask","mask","mutationFilter","updateTa","updateMs","updatePatient","addAlteration","removeAlteration","tempAlteration","genomicEvent","$complete","tab","target","targetContext","biomarker","notes","bioMarkerContexts","biomarkerContextValue","biomarkerValue","removeBiomarkerContext","marker","removeBiomarker","newBiomarkerContext","newBiomarker","targets","biomarkers","geneVar","entries","geneTarget","newTherapeutic","removedIdent","chemoresistance","rowOptions","groupTherapeutics","cleanTargets","newTargets","updateSorting","$item","$partFrom","$partTo","$indexFrom","$indexTo","updates","rank","modifyEvent","protein","expOutliers","expProtein","chunk","proteinTitleMap","searchDrugs","drug","lohRegion","drugOptions","processExpression","expressions","typekey","expSummaryMap","mRNAOutliersMap","upreg_onco","downreg_tsg","getPtxComparator","sumSamples","ptxPercCol","lastIndexOf","processGraphs","graphs","$dgaAPC","formAction","disableRefTitle","requiredNew","activeStage","$knowledgebase","kb","kb_event_key","relevance","valid","dirty","pristine","lastStage","nextStage","form","reportForm","referenceForm","kbForm","$setSubmitted","$valid","submit","kb_data","id_type","id_title","update_comments","$watchGroup","newVals","oldVals","findRelevance","filterFunction","findDisease","lowerCaseQuery","lowercase","kbLookup","relevanceLock","checkPMID","refLoading","newval","oldval","validateKBEvents","genes","alterationUpdate","add_step","findKey","allowedImageFormats","setupUploader","formData","clearQueue","analystParagraphs","rawParagraphs","p","arrayGraphs","pathwayAnalysis","allVariants","breakpoint","mutationBurdenFilter","kbmetrics","check","maximized","toggle","feedback","badCredentials","submitting","formSubmitted","close","res","$mdSidenav","toggleMenu","openFeedback","loadNewPog","userLogout","print","editGroup","newGroup","groupDelete","searchOwner","searchOwnerText","searchQuery","removeUser","owner","deleteGroup","htmlContent","tempGroup","passDelete","groupDiag","editUser","newUser","userDelete","local","newPass","newPassConfirm","NewPassConfirm","nomatch","useUser","deleteUser","tempUser","userDiag","ordinal","clinical_biopsy","source_loading","show_sources","searchPogcache","find_libraries","found_libraries","libraries_loading","physicians","addPhysician","removePhysician","threeLetterCodes","analysis_biopsy","toUpperCase","searchPOGs","searchDisease","searchGroups","code","limsSources","pog_sources","sources","original_source_name","matching","libraryGuess","diseaseLibraries","pogid","participant_study_id","datestamp","sample_collection_time","disease_status","full_name","biopsy_date","library_strategy","pog_libs","libs","normal","tumour","transcriptome","collection_date","selectCollection","sending","threeLetterCode","biopsy_notes","pediatric_id","physician","date_presentation","onco_panel_submitted","date_analysis","disease_comparators","comparator_disease","comparator_search","normal_primary","comparator_normal","normal_biopsy","gtex_primary","gtex_biopsy","searchComparators","v9","searchNormalComparators","illumina","searchGtexComparators","gtex","select_for_analysis","add_comparator","remove_comp","tumour_type_report","tumour_type_kb","searching","active_sheet","analysis_query","refreshAnalyses","numKeys","obj","sampleSearch","sample_name","anatomic_site","openLibrary","lib","getPoolName","pool","hits","openAnalysis","editAnalysis","editComparators","addBiopsy","hasReview","reviews","unsetExported","exported","report_cache","biofx_assigned","start","finish","slice","getExport","addReview","show_extended","columns","flagged","width","show_always","clinvar","cgl_category","gmaf","transcript","impact","dbSNP","score","zygosity_germline","preferred_transcript","hgvs_cdna","hgvs_protein","zygosity_tumour","genomic_variant_reads","tooltip","rna_variant_reads","gene_somatic_abberation","patient_history","family_history","tcga_comp_norm_percentile","tcga_comp_percentile","gtex_comp_percentile","fc_bodymap","gene_expression_rpkm","additional_info","getHistory","$ev","placeholder","toggleVariantHidden","removeReview","removeReport","totals","refTotal","toLocaleString","ev","evTotal","doughnut","colors","display","evApproved","evNew","evFlaggedIncorrect","evRequiresReview","refReviewed","refNew","refFlaggedIncorrect","refRequiresReview","refInterim","updateEntry","display_coord","notation","related_events","removeFilterEntry","$sanitize","$kbUtils","openFilters","$paginate","setFilters","updateFilters","pages","records","calcPages","ceil","displayPages","min","upperPad","max","updateCount","newFilters","size","changePage","removeFilter","startRecord","rowsWindow","newReference","multiple","ref_id","showEvExDropper","showEEs","showDropper","arr","sw","hasChildren","threeLetter","str","openView","editingStatus","toggleEdit","openPrint","href","sections","showChildren","category","disabled","activeSection","goToReportSection","goto","openExport","section","orderBy","currentCases","upstreamCases","archived","nonproduction","selectedProject","presented","numReports","refreshList","each","associateUsers","searchPogs","q","tumourType","normalExpressionComparator","last","filterFn","pogInput","showFilterTips","uploaded","signedoff","reviewed","allDefinitions","sortedStates","refreshing","tracking_loading","sortStates","statesInput","toggleDefFilter","def","ninja","trackNewPOG","$moment","updateStateTask","checkins","$socket","cols","showFilter","focusFilter","displayFilter","getStateTask","editValue","selectState","jira","cancelAnalysis","selectAllChanged","taskSelection","selectAll","clickToggle","getFloor","floor","assignUsers","promises","selectedUser","set","ul","generateTicket","created","UserAssignment","$setPristine","at","uc","issueType","parsePriority","parseStatus","string","preview_ticket","image","variables","insertVar","selectTemplate","pog_restricted","getProject","newTemplate","cancelEditing","searchProjects","projectKey","issueTypes","priorities","removeTemplate","showConfirmDelete","target_string","trim","state_name","selectDefinition","newDefinition","getHooksByState","openHook","taskEditor","taskCopy","checkInsTarget","taskIndex","updateOrdinal"],"mappings":";;AAAA,IAAMA,MAAMC,QAAQC,MAAR,CAAe,UAAf,EAA2B;AACvC;AACE,WAFqC,EAGtC,YAHsC,EAItC,YAJsC,EAKtC,YALsC,EAMtC,WANsC,EAOtC,eAPsC,EAQtC,WARsC,EAStC,mBATsC,EAUtC,aAVsC,EAWtC,uBAXsC,EAYtC,SAZsC,EAatC,UAbsC,EActC,kBAdsC,EAetC,YAfsC,CAA3B,CAAZ;;AAkBA;AACAF,IAAIG,GAAJ,CAAQC,gBAAR;;AAGA,SAASA,gBAAT,CAA0BC,UAA1B,EAAsCC,YAAtC,EAAoD;AAClDD,aAAWE,GAAX,CAAgB,WAAhB,EAA6B,UAACC,KAAD,EAAQC,SAAR,EAAsB;AACjDH,iBAAaI,WAAb,CAAyBD,UAAUE,OAAnC;AACD,GAFD;AAGD;;AAEDP,iBAAiBQ,OAAjB,GAA2B,CAAC,YAAD,EAAe,cAAf,CAA3B;;;AC5BAZ,IAAIa,MAAJ,CAAW,mBAAX,EAAgC,YAAM;AACpC,SAAO,UAACC,IAAD,EAAU;AACf,WAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAsBC,OAAtB,CAA8BD,KAAKE,MAAL,CAAY,CAAZ,CAA9B,IAAgD,CAAC,CAAlD,GAAuD,IAAvD,GAA8D,GAArE;AACD,GAFD;AAGD,CAJD;;;ACAA;;;;;;;AAOAhB,IAAIiB,OAAJ,CAAY,cAAZ,EAA4B,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEjE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,WAAnC;;AAEA,MAAIC,YAAY,EAAhB;;AAEA;;;;;;;;AAQAA,YAAUC,GAAV,GAAgB,YAAe;AAAA,QAAdC,MAAc,uEAAP,EAAO;;AAC7B,WAAOP,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,GAAV,EAAe,EAACM,QAAQA,MAAT,EAAf,EAAiCI,IAAjC,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OAPH;AAUD,KAbM,CAAP;AAeD,GAhBD;;AAkBA;;;;;;AAMAT,YAAUU,QAAV,GAAqB,UAACC,KAAD,EAAW;AAC9B,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAaT,GAAb,kBAA6Be,KAA7B,EAAsCL,IAAtC,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OAPH;AAUD,KAbM,CAAP;AAeD,GAhBD;;AAmBA;;;;;;AAMAT,YAAUY,GAAV,GAAgB,UAACJ,IAAD,EAAU;;AAExB,WAAOb,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMmB,IAAN,CAAWjB,GAAX,EAAgBY,IAAhB,EACGF,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAYD,GAdD;;AAiBA;;;;;;AAMAf,YAAUgB,MAAV,GAAmB,UAACR,IAAD,EAAU;AAC3B,WAAOb,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B,UAAIa,UAAUzC,QAAQ0C,IAAR,CAAaV,IAAb,CAAd;AACA,UAAGS,QAAQE,QAAR,IAAoBC,MAAMC,OAAN,CAAcJ,QAAQE,QAAtB,CAAvB,EAAwD,OAAOF,QAAQE,QAAf;;AAExDzB,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYY,KAAKG,KAA3B,EAAkCM,OAAlC,EACGX,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAQD,KAbM,CAAP;AAcD,GAfD;;AAiBA;;;;;AAKAf,YAAUuB,WAAV,GAAwB,YAAM;AAC5B,WAAO5B,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAaT,GAAb,mBACGU,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,eAAOoB,CAAP;AACD,OANH;AAOD,KATM,CAAP;AAUD,GAXD;;AAaA,SAAOxB,SAAP;AAED,CA3H2B,CAA5B;;;ACPA;;;;;;;AAOAzB,IAAIiB,OAAJ,CAAY,aAAZ,EAA2B,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEhE,MAAMC,MAAM,0BAAZ;AACA,MAAM6B,QAAQ,geAAd;;AAEA,MAAIC,WAAW,EAAf;;AAGA;;;;;;AAMAA,WAASC,WAAT,GAAuB,YAAM;AAC3B,WAAOhC,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAG7BV,YAAM;AACJkC,gBAAQ,KADJ;AAEJC,aAAKjC,MAAM,eAFP;AAGJkC,iBAAS;AACP,qBAAWL,KADJ;AAEPM,yBAAeC,SAFR;AAGP,0BAAgB;AAHT;AAHL,OAAN,EASG1B,IATH,CASQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAXH,EAYGM,KAZH,CAYS,UAACC,GAAD,EAAS;AACdkB,gBAAQC,GAAR,CAAY,2CAAZ,EAAyDnB,GAAzD;AACAX,eAAOW,GAAP;AACD,OAfH;AAgBA;;;;;;;;;;AAWD,KA9BM,CAAP;AA+BD,GAhCD;;AAkCA,SAAOW,QAAP;AAED,CAlD0B,CAA3B;;;ACPAnD,IAAIiB,OAAJ,CAAY,cAAZ,EAA4B,CAAC,GAAD,EAAM,UAAUC,CAAV,EAAa;;AAE7C;AACA,MAAI0C,QAAQ;;AAEV;AACAC,iBAAa;AACX;AACAC,YAAM;AACJ,sBAAc,YADV;AAEJ,sBAAc,YAFV;AAGJ,sBAAc,YAHV;AAIJ,uBAAe,aAJX;AAKJ,mBAAW;AALP,OAFK;AASXC,eAAS,CACP,KADO,EAEP,SAFO,EAGP,UAHO,EAIP,MAJO,EAKP,KALO,EAMP,IANO,CATE;AAiBXC,gBAAU;AACR,uBAAe,aADP;AAER,uBAAe,aAFP;AAGR,oBAAY,UAHJ;AAIR,2BAAmB,iBAJX;AAKR,yBAAiB,eALT;AAMR,wBAAgB,cANR;AAOR,oBAAY,UAPJ;AAQR,6BAAqB,mBARb;AASR,2BAAmB,iBATX;AAUR,yBAAiB,eAVT;AAWR,wBAAgB,cAXR;AAYR,oBAAY,UAZJ;AAaR,kCAA0B,wBAblB;AAcR,mBAAW;AAdH,OAjBC;AAiCXC,eAAS,CACP,4BADO,EAEP,wBAFO,EAGP,8BAHO,EAIP,iCAJO,EAKP,gBALO,EAMP,0BANO,EAOP,4CAPO,EAQP,kCARO,EASP,2BATO,EAUP,gCAVO,EAWP,8BAXO,EAYP,8BAZO,EAaP,sBAbO,EAcP,kCAdO,EAeP,cAfO,EAgBP,8BAhBO,EAiBP,qCAjBO,EAkBP,iBAlBO,EAmBP,sBAnBO,EAoBP,0BApBO,EAqBP,0BArBO,EAsBP,sBAtBO,EAuBP,qCAvBO,EAwBP,kBAxBO,EAyBP,sBAzBO,EA0BP,cA1BO,EA2BP,cA3BO,EA4BP,eA5BO,EA6BP,yBA7BO,EA8BP,4BA9BO,EA+BP,oCA/BO,EAgCP,kBAhCO,EAiCP,WAjCO,EAkCP,qBAlCO,EAmCP,iBAnCO,EAoCP,oBApCO,EAqCP,mCArCO,EAsCP,kBAtCO,EAuCP,gBAvCO,EAwCP,+BAxCO,EAyCP,kBAzCO,EA0CP,8BA1CO,EA2CP,0BA3CO,EA4CP,iCA5CO,EA6CP,oCA7CO,EA8CP,oBA9CO,EA+CP,2BA/CO,EAgDP,cAhDO,EAiDP,mBAjDO,EAkDP,yBAlDO,EAmDP,iCAnDO,EAoDP,wBApDO,EAqDP,iCArDO,EAsDP,sCAtDO,EAuDP,+BAvDO,EAwDP,4BAxDO,EAyDP,oBAzDO,EA0DP,6BA1DO,EA2DP,+CA3DO,EA4DP,mBA5DO,EA6DP,mCA7DO,EA8DP,0CA9DO,EA+DP,8BA/DO,EAgEP,qCAhEO,EAiEP,gCAjEO,EAkEP,mBAlEO,EAmEP,cAnEO,EAoEP,qBApEO,EAqEP,4BArEO,EAsEP,wBAtEO,EAuEP,gCAvEO,EAwEP,kBAxEO,EAyEP,0BAzEO,EA0EP,yBA1EO,EA2EP,yBA3EO,EA4EP,qBA5EO,EA6EP,sBA7EO,EA8EP,yBA9EO,EA+EP,uCA/EO,EAgFP,oBAhFO,EAiFP,6BAjFO,EAkFP,0BAlFO,EAmFP,wCAnFO,EAoFP,sCApFO,EAqFP,qCArFO,EAsFP,oBAtFO,EAuFP,iDAvFO,EAwFP,4BAxFO,EAyFP,wBAzFO,EA0FP,gCA1FO,EA2FP,oCA3FO,EA4FP,iCA5FO,EA6FP,qBA7FO,EA8FP,kBA9FO,EA+FP,sBA/FO,EAgGP,cAhGO,EAiGP,QAjGO,EAkGP,aAlGO,EAmGP,4CAnGO,EAoGP,+BApGO,EAqGP,kBArGO,EAsGP,oCAtGO,EAuGP,qBAvGO,EAwGP,+BAxGO,EAyGP,aAzGO,EA0GP,gBA1GO,EA2GP,2BA3GO,EA4GP,2BA5GO,EA6GP,8BA7GO,EA8GP,UA9GO,EA+GP,gCA/GO,EAgHP,iCAhHO,EAiHP,sCAjHO,EAkHP,sBAlHO,EAmHP,oBAnHO,EAoHP,cApHO,EAqHP,iBArHO,EAsHP,yBAtHO,EAuHP,UAvHO,EAwHP,4BAxHO,EAyHP,yBAzHO,EA0HP,0BA1HO,EA2HP,kBA3HO,EA4HP,kBA5HO,EA6HP,2CA7HO,EA8HP,eA9HO,EA+HP,SA/HO,EAgIP,8CAhIO,EAiIP,uBAjIO,EAkIP,6BAlIO,EAmIP,uBAnIO,EAoIP,eApIO,EAqIP,sBArIO,EAsIP,mBAtIO,EAuIP,+BAvIO,EAwIP,iBAxIO,EAyIP,eAzIO,EA0IP,uBA1IO,EA2IP,cA3IO,EA4IP,gBA5IO,EA6IP,mBA7IO,EA8IP,8BA9IO,EA+IP,0BA/IO,EAgJP,sBAhJO,EAiJP,yBAjJO,EAkJP,6BAlJO,EAmJP,yBAnJO,EAoJP,mBApJO,EAqJP,kCArJO,EAsJP,iCAtJO,EAuJP,gCAvJO,EAwJP,6BAxJO,EAyJP,kCAzJO,EA0JP,kCA1JO,EA2JP,wBA3JO,EA4JP,wCA5JO,EA6JP,4BA7JO,EA8JP,yBA9JO,EA+JP,uBA/JO,EAgKP,2CAhKO,EAiKP,wBAjKO,EAkKP,iBAlKO,EAmKP,8CAnKO,EAoKP,iBApKO,EAqKP,0BArKO,EAsKP,iCAtKO,EAuKP,qBAvKO,EAwKP,sBAxKO,EAyKP,4BAzKO,EA0KP,gBA1KO,EA2KP,iBA3KO,EA4KP,kBA5KO,EA6KP,wBA7KO,EA8KP,uBA9KO,EA+KP,0BA/KO,EAgLP,oCAhLO,EAiLP,SAjLO,EAkLP,+CAlLO,EAmLP,iCAnLO,EAoLP,8BApLO,EAqLP,0BArLO,EAsLP,+BAtLO,EAuLP,yBAvLO,EAwLP,gBAxLO,EAyLP,kBAzLO,EA0LP,8CA1LO,EA2LP,yCA3LO,EA4LP,iBA5LO,EA6LP,mCA7LO,EA8LP,kBA9LO,EA+LP,iBA/LO,EAgMP,gBAhMO,EAiMP,6BAjMO,EAkMP,wBAlMO,EAmMP,sCAnMO,EAoMP,mBApMO,EAqMP,gBArMO,EAsMP,sBAtMO,EAuMP,+BAvMO,CAjCE;AA0OXC,mBAAa,CACX,qBADW,EAEX,mBAFW,EAGX,oBAHW,EAIX,iBAJW,EAKX,wBALW,EAMX,mBANW,EAOX,8BAPW,EAQX,oBARW,EASX,YATW,EAUX,mBAVW,EAWX,2BAXW,EAYX,mBAZW,EAaX,aAbW,EAcX,yBAdW,EAeX,YAfW,EAgBX,kBAhBW,EAiBX,mBAjBW,EAkBX,oBAlBW,EAmBX,uBAnBW,EAoBX,2BApBW,EAqBX,2BArBW,EAsBX,qBAtBW,EAuBX,sBAvBW,EAwBX,kBAxBW,EAyBX,qBAzBW,EA0BX,yBA1BW,EA2BX,kBA3BW,EA4BX,kBA5BW,EA6BX,oBA7BW,EA8BX,qBA9BW,EA+BX,qBA/BW,EAgCX,kBAhCW,EAiCX,sBAjCW,EAkCX,sBAlCW,EAmCX,qBAnCW,EAoCX,qBApCW,EAqCX,eArCW,EAsCX,aAtCW,EAuCX,gBAvCW,EAwCX,gBAxCW,EAyCX,eAzCW,EA0CX,UA1CW,EA2CX,UA3CW,EA4CX,kBA5CW,EA6CX,YA7CW,EA8CX,yBA9CW,EA+CX,mBA/CW,EAgDX,4BAhDW,EAiDX,WAjDW,EAkDX,kBAlDW,EAmDX,qBAnDW,EAoDX,YApDW,EAqDX,UArDW,EAsDX,aAtDW,EAuDX,oBAvDW,EAwDX,YAxDW,EAyDX,aAzDW,EA0DX,mBA1DW,EA2DX,cA3DW,EA4DX,2BA5DW,EA6DX,yBA7DW,CA1OF;AAySXC,gBAAU,CACR,KADQ,EAER,IAFQ,EAGR,YAHQ,EAIR,cAJQ,EAKR,IALQ,CAzSC;AAgTXC,sBAAgB,CACd,uBADc,EAEd,kBAFc,EAGd,UAHc,EAId,KAJc,EAKd,OALc,EAMd,OANc,EAOd,QAPc,EAQd,KARc;AAhTL,KAHH;AA8TVC,mBAAe;;AAEbC,kBAAY,CACV,wBADU,EAEV,SAFU,EAGV,yBAHU,EAIV,SAJU,EAKV,iBALU,EAMV,eANU,EAOV,qBAPU,EAQV,yBARU,EASV,OATU,EAUV,KAVU,EAWV,0BAXU,EAYV,qBAZU,CAFC;AAgBbC,wBAAkB,CAChB,mBADgB,EAEhB,WAFgB,EAGhB,UAHgB,EAIhB,QAJgB,EAKhB,MALgB;;AAhBL;AA9TL,GAAZ;;AAyVA,SAAO;AACL;AACAC,iBAAa;AACX;AACAC,YAAM,cAAUC,KAAV,EAAiB;AACrBA,gBAAQA,SAASA,MAAMC,WAAN,EAAjB;AACA,eAAOzD,EAAE0D,KAAF,CAAQC,aAAaf,IAArB,EAEJgB,IAFI,GAGJjE,MAHI,CAGG,UAAUkE,UAAV,EAAsB;AAC9B,cAAI,CAACL,KAAL,EAAY;AACV,mBAAO,IAAP;AACD;AACD,iBAAOK,WAAWJ,WAAX,GAAyB5D,OAAzB,CAAiC2D,KAAjC,MAA4C,CAAC,CAApD;AACD,SARM,EASNM,GATM,CASF,UAAUD,UAAV,EAAsB;AACzB,iBAAO7D,EAAE+D,SAAF,CAAYF,UAAZ,CAAP;AACC,SAXI,EAYNG,KAZM,EAAP;AAaD;AAjBU,KAFR;;AAsBLpD,SAAK,aAACqD,MAAD,EAAY;AACf,aAAOvB,MAAMuB,MAAN,CAAP;AACD;AAxBI,GAAP;AA2BD,CAvX2B,CAA5B;;;ACAA;;;;;;;AAOAnF,IAAIiB,OAAJ,CAAY,UAAZ,EAAwB,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAArB,EAAiC,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAegE,KAAf,EAAyB;;AAEhF,MAAM/D,MAAM,sCAAZ;AACA,MAAMgE,WAAW/D,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,OAAxC;AACA,MAAI8D,QAAQ,EAAZ;AACA,MAAIC,WAAW,IAAf;;AAEA;;;;AAIAD,QAAME,MAAN,GAAe;;AAEb;;;;;;;;;;;AAWAC,YAAQ,gBAACC,OAAD,EAAU5B,IAAV,EAAgB6B,OAAhB,EAAyBC,WAAzB,EAAqD;AAAA,UAAfC,OAAe,uEAAP,EAAO;;;AAE3D,UAAIC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA,UAAIP,SAAS;AACXQ,gBAAQ;AACNN,mBAAS;AACPO,iBAAKP;AADE,WADH;AAINC,mBAASA,OAJH;AAKNO,qBAAW;AACTC,kBAAMrC,IADG;AAETsC,qBAAUP,QAAQO,OAAT,GAAoBP,QAAQO,OAA5B,GAAsC;AAFtC,WALL;AASNR,uBAAaA,WATP;AAUNS,oBAAU;AACRF,kBAAON,QAAQQ,QAAT,GAAqBR,QAAQQ,QAA7B,GAAwC,QADtC,CAC+C;AAD/C;AAVJ;AADG,OAAb;;AAiBA;AACA,UAAGR,QAAQS,QAAX,EAAqBd,OAAOQ,MAAP,CAAcM,QAAd,GAAyB,EAACL,KAAKJ,QAAQS,QAAd,EAAwBH,MAAMN,QAAQS,QAAtC,EAAzB;AACrB,UAAGT,QAAQU,UAAX,EAAuBf,OAAOQ,MAAP,CAAcO,UAAd,GAA2BV,QAAQU,UAAnC;AACvB,UAAGV,QAAQW,MAAX,EAAmBhB,OAAOQ,MAAP,CAAcQ,MAAd,GAAuB,EAACP,KAAKJ,QAAQW,MAAd,EAAvB;AACnB,UAAGX,QAAQY,MAAX,EAAmBjB,OAAOQ,MAAP,CAAcS,MAAd,GAAuBvF,EAAE8D,GAAF,CAAMa,QAAQY,MAAd,EAAsB,UAACC,CAAD,EAAO;AAAC,eAAOA,EAAEC,OAAF,CAAU,MAAV,EAAkB,GAAlB,CAAP;AAA8B,OAA5D,CAAvB;AACnB,UAAGd,QAAQe,QAAX,EAAqBpB,OAAOQ,MAAP,CAAcY,QAAd,GAAyB,EAAC,QAAQ,gBAAT,EAAzB;;AAErB;AACAzF,YAAMmB,IAAN,CAAWjB,MAAM,QAAjB,EAA2BmE,MAA3B,EAAmC,EAACjC,SAAS,EAAEsD,eAAepD,SAAjB,EAAV,EAAuCqD,iBAAiB,IAAxD,EAAnC,EAAkG/E,IAAlG,CACE,UAACgF,QAAD,EAAc;AACZ;AACAjB,iBAASlE,OAAT,CAAiBmF,SAAS9E,IAA1B;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACA4D,iBAASjE,MAAT,CAAgB,EAACmF,QAAQ9E,MAAM8E,MAAf,EAAuBC,MAAM/E,MAAMD,IAAnC,EAAhB;AACD,OARH;;AAWA,aAAO6D,SAASoB,OAAhB;AACD,KAtDY;;AAwDb;;;;;;;;;AASAd,aAAS,iBAACZ,MAAD,EAAS2B,KAAT,EAAgBvB,WAAhB,EAAgC;;AAEvC,UAAIE,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA;AACA5E,YAAMmB,IAAN,CAAW+C,WAAW,UAAtB,EAAkC,EAAC8B,OAAOA,KAAR,EAAe3B,QAAQA,MAAvB,EAA+BI,aAAaA,WAA5C,EAAlC,EAA4F7D,IAA5F,CACE,UAACqF,IAAD,EAAU;AACRtB,iBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACP;AACAkB,gBAAQC,GAAR,CAAY,4BAAZ,EAA0CnB,GAA1C;AACAsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OARH;;AAYA,aAAOsD,SAASoB,OAAhB;AACD,KAnFY;;AAqFb;;;;;;;;AAQApF,SAAK,aAAC0D,MAAD,EAAY;;AAEf,UAAIM,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA;AACA5E,YAAMW,GAAN,CAAUT,MAAM,SAAN,GAAkBmE,MAA5B,EAAoCzD,IAApC,CACE,UAACgF,QAAD,EAAc;AACZ;AACAjB,iBAASlE,OAAT,CAAiBmF,SAAS9E,IAA1B;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACA4D,iBAASjE,MAAT,CAAgB,EAACmF,QAAQ9E,MAAM8E,MAAf,EAAuBC,MAAM/E,MAAMD,IAAnC,EAAhB;AACD,OARH;;AAWA,aAAO6D,SAASoB,OAAhB;AACD;;AA9GY,GAAf;;AAkHA;;;;;AAKA5B,QAAMe,QAAN,GAAiB,YAAM;AACrB,WAAOjF,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAUT,MAAM,WAAhB,EAA6B,EAACkC,SAAS,EAAEsD,eAAepD,SAAjB,EAAV,EAAuCqD,iBAAiB,IAAxD,EAA7B,EACG/E,IADH,CACQ,UAACgF,QAAD,EAAc;AAClBnF,gBAAQmF,SAAS9E,IAAjB;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAcA;;;;AAIA8C,QAAM+B,OAAN,GAAgB;AACd;;;;;;;AAOAC,WAAO,eAACC,QAAD,EAAWC,QAAX,EAAwB;;AAE7B,UAAI1B,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAMmB,IAAN,CAAWjB,MAAM,UAAjB,EAA6B,EAACkG,UAAUA,QAAX,EAAqBC,UAAUA,QAA/B,EAA7B,EAAuEzF,IAAvE,CACE,UAACgF,QAAD,EAAc;AACZ;AACAjB,iBAASlE,OAAT,CAAiBmF,SAAS9E,IAA1B;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT4D,iBAASjE,MAAT,CAAgB,EAACmF,QAAQ9E,MAAM8E,MAAf,EAAuBC,MAAM/E,MAAMD,IAAnC,EAAhB;AACD,OAPH;;AAUA,aAAO6D,SAASoB,OAAhB;AACD,KAvBa;;AAyBdO,aAAS,mBAAM;AACbrG,SAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AACtBV,cAAMW,GAAN,CAAU,yCAAyC,WAAnD,EAAgE,EAACyB,SAAS,EAAEsD,eAAepD,SAAjB,EAAV,EAAuCqD,iBAAiB,IAAxD,EAAhE,EAA+H/E,IAA/H,CACE,UAACgF,QAAD,EAAc;AACZrD,kBAAQC,GAAR,CAAY,+BAAZ,EAA6CoD,QAA7C;AACAnF,kBAAQmF,QAAR;AACD,SAJH,EAKE,UAACvE,GAAD,EAAS;AACPkB,kBAAQC,GAAR,CAAY,oDAAZ,EAAkEnB,GAAlE;AACAX;AACD,SARH;AAUD,OAXD;AAYD;AAtCa,GAAhB;;AAyCA;;;;AAIAyD,QAAMoC,QAAN,GAAiB;;AAEf;;;;;AAKAhG,SAAK,eAAM;AACT,aAAON,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,cAAMW,GAAN,CAAUT,MAAM,UAAhB,EAA4B,EAACkC,SAAS,EAAEsD,eAAepD,SAAjB,EAAV,EAAuCqD,iBAAiB,IAAxD,EAA5B,EACG/E,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,kBAAQI,OAAOC,IAAf;AACD,SAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,iBAAOW,GAAP;AACD,SANH;AAOD,OARM,CAAP;AASD,KAjBc;;AAmBf;;;;;AAKAV,SAAK,aAAC4D,OAAD,EAAa;AAChB,aAAOtE,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,cAAMW,GAAN,CAAUT,MAAM,WAAN,GAAoBqE,OAA9B,EAAuC,EAACnC,SAAS,EAAEsD,eAAepD,SAAjB,EAAV,EAAuCqD,iBAAiB,IAAxD,EAAvC,EACG/E,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,kBAAQI,OAAOC,IAAf;AACD,SAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,iBAAOW,GAAP;AACD,SANH;AAOD,OARM,CAAP;AASD,KAlCc;;AAoCf;;;;;;AAMAmF,uBAAmB,2BAACjC,OAAD,EAAa;AAC9B,aAAOtE,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,cAAMW,GAAN,CAAUT,MAAM,WAAN,GAAoBqE,OAApB,GAA8B,gBAAxC,EAA0D,EAACnC,SAAS,EAAEsD,eAAepD,SAAjB,EAAV,EAAuCqD,iBAAiB,IAAxD,EAA1D,EACG/E,IADH,CACQ,UAACgF,QAAD,EAAc;AAClBnF,kBAAQmF,SAAS9E,IAAjB;AACD,SAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,iBAAOW,GAAP;AACD,SANH;AAOD,OARM,CAAP;AASD;;AApDc,GAAjB;;AAyDA,SAAO8C,KAAP;AAED,CA5PuB,CAAxB;ACPA;;AAEAtF,IAAIiB,OAAJ,CAAY,mBAAZ,EAAiC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEtE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,gBAAnC;;AAEA,MAAIoG,MAAM,EAAV;;AAEA;;;;;AAKAA,MAAIC,UAAJ,GAAiB,YAAM;AACrB,QAAI/B,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,wBAAhB,EAA0CU,IAA1C,CACE,UAACC,MAAD,EAAY;AACV8D,eAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AACD,GAbD;;AAeAU,MAAIE,QAAJ,GAAe;;AAEb;;;;;;AAMAC,YAAQ,gBAACC,KAAD,EAAW;AACjB,UAAIlC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAMmB,IAAN,CAAWjB,MAAM,kBAAjB,EAAqC,EAAC4G,mBAAmBD,KAApB,EAArC,EAAiEjG,IAAjE,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD;;AArBY,GAAf;;AAyBA;;;;;;AAMAU,MAAIM,OAAJ,GAAc,UAACxD,KAAD,EAAW;AACvB,QAAIoB,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,iBAAN,GAA0BqD,KAApC,EAA2C3C,IAA3C,CACE,UAACC,MAAD,EAAW;AACT8D,eAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AACD,GAbD;;AAeA;;;;;AAKAU,MAAIO,OAAJ,GAAc,YAAM;AAClB,QAAIrC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,UAAhB,EAA4BU,IAA5B,CACE,UAACC,MAAD,EAAW;AACT8D,eAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AACD,GAbD;;AAeA;;;;;;AAMAU,MAAIQ,eAAJ,GAAsB,UAAC1D,KAAD,EAAW;AAC/B,QAAIoB,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,0BAAN,GAAmCqD,KAA7C,EAAoD3C,IAApD,CACE,UAACC,MAAD,EAAW;AACT8D,eAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AACD,GAbD;;AAeA;;;;;;;AAOAU,MAAIS,OAAJ,GAAc,UAACvE,IAAD,EAAO1B,KAAP,EAAiB;;AAE7B,QAAI0D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,UAAhB,EAA4B,EAACM,QAAQ,EAAEmC,MAAKA,IAAP,EAAawE,OAAMlG,KAAnB,EAAT,EAA5B,EAAkEL,IAAlE,CACE,UAACC,MAAD,EAAW;AACT8D,eAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AAED,GAfD;;AAiBAU,MAAIW,UAAJ,GAAiB;;AAEf;;;;;;;;;;;AAWA7G,SAAK,eAAqC;AAAA,UAApC8G,KAAoC,uEAA9B,GAA8B;AAAA,UAAzBC,MAAyB,uEAAlB,CAAkB;AAAA,UAAfC,OAAe,uEAAP,EAAO;;AACxC,UAAI5C,WAAW1E,GAAG2E,KAAH,EAAf;AACA,UAAI4C,iBAAiB,EAArB;;AAEA;AACAzH,QAAE0H,OAAF,CAAUF,OAAV,EAAmB,UAACxD,KAAD,EAAQrE,MAAR,EAAmB;AACpC,YAAGA,WAAW,QAAd,EAAwB,OAAO8H,eAAe9H,MAAf,IAAyBqE,KAAhC;AACxByD,uBAAe9H,MAAf,IAAyBK,EAAE2H,IAAF,CAAO3D,KAAP,EAAa,GAAb,CAAzB;AACD,OAHD;;AAMA,UAAI4D,OAAO,EAACnH,QAAQgH,cAAT,EAAX;AACAG,WAAKnH,MAAL,CAAY6G,KAAZ,GAAoBA,KAApB;AACAM,WAAKnH,MAAL,CAAY8G,MAAZ,GAAqBA,MAArB;;AAEAtH,YAAMW,GAAN,CAAUT,MAAM,aAAhB,EAA+ByH,IAA/B,EAAqC/G,IAArC,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KAtCc;;AAwCf;;;;;;;AAOA6B,WAAO,iBAAgB;AAAA,UAAfL,OAAe,uEAAP,EAAO;;AACrB,UAAI5C,WAAW1E,GAAG2E,KAAH,EAAf;AACA,UAAI4C,iBAAiB,EAArB;;AAEA;AACAzH,QAAE0H,OAAF,CAAUF,OAAV,EAAmB,UAACxD,KAAD,EAAQrE,MAAR,EAAmB;AACpC,YAAGA,WAAW,QAAd,EAAwB,OAAO8H,eAAe9H,MAAf,IAAyBqE,KAAhC;AACxByD,uBAAe9H,MAAf,IAAyBK,EAAE2H,IAAF,CAAO3D,KAAP,EAAa,GAAb,CAAzB;AACD,OAHD;;AAMA,UAAIvD,SAAS,EAACA,QAAQgH,cAAT,EAAb;;AAEAxH,YAAMW,GAAN,CAAUT,MAAM,mBAAhB,EAAqCM,MAArC,EAA6CI,IAA7C,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KAtEc;;AAyEf;;;;;;AAMAzE,YAAQ,gBAACuG,SAAD,EAAe;AACrB,UAAIlD,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAM4B,GAAN,CAAU1B,MAAM,cAAN,GAAuB2H,UAAU5G,KAA3C,EAAkD4G,SAAlD,EAA6DjH,IAA7D,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KA5Fc;;AA+Ff;;;;;;;;AAQAF,YAAQ,gBAACgC,SAAD,EAAYhC,OAAZ,EAAoBiC,QAApB,EAAiC;AACvC,UAAInD,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAM4B,GAAN,CAAU1B,MAAM,cAAN,GAAuB2H,UAAU5G,KAAjC,GAAyC,UAAzC,GAAsD4E,OAAhE,EAAwE,EAACiC,UAAUA,QAAX,EAAxE,EAA8FlH,IAA9F,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KApHc;;AAsHf;;;;;;AAMAzB,YAAQ,gBAACuD,SAAD,EAAe;AACrB,UAAIlD,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAMmB,IAAN,CAAWjB,MAAM,aAAjB,EAAgC2H,SAAhC,EAA2CjH,IAA3C,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KAzIc;;AA2If;;;;;;AAMAgC,YAAQ,gBAACF,SAAD,EAAe;AACrB,UAAIlD,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAMgI,MAAN,CAAa9H,MAAM,cAAN,GAAuB2H,SAApC,EAA+CjH,IAA/C,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOgF,MAAxB;AACD,OAHH,EAIE,UAACxE,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD;;AA9Jc,GAAjB;;AAmKAU,MAAIG,MAAJ,GAAa;;AAEX;;;;;;;;;;;AAWArG,SAAK,aAAC8G,KAAD,EAAQC,MAAR,EAAgBC,OAAhB,EAA4B;AAC/B,UAAI5C,WAAW1E,GAAG2E,KAAH,EAAf;AACA,UAAI4C,iBAAiB,EAArB;;AAEA;AACAzH,QAAE0H,OAAF,CAAUF,OAAV,EAAmB,UAACxD,KAAD,EAAQrE,MAAR,EAAmB;AACpC,YAAGA,WAAW,QAAd,EAAwB,OAAO8H,eAAe9H,MAAf,IAAyBqE,KAAhC;AACxByD,uBAAe9H,MAAf,IAAyBK,EAAE2H,IAAF,CAAO3D,KAAP,EAAa,GAAb,CAAzB;AACD,OAHD;;AAKA,UAAI4D,OAAO,EAACnH,QAAQgH,cAAT,EAAX;AACAG,WAAKnH,MAAL,CAAY6G,KAAZ,GAAoBA,KAApB;AACAM,WAAKnH,MAAL,CAAY8G,MAAZ,GAAqBA,MAArB;;AAEAtH,YAAMW,GAAN,CAAUT,MAAM,SAAhB,EAA2ByH,IAA3B,EAAiC/G,IAAjC,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KArCU;;AAuCX;;;;;;;AAOA6B,WAAO,iBAAgB;AAAA,UAAfL,OAAe,uEAAP,EAAO;;AACrB,UAAI5C,WAAW1E,GAAG2E,KAAH,EAAf;AACA,UAAI4C,iBAAiB,EAArB;;AAEA;AACAzH,QAAE0H,OAAF,CAAUF,OAAV,EAAmB,UAACxD,KAAD,EAAQrE,MAAR,EAAmB;AACpC,YAAGA,WAAW,QAAd,EAAwB,OAAO8H,eAAe9H,MAAf,IAAyBqE,KAAhC;AACxByD,uBAAe9H,MAAf,IAAyBK,EAAE2H,IAAF,CAAO3D,KAAP,EAAa,GAAb,CAAzB;AACD,OAHD;;AAMA,UAAIvD,SAAS,EAACA,QAAQgH,cAAT,EAAb;;AAEAxH,YAAMW,GAAN,CAAUT,MAAM,eAAhB,EAAiCM,MAAjC,EAAyCI,IAAzC,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KArEU;;AAwEX;;;;;;AAMAzE,YAAQ,gBAACjC,KAAD,EAAW;AACjB,UAAIsF,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAM4B,GAAN,CAAU1B,MAAM,UAAN,GAAmBb,MAAM4B,KAAnC,EAA0C5B,KAA1C,EAAiDuB,IAAjD,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KA3FU;;AA8FX;;;;;;;;AAQAF,YAAQ,gBAACxG,KAAD,EAAQwG,QAAR,EAAgBiC,QAAhB,EAA6B;AACnC,UAAInD,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAM4B,GAAN,CAAU1B,MAAM,UAAN,GAAmBb,MAAM4B,KAAzB,GAAiC,UAAjC,GAA8C4E,QAAxD,EAAgE,EAACiC,UAAUA,QAAX,EAAhE,EAAsFlH,IAAtF,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KAnHU;;AAqHX;;;;;;AAMAzB,YAAQ,gBAACjF,KAAD,EAAW;AACjB,UAAIsF,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAMmB,IAAN,CAAWjB,MAAM,SAAjB,EAA4Bb,KAA5B,EAAmCuB,IAAnC,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KAxIU;;AA0IX;;;;;;AAMAgC,YAAQ,gBAAC1I,KAAD,EAAW;AACjB,UAAIsF,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAMgI,MAAN,CAAa9H,MAAM,UAAN,GAAmBb,KAAhC,EAAuCuB,IAAvC,CACE,UAACC,MAAD,EAAY;AACV8D,iBAASlE,OAAT,CAAiBI,OAAOgF,MAAxB;AACD,OAHH,EAIE,UAACxE,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD;;AA7JU,GAAb;;AAiKA,SAAOU,GAAP;AACD,CA9cgC,CAAjC;;;ACFA;;;;;;;AAOA5H,IAAIiB,OAAJ,CAAY,UAAZ,EAAwB,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE7D,MAAMC,MAAM,yBAAZ;;AAEA,MAAI+H,QAAQ,EAAZ;;AAEAA,QAAMhB,eAAN,GAAwB,UAAC1D,KAAD,EAAW;;AAEjC,WAAOtD,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B,UAAIwH,MAAMlI,MAAM;AACdkC,gBAAQ,KADM;AAEdE,iBAAS;AACP,oBAAU,kBADH;AAEP,2BAAiBE;AAFV,SAFK;AAMdH,aAAKjC,MAAM,0CAAN,GAAmDqD;AAN1C,OAAN,CAAV;;AASA;;AAEA2E,UAAItH,IAAJ,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAtBM,CAAP;AAwBD,GA1BD;;AA6BA;;;;;;AAMA4G,QAAME,MAAN,GAAe,UAACC,IAAD,EAAU;AACvB,WAAOnI,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACA,UAAG,OAAO0H,IAAP,KAAgB,QAAnB,EAA6B;AAC3BA,eAAO,CAACA,IAAD,CAAP;AACD;;AAED,UAAItC,OAAO;AACTyB,iBAAS;AACPc,cAAI,IADG;AAEPC,mBAAS;AACPC,mBAAO,sBADA;AAEPxE,mBAAOqE;AAFA;AAFF;AADA,OAAX;;AAUApI,YAAMmB,IAAN,CAAW,8CAAX,EAA2D2E,IAA3D,EAAiE,EAAC1D,SAAS,EAACC,eAAe,gCAAhB,EAAV,EAAjE,EAA+HzB,IAA/H,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdkB,gBAAQC,GAAR,CAAY,kCAAZ,EAAgDnB,GAAhD;AACAX,eAAOW,GAAP;AACD,OAPH;AAUD,KA3BM,CAAP;AA4BD,GA7BD;;AAgCA;;;;;;AAMA4G,QAAMO,MAAN,GAAe,UAACJ,IAAD,EAAU;AACvB,WAAOnI,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACA,UAAG,OAAO0H,IAAP,KAAgB,QAAnB,EAA6B;AAC3BA,eAAO,CAACA,IAAD,CAAP;AACD;;AAED,UAAItC,OAAO;AACTyB,iBAAS;AACPc,cAAI,IADG;AAEPC,mBAAS;AACPC,mBAAO,sBADA;AAEPxE,mBAAOqE;AAFA;AAFF;AADA,OAAX;;AAUApI,YAAMmB,IAAN,CAAW,8CAAX,EAA2D2E,IAA3D,EAAiE,EAAC1D,SAAS,EAACC,eAAe,gCAAhB,EAAV,EAAjE,EAA+HzB,IAA/H,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdkB,gBAAQC,GAAR,CAAY,kCAAZ,EAAgDnB,GAAhD;AACAX,eAAOW,GAAP;AACD,OAPH;AAUD,KA3BM,CAAP;AA4BD,GA7BD;;AAgCA;;;;;;AAMA4G,QAAMQ,OAAN,GAAgB,UAACC,KAAD,EAAW;AACzB,WAAOzI,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B,UAAG,OAAOgI,KAAP,KAAiB,QAApB,EAA8B;AAC5BA,gBAAQ,CAACA,KAAD,CAAR;AACD;;AAED,UAAI5C,OAAO;AACTyB,iBAAS;AACPc,cAAI,IADG;AAEPC,mBAAS;AACPC,mBAAO,MADA;AAEPxE,mBAAO2E;AAFA;AAFF;AADA,OAAX;;AAUA1I,YAAMmB,IAAN,CAAW,+CAAX,EAA4D2E,IAA5D,EAAkE,EAAC1D,SAAS,EAACC,eAAe,gCAAhB,EAAV,EAAlE,EAAgIzB,IAAhI,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdkB,gBAAQC,GAAR,CAAY,mCAAZ,EAAiDnB,GAAjD;AACAX,eAAOW,GAAP;AACD,OAPH;AAUD,KA1BM,CAAP;AA2BD,GA5BD;;AA+BA;;;;;;AAMA4G,QAAMU,YAAN,GAAqB,UAACC,SAAD,EAAe;AAClC,WAAO3I,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B,UAAG,OAAOgI,KAAP,KAAiB,QAApB,EAA8B;AAC5BE,oBAAY,CAACA,SAAD,CAAZ;AACD;;AAED,UAAI9C,OAAO;AACTyB,iBAAS;AACPc,cAAI,IADG;AAEPC,mBAAS,CACP;AACED,gBAAI,IADN;AAEEC,qBAAS;AACPC,qBAAO,SADA;AAEPxE,qBAAO6E;AAFA;AAFX,WADO,EAQP;AACEP,gBAAI,IADN;AAEEC,qBAAS;AACPC,qBAAO,mBADA;AAEPxE,qBAAO6E;AAFA;AAFX,WARO;AAFF;AADA,OAAX;;AAsBA5I,YAAMmB,IAAN,CAAW,oDAAX,EAAiE2E,IAAjE,EAAuE,EAAC1D,SAAS,EAACC,eAAe,gCAAhB,EAAV,EAAvE,EAAqIzB,IAArI,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdkB,gBAAQC,GAAR,CAAY,wCAAZ,EAAsDnB,GAAtD;AACAX,eAAOW,GAAP;AACD,OAPH;AAUD,KAtCM,CAAP;AAuCD,GAxCD;;AA2CA,SAAO4G,KAAP;AAED,CAvMuB,CAAxB;;;ACPA;;;;;;;AAOApJ,IAAIiB,OAAJ,CAAY,SAAZ,EAAuB,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE5D,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;AACA,MAAIwI,QAAQ,EAAZ,CAH4D,CAG7C;;;AAGf,MAAIC,OAAO,EAAX;;AAGA;;;;;;;;AAQAA,OAAKvI,GAAL,GAAW,YAAa;AAAA,QAAZoH,IAAY,uEAAP,EAAO;;AACtB,WAAO1H,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAIyB,MAAMjC,GAAV;;AAEA;;;;;;;;AAQA;AACAF,YAAMW,GAAN,CAAUwB,GAAV,EAAe,EAAC3B,QAAQmH,IAAT,EAAf,EAA+B/G,IAA/B,CACE,UAACC,MAAD,EAAY;AACV;AACAgI,gBAAQ,EAAR;;AAEA;AACA9I,UAAE0H,OAAF,CAAU5G,OAAOC,IAAjB,EAAuB,UAACiI,GAAD,EAAS;AAC9BF,gBAAMG,IAAN,CAAWD,GAAX;AACD,SAFD;;AAIAtI,gBAAQoI,KAAR;AACD,OAXH,EAYE,UAAC9H,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OAfH;AAkBD,KA9BM,CAAP;AAgCD,GAjCD;;AAmCA;;;;;;AAMA+H,OAAKG,EAAL,GAAU,UAACC,KAAD,EAAW;;AAEnB,WAAOjJ,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACA,UAAGmI,MAAMK,KAAN,MAAiB5G,SAApB,EAA+B,OAAO7B,QAAQoI,MAAMK,KAAN,CAAR,CAAP;;AAE/B;AACAlJ,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAtB,EAA6BtI,IAA7B,CACE,UAACC,MAAD,EAAY;AACVgI,cAAMhI,OAAOC,IAAP,CAAYoI,KAAlB,IAA2BrI,OAAOC,IAAlC;AACAL,gBAAQoI,MAAMhI,OAAOC,IAAP,CAAYoI,KAAlB,CAAR;AACD,OAJH,EAKE,UAACnI,KAAD,EAAW;AACT;AACAL;AACD,OARH;AAUD,KAhBM,CAAP;AAiBD,GAnBD;;AAsBA;;;;;;;;AAQAoI,OAAKK,IAAL,GAAY,UAACD,KAAD,EAAW;;AAErB,QAAIvE,WAAW1E,GAAG2E,KAAH,EAAf;;AAGA;AACA,QAAIwE,QAAQ,IAAIC,cAAJ,EAAZ;AACAD,UAAME,kBAAN,GAA2B,UAACC,WAAD,EAAiB;;AAE1C;AACA,UAAIH,MAAMI,UAAN,KAAqB,CAAzB,EAA4B;AAC1B7E,iBAAS8E,MAAT,CAAgBL,MAAMM,YAAtB;AACD;;AAED;AACA,UAAIN,MAAMI,UAAN,KAAqB,CAAzB,EAA4B;;AAE1B,YAAIJ,MAAMvD,MAAN,IAAgB,GAAhB,IAAuBuD,MAAMvD,MAAN,GAAe,GAA1C,EAA+C;;AAE7ClB,mBAASlE,OAAT,CAAiB2I,MAAMM,YAAvB;AAED,SAJD,MAIO;AACLhJ,iBAAO0I,KAAP;AACD;AAEF;AACF,KAnBD;;AAqBAA,UAAMO,IAAN,CAAW,KAAX,EAAkBzJ,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAAtC,EAAkD,IAAlD;AACAE,UAAMQ,IAAN;;AAGA,WAAOjF,QAAP;AACD,GAjCD;;AAmCA;AACAmE,OAAKe,OAAL,GAAe,YAAM;;AAEnBhB,YAAQ,EAAR;AAED,GAJD;;AAMAC,OAAKgB,IAAL,GAAY,UAACZ,KAAD,EAAW;AACrB,WAAO;AACLa,YAAM,cAAC9I,KAAD,EAAQ+I,IAAR,EAAiB;;AAErB,YAAIrF,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAMmB,IAAN,CAAWjB,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,OAA/B,EAAwC,EAACY,MAAM7I,KAAP,EAAc+I,MAAMA,IAApB,EAAxC,EAAmEpJ,IAAnE,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,mBAASjE,MAAT,CAAgBW,GAAhB;AACD,SANH;;AASA,eAAOsD,SAASoB,OAAhB;AACD,OAfI;;AAiBLkE,cAAQ,gBAAChJ,KAAD,EAAQ+I,IAAR,EAAiB;AACvB,YAAIrF,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM;AACJmC,eAAKjC,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,OADrB;AAEJhH,kBAAQ,QAFJ;AAGJpB,gBAAM;AACJgJ,kBAAM7I,KADF;AAEJ+I,kBAAMA;AAFF,WAHF;AAOJ5H,mBAAS;AACP,4BAAgB;AADT;AAPL,SAAN,EAUGxB,IAVH,CAWE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAbH,EAcE,UAACO,GAAD,EAAS;AACPsD,mBAASjE,MAAT,CAAgBW,GAAhB;AACD,SAhBH;;AAmBA,eAAOsD,SAASoB,OAAhB;AACD;AAxCI,KAAP;AA0CD,GA3CD;;AA6CA+C,OAAKoB,MAAL,GAAc,UAAChB,KAAD,EAAW;AACvB,WAAO;;AAEL;;;;AAIAiB,WAAK,eAAM;AACT,YAAIxF,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA;AACA5E,cAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,aAA9B,EAA6CtI,IAA7C,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,mBAASjE,MAAT,CAAgBW,GAAhB;AACD,SANH;;AASA,eAAOsD,SAASoB,OAAhB;AACD,OApBI;;AAsBL;;;;;AAKAxF,WAAK,eAAM;;AAET,YAAIoE,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA;AACA5E,cAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,aAA9B,EAA6CtI,IAA7C,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,mBAASjE,MAAT,CAAgBW,GAAhB;AACD,SANH;;AASA,eAAOsD,SAASoB,OAAhB;AAED;AA3CI,KAAP;AA6CD,GA9CD;;AAgDA,SAAO+C,IAAP;AAED,CAjOsB,CAAvB;;;ACPA;;;;;;;AAOAjK,IAAIiB,OAAJ,CAAY,oBAAZ,EAAkC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEvE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAGA,MAAI+J,WAAW,EAAf;;AAEA;;;;;AAKAA,aAAW,kBAAClB,KAAD,EAAQmB,MAAR,EAAmB;;AAE5B,QAAMhK,MAAMH,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAA7C;;AAEA,WAAO;;AAEL;;;;;AAKA9J,WAAK,eAAM;AACT,YAAIoE,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAMW,GAAN,CAAUN,MAAM,UAAhB,EAA4BO,IAA5B,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,mBAASjE,MAAT,CAAgBW,GAAhB;AACD,SANH;;AASA,eAAOsD,SAASoB,OAAhB;AACD,OApBI;;AAsBL;;;;;;AAMAuE,cAAQ,gBAACrJ,KAAD,EAAW;AACjB,YAAI0D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAMW,GAAN,CAAUN,MAAM,kBAAN,GAA0BY,KAApC,EAA2CL,IAA3C,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,mBAASjE,MAAT,CAAgBW,GAAhB;AACD,SANH;;AASA,eAAOsD,SAASoB,OAAhB;AACD,OAzCI;;AA2CL;;;;;;AAMAwE,cAAQ,gBAACtJ,KAAD,EAAQuJ,OAAR,EAAoB;AAC1B,YAAI7F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAUvB,MAAM,kBAAN,GAA0BY,KAApC,EAA2C,EAACuJ,SAASA,OAAV,EAA3C,EAA+D5J,IAA/D,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,mBAASjE,MAAT,CAAgBW,GAAhB;AACD,SANH;;AASA,eAAOsD,SAASoB,OAAhB;AACD,OA9DI;;AAgEL;;;;;;AAMA0E,eAAS,iBAACxJ,KAAD,EAAQuJ,OAAR,EAAoB;AAC3B,YAAI7F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAUvB,MAAM,mBAAN,GAA2BY,KAArC,EAA4C,EAACuJ,SAASA,OAAV,EAA5C,EAAgE5J,IAAhE,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiB,IAAjB;AACD,SAHH,EAIE,UAACY,GAAD,EAAS;AACPsD,mBAASjE,MAAT,CAAgBW,GAAhB;AACD,SANH;;AASA,eAAOsD,SAASoB,OAAhB;AACD,OAnFI;;AAqFL;;;;AAIA2E,WAAK;;AAEH;;;;;AAKAnK,aAAK,eAAM;AACT,cAAIoE,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,gBAAMW,GAAN,CAAUN,MAAM,cAAhB,EAAgCO,IAAhC,CACE,UAACqF,IAAD,EAAU;AACRtB,qBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,WAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,qBAASjE,MAAT,CAAgBW,GAAhB;AACD,WANH;;AASA,iBAAOsD,SAASoB,OAAhB;AACD,SApBE;;AAsBH;;;;;;;;;AASAzB,gBAAQ,gBAACoG,GAAD,EAAmB;AAAA,cAAbzJ,KAAa,uEAAP,EAAO;;AACzB,cAAI0D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,gBAAMmB,IAAN,CAAWd,MAAM,eAAN,GAAuBY,KAAlC,EAAyCyJ,GAAzC,EAA8C9J,IAA9C,CACE,UAACqF,IAAD,EAAU;AACRtB,qBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,WAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,qBAASjE,MAAT,CAAgBW,GAAhB;AACD,WANH;AAQA,iBAAOsD,SAASoB,OAAhB;AACD,SA3CE;;AA6CH;;;;;;;;AAQAgC,gBAAQ,gBAAC9G,KAAD,EAAW;AACjB,cAAI0D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,gBAAMgI,MAAN,CAAa3H,MAAM,eAAN,GAAuBY,KAApC,EAA2CL,IAA3C,CACE,UAACqF,IAAD,EAAU;AACRtB,qBAASlE,OAAT,CAAiB,IAAjB;AACD,WAHH,EAIE,UAACY,GAAD,EAAS;AACPsD,qBAASjE,MAAT,CAAgBW,GAAhB;AACD,WANH;AAQA,iBAAOsD,SAASoB,OAAhB;AACD,SAjEE;;AAmEH;;;;;;AAMA4E,gBAAQ,gBAACpH,KAAD,EAAW;AACjB,cAAIoB,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,gBAAMW,GAAN,CAAUN,MAAM,sBAAN,GAA+BkD,KAAzC,EAAgD3C,IAAhD,CACE,UAACqF,IAAD,EAAU;AACRtB,qBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,WAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,qBAASjE,MAAT,CAAgBW,GAAhB;AACD,WANH;;AASA,iBAAOsD,SAASoB,OAAhB;AACD;AAtFE;AAzFA,KAAP;AAkLD,GAtLD;;AAwLA,SAAOqE,QAAP;AAED,CAtMiC,CAAlC;;;ACPA;;;;;;;AAOAvL,IAAIiB,OAAJ,CAAY,aAAZ,EAA2B,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEhE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,WAAnC;;AAGA,MAAIuK,WAAW,EAAf;;AAGA;;;;;;;AAOAA,WAASrK,GAAT,GAAe,YAAM;AACnB,WAAON,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,GAAV,EAAeU,IAAf,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OAPH;AAUD,KAbM,CAAP;AAeD,GAhBD;;AAkBA,SAAO6J,QAAP;AAED,CAnC0B,CAA3B;;;ACPA;;;;;;;AAOA/L,IAAIiB,OAAJ,CAAY,YAAZ,EAA0B,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE/D;AACA,MAAMC,MAAM,yGAAZ;;AAGA,MAAI2K,UAAU,EAAd;;AAGA;;;;;;AAMAA,UAAQC,OAAR,GAAkB,UAACC,IAAD,EAAU;AAC1B,WAAO9K,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B,UAAI0I,QAAQ,IAAIC,cAAJ,EAAZ;AACAD,YAAME,kBAAN,GAA2B,UAACC,WAAD,EAAiB;;AAE1C;AACA,YAAGH,MAAMI,UAAN,KAAqB,CAAxB,EAA2B;;AAEzB,cAAGJ,MAAMvD,MAAN,IAAgB,GAAhB,IAAuBuD,MAAMvD,MAAN,GAAe,GAAzC,EAA8C;AAC5CpF,oBAAQuK,KAAKC,KAAL,CAAW7B,MAAMM,YAAjB,EAA+B7I,MAA/B,CAAsCqK,SAASH,IAAT,EAAe,EAAf,CAAtC,CAAR;AACD,WAFD,MAEO;AACLrK,mBAAO0I,KAAP;AACD;AAEF;AAEF,OAbD;;AAeAA,YAAMO,IAAN,CAAW,KAAX,EAAkBzJ,MAAM6K,IAAxB,EAA8B,IAA9B;AACA3B,YAAMQ,IAAN;AAED,KArBM,CAAP;AAuBD,GAxBD;;AA0BA,SAAOiB,OAAP;AAED,CA3CyB,CAA1B;;;ACPA;;;;;;;AAOAhM,IAAIiB,OAAJ,CAAY,aAAZ,EAA2B,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,eAArB,EAAsC,UAAtC,EAAkD,SAAlD,EAA6D,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAekL,aAAf,EAA8BlH,KAA9B,EAAqC6E,IAArC,EAA8C;;AAEpI,MAAMsC,kBAAkB,eAAxB,CAFoI,CAE1F;AAC1C,MAAMlL,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,UAAnC,CAHoI,CAGnF;;AAEjD,MAAIgL,SAAS,IAAb;AAAA,MAA0B;AACtBC,gBAAc,KADlB;AAAA,MAC0B;AACtBC,OAAK,IAFT;AAAA,MAE0B;AACtBnH,aAAW,EAHf,CALoI,CAQ1G;;;AAG1B;;;;;;AAMAA,WAAS0F,IAAT,GAAgB,YAAM;AACpB,WAAOyB,EAAP;AACD,GAFD;;AAIAnH,WAASoH,QAAT,GAAoB,YAAM;AACxB,WAAO1M,QAAQ0C,IAAR,CAAa6J,MAAb,CAAP;AACD,GAFD;;AAIA;;;;;;;AAOAjH,WAASH,KAAT,GAAiB,YAAM;AACrB;AACA,WAAOhE,GAAGwL,IAAH,CAAQrH,SAAS0F,IAAT,EAAR,CAAP;AACD,GAHD;;AAKA;;;;;;AAMA1F,WAASsH,KAAT,GAAiB,UAAC3J,KAAD,EAAQ+H,IAAR,EAAiB;;AAEhCqB,kBAAcC,eAAd,IAAiCrJ,KAAjC,CAFgC,CAEQ;AACxC/B,UAAM2L,QAAN,CAAevJ,OAAf,CAAuBwJ,MAAvB,CAA8B,eAA9B,IAAiD7J,KAAjD,CAHgC,CAGwB;AACxDwJ,SAAKzB,IAAL,CAJgC,CAIrB;AACZ,GALD;;AAOA;;;;;;AAMA1F,WAASyH,IAAT,GAAgB,YAAM;;AAEpB,WAAO5L,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACA,UAAG4K,gBAAgB,IAAnB,EAAyB7K,QAAQ8K,EAAR;;AAEzB;AACA,UAAIxJ,QAAQoJ,cAAcC,eAAd,CAAZ;AACAC,eAAStJ,KAAT,CAP6B,CAOb;;AAEhB;AACA,UAAGA,UAAU,KAAV,IAAmBA,UAAUO,SAA7B,IAA0CP,UAAU,IAAvD,EAA6D;AAC3DrB,eAAO,eAAP;AACD;;AAEDV,YAAM2L,QAAN,CAAevJ,OAAf,CAAuBwJ,MAAvB,CAA8B,eAA9B,IAAiD7J,KAAjD;;AAEA;AACAkC,YAAMsH,EAAN,GACG3K,IADH,CACQ,UAAC2K,EAAD,EAAQ;AACZ;AACAnH,iBAASsH,KAAT,CAAe3J,KAAf,EAAsBwJ,EAAtB;AACA9K,gBAAQ8K,EAAR;AACD,OALH,EAMGnK,KANH,CAMS,UAACC,GAAD,EAAS;AACdkB,gBAAQC,GAAR,CAAY,gDAAZ,EAA8DnB,GAA9D;AACAX,eAAO,EAAClB,SAAS,8BAAV,EAAP;AACD,OATH;AAWD,KA5BM,CAAP;AA8BD,GAhCD;;AAkCA;;;;;;AAMA4E,WAAS+B,KAAT,GAAiB,UAACC,QAAD,EAAWC,QAAX,EAAwB;;AAEvC,WAAOpG,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMmB,IAAN,CAAWjB,MAAM,GAAjB,EAAsB,EAACkG,UAAUA,QAAX,EAAqBC,UAAUA,QAA/B,EAAtB,EACGzF,IADH,CACQ,UAACqF,IAAD,EAAU;AACd;AACA;AACAoF,iBAAUpF,KAAK7D,OAAL,CAAa,SAAb,CAAV,CAHc,CAGqB;;AAEnC+I,sBAAcC,eAAd,IAAiCC,MAAjC,CALc,CAK2B;AACzCrL,cAAM2L,QAAN,CAAevJ,OAAf,CAAuBwJ,MAAvB,CAA8B,eAA9B,IAAiDP,MAAjD,CANc,CAM2C;;AAEzD;;AAEApH,cAAM6H,GAAN,GAAY7F,KAAKnF,IAAjB;;AAEAL,gBAAQwF,IAAR;AAED,OAfH,EAgBG7E,KAhBH,CAgBS,UAACL,KAAD,EAAW;AAChBwB,gBAAQC,GAAR,CAAY,sBAAZ,EAAoCzB,KAApC;AACAL,eAAOK,KAAP;AACD,OAnBH;AAqBD,KAxBM,CAAP;AA0BD,GA5BD;;AA8BA;;;;;;AAMAqD,WAAS2H,MAAT,GAAkB,YAAe;AAAA,QAAdxL,GAAc,uEAAV,KAAU;;;AAE/B,QAAIoE,WAAW1E,GAAG2E,KAAH,EAAf;;AAIA;AACA,QAAGrE,QAAQ,IAAX,EAAiB;AACf;AACD;;AAED,QAAGA,QAAQ,KAAX,EAAkB;AAChB;;AAEAP,YAAMgI,MAAN,CAAa9H,MAAM,GAAnB,EAAwBU,IAAxB,CACE,UAACqF,IAAD,EAAU;;AAER;AACA,eAAOkF,cAAcC,eAAd,CAAP,CAHQ,CAG+B;AACvCG,aAAK,IAAL,CAJQ,CAIG;AACXtH,cAAM6H,GAAN,GAAY,IAAZ,CALQ,CAKU;AAClB7H,cAAMoH,MAAN,GAAe,IAAf,CANQ,CAMa;AACrBA,iBAAS,IAAT,CAPQ,CAOO;AACf,eAAOrL,MAAM2L,QAAN,CAAevJ,OAAf,CAAuBwJ,MAAvB,CAA8B,eAA9B,CAAP,CARQ,CAQ+C;;AAEvDjH,iBAASlE,OAAT,CAAiB,IAAjB;AACD,OAZH,EAaE,UAACY,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAYnB,GAAZ;AACAsD,iBAASjE,MAAT,CAAgB,EAACmF,QAAQ,KAAT,EAAgBrG,SAAS,8BAAzB,EAAhB;AACD,OAhBH;AAmBD;;AAED,WAAOmF,SAASoB,OAAhB;AAED,GArCD;;AAwCA,SAAO3B,QAAP;AAED,CA9K0B,CAA3B;;;ACPAvF,IAAIiB,OAAJ,CAAY,YAAZ,EAA0B,CAAC,eAAD,EAAkB,eAAlB,EAAmC,IAAnC,EAAyC,UAAUkM,aAAV,EAAyBb,aAAzB,EAAwClL,EAAxC,EAA4C;;AAE7G,MAAIgM,SAAS,KAAb;;AAEA,MAAIC,aAAaC,GAAGC,OAAH,CAAWjM,OAAOC,SAAP,CAAiBiM,MAA5B,CAAjB;;AAEA,MAAIC,SAASN,cAAc;AACzBO,cAAUL;AADe,GAAd,CAAb;;AAIAI,SAAOE,EAAP,CAAU,SAAV,EAAqB,YAAY;AAC/BF,WAAOG,IAAP,CAAY,cAAZ,EAA4B,EAAC1K,OAAOoJ,cAAcuB,aAAtB,EAA5B;AACD,GAFD;;AAIAJ,SAAOE,EAAP,CAAU,eAAV,EAA2B,UAACG,GAAD,EAAS;AAClCV,aAAS,IAAT;AACA1J,YAAQC,GAAR,CAAY,sCAAZ;AACD,GAHD;;AAKA8J,SAAOE,EAAP,CAAU,YAAV,EAAwB,YAAY;AAClCjK,YAAQC,GAAR,CAAY,qBAAZ;AACD,GAFD;;AAIA8J,SAAOM,KAAP,GAAe,YAAY;AACzB,WAAO3M,GAAG,UAAUQ,OAAV,EAAmBC,MAAnB,EAA2B;AAClCuL,YAAD,GAAWxL,SAAX,GAAuBC,QAAvB;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,SAAO4L,MAAP;AAED,CA/ByB,CAA1B;;;ACAA;;;;;;;AAOAzN,IAAIiB,OAAJ,CAAY,wBAAZ,EAAsC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE3E,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAGA,MAAIwM,eAAe,EAAnB;;AAEA;;;;;AAKAA,eAAatM,GAAb,GAAmB,UAAC2I,KAAD,EAAQmB,MAAR,EAAmB;AACpC,QAAI1F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,6BAApD,EAAmFzJ,IAAnF,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AACD,GAbD;;AAeA;;;;;;;AAOA8G,eAAavI,MAAb,GAAsB,UAAC4E,KAAD,EAAQmB,MAAR,EAAgBlD,KAAhB,EAA0B;AAC9C,QAAIxC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMmB,IAAN,CAAWjB,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,6BAArD,EAAoFlD,KAApF,EAA2FvG,IAA3F,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;AAQA,WAAOsD,SAASoB,OAAhB;AACD,GAZD;;AAcA;;;;;AAKA8G,eAAaC,GAAb,GAAmB,UAAC5D,KAAD,EAAQmB,MAAR,EAAmB;;AAEpC,QAAIhK,MAAMH,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,6BAApD;;AAEA,WAAO;;AAEL;;;;;;AAMA0C,gBAAU,kBAAC9L,KAAD,EAAW;AACnB,YAAI0D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAMW,GAAN,CAAUN,MAAM,GAAN,GAAYY,KAAtB,EAA8BL,IAA9B,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,mBAASjE,MAAT,CAAgBW,GAAhB;AACD,SANH;AAQA,eAAOsD,SAASoB,OAAhB;AACD,OApBI;;AAuBL;;;;;;;AAOAzE,cAAQ,gBAACL,KAAD,EAAQkG,KAAR,EAAkB;AACxB,YAAIxC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAUvB,MAAM,GAAN,GAAYY,KAAtB,EAA6BkG,KAA7B,EAAoCvG,IAApC,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,mBAASjE,MAAT,CAAgBW,GAAhB;AACD,SANH;AAQA,eAAOsD,SAASoB,OAAhB;AACD,OA1CI;;AA4CL;;;;;;AAMAgC,cAAQ,gBAAC9G,KAAD,EAAW;AACjB,YAAI0D,WAAW1E,GAAG2E,KAAH,EAAf;AACA5E,cAAMgI,MAAN,CAAa3H,MAAM,GAAN,GAAYY,KAAzB,EAAgCL,IAAhC,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,mBAASjE,MAAT,CAAgBW,GAAhB;AACD,SANH;AAQA,eAAOsD,SAASoB,OAAhB;AACD;;AA7DI,KAAP;AAgED,GApED;;AAsEA,SAAO8G,YAAP;AAED,CA7HqC,CAAtC;;;ACPA;;;;;;;AAOAhO,IAAImO,OAAJ,CAAY,UAAZ,EAAwB,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACjN,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE7D,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,OAAnC;AACA,MAAIgL,SAAS,IAAb,CAH6D,CAG1C;AACnB,MAAI4B,UAAU,EAAd;;AAEA,MAAIhJ,QAAQ,EAAZ;AACAA,QAAM6H,GAAN,GAAYxJ,SAAZ,CAP6D,CAOtC;;;AAGvB;;;;;;AAMA2B,QAAMsH,EAAN,GAAW,YAAM;;AAEf,WAAO,IAAI2B,OAAJ,CAAY,UAACzM,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,UAAGuD,MAAM6H,GAAN,IAAa7H,MAAM6H,GAAN,CAAU7K,KAA1B,EAAiC;AAC/B,eAAOR,QAAQwD,MAAM6H,GAAd,CAAP;AACD;;AAED;AACA,UAAG7H,MAAM6H,GAAN,IAAa,CAAC7H,MAAM6H,GAAN,CAAU7K,KAA3B,EAAkC;AAChCgD,cAAM6H,GAAN,CACGlL,IADH,CACQ,UAACuM,IAAD,EAAU;AACdF,oBAAUE,KAAKrM,IAAL,CAAUsM,MAApB;AACAnJ,gBAAM6H,GAAN,GAAYqB,KAAKrM,IAAjB;AACAL,kBAAQwD,MAAM6H,GAAd;AACD,SALH,EAMG1K,KANH,CAMS,UAACU,CAAD,EAAO;AACZS,kBAAQC,GAAR,CAAY,yBAAZ,EAAuCV,CAAvC;AACD,SARH;AASD;;AAED;AACA,UAAGmC,MAAM6H,GAAN,KAAcxJ,SAAjB,EAA4B;AAC1B2B,cAAM6H,GAAN,GAAY9L,MAAMW,GAAN,CAAUT,MAAM,KAAhB,CAAZ;;AAEA+D,cAAM6H,GAAN,CACGlL,IADH,CAEI,UAACuM,IAAD,EAAU;AACRF,oBAAUE,KAAKrM,IAAL,CAAUsM,MAApB;AACAnJ,gBAAM6H,GAAN,GAAYqB,KAAKrM,IAAjB;AACAL,kBAAQwD,MAAM6H,GAAd;AACD,SANL,EAOI,UAAC/K,KAAD,EAAW;AACTL,iBAAOK,KAAP;AACD,SATL;AAWD;AAEF,KApCM,CAAP;AAqCD,GAvCD;;AA0CA;;;;;AAKAkD,QAAMoJ,OAAN,GAAe,YAAM;AACnB,QAAIC,UAAUvN,EAAEL,MAAF,CAASuN,OAAT,EAAkB,UAACM,CAAD,EAAO;AACrC,UAAGA,EAAEvI,IAAF,KAAW,WAAX,IAA0BuI,EAAEvI,IAAF,KAAW,OAAxC,EAAiD,OAAOuI,CAAP;AAClD,KAFa,CAAd;;AAIA,WAAQD,QAAQE,MAAR,GAAiB,CAAzB;AACD,GAND;;AAQA;;;;;AAKAvJ,QAAM1D,GAAN,GAAY,YAAM;;AAEhB,QAAIoE,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,GAAV,EAAeU,IAAf,CACE,UAACC,MAAD,EAAY;AACV8D,eAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AAED,GAfD;;AAiBA;;;;;;AAMA9B,QAAM3C,MAAN,GAAe,UAACwI,IAAD,EAAU;AACvB,QAAInF,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAY4J,KAAK7I,KAA3B,EAAiC6I,IAAjC,EAAuClJ,IAAvC,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AACD,GAbD;;AAeA;;;;;;AAMA9B,QAAMK,MAAN,GAAe,UAACwF,IAAD,EAAU;AACvB,QAAInF,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMmB,IAAN,CAAWjB,MAAM,GAAjB,EAAsB4J,IAAtB,EAA4BlJ,IAA5B,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AACD,GAbD;;AAeA9B,QAAM0G,MAAN,GAAe,UAACpH,KAAD,EAAW;AACxB,QAAIoB,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,gBAAN,GAAuBqD,KAAjC,EAAwC3C,IAAxC,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AACD,GAbD;;AAeA9B,QAAM+D,MAAN,GAAe,UAAC8B,IAAD,EAAU;;AAEvB,QAAInF,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA;AACA5E,UAAMgI,MAAN,CAAa9H,MAAM,GAAN,GAAY4J,KAAK7I,KAA9B,EAAqCL,IAArC,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AACD,GAfD;;AAiBA;AACA9B,QAAMwJ,KAAN,GAAc;;AAEZ;;;;AAIAlN,SAAK,eAAM;AACT,UAAIoE,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAMW,GAAN,CAAUT,MAAM,QAAhB,EAA0BU,IAA1B,CACE,UAACqF,IAAD,EAAU;AACRtB,iBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KAnBW;;AAqBZ;;;;;AAKAgH,cAAU,kBAAC9L,KAAD,EAAW;AACnB,aAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,cAAMW,GAAN,CAAUT,MAAM,SAAN,GAAkBe,KAA5B,EAAmCL,IAAnC,CACE,UAACqF,IAAD,EAAU;AACRxF,kBAAQwF,KAAKnF,IAAb;AACD,SAHH,EAIE,UAACO,GAAD,EAAS;AACPX,iBAAOW,GAAP;AACD,SANH;AAQD,OATM,CAAP;AAUD,KArCW;;AAuCZ;;;;;AAKAiD,YAAQ,gBAACmJ,KAAD,EAAW;AACjB,UAAI9I,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAMmB,IAAN,CAAWjB,MAAM,QAAjB,EAA2BuN,KAA3B,EAAkC7M,IAAlC,CACE,UAACqF,IAAD,EAAU;AACRtB,iBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KAzDW;;AA2DZ;;;;;AAKAgC,YAAQ,gBAAC0F,KAAD,EAAW;AACjB,UAAI9I,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAMgI,MAAN,CAAa9H,MAAM,SAAN,GAAkBuN,MAAMxM,KAArC,EAA4CL,IAA5C,CACE,UAACqF,IAAD,EAAU;AACRtB,iBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KA7EW;;AA+EZ;;;;;;AAMAzE,YAAQ,gBAACL,KAAD,EAAQwM,KAAR,EAAkB;AACxB,UAAI9I,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,YAAM4B,GAAN,CAAU1B,MAAM,SAAN,GAAgBe,KAA1B,EAAiCwM,KAAjC,EAAwC7M,IAAxC,CACE,UAACqF,IAAD,EAAU;AACRtB,iBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,iBAASjE,MAAT,CAAgBW,GAAhB;AACD,OANH;;AASA,aAAOsD,SAASoB,OAAhB;AACD,KAlGW;;AAoGZ;;;;;AAKA2H,YAAQ,gBAACD,KAAD,EAAW;AACjB,aAAO;;AAEL;;;;;AAKAvM,aAAK,aAAC4I,IAAD,EAAU;AACb,cAAInF,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,gBAAMmB,IAAN,CAAWjB,MAAM,SAAN,GAAgBuN,KAAhB,GAAsB,SAAjC,EAA4C,EAAC3D,MAAMA,IAAP,EAA5C,EAA0DlJ,IAA1D,CACE,UAACqF,IAAD,EAAU;AACRtB,qBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,WAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,qBAASjE,MAAT,CAAgBW,GAAhB;AACD,WANH;;AASA,iBAAOsD,SAASoB,OAAhB;AACD,SApBI;;AAsBL;;;;;AAKAgC,gBAAQ,gBAAC+B,IAAD,EAAU;AAChB,cAAInF,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,gBAAM;AACJmC,iBAAKjC,MAAM,SAAN,GAAkBuN,KAAlB,GAA0B,SAD3B;AAEJvL,oBAAQ,QAFJ;AAGJpB,kBAAM;AACJgJ,oBAAMA;AADF,aAHF;AAMJ1H,qBAAS;AACP,8BAAgB;AADT;AANL,WAAN,EASGxB,IATH,CAUE,UAACqF,IAAD,EAAU;AACRtB,qBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,WAZH,EAaE,UAACO,GAAD,EAAS;AACPsD,qBAASjE,MAAT,CAAgBW,GAAhB;AACD,WAfH;;AAkBA,iBAAOsD,SAASoB,OAAhB;AACD;AAjDI,OAAP;AAmDD,KA7JW,CA6JV;;AA7JU,GAAd;;AAkKA,SAAO9B,KAAP;AAED,CA5UuB,CAAxB;;;ACPA;;;;;;;AAOApF,IAAIiB,OAAJ,CAAY,WAAZ,EAAyB,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE9D,MAAMC,MAAMC,OAAOC,SAAP,CAAiBuN,KAA7B;AACA,MAAItC,SAAS,IAAb,CAH8D,CAG3C;AACnB,MAAIuC,aAAa,sCAAjB,CAJ8D,CAIL;;AAEzD,MAAIC,SAAS,EAAb;;AAGA;;;;;;;;;;AAUAA,SAAOC,gBAAP,GAA0B,UAACC,UAAD,EAAaC,QAAb,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAoC;;AAE5D,QAAIvJ,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA,QAAIuJ,MAAM;AACR/L,eAAS;AACP,yBAAiBwL,UADV;AAEP,wBAAgB;AAFT,OADD;AAKRpN,cAAQ;AACNuN,oBAAYA,UADN;AAENC,kBAAUA,QAFJ;AAGNC,aAAKA,GAHC;AAINC,aAAKA;AAJC;AALA,KAAV;;AAaAlO,UAAMW,GAAN,CAAUT,MAAM,oBAAhB,EAAsCiO,GAAtC,EAA2CvN,IAA3C,CACE,UAACC,MAAD,EAAY;AACV8D,eAASlE,OAAT,CAAiBI,OAAOC,IAAxB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AAED,GA5BD;;AA+BA;;;;;;AAMA8H,SAAOO,WAAP,GAAqB,UAACxF,SAAD,EAAe;;AAElC,QAAIjE,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA;AACA,QAAG,OAAOgE,SAAP,KAAqB,QAAxB,EAAkCA,YAAY,CAACA,SAAD,CAAZ;;AAElC,QAAIjB,OAAO,EAAX;AACAA,SAAKnH,MAAL,GAAc,EAACoI,WAAW7I,EAAE2H,IAAF,CAAOkB,SAAP,EAAkB,GAAlB,CAAZ,EAAd;AACAjB,SAAKvF,OAAL,GAAe,EAAC,iBAAiBwL,UAAlB,EAAf;;AAEA5N,UAAMW,GAAN,CAAUT,MAAM,mBAAhB,EAAqCyH,IAArC,EAA2C/G,IAA3C,CACE,UAACyN,OAAD,EAAa;AACX1J,eAASlE,OAAT,CAAiB4N,QAAQvN,IAAzB;AACD,KAHH,EAIE,UAACO,GAAD,EAAS;AACPsD,eAASjE,MAAT,CAAgBW,GAAhB;AACD,KANH;;AASA,WAAOsD,SAASoB,OAAhB;AAED,GAtBD;;AAyBA,SAAO8H,MAAP;AAED,CAnFwB,CAAzB;;;ACPA;;;;;;;;AAQAhP,IAAIiB,OAAJ,CAAY,mBAAZ,EAAiC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;AACtE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,iCAAnC;;AAEA,MAAIiO,UAAU,EAAd;;AAEA;;;;;AAKAA,UAAQ/N,GAAR,GAAc,YAAM;AAClB,WAAON,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAUT,MAAM,GAAhB,EACGU,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAeA;;;;;;;;AAQAiN,UAAQC,WAAR,GAAsB,UAAClE,MAAD,EAASmE,KAAT,EAAmB;AACvC,WAAOvO,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYmK,MAAtB,EAA8B,EAACmE,OAAOA,KAAR,EAA9B,EACG5N,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAeA;;;;;;;AAOAiN,UAAQvG,MAAR,GAAiB,UAACsC,MAAD,EAAY;AAC3B,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMgI,MAAN,CAAa9H,MAAM,GAAN,GAAYmK,MAAzB,EACGzJ,IADH,CACQ,YAAM;AACVH;AACD,OAHH,EAIGW,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAcA,SAAOiN,OAAP;AAED,CAvEgC,CAAjC;;;ACRA;;;;;;;;;AASAzP,IAAIiB,OAAJ,CAAY,qBAAZ,EAAmC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;AACxE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,0BAAnC;;AAEA,MAAIoO,UAAU,EAAd;;AAEA;;;;;AAKAA,UAAQlO,GAAR,GAAc,YAAe;AAAA,QAAdC,MAAc,uEAAP,EAAO;;AAC3B,WAAOP,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,MAAaT,GAAb,EAAoB,EAACM,QAAQA,MAAT,EAApB,EACGI,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAcA;;;;;;;;;AASAoN,UAAQC,MAAR,GAAiB,UAACC,OAAD,EAAUD,MAAV,EAAgC;AAAA,QAAdlO,MAAc,uEAAP,EAAO;;AAC/C,WAAOP,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAaT,GAAb,iBAA4ByO,OAA5B,gBAA8CD,MAA9C,EAAwD,EAAClO,QAAQA,MAAT,EAAxD,EACGI,IADH,CACQ,UAACgO,OAAD,EAAa;AACjBnO,gBAAQmO,OAAR;AACD,OAHH,EAIGxN,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAeA;;;;;;;;;;AAUAoN,UAAQ3B,GAAR,GAAc,UAAC6B,OAAD,EAAUD,MAAV,EAAkBrE,MAAlB,EAAwC;AAAA,QAAd7J,MAAc,uEAAP,EAAO;;AACpD,WAAOP,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,YAAMW,GAAN,CAAaT,GAAb,iBAA4ByO,OAA5B,gBAA8CD,MAA9C,gBAA+DrE,MAA/D,EAAyE,EAAC7J,QAAQA,MAAT,EAAzE,EACGI,IADH,CACQ,UAACyJ,MAAD,EAAY;AAChB5J,gBAAQ4J,OAAOvJ,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAOD,KARM,CAAP;AASD,GAVD;;AAaA;;;;;;;;;;;AAWAoN,UAAQnN,MAAR,GAAiB,UAACqN,OAAD,EAAUD,MAAV,EAAkBrE,MAAlB,EAA0BvJ,IAA1B,EAA8C;AAAA,QAAdN,MAAc,uEAAP,EAAO;;AAC7D,WAAOP,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,YAAM4B,GAAN,CAAa1B,GAAb,iBAA4ByO,OAA5B,gBAA8CD,MAA9C,gBAA+DrE,MAA/D,EAAyEvJ,IAAzE,EAA+E,EAACN,QAAQA,MAAT,EAA/E,EACGI,IADH,CACQ,UAACyJ,MAAD,EAAY;AAChB5J,gBAAQ4J,OAAOvJ,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAOD,KARM,CAAP;AASD,GAVD;;AAaA;;;;;;;;;AASAoN,UAAQzG,MAAR,GAAiB,UAAC2G,OAAD,EAAUD,MAAV,EAAkBrE,MAAlB,EAA6B;AAC5C,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,YAAMgI,MAAN,CAAgB9H,GAAhB,iBAA+ByO,OAA/B,gBAAiDD,MAAjD,gBAAkErE,MAAlE,EACGzJ,IADH,CACQ,YAAM;AACVH;AACD,OAHH,EAIGW,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAOD,KARM,CAAP;AASD,GAVD;;AAYA;;;;;AAKAoN,UAAQI,WAAR,GAAsB,YAAM;AAC1B,WAAO5O,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAaT,GAAb,0BACGU,IADH,CACQ,UAACgF,QAAD,EAAc;AAClBnF,gBAAQmF,SAAS9E,IAAjB;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAOD,KATM,CAAP;AAUD,GAXD;;AAaA,SAAOoN,OAAP;AAED,CAxIkC,CAAnC;;;ACTA;;;;;;;;;AASA5P,IAAIiB,OAAJ,CAAY,qBAAZ,EAAmC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;AACxE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,0BAAnC;;AAEA,MAAIyO,UAAU,EAAd;;AAEA;;;;;;;;;;AAUAA,UAAQ5N,GAAR,GAAc,UAACyN,OAAD,EAAUD,MAAV,EAAkBrE,MAAlB,EAA0BvJ,IAA1B,EAAmC;AAC/C,WAAOb,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAa1B,GAAb,iBAA4ByO,OAA5B,gBAA8CD,MAA9C,gBAA+DrE,MAA/D,cAAgFvJ,IAAhF,EACGF,IADH,CACQ,UAACmO,MAAD,EAAY;AAChBtO,gBAAQsO,OAAOjO,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,eAAOoB,CAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAcA;;;;;;;;;;;AAWAgN,UAAQ/G,MAAR,GAAiB,UAAC4G,OAAD,EAAUD,MAAV,EAAkBrE,MAAlB,EAA0B0E,MAA1B,EAAkCjO,IAAlC,EAA2C;AAC1D,WAAOb,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMgI,MAAN,CAAgB9H,GAAhB,iBAA+ByO,OAA/B,gBAAiDD,MAAjD,gBAAkErE,MAAlE,gBAAmF0E,MAAnF,EAA6FjO,IAA7F,EACGF,IADH,CACQ,YAAM;AACVH;AACD,OAHH,EAIGW,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,eAAOoB,CAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAcA,SAAOgN,OAAP;AAED,CAxDkC,CAAnC;;;ACTA;;;;;;;;;AASAjQ,IAAIiB,OAAJ,CAAY,sBAAZ,EAAoC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;AACzE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,0BAAnC;;AAEA,MAAI2O,WAAW,EAAf;;AAEA;;;;;;;;;;AAUAA,WAASlC,GAAT,GAAe,UAAC6B,OAAD,EAAUD,MAAV,EAAkBrE,MAAlB,EAA0BzH,OAA1B,EAAsC;AACnD,WAAO3C,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAaT,GAAb,iBAA4ByO,OAA5B,gBAA8CD,MAA9C,gBAA+DrE,MAA/D,iBAAiFzH,OAAjF,EACGhC,IADH,CACQ,UAACgC,OAAD,EAAa;AACjBnC,gBAAQmC,OAAR;AACD,OAHH,EAIGxB,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,eAAOoB,CAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAcA;;;;;;;;;;;AAWAkN,WAAS1N,MAAT,GAAkB,UAACqN,OAAD,EAAUD,MAAV,EAAkBrE,MAAlB,EAA0BzH,OAA1B,EAAmC9B,IAAnC,EAA4C;AAC5D,WAAOb,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAa1B,GAAb,iBAA4ByO,OAA5B,gBAA8CD,MAA9C,gBAA+DrE,MAA/D,iBAAiFzH,OAAjF,EAA4F9B,IAA5F,EACGF,IADH,CACQ,UAACgF,QAAD,EAAc;AAClBnF,gBAAQmF,SAAS9E,IAAjB;AACD,OAHH,EAIGM,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,eAAOoB,CAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAcA,SAAOkN,QAAP;AAED,CAxDmC,CAApC;;;ACTA;;;;;;;AAOAnQ,IAAIiB,OAAJ,CAAY,uBAAZ,EAAqC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE1E,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAI4O,OAAO,EAAX;;AAGAA,OAAKC,MAAL,GAAc,UAACC,GAAD,EAAM9E,MAAN,EAAiB;;AAE7B,QAAI1F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,oBAAhD,EAAsEzJ,IAAtE,CACE,UAACqF,IAAD,EAAU;AACR;AACAtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAJH,EAKE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,oBAAhB;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AAED,GAhBD;;AAkBAkJ,OAAKnC,GAAL,GAAW,UAACqC,GAAD,EAAM9E,MAAN,EAAcpJ,KAAd,EAAwB;AACjC,WAAO;AACLK,cAAQ,gBAACR,IAAD,EAAU;AAChB,YAAI6D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,qBAAtC,GAA8DpJ,KAAxE,EAA+EH,IAA/E,EAAqFF,IAArF,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCzB,KAApC;AACA4D,mBAASjE,MAAT,CAAgB,kBAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD,OAfI;;AAiBL;;;;;;AAMAzB,cAAQ,gBAACxD,IAAD,EAAU;AAChB,YAAI6D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAMmB,IAAN,CAAWjB,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,qBAAjD,EAAwEvJ,IAAxE,EAA8EF,IAA9E,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCzB,KAApC;AACA4D,mBAASjE,MAAT,CAAgB,kBAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD;AArCI,KAAP;AAuCD,GAxCD;;AA0CA;AACAkJ,OAAKG,OAAL,GAAe,UAACD,GAAD,EAAM9E,MAAN,EAAc1H,IAAd,EAAuB;AACpC,QAAIgC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAaiP,GAAb,GAAmB,UAAnB,GAA+B9E,MAA/B,GAAuC,qBAAvC,GAA+D1H,IAAzE,EAA+E/B,IAA/E,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,0CAAhB,EAA4DK,KAA5D;AACD,KANH;;AASA,WAAO4D,SAASoB,OAAhB;AACD,GAbD;;AAeA;AACAkJ,OAAK3N,MAAL,GAAc,UAAC6N,GAAD,EAAME,IAAN,EAAe;AAC3B,QAAI1K,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA;AACD,GAJD;;AAMA;AACAqK,OAAK3K,MAAL,GAAc,UAAC6K,GAAD,EAAME,IAAN,EAAe,CAE5B,CAFD;;AAMA,SAAOJ,IAAP;AAED,CAnGoC,CAArC;;;ACPA;;;;;;;AAOApQ,IAAIiB,OAAJ,CAAY,qBAAZ,EAAmC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAExE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIiP,aAAa,EAAjB;;AAGA;;;;;;AAMAA,aAAW3O,GAAX,GAAiB,UAACuI,KAAD,EAAQmB,MAAR,EAAmB;;AAElC,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,kBAApD,EAAwEzJ,IAAxE,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACTL,eAAOK,KAAP;AACD,OANH;AAQD,KAXM,CAAP;AAYD,GAdD;;AAgBA;;;;;;;;AAQAuO,aAAWC,IAAX,GAAkB,UAACrG,KAAD,EAAQmB,MAAR,EAAgBL,IAAhB,EAAyB;AACzC,WAAO/J,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,mBAA1C,GAAgEL,IAA1E,EAAgF,EAAhF,EAAoFpJ,IAApF,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA;;;;;;;;AAQAiO,aAAWE,MAAX,GAAoB,UAACtG,KAAD,EAAQmB,MAAR,EAAgBL,IAAhB,EAAyB;AAC3C,WAAO/J,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,0BAA1C,GAAuEL,IAAjF,EAAuF,EAAvF,EAA2FpJ,IAA3F,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA,SAAOiO,UAAP;AAED,CA7EkC,CAAnC;;;ACPA;;;;;;;AAOAzQ,IAAIiB,OAAJ,CAAY,2BAAZ,EAAyC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE9E,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIoP,mBAAmB,EAAvB;;AAGA;;;;;;AAMAA,mBAAiB9O,GAAjB,GAAuB,UAACuI,KAAD,EAAQmB,MAAR,EAAmB;;AAExC,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,wBAApD,EAA8EzJ,IAA9E,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA,SAAO+O,gBAAP;AAED,CAhCwC,CAAzC;;;ACPA;;;;;;;AAOA5Q,IAAIiB,OAAJ,CAAY,gBAAZ,EAA8B,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEnE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIqP,MAAM,EAAV;;AAEAA,MAAI/O,GAAJ,GAAU,UAACwO,GAAD,EAAM9E,MAAN,EAAcgF,IAAd,EAAuB;AAC/B,WAAOpP,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA+B9E,MAA/B,GAAwC,cAAxC,GAAyDgF,IAAnE,EAAyEzO,IAAzE,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAXM,CAAP;AAaD,GAdD;;AAiBA,SAAOgP,GAAP;AAED,CAzB6B,CAA9B;;;ACPA;;;;;;;AAOA7Q,IAAIiB,OAAJ,CAAY,WAAZ,EAAyB,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE9D,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIsP,SAAS,EAAb;;AAGA;;;;;;AAMAA,SAAOhP,GAAP,GAAa,UAACuI,KAAD,EAAQmB,MAAR,EAAgBvF,GAAhB,EAAwB;;AAEnC,WAAO7E,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,kBAA1C,GAA+DvF,GAAzE,EAA8ElE,IAA9E,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA;;;;;AAKAiP,SAAOC,gBAAP,GAA0B,UAAC1G,KAAD,EAAQmB,MAAR,EAAmB;;AAE3C,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,gCAApD,EAAsFzJ,IAAtF,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACTL,eAAOK,MAAM8E,MAAb;AACD,OANH;AASD,KAZM,CAAP;AAcD,GAhBD;;AAkBA;;;;;;;;AAQA8J,SAAOE,eAAP,GAAyB,UAAC3G,KAAD,EAAQmB,MAAR,EAAmB;;AAE1C,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,wBAApD,EAA8EzJ,IAA9E,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACTL,eAAOK,MAAM8E,MAAb;AACD,OANH;AASD,KAZM,CAAP;AAcD,GAhBD;;AAkBA;;;;;AAKA8J,SAAOG,YAAP,GAAsB,UAAC5G,KAAD,EAAQmB,MAAR,EAAmB;;AAEvC,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,qBAApD,EAA2EzJ,IAA3E,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACTL,eAAOK,MAAM8E,MAAb;AACD,OANH;AASD,KAZM,CAAP;AAcD,GAhBD;;AAkBA,SAAO8J,MAAP;AAED,CAxGwB,CAAzB;;;ACPA;;;;;;;AAOA9Q,IAAIiB,OAAJ,CAAY,yBAAZ,EAAuC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE5E,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAA7B;;AAEA,MAAIoO,UAAU,EAAd;;AAGA;;;;;;;AAOAA,UAAQlO,GAAR,GAAc,YAAe;AAAA,QAAdC,MAAc,uEAAP,EAAO;;AAC3B,WAAOP,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B,UAAIiH,OAAO;AACTnH,gBAAQA;AADC,OAAX;;AAIA;AACAR,YAAMW,GAAN,CAAUT,MAAM,UAAhB,EAA4ByH,IAA5B,EAAkC/G,IAAlC,CACE,UAACgO,OAAD,EAAa;AACXnO,gBAAQmO,QAAQ9N,IAAhB;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OAPH;AAUD,KAjBM,CAAP;AAmBD,GApBD;;AAsBA;;;;;;;AAOA0N,UAAQ9N,GAAR,GAAc,UAAC0J,MAAD,EAAY;;AAExB,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,WAAN,GAAoBmK,MAA9B,EAAsCzJ,IAAtC,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA;;;;;;AAMA+N,UAAQnN,MAAR,GAAiB,UAAC+I,MAAD,EAAY;;AAE3B,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAU1B,MAAM,WAAN,GAAoBmK,OAAOpJ,KAArC,EAA4CoJ,MAA5C,EACGzJ,IADH,CAEI,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAJL,EAKI,UAACO,GAAD,EAAS;AACPX,eAAOK,KAAP;AACD,OAPL;AAUD,KAZM,CAAP;AAcD,GAhBD;;AAkBA;;;;;;;;;AASA0N,UAAQsB,QAAR,GAAmB,UAAC1F,MAAD,EAASP,IAAT,EAAeE,IAAf,EAAwB;AACzC,WAAO/J,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMmB,IAAN,CAAWjB,MAAM,WAAN,GAAoBmK,MAApB,GAA6B,OAAxC,EAAiD,EAACP,MAAMA,IAAP,EAAaE,MAAMA,IAAnB,EAAjD,EACGpJ,IADH,CAEI,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAJL,EAKI,UAACO,GAAD,EAAS;AACPX,eAAOK,KAAP;AACD,OAPL;AAUD,KAZM,CAAP;AAaD,GAdD;;AAgBA;;;;;;;;;AASA0N,UAAQuB,UAAR,GAAqB,UAAC3F,MAAD,EAASP,IAAT,EAAeE,IAAf,EAAwB;AAC3C,WAAO/J,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMgI,MAAN,CAAa9H,MAAM,WAAN,GAAoBmK,MAApB,GAA6B,OAA1C,EAAmD;AACjDvJ,cAAM,EAACgJ,MAAMA,IAAP,EAAaE,MAAMA,IAAnB,EAD2C;AAEjD5H,iBAAS;AACP,0BAAgB;AADT;AAFwC,OAAnD,EAMGxB,IANH,CAOI,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OATL,EAUI,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OAZL;AAeD,KAjBM,CAAP;AAkBD,GAnBD;;AAsBA;;;;AAIAoN,UAAQU,GAAR,GAAc,UAACA,GAAD,EAAS;AACrB,WAAO;AACL;;;;;;;AAOA5O,WAAK,eAAM;AACT,eAAON,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,gBAAMW,GAAN,CAAUT,MAAM,OAAN,GAAeiP,GAAf,GAAoB,UAA9B,EAA0CvO,IAA1C,CACE,UAACgO,OAAD,EAAa;AACXnO,oBAAQmO,QAAQ9N,IAAhB;AACD,WAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL,mBAAOK,KAAP;AACD,WAPH;AAUD,SAbM,CAAP;AAeD,OAxBI;;AA0BL;;;;;;;AAOAJ,WAAK,aAAC0J,MAAD,EAAY;;AAEf,eAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,gBAAMW,GAAN,CAAUT,MAAM,OAAN,GAAeiP,GAAf,GAAoB,WAApB,GAAkC9E,MAA5C,EAAoDzJ,IAApD,CACE,UAACC,MAAD,EAAY;AACVJ,oBAAQI,OAAOC,IAAf;AACD,WAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,WAPH;AASD,SAZM,CAAP;AAaD;;AAhDI,KAAP;AAmDD,GApDD;;AAsDA,SAAO+N,OAAP;AAED,CAxMsC,CAAvC;;;ACPA;;;;;;;AAOA5P,IAAIiB,OAAJ,CAAY,6BAAZ,EAA2C,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEhF,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAI4P,MAAM,EAAV;;AAGA;;;;;;AAMAA,MAAItP,GAAJ,GAAU,UAACuI,KAAD,EAAQmB,MAAR,EAAmB;AAC3B,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,kCAApD,EAAwFzJ,IAAxF,CACE,UAACC,MAAD,EAAY;AACV;AACAJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OARH;AAWD,KAdM,CAAP;AAgBD,GAjBD;;AAoBA;;;;;;;AAOAkP,MAAI3O,MAAJ,GAAa,UAAC4H,KAAD,EAAQmB,MAAR,EAAgB7F,OAAhB,EAA4B;;AAEvC,WAAOvE,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,kCAApD,EAAwF7F,OAAxF,EAAiG5D,IAAjG,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA;;;;;;;;AAQAuP,MAAIV,IAAJ,GAAW,UAACrG,KAAD,EAAQmB,MAAR,EAAgBL,IAAhB,EAAyB;;AAElC,WAAO/J,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,wCAA1C,GAAqFL,IAA/F,EAAqG,EAArG,EAAyGpJ,IAAzG,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAbD;;AAeA;;;;;;;;AAQA4O,MAAIC,UAAJ,GAAiB,UAAChH,KAAD,EAAQmB,MAAR,EAAgBL,IAAhB,EAAyB;;AAExC,WAAO/J,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,+CAA1C,GAA4FL,IAAtG,EAA4G,EAA5G,EAAgHpJ,IAAhH,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAbD;;AAeA,SAAO4O,GAAP;AAED,CAzG0C,CAA3C;;;ACPA;;;;;;;AAOApR,IAAIiB,OAAJ,CAAY,yCAAZ,EAAuD,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE5F,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAI8P,OAAO,EAAX;;AAEA;;;;;;AAMAA,OAAK5P,GAAL,GAAW,UAAC2I,KAAD,EAAQmB,MAAR,EAAmB;AAC5B,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,+CAApD,EAAqGzJ,IAArG,CACE,UAACC,MAAD,EAAY;;AAEVJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OARH;AAWD,KAdM,CAAP;AAgBD,GAjBD;;AAmBA;;;;;;;AAOAoP,OAAKlH,EAAL,GAAU,UAACC,KAAD,EAAQmB,MAAR,EAAgBpJ,KAAhB,EAA0B;;AAElC,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,gDAA1C,GAA6FpJ,KAAvG,EAA8GL,IAA9G,CACE,UAACC,MAAD,EAAY;;AAEVJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OARH;AAUD,KAbM,CAAP;AAcD,GAhBD;;AAkBA;;;;;;;AAOAyP,OAAK7O,MAAL,GAAc,UAAC4H,KAAD,EAAQmB,MAAR,EAAgBpJ,KAAhB,EAAuBmP,GAAvB,EAA+B;;AAE3C,WAAOnQ,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACA,UAAG2P,KAAKpP,KAAL,MAAgBqB,SAAnB,EAA8B,OAAO7B,QAAQ4P,KAAKpP,KAAL,CAAR,CAAP;;AAE9B;AACAjB,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,gDAA1C,GAA6FpJ,KAAvG,EAA8GmP,GAA9G,EAAmHxP,IAAnH,CACE,UAACC,MAAD,EAAY;;AAEVJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OARH;AAUD,KAhBM,CAAP;AAiBD,GAnBD;;AAqBA;;;;;;;AAOAyP,OAAK7L,MAAL,GAAc,UAAC4E,KAAD,EAAQmB,MAAR,EAAgBzG,UAAhB,EAA+B;;AAE3C,WAAO3D,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMmB,IAAN,CAAWjB,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,gDAArD,EAAuGzG,UAAvG,EAAmHhD,IAAnH,CACE,UAACC,MAAD,EAAY;;AAEVJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OARH;AAUD,KAbM,CAAP;AAcD,GAhBD;;AAkBA;;;;;;;AAOAyP,OAAKpI,MAAL,GAAc,UAACmB,KAAD,EAAQmB,MAAR,EAAgBpJ,KAAhB,EAAuBuJ,OAAvB,EAAkD;AAAA,QAAlB8F,OAAkB,uEAAV,KAAU;;;AAE9D,WAAOrQ,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMgI,MAAN,CAAa9H,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,gDAA1C,GAA6FpJ,KAA7F,IAAuGqP,OAAD,GAAY,eAAZ,GAA8B,EAApI,CAAb,EAAsJ,EAACxP,MAAM,EAAC0J,SAASA,OAAV,EAAP,EAA2BpI,SAAS,EAAC,gBAAgB,kBAAjB,EAApC,EAAtJ,EAAiOxB,IAAjO,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQ,IAAR;AACD,OAHH,EAIE,UAACM,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA,SAAOyP,IAAP;AAED,CAvIsD,CAAvD;;;ACPA;;;;;;;AAOAtR,IAAIiB,OAAJ,CAAY,sCAAZ,EAAoD,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEzF,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIkQ,OAAO,EAAX;;AAGA;;;;;;AAMAA,OAAKhQ,GAAL,GAAW,UAAC2I,KAAD,EAAQmB,MAAR,EAAmB;AAC5B,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,2CAApD,EAAiGzJ,IAAjG,CACE,UAACC,MAAD,EAAY;AACV;;AAEAJ,gBAAQI,OAAOC,IAAf;AACD,OALH,EAME,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OATH;AAYD,KAfM,CAAP;AAiBD,GAlBD;;AAoBA;;;;;;;AAOAwP,OAAKtH,EAAL,GAAU,UAACC,KAAD,EAAQmB,MAAR,EAAgBpJ,KAAhB,EAA0B;;AAElC,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,4CAA1C,GAAyFpJ,KAAnG,EAA0GL,IAA1G,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA;;;;;;;AAOA6P,OAAKjP,MAAL,GAAc,UAAC4H,KAAD,EAAQmB,MAAR,EAAgBpJ,KAAhB,EAAuBN,GAAvB,EAA+B;;AAE3C,WAAOV,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,4CAA1C,GAAyFpJ,KAAnG,EAA0GN,GAA1G,EAA+GC,IAA/G,CACE,UAACC,MAAD,EAAY;;AAEVJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OARH;AAUD,KAbM,CAAP;AAcD,GAhBD;;AAkBA;;;;;;;AAOA6P,OAAKxI,MAAL,GAAc,UAACmB,KAAD,EAAQmB,MAAR,EAAgBpJ,KAAhB,EAA0B;;AAEtC,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMgI,MAAN,CAAa9H,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,4CAA1C,GAAyFpJ,KAAtG,EAA6GL,IAA7G,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQ,IAAR;AACD,OAHH,EAIE,UAACM,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA,SAAO6P,IAAP;AAED,CA5GmD,CAApD;;;ACPA;;;;;;;AAOA1R,IAAIiB,OAAJ,CAAY,uBAAZ,EAAqC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE1E,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAImQ,aAAa,EAAjB;;AAGA;;;;;;;AAOAA,aAAW7P,GAAX,GAAiB,UAACuI,KAAD,EAAQmB,MAAR,EAAmB;AAClC,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,4BAApD,EAAkFzJ,IAAlF,CACE,UAACC,MAAD,EAAY;AACV;AACAJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OARH;AAWD,KAdM,CAAP;AAgBD,GAjBD;;AAmBA,SAAOyP,UAAP;AAED,CAnCoC,CAArC;;;ACPA;;;;;;;AAOA3R,IAAIiB,OAAJ,CAAY,6BAAZ,EAA2C,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEhF,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIoQ,MAAM,EAAV;;AAGA;;;;;;AAMAA,MAAI9P,GAAJ,GAAU,UAACuI,KAAD,EAAQmB,MAAR,EAAmB;AAC3B,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,kCAApD,EAAwFzJ,IAAxF,CACE,UAACC,MAAD,EAAY;AACV;AACAJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OARH;AAWD,KAdM,CAAP;AAgBD,GAjBD;;AAoBA;;;;;;;AAOA0P,MAAInP,MAAJ,GAAa,UAAC4H,KAAD,EAAQmB,MAAR,EAAgB7F,OAAhB,EAA4B;;AAEvC,WAAOvE,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,mCAApD,EAAyF7F,OAAzF,EAAkG5D,IAAlG,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA,SAAO+P,GAAP;AAED,CA3D0C,CAA3C;;;ACPA;;;;;;;AAOA5R,IAAIiB,OAAJ,CAAY,6BAAZ,EAA2C,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEhF,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIqQ,MAAM,EAAV;;AAGA;;;;;;AAMAA,MAAI/P,GAAJ,GAAU,UAACuI,KAAD,EAAQmB,MAAR,EAAmB;AAC3B,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,kCAApD,EAAwFzJ,IAAxF,CACE,UAACC,MAAD,EAAY;AACV;AACAJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OARH;AAWD,KAdM,CAAP;AAgBD,GAjBD;;AAoBA;;;;;;;AAOA2P,MAAIpP,MAAJ,GAAa,UAAC4H,KAAD,EAAQmB,MAAR,EAAgB7F,OAAhB,EAA4B;;AAEvC,WAAOvE,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,kCAApD,EAAwF7F,OAAxF,EAAiG5D,IAAjG,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA,SAAOgQ,GAAP;AAED,CA3D0C,CAA3C;;;ACPA;;;;;;;AAOA7R,IAAIiB,OAAJ,CAAY,gCAAZ,EAA8C,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEnF,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIsQ,MAAM,EAAV;;AAGA;;;;AAIAA,MAAIhQ,GAAJ,GAAU,UAACuI,KAAD,EAAW;AACnB,WAAOjJ,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,qBAA9B,EAAqDtI,IAArD,CACE,UAACC,MAAD,EAAY;AACV;;AAEAJ,gBAAQI,OAAOC,IAAf;AACD,OALH,EAME,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OATH;AAYD,KAfM,CAAP;AAiBD,GAlBD;;AAoBA4P,MAAIrP,MAAJ,GAAa,UAAC4H,KAAD,EAAQ0H,EAAR,EAAe;;AAE1B,WAAO3Q,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,qBAA9B,EAAqD0H,EAArD,EAAyDhQ,IAAzD,CACE,UAACC,MAAD,EAAY;AACV;AACAJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACTL,eAAOK,KAAP;AACD,OAPH;AAUD,KAZM,CAAP;AAcD,GAhBD;;AAkBA,SAAO4P,GAAP;AAED,CAnD6C,CAA9C;;;ACPA;;;;;;;AAOA9R,IAAIiB,OAAJ,CAAY,yBAAZ,EAAuC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE5E,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIwQ,MAAM,EAAV;;AAEA;;;;;;;;AAQAA,MAAItQ,GAAJ,GAAU,UAAC2I,KAAD,EAAQmB,MAAR,EAAmB;AAC3B,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,8BAApD,EAAoFzJ,IAApF,CACE,UAACC,MAAD,EAAY;;AAEVJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OARH;AAWD,KAdM,CAAP;AAgBD,GAjBD;;AAmBA;;;;;;;AAOA8P,MAAI5H,EAAJ,GAAS,UAACC,KAAD,EAAQmB,MAAR,EAAgBpJ,KAAhB,EAA0B;;AAEjC,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,+BAA1C,GAA4EpJ,KAAtF,EAA6FL,IAA7F,CACE,UAACC,MAAD,EAAY;;AAEVJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OARH;AAUD,KAbM,CAAP;AAcD,GAhBD;;AAkBA;;;;;;;AAOAmQ,MAAIvP,MAAJ,GAAa,UAAC4H,KAAD,EAAQmB,MAAR,EAAgBpJ,KAAhB,EAAuBmP,GAAvB,EAA+B;;AAE1C,WAAOnQ,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACA,UAAG2P,KAAKpP,KAAL,MAAgBqB,SAAnB,EAA8B,OAAO7B,QAAQ4P,KAAKpP,KAAL,CAAR,CAAP;;AAE9B;AACAjB,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,+BAA1C,GAA4EpJ,KAAtF,EAA6FmP,GAA7F,EAAkGxP,IAAlG,CACE,UAACC,MAAD,EAAY;;AAEVJ,gBAAQI,OAAOC,IAAf;AACD,OAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OARH;AAUD,KAhBM,CAAP;AAiBD,GAnBD;;AAqBA;;;;;;;AAOAmQ,MAAI9I,MAAJ,GAAa,UAACmB,KAAD,EAAQmB,MAAR,EAAgBpJ,KAAhB,EAA0B;;AAErC,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMgI,MAAN,CAAa9H,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,+BAA1C,GAA4EpJ,KAAzF,EAAgGL,IAAhG,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQ,IAAR;AACD,OAHH,EAIE,UAACM,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA,SAAOmQ,GAAP;AAED,CAhHsC,CAAvC;;;ACPA;;;;;;;AAOAhS,IAAIiB,OAAJ,CAAY,4BAAZ,EAA0C,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE/E,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIyQ,MAAM,EAAV;;AAGA;;;;;AAKAA,MAAInQ,GAAJ,GAAU,UAACuI,KAAD,EAAQmB,MAAR,EAAmB;AAC3B,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,iCAApD,EAAuFzJ,IAAvF,CACE,UAACC,MAAD,EAAY;AACV;;AAEAJ,gBAAQI,OAAOC,IAAf;AACD,OALH,EAME,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OATH;AAYD,KAfM,CAAP;AAiBD,GAlBD;;AAqBA;;;;;;AAMA+P,MAAIxP,MAAJ,GAAa,UAAC4H,KAAD,EAAQmB,MAAR,EAAgB5I,QAAhB,EAA6B;;AAExC,WAAOxB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,kCAApD,EAAwF5I,QAAxF,EAAkGb,IAAlG,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA,SAAOoQ,GAAP;AAED,CA1DyC,CAA1C;;;ACPA;;;;;;;AAOAjS,IAAIiB,OAAJ,CAAY,2BAAZ,EAAyC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE9E,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAI0Q,MAAM,EAAV;;AAGA;;;;;;AAMAA,MAAIpQ,GAAJ,GAAU,UAACuI,KAAD,EAAQmB,MAAR,EAAmB;AAC3B,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,gCAApD,EAAsFzJ,IAAtF,CACE,UAACC,MAAD,EAAY;AACV;;AAEAJ,gBAAQI,OAAOC,IAAf;AACD,OALH,EAME,UAACC,KAAD,EAAW;AACT;AACAL,eAAOK,KAAP;AACD,OATH;AAYD,KAfM,CAAP;AAiBD,GAlBD;;AAqBA;;;;;;AAMAgQ,MAAIzP,MAAJ,GAAa,UAAC4H,KAAD,EAAQmB,MAAR,EAAgB5I,QAAhB,EAA6B;;AAExC,WAAOxB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,iCAApD,EAAuF5I,QAAvF,EAAiGb,IAAjG,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA,SAAOqQ,GAAP;AAED,CA3DwC,CAAzC;;;ACPA;;;;;;;;AAQAlS,IAAIiB,OAAJ,CAAY,yBAAZ,EAAuC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;AAC5E,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,WAAnC;;AAEA,MAAI2Q,cAAc,EAAlB;;AAGA;;;;;AAKAA,cAAYzQ,GAAZ,GAAkB,YAAiB;AAAA,QAAhBC,MAAgB,uEAAT,IAAS;;AACjC,WAAOP,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAUT,MAAM,aAAhB,EAA+B,EAACM,QAAQA,MAAT,EAA/B,EAAiDI,IAAjD,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAgBA;;;;;;AAMA2P,cAAY1M,MAAZ,GAAqB,UAAC2M,UAAD,EAAgB;AACnC,WAAOhR,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMmB,IAAN,CAAWjB,MAAM,aAAjB,EAAgC+Q,UAAhC,EAA4CrQ,IAA5C,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA;;;;;;;AAOA2P,cAAYjE,QAAZ,GAAuB,UAAC9L,KAAD,EAAW;AAChC,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAUT,MAAM,cAAN,GAAuBe,KAAjC,EAAwCL,IAAxC,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAgBA;;;;;;;;AAQA2P,cAAY1P,MAAZ,GAAqB,UAACL,KAAD,EAAQgQ,UAAR,EAAuB;AAC1C,WAAOhR,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAU1B,MAAM,cAAN,GAAuBe,KAAjC,EAAwCgQ,UAAxC,EAAoDrQ,IAApD,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA;;;;;;;AAOA2P,cAAYjJ,MAAZ,GAAqB,UAAC9G,KAAD,EAAW;AAC9B,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMgI,MAAN,CAAa9H,MAAM,cAAN,GAAuBe,KAApC,EAA2CL,IAA3C,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAgBA;;;;;AAKA2P,cAAYE,QAAZ,GAAuB,UAACjQ,KAAD,EAAW;AAChC,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAUT,MAAM,cAAN,GAAuBe,KAAvB,GAA+B,WAAzC,EAAsDL,IAAtD,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA,SAAO2P,WAAP;AAED,CA3IsC,CAAvC;;;ACRA;;;;;;;;AAQAnS,IAAIiB,OAAJ,CAAY,mBAAZ,EAAiC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;AACtE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,gBAAnC;;AAEA,MAAI8Q,QAAQ,EAAZ;;AAGA;;;;;AAKAA,QAAM5Q,GAAN,GAAY,YAAiB;AAAA,QAAhBC,MAAgB,uEAAT,IAAS;;AAC3B,WAAOP,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAUT,GAAV,EAAe,EAACM,QAAQA,MAAT,EAAf,EACGI,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAOD,KATM,CAAP;AAUD,GAXD;;AAcA;;;;;;;AAOA8P,QAAM7M,MAAN,GAAe,UAAC8M,IAAD,EAAU;AACvB,WAAOnR,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMmB,IAAN,CAAWjB,GAAX,EAAgBkR,IAAhB,EACGxQ,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAcA;;;;;;;AAOA8P,QAAMpE,QAAN,GAAiB,UAAC9L,KAAD,EAAW;AAC1B,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAaT,GAAb,SAAoBe,KAApB,EACGL,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAeA;;;;;;;;AAQA8P,QAAM7P,MAAN,GAAe,UAACL,KAAD,EAAQmQ,IAAR,EAAiB;AAC9B,WAAOnR,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAa1B,GAAb,SAAoBe,KAApB,EAA6BmQ,IAA7B,EACGxQ,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAZD;;AAcA;;;;;;;AAOA8P,QAAMpJ,MAAN,GAAe,UAAC9G,KAAD,EAAW;AACxB,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMgI,MAAN,CAAgB9H,GAAhB,SAAuBe,KAAvB,EACGL,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,eAAOW,GAAP;AACD,OANH;AAOD,KATM,CAAP;AAUD,GAXD;;AAaA,SAAO8P,KAAP;AAED,CAhHgC,CAAjC;;;ACRA;;;;;;;;AAQAtS,IAAIiB,OAAJ,CAAY,oBAAZ,EAAkC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;AACvE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,WAAnC;;AAEA,MAAIgR,SAAS,EAAb;;AAEA;;;;;AAKAA,SAAO9Q,GAAP,GAAa,YAAe;AAAA,QAAdC,MAAc,uEAAP,EAAO;;AAC1B,WAAOP,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAUT,MAAM,GAAhB,EAAqB,EAACM,QAAQA,MAAT,EAArB,EAAuCI,IAAvC,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA;;;;;;AAMAgQ,SAAOC,QAAP,GAAkB,YAAe;AAAA,QAAd9Q,MAAc,uEAAP,EAAO;;AAC/B,WAAOP,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAUT,MAAM,QAAhB,EAA0B,EAACM,QAAQA,MAAT,EAA1B,EAA4CI,IAA5C,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA;;;;;;;AAOAgQ,SAAOE,QAAP,GAAkB,UAACtQ,KAAD,EAAW;;AAE3B,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,YAAMW,GAAN,CAAUT,MAAM,SAAN,GAAkBe,KAA5B,EAAmCL,IAAnC,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AAQD,KATM,CAAP;AAUD,GAZD;;AAcA;;;;;;;;AAQAgQ,SAAO/P,MAAP,GAAgB,UAACL,KAAD,EAAQuN,KAAR,EAAkB;;AAEhC,WAAOvO,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAU1B,MAAM,SAAN,GAAkBe,KAA5B,EAAmCuN,KAAnC,EAA0C5N,IAA1C,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAbD;;AAeA,SAAOgQ,MAAP;AAED,CA5FiC,CAAlC;;;ACRA;;;;;;;;AAQAxS,IAAIiB,OAAJ,CAAY,mBAAZ,EAAiC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;AACtE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,gBAAnC;;AAEA,MAAImR,QAAQ,EAAZ;;AAEA;;;;;;;AAOAA,QAAMC,UAAN,GAAmB,UAACxQ,KAAD,EAAW;AAC5B,WAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYe,KAAtB,EAA6BL,IAA7B,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA;;;;;;;;;;AAUAmQ,QAAME,cAAN,GAAuB,UAACxI,KAAD,EAAQzH,QAAR,EAAkB+M,KAAlB,EAAyBmD,IAAzB,EAAkC;;AAEvD,WAAO1R,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,GAApB,GAA0BzH,QAA1B,GAAqC,GAArC,GAA2C+M,KAA3C,GAAmD,GAAnD,GAAyDmD,IAAnE,EAAyE/Q,IAAzE,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAdD;;AAgBA;;;;;;;;;;;AAWAmQ,QAAMI,WAAN,GAAoB,UAAC1I,KAAD,EAAQzH,QAAR,EAAkB+M,KAAlB,EAAyBmD,IAAzB,EAA+BE,OAA/B,EAA2C;;AAE7D,WAAO5R,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM8R,KAAN,CAAY5R,MAAM,WAAN,GAAoBgJ,KAApB,GAA4B,GAA5B,GAAkCzH,QAAlC,GAA6C,GAA7C,GAAmD+M,KAAnD,GAA2D,GAA3D,GAAiEmD,IAA7E,EAAmF,EAACE,SAASA,OAAV,EAAnF,EAAuGjR,IAAvG,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAbD;;AAgBA;;;;;;;AAOAmQ,QAAMlQ,MAAN,GAAe,UAACqQ,IAAD,EAAU;AACvB,WAAO1R,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYyR,KAAK1Q,KAA3B,EAAkC0Q,IAAlC,EAAwC/Q,IAAxC,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAgBA;;;;;;;;AAQAmQ,QAAMO,gBAAN,GAAyB,UAACJ,IAAD,EAAOE,OAAP,EAAmB;;AAE1C,WAAO5R,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM8R,KAAN,CAAY5R,MAAM,WAAN,GAAoByR,IAAhC,EAAsC,EAACE,SAASA,OAAV,EAAtC,EAA0DjR,IAA1D,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AAQD,KAVM,CAAP;AAWD,GAbD;;AAgBA;;;;;;;AAOAmQ,QAAMQ,aAAN,GAAsB,UAACL,IAAD,EAAOM,OAAP,EAAmB;;AAEvC,WAAOhS,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMgI,MAAN,CAAa9H,MAAM,WAAN,GAAoByR,IAApB,GAA2B,GAA3B,GAAiCM,OAA9C,EAAuDrR,IAAvD,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAdD;;AAgBA;;;;;;;AAOAmQ,QAAMU,UAAN,GAAmB,UAACP,IAAD,EAAO7H,IAAP,EAAgB;;AAEjC,WAAO7J,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,YAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYyR,IAAZ,GAAmB,YAAnB,GAAkC7H,IAA5C,EAAkDlJ,IAAlD,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AAQD,KATM,CAAP;AAUD,GAZD;;AAcA,SAAOmQ,KAAP;AAED,CA7KgC,CAAjC;;;ACRA;;;;;;;;;AAUA3S,IAAIiB,OAAJ,CAAY,8BAAZ,EAA4C,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;AACjF,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,2BAAnC;;AAEA,MAAI8R,YAAY,EAAhB;;AAEA;;;;;;;AAOAA,YAAUC,WAAV,GAAwB,UAACnB,UAAD,EAAgB;AACtC,WAAOhR,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMW,GAAN,CAAUT,MAAM,cAAN,GAAuB+Q,UAAjC,EAA6CrQ,IAA7C,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA;;;;;;;;AAQA8Q,YAAU7N,MAAV,GAAmB,UAAC2M,UAAD,EAAaoB,QAAb,EAA0B;AAC3C,WAAOpS,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMmB,IAAN,CAAWjB,MAAM,cAAN,GAAuB+Q,UAAlC,EAA8CoB,QAA9C,EACGzR,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdkB,gBAAQC,GAAR,CAAY,sCAAZ,EAAoDnB,GAApD;AACAX,eAAOW,GAAP;AACD,OAPH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA;;;;;;;;AAQA8Q,YAAU7Q,MAAV,GAAmB,UAAC2P,UAAD,EAAaoB,QAAb,EAA0B;AAC3C,WAAOpS,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAM4B,GAAN,CAAU1B,MAAM,cAAN,GAAuB+Q,UAAvB,GAAoC,YAApC,GAAmDoB,SAASpR,KAAtE,EAA6EoR,QAA7E,EACGzR,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIGM,KAJH,CAIS,UAACC,GAAD,EAAS;AACdkB,gBAAQC,GAAR,CAAY,kCAAZ,EAAgDnB,GAAhD;AACAX,eAAOW,GAAP;AACD,OAPH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA;;;;;;;;AAQA8Q,YAAUpK,MAAV,GAAmB,UAACkJ,UAAD,EAAaoB,QAAb,EAA0B;AAC3C,WAAOpS,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMgI,MAAN,CAAa9H,MAAM,cAAN,GAAuB+Q,UAAvB,GAAoC,YAApC,GAAmDoB,QAAhE,EACGzR,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,gBAAQ,IAAR;AACD,OAHH,EAIGW,KAJH,CAIS,UAACC,GAAD,EAAS;AACdkB,gBAAQC,GAAR,CAAY,sCAAZ,EAAoDnB,GAApD;AACAX,eAAOW,GAAP;AACD,OAPH;AASD,KAXM,CAAP;AAYD,GAbD;;AAeA,SAAO8Q,SAAP;AAED,CAlG2C,CAA5C;;;ACVA;;;;;;;;AAQAtT,IAAIiB,OAAJ,CAAY,cAAZ,EAA4B,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;AACjE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,WAAnC;;AAEA,MAAIiS,YAAY,EAAhB;;AAEA;;;;;;;AAOAA,YAAUzG,IAAV,GAAiB,UAAC0G,KAAD,EAAW;AAC1B,WAAOtS,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,YAAMmB,IAAN,CAAWjB,MAAM,GAAjB,EAAsBqS,KAAtB,EAA6B3R,IAA7B,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACO,GAAD,EAAS;AACPX,eAAOW,GAAP;AACD,OANH;AASD,KAXM,CAAP;AAYD,GAbD;AAcA,SAAOiR,SAAP;AAED,CA5B2B,CAA5B;;;ACRA;;;;;;;AAOAzT,IAAIiB,OAAJ,CAAY,gBAAZ,EAA8B,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEnE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAImS,cAAc,EAAlB;;AAGA;;;;;;AAMAA,cAAYC,IAAZ,GAAmB,UAACvJ,KAAD,EAAQmB,MAAR,EAAmB;;AAEpC,WAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAV,YAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYgJ,KAAZ,GAAoB,UAApB,GAAiCmB,MAAjC,GAA0C,0BAApD,EAAgFzJ,IAAhF,CACE,UAACC,MAAD,EAAY;AACVJ,gBAAQI,OAAOC,IAAf;AACD,OAHH,EAIE,UAACC,KAAD,EAAW;AACT;AACAL;AACD,OAPH;AASD,KAZM,CAAP;AAaD,GAfD;;AAiBA,SAAO8R,WAAP;AAED,CAhC6B,CAA9B;;;ACPA;;;;;;;AAOA3T,IAAIiB,OAAJ,CAAY,4BAAZ,EAA0C,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE/E,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIqS,OAAO,EAAX;;AAGAA,OAAKnS,GAAL,GAAW,UAAC4O,GAAD,EAAM9E,MAAN,EAAiB;;AAE1B,QAAI1F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,iCAAhD,EAAmFzJ,IAAnF,CACE,UAACqF,IAAD,EAAU;AACR;AACAtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAJH,EAKE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,oBAAhB;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AAED,GAhBD;;AAkBA2M,OAAK5F,GAAL,GAAW,UAACqC,GAAD,EAAM9E,MAAN,EAAcpJ,KAAd,EAAwB;AACjC,WAAO;AACLK,cAAQ,gBAACR,IAAD,EAAU;AAChB,YAAI6D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,kCAAtC,GAA2EpJ,KAArF,EAA4FH,IAA5F,EAAkGF,IAAlG,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCzB,KAApC;AACA4D,mBAASjE,MAAT,CAAgB,kBAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD;AAfI,KAAP;AAiBD,GAlBD;;AAoBA;AACA2M,OAAKtD,OAAL,GAAe,UAACD,GAAD,EAAM9E,MAAN,EAAc1H,IAAd,EAAuB;AACpC,QAAIgC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAaiP,GAAb,GAAmB,UAAnB,GAA+B9E,MAA/B,GAAuC,kCAAvC,GAA4E1H,IAAtF,EAA4F/B,IAA5F,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,sCAAhB,EAAwDK,KAAxD;AACD,KANH;;AASA,WAAO4D,SAASoB,OAAhB;AACD,GAbD;;AAeA,SAAO2M,IAAP;AAED,CA/DyC,CAA1C;;;ACPA;;;;;;;AAOA7T,IAAIiB,OAAJ,CAAY,mCAAZ,EAAiD,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEtF,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIsS,cAAc,EAAlB;;AAGAA,cAAYpS,GAAZ,GAAkB,UAAC4O,GAAD,EAAM9E,MAAN,EAAiB;;AAEjC,QAAI1F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,wCAAhD,EAA0FzJ,IAA1F,CACE,UAACqF,IAAD,EAAU;AACR;AACAtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAJH,EAKE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,oBAAhB;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AAED,GAhBD;;AAkBA4M,cAAY7F,GAAZ,GAAkB,UAACqC,GAAD,EAAM9E,MAAN,EAAcpJ,KAAd,EAAwB;AACxC,WAAO;AACLK,cAAQ,gBAACR,IAAD,EAAU;AAChB,YAAI6D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,yCAAtC,GAAkFpJ,KAA5F,EAAmGH,IAAnG,EAAyGF,IAAzG,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCzB,KAApC;AACA4D,mBAASjE,MAAT,CAAgB,kBAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD;AAfI,KAAP;AAiBD,GAlBD;;AAoBA;AACA4M,cAAYvD,OAAZ,GAAsB,UAACD,GAAD,EAAM9E,MAAN,EAAc1H,IAAd,EAAuB;AAC3C,QAAIgC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAaiP,GAAb,GAAmB,UAAnB,GAA+B9E,MAA/B,GAAuC,yCAAvC,GAAmF1H,IAA7F,EAAmG/B,IAAnG,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,0CAAhB,EAA4DK,KAA5D;AACD,KANH;;AASA,WAAO4D,SAASoB,OAAhB;AACD,GAbD;;AAeA,SAAO4M,WAAP;AAED,CA/DgD,CAAjD;;;ACPA;;;;;;;AAOA9T,IAAIiB,OAAJ,CAAY,gCAAZ,EAA8C,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEnF,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIuS,WAAW,EAAf;;AAGAA,WAASrS,GAAT,GAAe,UAAC4O,GAAD,EAAM9E,MAAN,EAAiB;;AAE9B,QAAI1F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,qCAAhD,EAAuFzJ,IAAvF,CACE,UAACqF,IAAD,EAAU;AACR;AACAtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAJH,EAKE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,oBAAhB;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AAED,GAhBD;;AAkBA6M,WAAS9F,GAAT,GAAe,UAACqC,GAAD,EAAM9E,MAAN,EAAcpJ,KAAd,EAAwB;AACrC,WAAO;AACLK,cAAQ,gBAACR,IAAD,EAAU;AAChB,YAAI6D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,sCAAtC,GAA+EpJ,KAAzF,EAAgGH,IAAhG,EAAsGF,IAAtG,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCzB,KAApC;AACA4D,mBAASjE,MAAT,CAAgB,kBAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD;AAfI,KAAP;AAiBD,GAlBD;;AAoBA;AACA6M,WAASxD,OAAT,GAAmB,UAACD,GAAD,EAAM9E,MAAN,EAAc1H,IAAd,EAAuB;AACxC,QAAIgC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAaiP,GAAb,GAAmB,UAAnB,GAA+B9E,MAA/B,GAAuC,sCAAvC,GAAgF1H,IAA1F,EAAgG/B,IAAhG,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,0CAAhB,EAA4DK,KAA5D;AACD,KANH;;AASA,WAAO4D,SAASoB,OAAhB;AACD,GAbD;;AAeA,SAAO6M,QAAP;AAED,CA/D6C,CAA9C;;;ACPA;;;;;;;AAOA/T,IAAIiB,OAAJ,CAAY,gCAAZ,EAA8C,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAEnF,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIwS,WAAW,EAAf;;AAGAA,WAAStS,GAAT,GAAe,UAAC4O,GAAD,EAAM9E,MAAN,EAAiB;;AAE9B,QAAI1F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,qCAAhD,EAAuFzJ,IAAvF,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,oBAAhB;AACD,KANH;;AASA,WAAOiE,SAASoB,OAAhB;AAED,GAfD;;AAiBA8M,WAAS/F,GAAT,GAAe,UAACqC,GAAD,EAAM9E,MAAN,EAAcpJ,KAAd,EAAwB;AACrC,WAAO;AACLK,cAAQ,gBAACR,IAAD,EAAU;AAChB,YAAI6D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,sCAAtC,GAA+EpJ,KAAzF,EAAgGH,IAAhG,EAAsGF,IAAtG,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCzB,KAApC;AACA4D,mBAASjE,MAAT,CAAgB,kBAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD;AAfI,KAAP;AAiBD,GAlBD;;AAoBA;AACA8M,WAASzD,OAAT,GAAmB,UAACD,GAAD,EAAM9E,MAAN,EAAc1H,IAAd,EAAuB;AACxC,QAAIgC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAaiP,GAAb,GAAmB,UAAnB,GAA+B9E,MAA/B,GAAuC,sCAAvC,GAAgF1H,IAA1F,EAAgG/B,IAAhG,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,0CAAhB,EAA4DK,KAA5D;AACD,KANH;;AASA,WAAO4D,SAASoB,OAAhB;AACD,GAbD;;AAeA,SAAO8M,QAAP;AAED,CA9D6C,CAA9C;;;ACPA;;;;;;;AAOAhU,IAAIiB,OAAJ,CAAY,yCAAZ,EAAuD,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE5F,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAI4O,OAAO,EAAX;;AAGAA,OAAKC,MAAL,GAAc,UAACC,GAAD,EAAM9E,MAAN,EAAiB;;AAE7B,QAAI1F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,8CAAhD,EAAgGzJ,IAAhG,CACE,UAACqF,IAAD,EAAU;AACR;AACAtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAJH,EAKE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,oBAAhB;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AAED,GAhBD;;AAkBAkJ,OAAKnC,GAAL,GAAW,UAACqC,GAAD,EAAM9E,MAAN,EAAcpJ,KAAd,EAAwB;AACjC,WAAO;AACLK,cAAQ,gBAACR,IAAD,EAAU;AAChB,YAAI6D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,+CAAtC,GAAwFpJ,KAAlG,EAAyGH,IAAzG,EAA+GF,IAA/G,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCzB,KAApC;AACA4D,mBAASjE,MAAT,CAAgB,kBAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD,OAfI;;AAiBL;;;;;;AAMAzB,cAAQ,gBAACxD,IAAD,EAAU;AAChB,YAAI6D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAMmB,IAAN,CAAWjB,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,+CAAjD,EAAkGvJ,IAAlG,EAAwGF,IAAxG,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCzB,KAApC;AACA4D,mBAASjE,MAAT,CAAgB,kBAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD;AArCI,KAAP;AAuCD,GAxCD;;AA0CA;AACAkJ,OAAKG,OAAL,GAAe,UAACD,GAAD,EAAM9E,MAAN,EAAc1H,IAAd,EAAuB;AACpC,QAAIgC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAaiP,GAAb,GAAmB,UAAnB,GAA+B9E,MAA/B,GAAuC,+CAAvC,GAAyF1H,IAAnG,EAAyG/B,IAAzG,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,0CAAhB,EAA4DK,KAA5D;AACD,KANH;;AASA,WAAO4D,SAASoB,OAAhB;AACD,GAbD;;AAeA;AACAkJ,OAAK3N,MAAL,GAAc,UAAC6N,GAAD,EAAME,IAAN,EAAe;AAC3B,QAAI1K,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA;AACD,GAJD;;AAMA;AACAqK,OAAK3K,MAAL,GAAc,UAAC6K,GAAD,EAAME,IAAN,EAAe,CAE5B,CAFD;;AAMA,SAAOJ,IAAP;AAED,CAnGsD,CAAvD;;;ACPA;;;;;;;AAOApQ,IAAIiB,OAAJ,CAAY,qBAAZ,EAAmC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAExE,MAAI6S,WAAW,EAAf;;AAEA;AACA,MAAIC,OAAO;AACT,4BAAwB,aADf;AAET,2BAAuB,aAFd;AAGT,mBAAe,aAHN;AAIT,kBAAc,aAJL;AAKT,kBAAc,aALL;;AAOT,kBAAc,YAPL;AAQT,oBAAgB,YARP;AAST,mBAAe,YATN;;AAWT,kBAAc,YAXL;;AAaT,8BAA0B,YAbjB;AAcT,iBAAa,YAdJ;AAeT,wBAAoB,YAfX;AAgBT,wBAAoB,YAhBX;AAiBT,0BAAsB,YAjBb;AAkBT,2BAAuB,YAlBd;AAmBT,2BAAuB,YAnBd;AAoBT,wBAAoB,YApBX;AAqBT,iCAA6B,YArBpB;AAsBT,+BAA2B,YAtBlB;AAuBT,0BAAsB,YAvBb;AAwBT,iCAA6B,YAxBpB;AAyBT,yBAAqB,YAzBZ;AA0BT,gBAAY,YA1BH;AA2BT,kCAA8B,YA3BrB;AA4BT,yBAAqB,YA5BZ;AA6BT,wBAAoB,YA7BX;AA8BT,yBAAqB,YA9BZ;AA+BT,yBAAqB,YA/BZ;;AAiCT,qBAAiB,GAjCR;AAkCT,sBAAkB;AAlCT,GAAX;;AAqCA;AACAD,WAAS/P,WAAT,GAAuB,UAACiQ,KAAD,EAAW;AAChC,QAAG,EAAEA,SAASD,IAAX,CAAH,EAAqB,OAAO,KAAP;AACrB,WAAOA,KAAKC,KAAL,CAAP;AACD,GAHD;;AAKA,SAAOF,QAAP;AAED,CAlDkC,CAAnC;;;ACPA;;;;;;;AAOAjU,IAAIiB,OAAJ,CAAY,2CAAZ,EAAyD,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE9F,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAI4S,MAAM,EAAV;;AAGAA,MAAI/D,MAAJ,GAAa,UAACC,GAAD,EAAM9E,MAAN,EAAiB;;AAE5B,QAAI1F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,gDAAhD,EAAkGzJ,IAAlG,CACE,UAACqF,IAAD,EAAU;AACR;AACAtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAJH,EAKE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,oBAAhB;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AAED,GAhBD;;AAkBAkN,MAAInG,GAAJ,GAAU,UAACqC,GAAD,EAAM9E,MAAN,EAAcpJ,KAAd,EAAwB;AAChC,WAAO;;AAELN,WAAK,eAAM;AACT,YAAIgE,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,iDAAtC,GAA0FpJ,KAApG,EAA2GH,IAA3G,EAAiHF,IAAjH,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,yCAAZ,EAAuDzB,KAAvD;AACA4D,mBAASjE,MAAT,CAAgB,yCAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD,OAhBI;;AAkBLzE,cAAQ,gBAACR,IAAD,EAAU;AAChB,YAAI6D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,iDAAtC,GAA0FpJ,KAApG,EAA2GH,IAA3G,EAAiHF,IAAjH,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,YAAZ,EAA0BzB,KAA1B;AACA4D,mBAASjE,MAAT,CAAgB,kBAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD;AAhCI,KAAP;AAkCD,GAnCD;;AAqCA,SAAOkN,GAAP;AAED,CAhEwD,CAAzD;;;ACPA;;;;;;;AAOApU,IAAIiB,OAAJ,CAAY,kBAAZ,EAAgC,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAErE,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAI6S,gBAAgB,EAApB;;AAGA;AACAA,gBAAcC,UAAd,GAA2B;;AAEzB;;;;;;;;AAQA5S,SAAK,aAACoO,OAAD,EAAUtE,MAAV,EAAqB;AACxB,aAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,cAAMW,GAAN,CAAaT,GAAb,SAAoByO,OAApB,gBAAsCtE,MAAtC,uCACGzJ,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,kBAAQI,OAAOC,IAAf;AACD,SAHH,EAIGM,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,iBAAOoB,CAAP;AACD,SANH;AAOD,OARM,CAAP;AASD,KApBwB;;AAsBzB;;;;;;;;;AASAwC,YAAQ,gBAACqK,OAAD,EAAUtE,MAAV,EAAkBvJ,IAAlB,EAA2B;AACjC,aAAOb,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,cAAMmB,IAAN,CAAcjB,GAAd,SAAqByO,OAArB,gBAAuCtE,MAAvC,uCAAiFvJ,IAAjF,EACGF,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,kBAAQI,OAAOC,IAAf;AACD,SAHH,EAIGM,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,iBAAOoB,CAAP;AACD,SANH;AAQD,OAVM,CAAP;AAWD,KA3CwB;;AA6CzB;;;;;;;;;AASAnB,SAAK,aAACgO,OAAD,EAAUtE,MAAV,EAAkBpJ,KAAlB,EAA4B;AAC/B,aAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,cAAMW,GAAN,CAAaT,GAAb,SAAoByO,OAApB,gBAAsCtE,MAAtC,yCAAgFpJ,KAAhF,EACGL,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,kBAAQI,OAAOC,IAAf;AACD,SAHH,EAIGM,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,iBAAOoB,CAAP;AACD,SANH;AAQD,OAVM,CAAP;AAWD,KAlEwB;;AAoEzB;;;;;;;;;;AAUAR,YAAQ,gBAACqN,OAAD,EAAUtE,MAAV,EAAkBpJ,KAAlB,EAAyBH,IAAzB,EAAkC;AACxC,aAAOb,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,cAAM4B,GAAN,CAAa1B,GAAb,SAAoByO,OAApB,gBAAsCtE,MAAtC,yCAAgFpJ,KAAhF,EAAyFH,IAAzF,EACGF,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,kBAAQI,OAAOC,IAAf;AACD,SAHH,EAIGM,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,iBAAOoB,CAAP;AACD,SANH;AAQD,OAVM,CAAP;AAWD,KA1FwB;;AA4FzB;;;;;;;;;AASAiG,YAAQ,gBAAC4G,OAAD,EAAUtE,MAAV,EAAkBpJ,KAAlB,EAA4B;AAClC,aAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7BV,cAAMgI,MAAN,CAAgB9H,GAAhB,SAAuByO,OAAvB,gBAAyCtE,MAAzC,yCAAmFpJ,KAAnF,EACGL,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ;AACD,SAHH,EAIGW,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,iBAAOoB,CAAP;AACD,SANH;AAQD,OAVM,CAAP;AAWD;;AAjHwB,GAA3B;;AAqHA;AACAoR,gBAAcE,KAAd,GAAsB;;AAEpB;;;;;;;;AAQA7S,SAAK,aAACoO,OAAD,EAAUtE,MAAV,EAAqB;AACxB,aAAOpK,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,cAAMW,GAAN,CAAaT,GAAb,SAAoByO,OAApB,gBAAsCtE,MAAtC,kCACGzJ,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,kBAAQI,OAAOC,IAAf;AACD,SAHH,EAIGM,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,iBAAOoB,CAAP;AACD,SANH;AAQD,OATM,CAAP;AAUD,KArBmB;;AAuBpB;;;;;;;;;AASAnB,SAAK,aAACgO,OAAD,EAAUtE,MAAV,EAAkBpJ,KAAlB,EAA4B;AAC/B,aAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,cAAMW,GAAN,CAAaT,GAAb,SAAoByO,OAApB,gBAAsCtE,MAAtC,kCACGzJ,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,kBAAQ4S,OAAOvS,IAAf;AACD,SAHH,EAIGM,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,iBAAOoB,CAAP;AACD,SANH;AAQD,OATM,CAAP;AAUD,KA3CmB;;AA6CpB;;;;;;;;;AASAiG,YAAQ,gBAAC4G,OAAD,EAAUtE,MAAV,EAAkBpJ,KAAlB,EAA4B;AAClC,aAAOhB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BV,cAAMgI,MAAN,CAAgB9H,GAAhB,SAAuByO,OAAvB,gBAAyCtE,MAAzC,oCAA8EpJ,KAA9E,EACGL,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ;AACD,SAHH,EAIGW,KAJH,CAIS,UAACU,CAAD,EAAO;AACZpB,iBAAOoB,CAAP;AACD,SANH;AAQD,OATM,CAAP;AAUD;;AAjEmB,GAAtB;;AAuEA,SAAOoR,aAAP;AAED,CAvM+B,CAAhC;;;ACPA;;;;;;;AAOArU,IAAIiB,OAAJ,CAAY,wCAAZ,EAAsD,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE3F,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIiT,qBAAqB,EAAzB;;AAEAA,qBAAmB/S,GAAnB,GAAyB,UAAC4O,GAAD,EAAM9E,MAAN,EAAiB;;AAExC,QAAI1F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,6CAAhD,EAA+FzJ,IAA/F,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,cAAQC,GAAR,CAAYzB,KAAZ;AACA4D,eAASjE,MAAT,CAAgB,oBAAhB;AACD,KAPH;AASA,WAAOiE,SAASoB,OAAhB;AAED,GAfD;;AAiBA,SAAOuN,kBAAP;AACD,CAxBqD,CAAtD;;;ACPA;;;;;;;AAOAzU,IAAIiB,OAAJ,CAAY,qCAAZ,EAAmD,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAExF,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAIkT,kBAAkB,EAAtB;;AAGAA,kBAAgBhT,GAAhB,GAAsB,UAAC4O,GAAD,EAAM9E,MAAN,EAAiB;;AAErC,QAAI1F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,0CAAhD,EAA4FzJ,IAA5F,CACE,UAACqF,IAAD,EAAU;AACR;AACAtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAJH,EAKE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,oBAAhB;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AAED,GAhBD;;AAkBAwN,kBAAgBzG,GAAhB,GAAsB,UAACqC,GAAD,EAAM9E,MAAN,EAAcpJ,KAAd,EAAwB;AAC5C,WAAO;AACLK,cAAQ,gBAACR,IAAD,EAAU;AAChB,YAAI6D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA8B9E,MAA9B,GAAsC,2CAAtC,GAAoFpJ,KAA9F,EAAqGH,IAArG,EAA2GF,IAA3G,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCzB,KAApC;AACA4D,mBAASjE,MAAT,CAAgB,kBAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD;AAfI,KAAP;AAiBD,GAlBD;;AAoBA;AACAwN,kBAAgBnE,OAAhB,GAA0B,UAACD,GAAD,EAAM9E,MAAN,EAAc1H,IAAd,EAAuB;AAC/C,QAAIgC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAaiP,GAAb,GAAmB,UAAnB,GAA+B9E,MAA/B,GAAuC,2CAAvC,GAAqF1H,IAA/F,EAAqG/B,IAArG,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,0CAAhB,EAA4DK,KAA5D;AACD,KANH;;AASA,WAAO4D,SAASoB,OAAhB;AACD,GAbD;;AAeA,SAAOwN,eAAP;AAED,CA/DkD,CAAnD;;;ACPA;;;;;;;AAOA1U,IAAIiB,OAAJ,CAAY,4BAAZ,EAA0C,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,UAACC,CAAD,EAAIC,KAAJ,EAAWC,EAAX,EAAkB;;AAE/E,MAAMC,MAAMC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,MAAnC;;AAEA,MAAImT,MAAM,EAAV;;AAGAA,MAAIjT,GAAJ,GAAU,UAAC4O,GAAD,EAAM9E,MAAN,EAAiB;;AAEzB,QAAI1F,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA+B9E,MAA/B,GAAuC,iCAAjD,EAAoFzJ,IAApF,CACE,UAACqF,IAAD,EAAU;AACR;AACAtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAJH,EAKE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,oBAAhB;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AAED,GAhBD;;AAkBAyN,MAAI1G,GAAJ,GAAU,UAACqC,GAAD,EAAM9E,MAAN,EAAcpJ,KAAd,EAAwB;AAChC,WAAO;AACLK,cAAQ,gBAACR,IAAD,EAAU;AAChB,YAAI6D,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,cAAM4B,GAAN,CAAU1B,MAAM,GAAN,GAAYiP,GAAZ,GAAkB,UAAlB,GAA+B9E,MAA/B,GAAuC,kCAAvC,GAA4EpJ,KAAtF,EAA6FH,IAA7F,EAAmGF,IAAnG,CACE,UAACqF,IAAD,EAAU;AACRtB,mBAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,SAHH,EAIE,UAACC,KAAD,EAAW;AACTwB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCzB,KAApC;AACA4D,mBAASjE,MAAT,CAAgB,kBAAhB;AACD,SAPH;;AAUA,eAAOiE,SAASoB,OAAhB;AACD;AAfI,KAAP;AAiBD,GAlBD;;AAoBA;AACAyN,MAAIpE,OAAJ,GAAc,UAACD,GAAD,EAAM9E,MAAN,EAAc1H,IAAd,EAAuB;AACnC,QAAIgC,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA5E,UAAMW,GAAN,CAAUT,MAAM,GAAN,GAAaiP,GAAb,GAAmB,UAAnB,GAAgC9E,MAAhC,GAAwC,kCAAxC,GAA6E1H,IAAvF,EAA6F/B,IAA7F,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,KAAKnF,IAAtB;AACD,KAHH,EAIE,UAACC,KAAD,EAAW;AACT4D,eAASjE,MAAT,CAAgB,mDAAhB,EAAqEK,KAArE;AACD,KANH;;AASA,WAAO4D,SAASoB,OAAhB;AACD,GAbD;;AAeA,SAAOyN,GAAP;AAED,CA/DyC,CAA1C;;;ACPA3U,IAAImO,OAAJ,CAAY,MAAZ,EAAoB,CAAC,GAAD,EAAM,aAAN,EAAqB,UAArB,EAAiC,UAACjN,CAAD,EAAIqE,QAAJ,EAAcH,KAAd,EAAwB;;AAE3E,MAAI6F,aAAJ;;AAEA;AACA1F,WAASyH,IAAT,GACGjL,IADH,CACQqD,MAAMsH,EADd,EAEG3K,IAFH,CAEQ,UAAC6S,CAAD,EAAO;AACX3J,WAAO2J,CAAP;AACD,GAJH,EAKGrS,KALH,CAKS,UAACU,CAAD,EAAO;AACZS,YAAQC,GAAR,CAAY,wBAAZ,EAAsCV,CAAtC;AACD,GAPH;;AAUA,MAAM4R,UAAU;AACdrJ,YAAQ;AACNsJ,YAAM;AACJC,eAAO,CAAC,GAAD,CADH;AAEJlT,gBAAQ;AAFJ,OADA;AAKNmT,YAAM;AACJD,eAAO,CAAC,OAAD,EAAS,SAAT,EAAmB,kBAAnB,EAAsC,UAAtC,CADH;AAEJlT,gBAAQ,CAAC,WAAD;AAFJ,OALA;AASNqH,cAAQ;AACN6L,eAAO,CAAC,OAAD,CADD;AAENlT,gBAAQ;AAFF;AATF,KADM;AAedoT,cAAU;AACRH,YAAM;AACJC,eAAO,CAAC,GAAD,CADH;AAEJlT,gBAAQ,CAAC,WAAD;AAFJ,OADE;AAKRmT,YAAM;AACJD,eAAO,CAAC,UAAD,EAAa,OAAb,CADH;AAEJlT,gBAAQ,CAAC,WAAD;AAFJ,OALE;AASRqH,cAAQ;AACN6L,eAAO,CAAC,UAAD,EAAa,OAAb,CADD;AAENlT,gBAAQ;AAFF;AATA,KAfI;AA6BdqT,cAAU;AACRJ,YAAM;AACJC,eAAO,CAAC,GAAD,CADH;AAEJlT,gBAAQ,CAAC,WAAD;AAFJ,OADE;AAKRmT,YAAM;AACJD,eAAO,CAAC,GAAD,CADH;AAEJlT,gBAAQ,CAAC,WAAD;AAFJ,OALE;AASRqH,cAAQ;AACN6L,eAAO,CAAC,UAAD,EAAa,OAAb,CADD;AAENlT,gBAAQ;AAFF;AATA;AA7BI,GAAhB;;AA6CA,MAAMsT,YAAY;AAChB3J,YAAQ;AACNuJ,aAAO,CAAC,GAAD,CADD;AAENlT,cAAQ;AAFF,KADQ;AAKhBwC,mBAAe;AACb0Q,aAAO,CAAC,GAAD,CADM;AAEblT,cAAQ,CAAC,WAAD;AAFK,KALC;AAShBuT,cAAU;AACRL,aAAO,CAAC,GAAD,CADC;AAERlT,cAAQ,CAAC,WAAD;AAFA,KATM;AAahBoT,cAAU;AACRF,aAAO,CAAC,GAAD,CADC;AAERlT,cAAQ,CAAC,WAAD;AAFA,KAbM;AAiBhBqT,cAAU;AACRH,aAAO,CAAC,GAAD,CADC;AAERlT,cAAQ,CAAC,WAAD;AAFA;AAjBM,GAAlB;;AAuBA,SAAO;;AAEL;;;;;;;;AAQAwT,cAAU,kBAACC,CAAD,EAAe;AAAA,UAAXV,CAAW,uEAAT,IAAS;;AACvB,UAAIW,aAAa,KAAjB;AACA,UAAIF,iBAAJ;;AAEA,UAAGT,CAAH,EAAM3J,OAAO2J,CAAP,CAJiB,CAIP;;AAEhB,UAAI;AACFS,mBAAWF,UAAUG,CAAV,CAAX;AACD,OAFD,CAGA,OAAMrS,CAAN,EAAS;AACPS,gBAAQC,GAAR,CAAY,2BAAZ,EAAyC2R,CAAzC;AACA,eAAO,KAAP;AACD;;AAED;AACA,UAAIE,SAAStU,EAAEuU,YAAF,CAAeJ,SAASN,KAAxB,EAA+B7T,EAAE8D,GAAF,CAAM9D,EAAEwU,SAAF,CAAYzK,KAAKsD,MAAjB,EAAyB,UAAC+G,CAAD,EAAO;AAAE,eAAO,EAACnP,MAAMmP,EAAEnP,IAAF,CAAOxB,WAAP,EAAP,EAAP;AAAoC,OAAtE,CAAN,EAA+E,MAA/E,CAA/B,CAAb;AACA,UAAG0Q,SAASN,KAAT,CAAehU,OAAf,CAAuB,GAAvB,IAA8B,CAAC,CAAlC,EAAqCwU,aAAa,IAAb;AACrC,UAAGC,UAAUA,OAAO7G,MAAP,GAAgB,CAA7B,EAAgC4G,aAAa,IAAb;;AAGhC;AACA,UAAII,UAAUzU,EAAEuU,YAAF,CAAeJ,SAASxT,MAAxB,EAAgCX,EAAE8D,GAAF,CAAM9D,EAAEwU,SAAF,CAAYzK,KAAKsD,MAAjB,EAAyB,UAAC+G,CAAD,EAAO;AAAE,eAAO,EAACnP,MAAMmP,EAAEnP,IAAF,CAAOxB,WAAP,EAAP,EAAP;AAAoC,OAAtE,CAAN,EAA+E,MAA/E,CAAhC,CAAd;AACA,UAAG0Q,SAASxT,MAAT,CAAgBd,OAAhB,CAAwB,GAAxB,IAA+B,CAAC,CAAnC,EAAsCwU,aAAa,KAAb,CAtBf,CAsBmC;AAC1D,UAAGI,WAAWA,QAAQhH,MAAR,GAAiB,CAA/B,EAAkC4G,aAAa,KAAb;;AAElC,aAAOA,UAAP;AACD,KApCI;;AAsCL;;;;;;;;;;AAUAK,YAAQ,gBAACC,CAAD,EAAe;AAAA,UAAXjB,CAAW,uEAAT,IAAS;;AACrB,UAAIW,aAAa,KAAjB;AACA,UAAIK,eAAJ;;AAEA,UAAGhB,CAAH,EAAM3J,OAAO2J,CAAP;;AAEN,UAAI;AACFgB,iBAAS1U,EAAEY,GAAF,CAAM+S,OAAN,EAAegB,CAAf,CAAT;AACA,YAAId,QAAQa,OAAOb,KAAnB;AACA,YAAIlT,SAAS+T,OAAO/T,MAApB;AACD,OAJD,CAKA,OAAMoB,CAAN,EAAS;AACPS,gBAAQC,GAAR,CAAY,yBAAZ,EAAuCkS,CAAvC,EAA0C5S,CAA1C;AACA,eAAO,KAAP;AAED;;AAED;AACA,UAAIuS,SAAStU,EAAEuU,YAAF,CAAeG,OAAOb,KAAtB,EAA6B7T,EAAE8D,GAAF,CAAM9D,EAAEwU,SAAF,CAAYzK,KAAKsD,MAAjB,EAAyB,UAAC+G,CAAD,EAAO;AAAE,eAAO,EAACnP,MAAMmP,EAAEnP,IAAF,CAAOxB,WAAP,EAAP,EAAP;AAAoC,OAAtE,CAAN,EAA+E,MAA/E,CAA7B,CAAb;AACA,UAAGiR,OAAOb,KAAP,CAAahU,OAAb,CAAqB,GAArB,IAA4B,CAAC,CAAhC,EAAmCwU,aAAa,IAAb;AACnC,UAAGC,UAAUA,OAAO7G,MAAP,GAAgB,CAA7B,EAAgC4G,aAAa,IAAb;;AAGhC;AACA,UAAII,UAAUzU,EAAEuU,YAAF,CAAeG,OAAO/T,MAAtB,EAA8BX,EAAE8D,GAAF,CAAM9D,EAAEwU,SAAF,CAAYzK,KAAKsD,MAAjB,EAAyB,UAAC+G,CAAD,EAAO;AAAE,eAAO,EAACnP,MAAMmP,EAAEnP,IAAF,CAAOxB,WAAP,EAAP,EAAP;AAAoC,OAAtE,CAAN,EAA+E,MAA/E,CAA9B,CAAd;AACA,UAAGiR,OAAO/T,MAAP,CAAcd,OAAd,CAAsB,GAAtB,IAA6B,CAAC,CAAjC,EAAoCwU,aAAa,KAAb,CAzBf,CAyBmC;AACxD,UAAGI,WAAWA,QAAQhH,MAAR,GAAiB,CAA/B,EAAkC4G,aAAa,KAAb;;AAElC,aAAOA,UAAP;AACD,KA7EI;;AA+EL;;;;;;AAMAO,aAAS,iBAAClH,KAAD,EAAW;AAClB,aAAO,CAAE,CAAC1N,EAAE6U,IAAF,CAAO9K,KAAKsD,MAAZ,EAAoB,EAACpI,MAAMyI,KAAP,EAApB,CAAV;AACD,KAvFI;;AAyFL;;;;;AAKAoH,gBAAY,oBAACpB,CAAD,EAAO;AACjB3J,aAAO2J,CAAP;AACD;AAhGI,GAAP;AAmGD,CAtLmB,CAApB;;;ACAA;;;;;;AAMA5U,IAAImO,OAAJ,CAAY,UAAZ,EAAwB,CAAC,GAAD,EAAM,UAACjN,CAAD,EAAO;;AAGnC,SAAO;AACL+U,uBAAmB,2BAAC1N,UAAD,EAAgB;AACjC,UAAI2N,SAAS,EAAb;;AAEA,UAAG3N,WAAWnG,KAAd,EAAqBmG,aAAa,CAACA,UAAD,CAAb;AACrBrH,QAAE0H,OAAF,CAAUL,UAAV,EAAsB,UAAC+M,CAAD,EAAIa,CAAJ,EAAU;AAC9B;AACA,YAAIC,OAAO,EAACC,KAAK,EAAN,EAAUC,MAAM,EAAhB,EAAX;;AAEA;AACA,YAAIhB,EAAErN,iBAAF,CAAoBlH,OAApB,CAA4B,GAA5B,IAAmC,CAAC,CAAxC,EAA2C;;AAEzC;AACAG,YAAE0H,OAAF,CAAU0M,EAAErN,iBAAF,CAAoBsO,KAApB,CAA0B,GAA1B,CAAV,EAA0C,UAACC,OAAD,EAAUC,CAAV,EAAgB;;AAExD;AACA,gBAAID,QAAQzV,OAAR,CAAgB,GAAhB,IAAuB,CAAC,CAA5B,EAA+B;AAC7B;AACAqV,mBAAKC,GAAL,CAASI,CAAT,IAAcD,QAAQD,KAAR,CAAc,GAAd,CAAd;AACD,aAHD,MAGO;AACLH,mBAAKC,GAAL,CAASI,CAAT,IAAc,CAACD,OAAD,CAAd;AACD;AAEF,WAVD;AAYD,SAfD,MAeO,IAAIlB,EAAErN,iBAAF,CAAoBlH,OAApB,CAA4B,GAA5B,IAAmC,CAAC,CAAxC,EAA2C;AAChDqV,eAAKE,IAAL,GAAYhB,EAAErN,iBAAF,CAAoBsO,KAApB,CAA0B,GAA1B,CAAZ;AACD,SAFM,MAEA;AACLH,eAAKC,GAAL,CAAS,CAAT,IAAc,CAACf,EAAErN,iBAAH,CAAd;AACD;;AAEDqN,UAAEoB,0BAAF,GAA+BN,IAA/B;;AAEA,YAAG,OAAOd,EAAEqB,YAAT,KAA0B,QAA7B,EAAuCrB,EAAEqB,YAAF,GAAiBrB,EAAEqB,YAAF,CAAeJ,KAAf,CAAqB,GAArB,CAAjB;AACvC,YAAG,OAAOjB,EAAEsB,OAAT,KAAqB,QAAxB,EAAkCtB,EAAEsB,OAAF,GAAYtB,EAAEsB,OAAF,CAAUL,KAAV,CAAgB,GAAhB,CAAZ;;AAElC;AACAL,eAAO/L,IAAP,CAAYmL,CAAZ;AAED,OAlCD;;AAoCA,aAAOY,MAAP;AACD;AA1CI,GAAP;AA6CD,CAhDuB,CAAxB;;;ACNA;;;;;;;AAOAlW,IAAIiB,OAAJ,CAAY,GAAZ,EAAiB,CAAC,SAAD,EAAY,UAAC4V,OAAD,EAAa;AACtC,MAAIC,SAASD,QAAQ3V,CAArB;AACA,SAAO6V,OAAO7V,CAAd;AACA,SAAO4V,MAAP;AACH,CAJgB,CAAjB;ACPA;;;ACAA;;;;;;AAMA9W,IAAImO,OAAJ,CAAY,aAAZ,EAA2B,CAAC,GAAD,EAAM,UAACjN,CAAD,EAAO;;AAGtC,SAAO;AACL+U,uBAAmB,2BAAC1N,UAAD,EAAgB;AACjC,UAAI2N,SAAS,EAAb;;AAEA,UAAG3N,WAAWnG,KAAd,EAAqBmG,aAAa,CAACA,UAAD,CAAb;AACrBrH,QAAE0H,OAAF,CAAUL,UAAV,EAAsB,UAAC+M,CAAD,EAAIa,CAAJ,EAAU;AAC9B;AACA,YAAIC,OAAO,EAACC,KAAK,EAAN,EAAUC,MAAM,EAAhB,EAAX;;AAEA;AACA,YAAIhB,EAAErN,iBAAF,CAAoBlH,OAApB,CAA4B,GAA5B,IAAmC,CAAC,CAAxC,EAA2C;;AAEzC;AACAG,YAAE0H,OAAF,CAAU0M,EAAErN,iBAAF,CAAoBsO,KAApB,CAA0B,GAA1B,CAAV,EAA0C,UAACC,OAAD,EAAUC,CAAV,EAAgB;;AAExD;AACA,gBAAID,QAAQzV,OAAR,CAAgB,GAAhB,IAAuB,CAAC,CAA5B,EAA+B;AAC7B;AACAqV,mBAAKC,GAAL,CAASI,CAAT,IAAcD,QAAQD,KAAR,CAAc,GAAd,CAAd;AACD,aAHD,MAGO;AACLH,mBAAKC,GAAL,CAASI,CAAT,IAAc,CAACD,OAAD,CAAd;AACD;AAEF,WAVD;AAYD,SAfD,MAeO,IAAIlB,EAAErN,iBAAF,CAAoBlH,OAApB,CAA4B,GAA5B,IAAmC,CAAC,CAAxC,EAA2C;AAChDqV,eAAKE,IAAL,GAAYhB,EAAErN,iBAAF,CAAoBsO,KAApB,CAA0B,GAA1B,CAAZ;AACD,SAFM,MAEA;AACLH,eAAKC,GAAL,CAAS,CAAT,IAAc,CAACf,EAAErN,iBAAH,CAAd;AACD;;AAEDqN,UAAEoB,0BAAF,GAA+BN,IAA/B;;AAEA,YAAG,OAAOd,EAAEqB,YAAT,KAA0B,QAA7B,EAAuCrB,EAAEqB,YAAF,GAAiBrB,EAAEqB,YAAF,CAAeJ,KAAf,CAAqB,GAArB,CAAjB;AACvC,YAAG,OAAOjB,EAAEsB,OAAT,KAAqB,QAAxB,EAAkCtB,EAAEsB,OAAF,GAAYtB,EAAEsB,OAAF,CAAUL,KAAV,CAAgB,GAAhB,CAAZ;;AAElC;AACAL,eAAO/L,IAAP,CAAYmL,CAAZ;AAED,OAlCD;;AAoCA,aAAOY,MAAP;AACD;AA1CI,GAAP;AA6CD,CAhD0B,CAA3B;;;ACNAlW,IAAIiB,OAAJ,CAAY,cAAZ,EAA4B,CAAC,UAAD,EAAa,UAAC+V,QAAD,EAAc;;AAGrD,WAAStW,WAAT,CAAqBuW,YAArB,EAAmC;AAAA;;AAEjC,SAAKtW,OAAL,GAAesW,YAAf;;AAEA,SAAKC,SAAL,GAAiB,KAAjB;;AAEA,QAAG,KAAKA,SAAR,EAAmB;;AAEnBF,aAASG,IAAT,CAAc;AACZC,mBAAa,kBADD;AAEZC,cAAQ;AACN1W,iBAAS,KAAKA;AADR,OAFI;AAKZ2W,iBAAW,CALC;AAMZnI,gBAAU,aANE;AAOZoI,kBAAY,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,EAAkC,UAACC,MAAD,EAASR,QAAT,EAAmBrW,OAAnB,EAA+B;AAC3E6W,eAAO7W,OAAP,GAAiBA,OAAjB;;AAEA6W,eAAOC,WAAP,GAAqB,eAArB;;AAEA,cAAKP,SAAL,GAAiB,IAAjB;;AAEAM,eAAOE,UAAP,GAAoB,YAAM;AACxBV,mBAASW,IAAT,GACG5V,IADH,CACQ,YAAM;AACV,kBAAKmV,SAAL,GAAiB,KAAjB;AACD,WAHH;AAID,SALD;AAMD,OAbW;AAPA,KAAd;AAuBD;;AAED,SAAO;AACLvW,aAAS,EADJ;AAELD,iBAAaA;AAFR,GAAP;AAKD,CAzC2B,CAA5B;;;ACAA;;;;;;AAMAV,IAAIiB,OAAJ,CAAY,eAAZ,EAA6B,CAAC,GAAD,EAAM,IAAN,EAAY,UAAZ,EAAwB,UAASC,CAAT,EAAYE,EAAZ,EAAgBgE,KAAhB,EAAuB;;AAE1E,MAAIwS,eAAe,EAAnB;;AAEA,MAAIC,MAAO;AACT7K,UAAM,gBAAM;AACV4K,qBAAexS,MAAM6H,GAAN,CAAU6K,QAAzB;AACD,KAHQ;;AAKT;;;;;;AAMAhW,SAAK,eAAyB;AAAA,UAAxBiW,OAAwB,uEAAdtU,SAAc;;AAC5B,UAAIsU,YAAYtU,SAAhB,EAA2B,OAAOmU,YAAP;;AAE3B,UAAGA,iBAAiBnU,SAApB,EAA+B,OAAO,EAAP;;AAE/B,aAAOmU,aAAaG,OAAb,CAAP;AACD,KAjBQ;;AAmBT;;;;;;;;AAQAC,UAAM,cAACD,OAAD,EAAU7S,KAAV,EAAoB;AACxB,UAAG0S,iBAAiBnU,SAApB,EAA+BmU,eAAe,EAAf;AAC/BA,mBAAaG,OAAb,IAAwB7S,KAAxB;AACA,aAAO2S,IAAIpV,MAAJ,EAAP;AAED,KAhCQ;;AAkCT;;;;;AAKAA,YAAQ,kBAAM;AACZ,UAAIqD,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA,UAAIkF,OAAO7F,MAAM6H,GAAjB;AACAhC,WAAK6M,QAAL,GAAgBF,YAAhB,CAJY,CAIkB;;AAE9BxS,YAAM3C,MAAN,CAAawI,IAAb,EAAmBlJ,IAAnB,CACE,UAACC,MAAD,EAAY;AACVoD,cAAM6H,GAAN,GAAYjL,MAAZ;AACA8D,iBAASlE,OAAT,CAAiBwD,MAAM6H,GAAvB;AACD,OAJH,EAKE,UAACzK,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,gCAAZ,EAA8CnB,GAA9C;AACD,OAPH;;AAUA,aAAOsD,SAASoB,OAAhB;AAED;AAzDQ,GAAX;;AA4DA,SAAO2Q,GAAP;AAED,CAlE4B,CAA7B;;;ACNA7X,IAAIiY,SAAJ,CAAc,SAAd,EAAyB,UAASC,QAAT,EAAmB;AAC1C,SAAO;AACLC,UAAM,cAASC,KAAT,EAAgBC,OAAhB,EAAyBC,KAAzB,EAAgC;AACpCF,YAAMG,MAAN,CAAaD,MAAME,OAAnB,EAA4B,UAAStT,KAAT,EAAgB;AAC1C,YAAGA,UAAU,IAAb,EAAmB;AACjBgT,mBAAS,YAAW;AAClBG,oBAAQ,CAAR,EAAWI,KAAX;AACAL,kBAAME,MAAME,OAAZ,IAAuB,KAAvB;AACD,WAHD,EAGG,GAHH;AAID;AACF,OAPD;AAQD;AAVI,GAAP;AAYD,CAbD;;;ACAAxY,IAAIiY,SAAJ,CAAc,QAAd,EAAwB,CAAC,IAAD,EAAO,GAAP,EAAY,UAAC7W,EAAD,EAAKF,CAAL,EAAW;;AAG7C,SAAO;AACLwX,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLQ,YAAM,OADD;AAELtI,WAAK,MAFA;AAGL9E,cAAQ;AAHH,KAHF;AAQL4L,iBAAa,sBARR;AASLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAMU,UAAN,GAAmB,UAACC,UAAD,EAAgB;AACjC,eAAOA,WAAWC,KAAX,CAAiB,yBAAjB,EAA4C,CAA5C,CAAP;AACD,OAFD;AAID,KAfI,CAeH;AACF;;AAhBK,GAAP;AAkBD,CArBuB,CAAxB;;;ACAAhZ,IAAIiY,SAAJ,CAAc,cAAd,EAA8B,CAAC,IAAD,EAAO,GAAP,EAAY,UAAZ,EAAwB,UAAxB,EAAoC,UAAC7W,EAAD,EAAKF,CAAL,EAAQgX,QAAR,EAAkBlB,QAAlB,EAA+B;;AAE/F,SAAO;AACL0B,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLa,YAAM;AADD,KAHF;AAML7B,iBAAa,kCANR;AAOLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAMc,iBAAN,GAA0B,YAAM;AAC9Bd,cAAMe,WAAN,GAAoB,SAApB;AACAjB,iBAAS,YAAK;AACZE,gBAAMe,WAAN,GAAoB,mBAApB;AACD,SAFD,EAEE,IAFF;AAGAnC,iBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,sBAA9B,CAAd;AACD,OAND;AAQD,KAjBI,CAiBH;AACF;;AAlBK,GAAP;AAoBD,CAtB6B,CAA9B;;;ACAArZ,IAAIiY,SAAJ,CAAc,eAAd,EAA+B,CAAC,IAAD,EAAO,QAAP,EAAiB,UAAjB,EAA6B,WAA7B,EAA0C,GAA1C,EAA+C,UAAC7W,EAAD,EAAKkY,MAAL,EAAapB,QAAb,EAAuBqB,SAAvB,EAAkCrY,CAAlC,EAAwC;;AAEpH,SAAO;AACLwX,cAAU,GADL;AAELN,WAAO;AACLnW,YAAM,gBADD;AAELuX,cAAQ;AAFH,KAFF;AAMLb,gBAAY,IANP;AAOLnF,cAAU,4EAPL;AAQL2E,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAMqB,UAAN,GAAmB,YAAK;AACtBF,kBAAUpC,IAAV,CAAe;AACbI,sBAAY,0BADC;AAEbmC,+BAAqB,IAFR;AAGbrC,kBAAQ;AACNpV,kBAAMmW,MAAMnW,IADN;AAENuX,oBAAQpB,MAAMoB;AAFR,WAHK;AAObpC,uBAAa;AAPA,SAAf;AASD,OAVD;AAWD,KArBI,CAsBL;;AAtBK,GAAP;AAwBD,CA1B8B,CAA/B;;AA4BA;AACApX,IAAIuX,UAAJ,CAAe,0BAAf,EAA2C,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,MAAnC,EAA2C,QAA3C,EAAqD,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAgB+B,SAAhB,EAA2BtX,IAA3B,EAAiCuX,MAAjC,EAA4C;;AAE1I;AACA,MAAIG,UAAUzY,EAAE0Y,KAAF,CAAQ,CAAC,OAAD,EAAU,IAAV,EAAgB,QAAhB,CAAR,EAAmCJ,MAAnC,CAAd;;AAEAhC,SAAOvV,IAAP,GAAc,EAAd;;AAEAf,IAAE0H,OAAF,CAAU3I,QAAQ0C,IAAR,CAAaV,IAAb,CAAV,EAA8B,UAAC4X,CAAD,EAAI1D,CAAJ,EAAU;AACtC,QAAGwD,QAAQ5Y,OAAR,CAAgBoV,CAAhB,MAAuB,CAAC,CAA3B,EAA8BqB,OAAOvV,IAAP,CAAYkU,CAAZ,IAAiB0D,CAAjB;AAC/B,GAFD;;AAIArC,SAAOsC,MAAP,GAAgB,YAAM;AACpBP,cAAUO,MAAV;AACD,GAFD;AAID,CAf0C,CAA3C;;;AC7BA9Z,IAAIiY,SAAJ,CAAc,oBAAd,EAAoC,CAAC,IAAD,EAAO,GAAP,EAAY,UAAZ,EAAwB,kBAAxB,EAA4C,UAAC7W,EAAD,EAAKF,CAAL,EAAQ8V,QAAR,EAAkB3C,aAAlB,EAAoC;;AAElH,SAAO;AACLqE,cAAU,GADL;AAELN,WAAO;AACLtI,eAAS,UADJ;AAELtE,cAAQ,SAFH;AAGLlD,aAAO,QAHF;AAIL2C,YAAM;AAJD,KAFF;AAQLmM,iBAAa,gDARR;AASLe,UAAM,cAACX,MAAD,EAASa,OAAT,EAAkBQ,IAAlB,EAA2B;;AAE/BrB,aAAOuC,OAAP,GAAiB,KAAjB,CAF+B,CAEP;AACxBvC,aAAOwC,UAAP,GAAoB,IAApB,CAH+B,CAGL;AAC1BxC,aAAOyC,OAAP,GAAiB,KAAjB,CAJ+B,CAIP;;AAExB;AACAzC,aAAO0C,UAAP,GAAoB,YAAM;AACxB1C,eAAOlP,KAAP,CAAarB,IAAb,GAAoBuQ,OAAOwC,UAA3B;AACAxC,eAAOwC,UAAP,GAAoB,IAApB;AACAxC,eAAOuC,OAAP,GAAiB,KAAjB;AACD,OAJD;;AAMA;AACAvC,aAAOxC,IAAP,GAAc,YAAM;AAClBwC,eAAOwC,UAAP,GAAoB/Z,QAAQ0C,IAAR,CAAa6U,OAAOlP,KAAP,CAAarB,IAA1B,CAApB;AACAuQ,eAAOuC,OAAP,GAAiB,IAAjB;AACD,OAHD;;AAKA;AACAvC,aAAOQ,IAAP,GAAc,UAACmC,CAAD,EAAO;;AAEnB9F,sBAAcC,UAAd,CAAyB7R,MAAzB,CAAgC+U,OAAO1H,OAAP,CAAezF,KAA/C,EAAsDmN,OAAOhM,MAAP,CAAcpJ,KAApE,EAA2EoV,OAAOlP,KAAP,CAAalG,KAAxF,EAA+F,EAAC6E,MAAMuQ,OAAOlP,KAAP,CAAarB,IAApB,EAA/F,EACGlF,IADH,CACQ,UAACC,MAAD,EAAY;AAChBwV,iBAAOlP,KAAP,GAAetG,MAAf;AACAwV,iBAAOuC,OAAP,GAAiB,KAAjB;AACAvC,iBAAOwC,UAAP,GAAoB,IAApB;AACD,SALH,EAMGzX,KANH,CAMS,UAACU,CAAD,EAAO;AACZ+T,mBAASoD,UAAT,CAAoB,kCAApB;AACD,SARH;AAUD,OAZD;;AAcA;AACA5C,aAAOtO,MAAP,GAAgB,YAAM;;AAEpBmL,sBAAcC,UAAd,CAAyBpL,MAAzB,CAAgCsO,OAAO1H,OAAP,CAAezF,KAA/C,EAAsDmN,OAAOhM,MAAP,CAAcpJ,KAApE,EAA2EoV,OAAOlP,KAAP,CAAalG,KAAxF,EACGL,IADH,CACQ,UAACC,MAAD,EAAY;AAChBwV,iBAAOyC,OAAP,GAAiB,IAAjB;AACAzC,iBAAOlP,KAAP,CAAarB,IAAb,GAAoB,IAApB;AACAuQ,iBAAOuC,OAAP,GAAiB,KAAjB;AACD,SALH,EAMGxX,KANH,CAMS,UAACU,CAAD,EAAO;AACZuU,iBAAOuC,OAAP,GAAiB,KAAjB;AACD,SARH;AAUD,OAZD;AAcD,KA1DI,CA2DL;;AA3DK,GAAP;AA6DD,CA/DmC,CAApC;;;ACAA/Z,IAAIiY,SAAJ,CAAc,eAAd,EAA+B,CAAC,IAAD,EAAO,QAAP,EAAiB,UAAjB,EAA6B,WAA7B,EAA0C,GAA1C,EAA+C,UAAC7W,EAAD,EAAKkY,MAAL,EAAapB,QAAb,EAAuBqB,SAAvB,EAAkCrY,CAAlC,EAAwC;;AAEpH,SAAO;AACLwX,cAAU,GADL;AAELN,WAAO;AACL9H,WAAK,MADA;AAEL9E,cAAQ,SAFH;AAGLgF,YAAM;AAHD,KAFF;AAOLmI,gBAAY,IAPP;AAQLnF,cAAU,qGARL;AASL2E,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAMqB,UAAN,GAAmB,YAAK;AACtBF,kBAAUpC,IAAV,CAAe;AACbI,sBAAY,0BADC;AAEbmC,+BAAqB,IAFR;AAGbrC,kBAAQ;AACN7L,oBAAQ4M,MAAM5M,MADR;AAENgF,kBAAM4H,MAAM5H,IAFN;AAGNF,iBAAK8H,MAAM9H;AAHL,WAHK;AAQb8G,uBAAa;AARA,SAAf;AAUD,OAXD;AAYD,KAvBI,CAwBL;;AAxBK,GAAP;AA0BD,CA5B8B,CAA/B;;AA8BA;AACApX,IAAIuX,UAAJ,CAAe,0BAAf,EAA2C,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,gBAAnC,EAAqD,QAArD,EAA+D,KAA/D,EAAsE,MAAtE,EAA8E,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAgB+B,SAAhB,EAA2B1I,GAA3B,EAAgCrF,MAAhC,EAAwC8E,GAAxC,EAA6CE,IAA7C,EAAsD;;AAE7KgH,SAAO6C,OAAP,GAAiB,IAAjB;AACA7C,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhH,IAAP,GAAcA,IAAd;AACAgH,SAAO8C,OAAP,GAAiB,EAAjB;AACA9C,SAAO3T,WAAP,GAAqB,EAAC0W,aAAa,EAAd,EAAkBC,YAAY,EAA9B,EAAkCC,YAAY,EAA9C,EAAkDC,YAAY,EAA9D,EAAkEC,SAAS,EAA3E,EAArB;;AAGA;AACA,MAAIC,eAAe,SAAfA,YAAe,CAAC/W,WAAD,EAAiB;AAClC;AACAA,gBAAY+E,OAAZ,CAAoB,UAACiS,GAAD,EAAS;;AAE3B;AACA,UAAGrD,OAAO8C,OAAP,CAAevZ,OAAf,CAAuB8Z,IAAIvR,MAA3B,MAAuC,CAAC,CAA3C,EAA8CkO,OAAO8C,OAAP,CAAenQ,IAAf,CAAoB0Q,IAAIvR,MAAxB;;AAE9C;AACA,UAAG,EAAEuR,IAAIC,cAAJ,IAAsBtD,OAAO3T,WAA/B,CAAH,EAAgD2T,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,IAAyC,EAAzC;;AAGhD;AACA,UAAG,EAAED,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,CAA9B,CAAH,EAA0E;AACxED,YAAIE,QAAJ,GAAe,EAAf;AACA,eAAOvD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,IAAmE8W,GAA1E;AACD;;AAED;AACA,UAAGA,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,CAA/B,EAAuE;AACrE,eAAOtD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,EACJgX,QADI,CACKvD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,EAAiEgX,QAAjE,CAA0EpM,MAD/E,IACyFkM,GADhG;AAED;AAEF,KArBD;;AAuBA3Z,MAAE0H,OAAF,CAAU4O,OAAO3T,WAAjB,EAA8B,UAACmX,MAAD,EAAS7E,CAAT,EAAe;AAC3CqB,aAAO3T,WAAP,CAAmBsS,CAAnB,IAAwBjV,EAAE8Z,MAAF,CAASA,MAAT,CAAxB;AACA;AACD,KAHD;AAKD,GA9BD;;AAgCAnK,MAAI/O,GAAJ,CAAQwO,IAAIjG,KAAZ,EAAmBmB,OAAOpJ,KAA1B,EAAiCoO,IAAjC,EAAuCzO,IAAvC,CACE,UAACC,MAAD,EAAY;AACVwV,WAAOvV,IAAP,GAAcD,MAAd;AACAwV,WAAO6C,OAAP,GAAiB,KAAjB;;AAEA;AACAO,iBAAapD,OAAOvV,IAAP,CAAYgZ,SAAzB;AAED,GARH;;AAYAzD,SAAOsC,MAAP,GAAgB,YAAM;AACpBP,cAAUO,MAAV;AACD,GAFD;AAID,CA3D0C,CAA3C;;;AC/BA9Z,IAAIiY,SAAJ,CAAc,sBAAd,EAAsC,CAAC,IAAD,EAAO,GAAP,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,UAAC7W,EAAD,EAAKF,CAAL,EAAQqY,SAAR,EAAmBvC,QAAnB,EAAgC;;AAGzG,SAAO;AACL0B,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLkC,eAAS,UADJ;AAEL9J,YAAM,OAFD;AAGLF,WAAK,MAHA;AAIL4K,eAAS,GAJJ;AAKL1P,cAAQ;AALH,KAHF;AAUL4L,iBAAa,kDAVR;AAWLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9B;AACAT,YAAM+C,OAAN,GAAgB,UAAC/L,GAAD,EAAS;AACvB,YAAGA,IAAI4J,KAAJ,CAAU,aAAV,CAAH,EAA6B;AAC3B,iBAAO,MAAP;AACD;AACD,YAAG5J,IAAI4J,KAAJ,CAAU,yDAAV,CAAH,EAAyE;AACvE,iBAAO,MAAP;AACD;AACD,eAAO,MAAP;AACD,OARD;;AAUA;AACAZ,YAAMgD,WAAN,GAAoB,UAACjD,IAAD,EAAU;AAC5B,eAAQA,KAAKpX,OAAL,CAAa,SAAb,KAA2B,CAAC,CAA7B,GAAkC,YAAYoX,IAA9C,GAAqDA,IAA5D;AACD,OAFD;;AAIA;AACAC,YAAMiD,SAAN,GAAkB,UAACnP,IAAD,EAAU;AAC1B,eAAOA,KAAK8M,KAAL,CAAW,WAAX,EAAwB,CAAxB,CAAP;AACD,OAFD;;AAIA;AACAZ,YAAMkD,SAAN,GAAkB,UAACC,MAAD,EAASV,GAAT,EAAiB;;AAEjCtB,kBAAUpC,IAAV,CAAe;AACbqE,uBAAaD,MADA;AAEbnE,uBAAa,oFAFA;AAGbqE,2BAAiB,KAHJ;AAIbpE,kBAAQ;AACN/G,iBAAK8H,MAAM9H,GADL;AAEN9E,oBAAQ4M,MAAM5M,MAFR;AAGNgF,kBAAMqK,GAHA;AAINP,qBAASlC,MAAMkC,OAJT;AAKNoB,sBAAU;AALJ,WAJK;AAWbnE,sBAAY,+EAXC,CAW+E;;AAX/E,SAAf,EAaGxV,IAbH,CAaQ,UAACiR,OAAD,EAAa;AACnB,cAAGA,OAAH,EAAYgE,SAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrG,OAA9B,CAAd;AACVoF,gBAAM8C,OAAN,CAAc,IAAd;AACD,SAhBH,EAiBE,UAAChZ,KAAD,EAAW;AACT8U,mBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,2BAA9B,CAAd;AACD,SAnBH;AAqBD,OAvBD;;AAyBA;AACAjB,YAAMuD,SAAN,GAAkB,UAACJ,MAAD,EAASvO,IAAT,EAAkB;;AAElC,YAAIwD,OAAOvQ,QAAQ0C,IAAR,CAAaqK,IAAb,CAAX;AACA,eAAOwD,KAAKxH,SAAZ;AACA,eAAOwH,KAAKxM,QAAZ;AACA,eAAOwM,KAAKoL,kBAAZ;AACA,eAAOpL,KAAKqL,MAAZ;AACA,eAAOrL,KAAKtM,WAAZ;AACA,eAAOsM,KAAKvM,OAAZ;;AAEAsV,kBAAUpC,IAAV,CAAe;AACbqE,uBAAaD,MADA;AAEbnE,uBAAa,oFAFA;AAGbqE,2BAAiB,KAHJ;AAIbpE,kBAAQ;AACN/G,iBAAK8H,MAAM9H,GADL;AAENE,kBAAMA,IAFA;AAGN8J,qBAASlC,MAAMkC,OAHT;AAINoB,sBAAU;AAJJ,WAJK;AAUbnE,sBAAY,+EAVC,CAU+E;AAV/E,SAAf;AAYD,OAtBD;AAwBD,KArFI,CAqFH;AArFG,GAAP,CAHyG,CAyFtG;AAEJ,CA3FqC,CAAtC;;;ACAAvX,IAAIiY,SAAJ,CAAc,sBAAd,EAAsC,CAAC,IAAD,EAAO,GAAP,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,UAAC7W,EAAD,EAAKF,CAAL,EAAQqY,SAAR,EAAmBvC,QAAnB,EAAgC;;AAEzG,SAAO;AACL0B,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACL9H,WAAK,MADA;AAEL9E,cAAQ,SAFH;AAGLwF,uBAAiB,kBAHZ;AAIL8K,yBAAmB,oBAJd;AAKLC,YAAM,QALD,CAKU;AALV,KAHF;AAUL3E,iBAAa,oDAVR;AAWLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAM4D,UAAN,GAAmB,KAAnB;AACA5D,YAAM6D,YAAN,GAAqB,EAACC,KAAK,WAAN,EAAmBC,OAAO,IAA1B,EAArB;AACA/D,YAAMgE,YAAN,GAAqB,EAArB;AACAhE,YAAMiE,QAAN,GAAiB,EAAjB;;AAEA,UAAG,CAACjE,MAAM2D,IAAV,EAAgB3D,MAAM2D,IAAN,GAAa,QAAb;;AAEhB,UAAIO,KAAKlE,MAAMpH,eAAf;AACA,UAAI8K,oBAAoB7b,QAAQ0C,IAAR,CAAayV,MAAM0D,iBAAnB,CAAxB;;AAEA;AACA,UAAG1D,MAAM2D,IAAN,KAAe,MAAlB,EAA0B;AACxB7a,UAAE0H,OAAF,CAAU0T,GAAGR,iBAAb,EAAgC,UAACjC,CAAD,EAAO;AACrCzB,gBAAMgE,YAAN,CAAmBjS,IAAnB,CAAwB0P,EAAEzX,KAA1B;AACAgW,gBAAMiE,QAAN,CAAexC,EAAEzX,KAAjB,IAA0ByX,EAAEwC,QAA5B;AACD,SAHD;AAID;;AAED;AACAjE,YAAMmE,cAAN,GAAuB,UAACC,SAAD,EAAe;;AAEpC;AACA,YAAIC,OAAQrE,MAAMgE,YAAN,CAAmBrb,OAAnB,CAA2Byb,UAAUpa,KAArC,IAA8C,CAAC,CAA3D;;AAEA;AACA,YAAGqa,IAAH,EAASvb,EAAEwb,IAAF,CAAOtE,MAAMgE,YAAb,EAA2BI,UAAUpa,KAArC;;AAET;AACA,YAAG,CAACqa,IAAJ,EAAUrE,MAAMgE,YAAN,CAAmBjS,IAAnB,CAAwBqS,UAAUpa,KAAlC;;AAEVgW,cAAMuE,kBAAN;AAED,OAbD;;AAeA;AACAvE,YAAMuE,kBAAN,GAA2B,YAAM;;AAE/BvE,cAAMpH,eAAN,CAAsB8K,iBAAtB,GAA0C,EAA1C;;AAEA;AACA5a,UAAE0H,OAAF,CAAUwP,MAAMgE,YAAhB,EAA8B,UAACQ,CAAD,EAAO;;AAEnC,cAAIH,OAAOvb,EAAE6U,IAAF,CAAO+F,iBAAP,EAA0B,EAAC1Z,OAAOwa,CAAR,EAA1B,CAAX;;AAEAlZ,kBAAQC,GAAR,CAAY,wBAAZ,EAAsC8Y,IAAtC;;AAEA;AACA,cAAGA,IAAH,EAAS;AACP;AACA,gBAAGrE,MAAMiE,QAAN,CAAeI,KAAKra,KAApB,CAAH,EAA+Bqa,KAAKJ,QAAL,GAAgBjE,MAAMiE,QAAN,CAAeI,KAAKra,KAApB,CAAhB;AAC/BgW,kBAAMpH,eAAN,CAAsB8K,iBAAtB,CAAwC3R,IAAxC,CAA6CsS,IAA7C;AACD;AAEF,SAbD;AAeD,OApBD;;AAsBArE,YAAMyE,aAAN,GAAsB,UAACX,GAAD,EAAS;AAC7B;AACA,YAAG,CAAC,WAAD,EAAc,MAAd,EAAsB,SAAtB,EAAiCnb,OAAjC,CAAyCmb,GAAzC,MAAkD,CAAC,CAAtD,EAAyD,OAAO,KAAP;;AAEzD,YAAG9D,MAAM6D,YAAN,CAAmBC,GAAnB,KAA2BA,GAA9B,EAAmC;AACjC9D,gBAAM6D,YAAN,CAAmBE,KAAnB,GAA2B,CAAC/D,MAAM6D,YAAN,CAAmBE,KAA/C;AAED,SAHD,MAGO;AACL/D,gBAAM6D,YAAN,CAAmBC,GAAnB,GAAyBA,GAAzB;AACA9D,gBAAM6D,YAAN,CAAmBE,KAAnB,GAA2B,IAA3B;AACD;;AAEDW,yBAAiB7c,QAAQ0C,IAAR,CAAamZ,iBAAb,CAAjB;AACD,OAbD;;AAeA;AACA1D,YAAM2E,kBAAN,GAA2B,UAAC3a,KAAD,EAAW;AACpC,YAAI4a,QAAQ9b,EAAE6U,IAAF,CAAOqC,MAAMpH,eAAN,CAAsB8K,iBAA7B,EAAgD,UAACmB,CAAD,EAAO;AACjE,iBAAOA,EAAE7a,KAAF,KAAYA,KAAnB;AACD,SAFW,CAAZ;AAGA,eAAO4a,UAAUvZ,SAAjB;AACD,OALD;;AAOA2U,YAAM8E,mBAAN,GAA4B,YAAM;AAChC9E,cAAM4D,UAAN,GAAmB,CAAC5D,MAAM4D,UAA1B;AACAc,yBAAiB7c,QAAQ0C,IAAR,CAAamZ,iBAAb,CAAjB;AACD,OAHD;;AAKA,UAAIgB,mBAAmB,SAAnBA,gBAAmB,CAACK,IAAD,EAAU;AAC/B/E,cAAM0D,iBAAN,GAA0B,EAA1B;AACA,YAAIsB,UAAWhF,MAAM4D,UAAP,GAAqB,CAArB,GAAyB,CAAvC;;AAEA9a,UAAE0H,OAAF,CAAUuU,IAAV,EAAgB,UAAC7H,CAAD,EAAIa,CAAJ,EAAU;AACxB,cAAGb,EAAE+H,IAAF,GAASD,OAAZ,EAAqBA,UAAU9H,EAAE+H,IAAZ;AACtB,SAFD;;AAIAnc,UAAE0H,OAAF,CAAUuU,IAAV,EAAgB,UAAC7H,CAAD,EAAIa,CAAJ,EAAU;;AAExB;AACAb,YAAEgI,OAAF,GAAYhI,EAAEgI,OAAF,CAAUC,OAAV,CAAkB,CAAlB,CAAZ;AACAjI,YAAE+H,IAAF,GAAS/H,EAAE+H,IAAF,CAAOE,OAAP,CAAe,CAAf,CAAT;;AAEA;AACAjI,YAAEkI,aAAF,GAAkBC,KAAKC,KAAL,CAAY,CAAEpI,EAAEgI,OAAF,GAAY,CAAb,GAAkB,CAAlB,GAAsBhI,EAAEgI,OAAzB,IAAqC,GAAtC,GAA6C,CAAxD,IAA6D,CAA/E;AACAhI,YAAEqI,UAAF,GAAeF,KAAKC,KAAL,CAAapI,EAAE+H,IAAF,GAAOD,OAAR,GAAmB,GAApB,GAA2B,CAAtC,IAA2C,CAA1D;;AAEAhF,gBAAM0D,iBAAN,CAAwB3R,IAAxB,CAA6BmL,CAA7B;AAED,SAZD;AAaA8C,cAAM0D,iBAAN,GAA0B5a,EAAE0c,MAAF,CAASxF,MAAM0D,iBAAf,EAAkC1D,MAAM6D,YAAN,CAAmBC,GAArD,CAA1B;AACA,YAAG,CAAC9D,MAAM6D,YAAN,CAAmBE,KAAvB,EAA8B/D,MAAM0D,iBAAN,CAAwB+B,OAAxB,GAAkC;AACjE,OAvBD;;AAyBAf,uBAAiB7c,QAAQ0C,IAAR,CAAamZ,iBAAb,CAAjB;AAED,KA7HI,CA6HH;AA7HG,GAAP,CAFyG,CAgItG;AAEJ,CAlIqC,CAAtC;;;ACAA9b,IAAIiY,SAAJ,CAAc,YAAd,EAA4B,CAAC,IAAD,EAAO,GAAP,EAAY,UAAC7W,EAAD,EAAKF,CAAL,EAAW;;AAGjD,SAAO;AACLwX,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACL0F,gBAAU,WADL;AAELxN,WAAK,MAFA;AAGL9E,cAAQ,SAHH;AAIL1H,YAAM,OAJD;AAKLia,UAAI;AALC,KAHF;AAUL3G,iBAAa,8BAVR;AAWLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9B,UAAG,CAACT,MAAM2F,EAAV,EAAc3F,MAAM2F,EAAN,GAAW,IAAX;AAEf,KAfI,CAeH;AACF;;AAhBK,GAAP;AAkBD,CArB2B,CAA5B;;;ACAA/d,IAAIiY,SAAJ,CAAc,aAAd,EAA6B,CAAC,IAAD,EAAO,GAAP,EAAY,yBAAZ,EAAuC,UAAvC,EAAmD,UAAC7W,EAAD,EAAKF,CAAL,EAAQ0O,OAAR,EAAiBsI,QAAjB,EAA8B;;AAE5G,SAAO;AACLQ,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACL3P,cAAQ,SADH;AAELD,aAAO,QAFF;AAGLwV,aAAO,QAHF;AAILC,eAAS;AAJJ,KAHF;AASL7G,iBAAa,gCATR;AAULe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAG9BT,YAAMG,MAAN,CAAa,OAAb,EAAsB,UAAC2F,MAAD,EAASC,MAAT,EAAoB;AACxC,YAAGD,WAAWC,MAAd,EAAsB;AACtB/F,cAAM3P,MAAN,GAAe,CAAf;AACAyP,iBAAS,YAAM;AACbE,gBAAM6F,OAAN;AACD,SAFD,EAEG,GAFH;AAGD,OAND;;AAQA7F,YAAMgG,QAAN,GAAiB,YAAM;AACrBhG,cAAM3P,MAAN,IAAgB2P,MAAM5P,KAAtB;AACA0P,iBAAS,YAAM;AACbE,gBAAM6F,OAAN;AACD,SAFD,EAEG,GAFH;AAGD,OALD;;AAOA7F,YAAMiG,QAAN,GAAiB,YAAM;AACrBjG,cAAM3P,MAAN,IAAgB2P,MAAM5P,KAAtB;AACA0P,iBAAS,YAAM;AACbE,gBAAM6F,OAAN;AACD,SAFD,EAEG,GAFH;AAGD,OALD;AAOD,KAnCI,CAmCH;AAnCG,GAAP,CAF4G,CAsCzG;AAEJ,CAxC4B,CAA7B;;;ACAAje,IAAIiY,SAAJ,CAAc,YAAd,EAA4B,CAAC,IAAD,EAAO,GAAP,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,yBAArC,EAAgE,UAAC7W,EAAD,EAAKF,CAAL,EAAQqY,SAAR,EAAmBvC,QAAnB,EAA6BsH,uBAA7B,EAAyD;;AAGnJ,SAAO;AACL5F,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLjN,YAAM,OADD;AAELoT,mBAAa;AAFR,KAHF;AAOLnH,iBAAa,gCAPR;AAQLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAMlP,MAAN,GAAe,UAACqS,MAAD,EAAY;;AAEzB,YAAIiD,UAAUjF,UAAUiF,OAAV,GACXrX,KADW,CACL,4CADK,EAEXkS,WAFW,CAEC,qCAAmCjB,MAAMjN,IAAN,CAAWF,IAAX,CAAgBwT,SAAnD,GAA+D,GAA/D,GAAqErG,MAAMjN,IAAN,CAAWF,IAAX,CAAgByT,QAArF,GAAgG,MAAhG,GAAyGJ,wBAAwBlG,MAAMjN,IAAN,CAAWA,IAAnC,CAAzG,GAAoJ,GAApJ,GAA0JiN,MAAMjN,IAAN,CAAWA,IAArK,GAA4K,GAF7K,EAGXwT,SAHW,CAGD,qBAHC,EAIXnD,WAJW,CAICD,MAJD,EAKXqD,EALW,CAKR,SALQ,EAMX9E,MANW,CAMJ,QANI,CAAd;;AAQEP,kBAAUpC,IAAV,CAAeqH,OAAf,EAAwBzc,IAAxB,CACE,YAAM;AACJ,cAAIoJ,OAAOlL,QAAQ0C,IAAR,CAAayV,MAAMjN,IAAnB,CAAX;AACA6L,mBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BlO,KAAKF,IAAL,CAAUwT,SAAV,GAAsB,GAAtB,GAA4BtT,KAAKF,IAAL,CAAUyT,QAAtC,GAAiD,uBAAjD,GAA2EJ,wBAAwBlG,MAAMjN,IAAN,CAAWA,IAAnC,CAA3E,GAAsH,GAAtH,GAA4HA,KAAKA,IAAjI,GAAwI,GAAtK,CAAd;AACA;AACAiN,gBAAMmG,WAAN,CAAkBnG,MAAMjN,IAAxB;AACD,SANH,EAOE,YAAM;AACJ6L,mBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,uBAA9B,CAAd;AACD,SATH;AAWH,OArBD;AAuBD,KAjCI,CAiCH;AAjCG,GAAP,CAHmJ,CAqChJ;AAEJ,CAvC2B,CAA5B;;;ACAArZ,IAAIiY,SAAJ,CAAc,eAAd,EAA+B,CAAC,IAAD,EAAO,GAAP,EAAY,UAAC7W,EAAD,EAAKF,CAAL,EAAW;;AAGpD,SAAO;AACLwX,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLyG,cAAQ,YADH;AAELC,cAAQ;AAFH,KAHF;AAOL1H,iBAAa,oCAPR;AAQLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAM2G,WAAN,GAAoB,UAACC,KAAD,EAAW;AAC7B,YAAGA,QAAQ5G,MAAM0G,MAAjB,EAAyB1G,MAAM0G,MAAN,GAAeE,KAAf;AAC1B,OAFD;AAID,KAdI,CAcH;AAdG,GAAP,CAHoD,CAkBjD;AAEJ,CApB8B,CAA/B;;;ACAAhf,IAAIiY,SAAJ,CAAc,gBAAd,EAAgC,CAAC,IAAD,EAAO,GAAP,EAAY,UAAC7W,EAAD,EAAKF,CAAL,EAAW;;AAErD,MAAI+d,SAAS,CACX,8GADW,EAEX,2FAFW,EAGX,6DAHW,EAIX,sEAJW,EAKX,mJALW,EAMX,iHANW,EAOX,0HAPW,EAQX,sGARW,EASX,sGATW,EAUX,gFAVW,EAWX,+HAXW,EAYX,wEAZW,EAaX,8GAbW,EAcX,+FAdW,EAeX,qGAfW,EAgBX,qEAhBW,EAiBX,qDAjBW,EAkBX,2FAlBW,EAmBX,2EAnBW,EAoBX,2EApBW,EAqBX,6CArBW,EAsBX,8CAtBW,EAuBX,6DAvBW,EAwBX,sFAxBW,EAyBX,yDAzBW,EA0BX,2DA1BW,EA2BX,8EA3BW,EA4BX,uFA5BW,EA6BX,mEA7BW,EA8BX,mEA9BW,EA+BX,iEA/BW,EAgCX,yEAhCW,EAiCX,8DAjCW,EAkCX,6CAlCW,EAmCX,sDAnCW,EAoCX,2FApCW,EAqCX,4CArCW,EAsCX,oEAtCW,EAuCX,iFAvCW,EAwCX,kEAxCW,EAyCX,6EAzCW,EA0CX,yEA1CW,EA2CX,oCA3CW,EA4CX,4CA5CW,EA6CX,oDA7CW,EA8CX,4CA9CW,EA+CX,8DA/CW,EAgDX,iEAhDW,EAiDX,mEAjDW,EAkDX,uFAlDW,EAmDX,8EAnDW,EAoDX,2EApDW,CAAb;;AAwDA,SAAO;AACLvG,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLvB,iBAAa,wCAHR;AAILe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAM8G,KAAN,GAAcD,OAAO/d,EAAEie,MAAF,CAAS,CAAT,EAAWF,OAAOtQ,MAAlB,CAAP,CAAd;AAED,KARI,CAQH;AACF;;AATK,GAAP;AAWD,CArE+B,CAAhC;;;ACAA3O,IAAIiY,SAAJ,CAAc,kBAAd,EAAkC,CAAC,IAAD,EAAO,GAAP,EAAY,YAAZ,EAA0B,QAA1B,EAAoC,WAApC,EAAiD,UAAjD,EAA6D,mBAA7D,EAAkF,UAAC7W,EAAD,EAAKF,CAAL,EAAQb,UAAR,EAAoBmS,MAApB,EAA4B4M,SAA5B,EAAuCpI,QAAvC,EAAiDvH,OAAjD,EAA6D;;AAE/K,SAAO;AACLiJ,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLvB,iBAAa,4CAHR;AAILe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9B;AACAT,YAAMrI,OAAN,GAAgB,EAAhB;;AAEA1P,iBAAWE,GAAX,CAAe,qBAAf,EAAsC,UAAC0C,CAAD,EAAIoc,OAAJ,EAAaC,QAAb,EAAuBC,SAAvB,EAAkCC,UAAlC,EAAiD;;AAErF,YAAGH,QAAQlZ,IAAR,CAAa6S,KAAb,CAAmB,wEAAnB,CAAH,EAAiG;AAC/FyG,uBAAaH,SAASI,eAAtB,EAAuCL,QAAQlZ,IAA/C;AACD;AAEF,OAND;;AAQA;;;;;AAKAiS,YAAMlP,MAAN,GAAe,UAACuN,CAAD,EAAO;;AAEpBhH,gBAAQvG,MAAR,CAAekP,MAAMrI,OAAN,CAAc0G,CAAd,EAAiBjL,MAAjB,CAAwBpJ,KAAvC,EACGL,IADH,CACQ,YAAM;AACVqW,gBAAMrI,OAAN,CAAc4P,MAAd,CAAqBlJ,CAArB,EAAuB,CAAvB;AACD,SAHH,EAIGlU,KAJH,CAIS,UAACC,GAAD,EAAS;AACdkB,kBAAQC,GAAR,CAAYnB,GAAZ;AACAwU,mBAASoD,UAAT,CAAoB,2CAApB;AACD,SAPH;AASD,OAXD;;AAaAhC,YAAMwH,IAAN,GAAa,UAACnJ,CAAD,EAAO;AAClBjE,eAAOqN,EAAP,CAAUzH,MAAMrI,OAAN,CAAc0G,CAAd,EAAiB9G,KAA3B,EAAkC,EAAC+P,iBAAiBtH,MAAMrI,OAAN,CAAc0G,CAAd,EAAiBjL,MAAjB,CAAwBpJ,KAA1C,EAAiD0d,KAAK1H,MAAMrI,OAAN,CAAc0G,CAAd,EAAiBjL,MAAjB,CAAwB8E,GAAxB,CAA4BjG,KAAlF,EAAlC;AAED,OAHD;;AAKA;AACAoF,cAAQ/N,GAAR,GACGK,IADH,CACQ,UAACC,MAAD,EAAY;AAChBoW,cAAMrI,OAAN,GAAgB/N,MAAhB;AACD,OAHH,EAIGO,KAJH,CAIS,UAACC,GAAD,EAAS;AACdwU,iBAASoD,UAAT,CAAoB,uCAApB;AACD,OANH;;AAQA;;;;;;AAMA,UAAIqF,eAAe,SAAfA,YAAe,CAACjU,MAAD,EAASmE,KAAT,EAAmB;;AAEpC,YAAIoQ,QAAQ7e,EAAE8e,SAAF,CAAY5H,MAAMrI,OAAlB,EAA2B,EAACvE,QAAQ,EAACpJ,OAAOoJ,MAAR,EAAT,EAA3B,CAAZ;;AAEA;AACA,YAAGuU,QAAQ,CAAX,EAAc;AACZtQ,kBAAQC,WAAR,CAAoBlE,MAApB,EAA4BmE,KAA5B,EACG5N,IADH,CACQ,UAACC,MAAD,EAAY;AAChBoW,kBAAMrI,OAAN,CAAc5F,IAAd,CAAmBnI,MAAnB;AACD,WAHH,EAIGO,KAJH,CAIS,UAACC,GAAD,EAAS;AACdwU,qBAASoD,UAAT,CAAoB,qCAApB;AACD,WANH;AAOD;;AAED;AACA,YAAG2F,QAAQ,CAAC,CAAZ,EAAe;AACbtQ,kBAAQC,WAAR,CAAoBlE,MAApB,EAA4BmE,KAA5B,EACG5N,IADH,CACQ,UAACC,MAAD,EAAY;AAChBoW,kBAAMrI,OAAN,CAAcgQ,KAAd,IAAuB/d,MAAvB;AACD,WAHH,EAIGO,KAJH,CAIS,UAACC,GAAD,EAAS;AACdwU,qBAASoD,UAAT,CAAoB,qCAApB;AACD,WANH;AAOD;AAEF,OA1BD;AA4BD,KAnFI,CAmFH;AACF;;AApFK,GAAP;AAsFD,CAxFiC,CAAlC;;;ACAApa,IAAIiY,SAAJ,CAAc,eAAd,EAA+B,CAAC,IAAD,EAAO,GAAP,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,QAArC,EAA+C,UAAC7W,EAAD,EAAKF,CAAL,EAAQqY,SAAR,EAAmBvC,QAAnB,EAA6BxE,MAA7B,EAAwC;;AAGpH,SAAO;AACLkG,cAAU,IADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACL5M,cAAQ,SADH;AAEL8E,WAAK;AAFA,KAHF;AAOL8G,iBAAa,sCAPR;AAQLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAM6H,UAAN,GAAmB,UAACzU,MAAD,EAAY;AAC7B,YAAGA,OAAO1H,IAAP,KAAgB,SAAnB,EAA8B0O,OAAOqN,EAAP,CAAU,8CAAV,EAA0D,EAACC,KAAK1H,MAAM9H,GAAN,CAAUjG,KAAhB,EAAuBqV,iBAAiBlU,OAAOpJ,KAA/C,EAA1D;AAC9B,YAAGoJ,OAAO1H,IAAP,KAAgB,OAAnB,EAA4B0O,OAAOqN,EAAP,CAAU,4CAAV,EAAwD,EAACC,KAAK1H,MAAM9H,GAAN,CAAUjG,KAAhB,EAAuBqV,iBAAiBlU,OAAOpJ,KAA/C,EAAxD;AAC7B,OAHD;AAMD,KAhBI,CAgBH;AAhBG,GAAP,CAHoH,CAoBjH;AAEJ,CAtB8B,CAA/B;;;ACAApC,IAAIiY,SAAJ,CAAc,sBAAd,EAAsC,CAAC,IAAD,EAAO,GAAP,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,QAArC,EAA+C,UAAC7W,EAAD,EAAKF,CAAL,EAAQqY,SAAR,EAAmBvC,QAAnB,EAA6BxE,MAA7B,EAAwC;;AAG3H,SAAO;AACLkG,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACL5M,cAAQ,SADH;AAEL8E,WAAK,MAFA;AAGLX,aAAO;AAHF,KAHF;AAQLyH,iBAAa,sDARR;AASLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9B,UAAIvI,MAAM8H,MAAM9H,GAAhB;;AAEA;AACA8H,YAAM8H,iBAAN,GAA0B,UAAC5P,GAAD,EAAMxM,IAAN,EAAe;AACvC,eAAQsU,MAAM5M,MAAN,CAAa1H,IAAb,KAAsBA,IAA9B;AACD,OAFD;;AAIA;AACAsU,YAAM+H,gBAAN,GAAyB,UAAC7P,GAAD,EAAS;AAChC,YAAG8H,MAAM5M,MAAN,CAAa1H,IAAb,KAAsB,SAAzB,EAAoC,OAAO,KAAP;AACpC,eAAOsU,MAAM5M,MAAN,CAAa4U,cAAb,CAA4BC,aAAnC;AACD,OAHD;;AAKA;AACAjI,YAAMkI,SAAN,GAAkB,UAAChQ,GAAD,EAAS;AACzB,YAAG8H,MAAM5M,MAAN,CAAa1H,IAAb,KAAsB,SAAzB,EAAoC,OAAO,KAAP;AACpC,eAAOsU,MAAM5M,MAAN,CAAa4U,cAAb,CAA4BG,MAAnC;AACD,OAHD;;AAKA;AACAnI,YAAMoI,SAAN,GAAkB,UAAClQ,GAAD,EAAMxM,IAAN,EAAe;AAC/B,eAAQsU,MAAM5M,MAAN,CAAa1H,IAAb,KAAsBA,IAA9B;AACD,OAFD;;AAIA;AACAsU,YAAMqI,WAAN,GAAoB,UAACnQ,GAAD,EAAMnF,IAAN,EAAY/D,IAAZ,EAAqB;AACvC,YAAI6D,OAAQ/J,EAAE6U,IAAF,CAAOqC,MAAM5M,MAAN,CAAakV,KAApB,EAA2B,EAACvV,MAAMA,IAAP,EAA3B,CAAZ;;AAEA,YAAG,CAACF,IAAJ,EAAU,OAAO,IAAP;;AAEV,gBAAO7D,IAAP;AACE,eAAK,MAAL;AACE,mBAAO6D,KAAKA,IAAL,CAAUwT,SAAV,GAAsB,GAAtB,GAA4BxT,KAAKA,IAAL,CAAUyT,QAA7C;AACA;AACF,eAAK,UAAL;AACE,mBAAOzT,KAAKA,IAAL,CAAU1D,QAAjB;AACA;AANJ;AAQD,OAbD;AAgBD,KApDI,CAoDH;AApDG,GAAP,CAH2H,CAwDxH;AAEJ,CA1DqC,CAAtC;;;ACAAvH,IAAIiY,SAAJ,CAAc,gBAAd,EAAgC,CAAC,IAAD,EAAO,GAAP,EAAY,UAAC7W,EAAD,EAAKF,CAAL,EAAW;;AAErD,SAAO;AACLwX,cAAU,IADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLzI,aAAO;AADF,KAHF;AAMLyH,iBAAa,wCANR;AAOLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9B,UAAIzM,QAAQ,SAARA,KAAQ,CAACuD,KAAD,EAAW;AACrB,YAAGA,UAAU,eAAb,EAA8B,OAAO,qBAAP;AAC9B,YAAGA,UAAU,OAAb,EAAsB,OAAO,oBAAP;AACtB,YAAGA,UAAU,WAAb,EAA0B,OAAO,qBAAP;AAC1B,YAAGA,UAAU,QAAb,EAAuB,OAAO,mBAAP;AACvB,YAAGA,UAAU,UAAb,EAAyB,OAAO,UAAP;AACzB,YAAGA,UAAU,WAAb,EAA0B,OAAO,YAAP;AAC1B,YAAGA,UAAU,UAAb,EAAyB,OAAO,UAAP;AACzB,YAAGA,UAAU,UAAb,EAAyB,OAAO,UAAP;AAC1B,OATD;;AAWAyI,YAAMuI,WAAN,GAAoBvU,MAAMgM,MAAMzI,KAAZ,CAApB;AAGD,KAvBI,CAuBH;AAvBG,GAAP,CAFqD,CA0BlD;AAEJ,CA5B+B,CAAhC;;;ACAA3P,IAAIiY,SAAJ,CAAc,gBAAd,EAAgC,CAAC,IAAD,EAAO,GAAP,EAAY,yBAAZ,EAAuC,UAAC7W,EAAD,EAAKF,CAAL,EAAQ0O,OAAR,EAAoB;;AAEzF,SAAO;AACL8I,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLrI,eAAS,UADJ;AAEL6Q,iBAAW,YAFN;AAGLC,kBAAY;AAHP,KAHF;AAQLzJ,iBAAa,wCARR;AASLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAM0I,QAAN,GAAiB;AACftY,eAAO4P,MAAMyI,UAAN,CAAiBrY,KADT;AAEfC,gBAAQ2P,MAAMyI,UAAN,CAAiBpY,MAFV;AAGfuV,eAAO5F,MAAMyI,UAAN,CAAiB7C;AAHT,OAAjB;;AAOA5F,YAAMvX,MAAN,GAAe;AACbkgB,eAAO,KADM;AAEbC,gBAAQ,wBAFK;AAGbtb,iBAAS,KAHI;AAIboG,gBAAQ;AAJK,OAAf;;AAOAsM,YAAMiC,OAAN,GAAgB,KAAhB;;AAEAjC,YAAM6I,WAAN,GAAoB,YAAM;AACxB7I,cAAM8I,UAAN,GAAmB,KAAnB;AACA9I,cAAM+I,WAAN,GAAoB,KAApB;;AAEA/I,cAAM0I,QAAN,CAAerY,MAAf,GAAwB,CAAxB;;AAEA,YAAI2Y,cAAchJ,MAAMvX,MAAN,CAAaiL,MAA/B;;AAEAsM,cAAMvX,MAAN,CAAaiL,MAAb,GAAsB,IAAtB;AACA,YAAGsV,gBAAgB3d,SAAnB,EAA8B2U,MAAMiJ,cAAN;AAC/B,OAVD;;AAYAjJ,YAAMkJ,aAAN,GAAsB,YAAM;AAC1BlJ,cAAM8I,UAAN,GAAmB,IAAnB;AACA9I,cAAM+I,WAAN,GAAoB,IAApB;AACD,OAHD;;AAMA/I,YAAMgG,QAAN,GAAiB,YAAM;AACrBhG,cAAM0I,QAAN,CAAerY,MAAf,IAAyB2P,MAAM0I,QAAN,CAAetY,KAAxC;AACA4P,cAAMiJ,cAAN;AACD,OAHD;;AAKAjJ,YAAMiG,QAAN,GAAiB,YAAM;AACrBjG,cAAM0I,QAAN,CAAerY,MAAf,IAAyB2P,MAAM0I,QAAN,CAAetY,KAAxC;AACA4P,cAAMiJ,cAAN;AACD,OAHD;;AAMAjJ,YAAMtM,MAAN,GAAe,YAAM;AACnBsM,cAAM0I,QAAN,CAAerY,MAAf,GAAwB,CAAxB;AACA2P,cAAMiJ,cAAN;AACD,OAHD;;AAKAjJ,YAAMmJ,SAAN,GAAkB,UAAC3E,CAAD,EAAO;AACvB,gBAAOA,CAAP;AACE,eAAK,OAAL;AACE,mBAAO,oBAAP;AACA;;AAEF,eAAK,QAAL;AACE,mBAAO,mBAAP;AACA;;AAEF,eAAK,WAAL;AACE,mBAAO,cAAP;AACA;;AAEF,eAAK,UAAL;AACE,mBAAO,UAAP;AACA;;AAEF;AACE,mBAAO,KAAP;AACA;AAnBJ;AAqBD,OAtBD;;AAwBA;;;;;AAKAxE,YAAMiJ,cAAN,GAAuB,YAAM;;AAE3B,YAAIvY,OAAO,EAAX;;AAEAsP,cAAMiC,OAAN,GAAgB,IAAhB;;AAEAvR,aAAKkY,MAAL,GAAc5I,MAAMvX,MAAN,CAAamgB,MAA3B;AACAlY,aAAKpD,OAAL,GAAe0S,MAAMvX,MAAN,CAAa6E,OAA5B;AACAoD,aAAK0Y,SAAL,GAAiB,IAAjB;AACA1Y,aAAKL,MAAL,GAAc2P,MAAM0I,QAAN,CAAerY,MAA7B;AACAK,aAAKN,KAAL,GAAa4P,MAAM0I,QAAN,CAAetY,KAA5B;;AAGA,YAAG,CAAC4P,MAAMvX,MAAN,CAAakgB,KAAjB,EAAwBjY,KAAKpH,GAAL,GAAW,IAAX;AACxB,YAAG0W,MAAMvX,MAAN,CAAaiL,MAAhB,EAAwBhD,KAAK2Y,UAAL,GAAkBrJ,MAAMvX,MAAN,CAAaiL,MAA/B;;AAExB,YAAGsM,MAAMwI,SAAT,EAAoB9X,KAAKkY,MAAL,GAAc,oBAAd;;AAEpBpR,gBAAQlO,GAAR,CAAYoH,IAAZ,EACG/G,IADH,CACQ,UAACC,MAAD,EAAY;AAChBoW,gBAAM0I,QAAN,CAAe9C,KAAf,GAAuBhc,OAAOgc,KAA9B;AACA5F,gBAAMrI,OAAN,GAAgB/N,OAAO+N,OAAvB;;AAEAqI,gBAAMiC,OAAN,GAAgB,KAAhB;AACD,SANH,EAOG9X,KAPH,CAOS,UAACC,GAAD,EAAS,CAEf,CATH;AAWD,OA7BD;AA+BD,KAzHI,CAyHH;AAzHG,GAAP,CAFyF,CA4HtF;AAEJ,CA9H+B,CAAhC;;;ACAAxC,IAAIiY,SAAJ,CAAc,gBAAd,EAAgC,CAAC,IAAD,EAAO,GAAP,EAAY,UAAC7W,EAAD,EAAKF,CAAL,EAAW;;AAErD,SAAO;AACLwX,cAAU,IADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLzI,aAAO;AADF,KAHF;AAMLyH,iBAAa,wCANR;AAOLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B,CAE/B,CATI,CASH;AATG,GAAP,CAFqD,CAYlD;AAEJ,CAd+B,CAAhC;;;ACAA7Y,IAAIiY,SAAJ,CAAc,mBAAd,EAAmC,CAAC,IAAD,EAAO,GAAP,EAAY,WAAZ,EAAyB,UAAC7W,EAAD,EAAKF,CAAL,EAAQqY,SAAR,EAAsB;;AAGhF,SAAO;AACLb,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLsJ,iBAAW,YADN;AAELpR,WAAK,MAFA;AAGL9E,cAAQ;AAHH,KAHF;AAQL4L,iBAAa,4CARR;AASLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAMU,UAAN,GAAmB,UAACC,UAAD,EAAgB;AACjC,eAAOA,WAAWC,KAAX,CAAiB,yBAAjB,EAA4C,CAA5C,CAAP;AACD,OAFD;;AAKAZ,YAAMuJ,WAAN,GAAoB,UAACpG,MAAD,EAASqG,QAAT,EAAsB;;AAExC,YAAI7d,UAAU;AACZmL,sBAAY0S,SAASC,QAAT,CAAkBtL,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CADA;AAEZpH,oBAAUyS,SAASC,QAAT,CAAkBtL,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAFE;AAGZnH,eAAKwS,SAASE,MAAT,CAAgBvL,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAHO;AAIZlH,eAAKuS,SAASE,MAAT,CAAgBvL,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B;AAJO,SAAd;;AAOA;AACAgD,kBAAUpC,IAAV,CAAe;AACbqE,uBAAaD,MADA;AAEb7B,+BAAqB,IAFR;AAGbrC,kBAAQ;AACNtT,qBAASA,OADH;AAEN6d,sBAAUA;AAFJ,WAHK;AAObxK,uBAAa,yCAPA;AAQbG,sBAAY,CAAC,OAAD,EAAU,WAAV,EAAuB,UAAvB,EAAmC,WAAnC,EAAgD,SAAhD,EAA2D,UAA3D,EAAuE,UAACC,MAAD,EAAS+B,SAAT,EAAoBrB,QAApB,EAA8B6J,MAA9B,EAAsChe,OAAtC,EAA+C6d,QAA/C,EAA4D;;AAE7IpK,mBAAOzN,SAAP,GAAmB,EAAnB;AACAyN,mBAAO6C,OAAP,GAAiB,IAAjB;AACA7C,mBAAOoK,QAAP,GAAkBA,QAAlB;AACApK,mBAAOwK,IAAP,GAAc,CAAd;;AAEA;AACAD,mBAAO9S,gBAAP,CAAwBlL,QAAQmL,UAAhC,EAA4CnL,QAAQoL,QAApD,EAA8DpL,QAAQqL,GAAtE,EAA2ErL,QAAQsL,GAAnF,EAAwFtN,IAAxF,CACE,UAACkgB,SAAD,EAAe;AACb;AACA,kBAAIlb,WAAW;AACbgD,2BAAW,EADE;AAEbiU,uBAAOiE,UAAUC;AAFJ,eAAf;;AAKA1K,qBAAOwK,IAAP,GAAc,CAAd;AACA9J,uBAAS,YAAM;AAAEV,uBAAOwK,IAAP,GAAc,CAAd;AAAgB,eAAjC,EAAmC,IAAnC;;AAEA;AACAD,qBAAOxS,WAAP,CAAmB0S,UAAUlY,SAA7B,EAAwChI,IAAxC,CACE,UAACogB,IAAD,EAAU;AACRpb,yBAASgD,SAAT,GAAqBoY,IAArB;;AAEA3K,uBAAO6C,OAAP,GAAiB,KAAjB;AACA7C,uBAAOzN,SAAP,GAAmBhD,SAASgD,SAA5B;;AAEArG,wBAAQC,GAAR,CAAY,WAAZ,EAAyB6T,OAAOzN,SAAhC;AACArG,wBAAQC,GAAR,CAAY,WAAZ,EAAyBse,SAAzB;AAGD,eAXH,EAYE,UAACzf,GAAD,EAAS;AACPkB,wBAAQC,GAAR,CAAY,6BAAZ,EAA2CnB,GAA3C;AACD,eAdH;AAiBD,aA7BH,EA8BE,UAACA,GAAD,EAAS;AACPkB,sBAAQC,GAAR,CAAY,qCAAZ,EAAmDnB,GAAnD;AACD,aAhCH;;AAoCAgV,mBAAOsC,MAAP,GAAgB,YAAM;AACpBP,wBAAU5B,IAAV;AACD,aAFD;AAID,WAhDW;AARC,SAAf;AA0DD,OApED;AAsED,KAtFI,CAsFH;AACF;;AAvFK,GAAP;AAyFD,CA5FkC,CAAnC;;;ACAA3X,IAAIiY,SAAJ,CAAc,OAAd,EAAuB,CAAC,IAAD,EAAO,GAAP,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,UAAC7W,EAAD,EAAKF,CAAL,EAAQqY,SAAR,EAAmBvC,QAAnB,EAAgC;;AAG1F,SAAO;AACL0B,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLgK,WAAK,MADA;AAEL9R,WAAK,MAFA;AAGL9E,cAAQ;AAHH,KAHF;AAQL4L,iBAAa,oBARR;AASLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9BT,YAAMiK,SAAN,GAAkB,UAAC9G,MAAD,EAAS+G,EAAT,EAAgB;;AAEhC/I,kBAAUpC,IAAV,CAAe;AACbqE,uBAAaD,MADA;AAEbnE,uBAAa,2BAFA;AAGbG,sBAAY,CAAC,IAAD,EAAO,OAAP,EAAgB,UAACnW,EAAD,EAAKmhB,OAAL,EAAiB;AAC3CA,oBAAQD,EAAR,GAAaA,EAAb;;AAEA;AACAC,oBAAQzI,MAAR,GAAiB,YAAM;AACrBP,wBAAUO,MAAV;AACD,aAFD;;AAIA;AACAyI,oBAAQC,WAAR,GAAsB,UAACxa,KAAD,EAAW;AAC/B,qBAAO9G,EAAEuhB,KAAF,CAAQza,MAAMgR,KAAN,CAAY,gBAAZ,CAAR,CAAP;AACD,aAFD;;AAIA;AACAuJ,oBAAQG,GAAR,GAAc,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCN,GAAGI,GAAnC,EAAwC,iBAAxC,CAAd;;AAEA,gBAAIG,SAASN,QAAQG,GAAR,CAAYI,oBAAZ,CAAiC,KAAjC,EAAwC,CAAxC,CAAb;AACAD,mBAAOzY,EAAP,GAAU,eAAV;;AAGA;AACA2Y,uBAAW,YAAM;AACf,kBAAIC,WAAWC,SAASC,cAAT,CAAwB,UAAxB,CAAf;;AAEAF,uBAASG,WAAT,CACEH,SAASI,aAAT,CAAuBC,UAAvB,CAAkCd,QAAQG,GAAR,CAAYY,eAA9C,EAA+D,IAA/D,CADF;AAGA,kBAAIC,UAAUC,WAAW,gBAAX,EAA6B;AACzCC,2CAA2B,IADc;AAEzCC,oCAAoB;AAFqB,eAA7B,CAAd;AAIAH,sBAAQI,MAAR;AACAJ,sBAAQK,GAAR;AACAL,sBAAQM,MAAR;AACD,aAbD,EAaE,GAbF;AAeD,WApCW,CAHC;AAwCbpI,2BAAiB;AAxCJ,SAAf;AA2CD,OA7CD;AA+CD,KA1DI,CA0DH;AACF;;AA3DK,GAAP;AA6DD,CAhEsB,CAAvB;;;ACAAzb,IAAIiY,SAAJ,CAAc,eAAd,EAA+B,CAAC,YAAD,EAAe,UAAS5X,UAAT,EAAqB;AACjE,SAAO;AACL8X,UAAM,cAASC,KAAT,EAAgBC,OAAhB,EAAyBC,KAAzB,EAAgC;AACpCjY,iBAAWE,GAAX,CAAe,YAAf,EAA6B,UAAS0C,CAAT,EAAYiH,GAAZ,EAAiB;AAC5C,YAAI4Z,aAAazL,QAAQ,CAAR,CAAjB;;AAEA;AACA,YAAI4K,SAASc,SAAb,EAAwB;AACtBD,qBAAWrL,KAAX;AACA,cAAIuL,MAAMf,SAASc,SAAT,CAAmBE,WAAnB,EAAV;AACAD,cAAI/K,IAAJ,GAAW/O,GAAX;AACA4Z,qBAAWrL,KAAX;;AAEF;AACC,SAPD,MAOO,IAAIqL,WAAWI,cAAX,IAA6BJ,WAAWI,cAAX,KAA8B,CAA/D,EAAkE;;AAEvE,cAAIC,WAAWL,WAAWI,cAA1B;AACA,cAAIE,SAASN,WAAWO,YAAxB;AACA,cAAIC,YAAYR,WAAWQ,SAA3B;;AAEAR,qBAAW5e,KAAX,GAAmB4e,WAAW5e,KAAX,CAAiBqf,SAAjB,CAA2B,CAA3B,EAA8BJ,QAA9B,IAA0Cja,GAA1C,GAAgD4Z,WAAW5e,KAAX,CAAiBqf,SAAjB,CAA2BH,MAA3B,EAAmCN,WAAW5e,KAAX,CAAiByJ,MAApD,CAAnE;AACAmV,qBAAWrL,KAAX;AACAqL,qBAAWI,cAAX,GAA4BC,WAAWja,IAAIyE,MAA3C;AACAmV,qBAAWO,YAAX,GAA0BF,WAAWja,IAAIyE,MAAzC;AACAmV,qBAAWQ,SAAX,GAAuBA,SAAvB;AAED,SAZM,MAYA;AACL;AACAR,qBAAW5e,KAAX,IAAoBgF,GAApB;AACA4Z,qBAAWrL,KAAX;AACD;AAEF,OA7BD;AA8BD;AAhCI,GAAP;AAkCD,CAnC8B,CAA/B;;;ACAAzY,IAAIiY,SAAJ,CAAc,iBAAd,EAAiC,CAAC,IAAD,EAAO,GAAP,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,UAArC,EAAiD,oBAAjD,EAAuE,YAAvE,EAAqF,UAAC7W,EAAD,EAAKF,CAAL,EAAQqY,SAAR,EAAmBvC,QAAnB,EAA6BkB,QAA7B,EAAuC1F,MAAvC,EAA+C/E,MAA/C,EAA0D;;AAE9K,SAAO;AACLiL,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLzI,aAAO,QADF;AAEL6U,eAAS;AAFJ,KAHF;AAOLpN,iBAAa,0CAPR;AAQLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9B;AACAR,cAAQ,CAAR,EAAWoM,SAAX,CAAqBpiB,GAArB,CAAyB+V,MAAMzI,KAAN,CAAY3I,MAArC;;AAEA,UAAIsJ,MAAM8H,MAAM9H,GAAN,GAAY8H,MAAMzI,KAAN,CAAY/M,QAAZ,CAAqB0N,GAA3C;AACA,UAAI1N,WAAWwV,MAAMxV,QAAN,GAAiBwV,MAAMzI,KAAN,CAAY/M,QAA5C;AACA,UAAI+M,QAAQyI,MAAMzI,KAAlB;;AAEA;AACAyI,YAAMzI,KAAN,CAAY+U,KAAZ,GAAoB/U,MAAM+U,KAAN,GAAaxjB,EAAE0c,MAAF,CAASxF,MAAMzI,KAAN,CAAY+U,KAArB,EAA4B,SAA5B,CAAjC;AACAtM,YAAMuM,SAAN,GAAkB,KAAlB;AACAvM,YAAMlW,KAAN,GAAc,KAAd,CAZ8B,CAYT;AACrBkW,YAAM/R,QAAN,GAAiB,IAAIxD,KAAJ,CAAUD,SAASyD,QAAnB,CAAjB;AACA+R,YAAMwM,YAAN,GAAsBxM,MAAMoM,OAAN,KAAkB/gB,SAAxC;;AAEA;AACA,UAAIohB,cAAc,SAAdA,WAAc,GAAM;AACtBzM,cAAMlW,KAAN,GAAehB,EAAE6U,IAAF,CAAOqC,MAAMzI,KAAN,CAAY+U,KAAnB,EAA0B,EAAC1d,QAAQ,QAAT,EAA1B,CAAD,GAAkD,IAAlD,GAAyD,KAAvE;AACAoR,cAAM0M,IAAN,GAAe5jB,EAAE6U,IAAF,CAAOqC,MAAMzI,KAAN,CAAY+U,KAAnB,EAA0B,EAAC1d,QAAQ,MAAT,EAA1B,CAAD,GAAgD,IAAhD,GAAuD,KAArE;AACD,OAHD;;AAKA;AACAyG,aAAOE,EAAP,CAAU,kBAAV,EAA8B,UAACmF,IAAD,EAAU;AACtC,YAAGA,KAAKnD,KAAL,CAAWvN,KAAX,KAAqBgW,MAAMzI,KAAN,CAAYvN,KAApC,EAA2C;AACzCyiB;AACD;AACF,OAJD;;AAMA;AACAzM,YAAM2M,cAAN,GAAuB,UAACze,QAAD,EAAc;AACnCA,iBAAS0e,SAAT,GAAqB,KAArB;AACA9M,iBAAS,YAAM;AACb,cAAG,CAAC5R,SAAS0e,SAAb,EAAwB1e,SAAS6Q,IAAT,GAAgB,IAAhB;AACzB,SAFD,EAEG,GAFH;AAGD,OALD;;AAOAiB,YAAM6M,eAAN,GAAwB,UAAC3e,QAAD,EAAc;AACpCA,iBAAS0e,SAAT,GAAqB,IAArB;;AAEA9M,iBAAS,YAAM;AACb,cAAG,CAAC5R,SAAS4e,QAAb,EAAuB5e,SAAS6Q,IAAT,GAAgB,KAAhB;AACxB,SAFD,EAEG,GAFH;AAGD,OAND;;AAQAiB,YAAM+M,cAAN,GAAuB,UAAC7e,QAAD,EAAc;AACnCA,iBAAS4e,QAAT,GAAoB,IAApB;AACD,OAFD;;AAIA9M,YAAMgN,gBAAN,GAAyB,UAAC9e,QAAD,EAAc;AACrCA,iBAAS4e,QAAT,GAAkB,KAAlB;AACA5e,iBAAS6Q,IAAT,GAAgB,KAAhB;AACD,OAHD;;AAKAiB,YAAMiN,iBAAN,GAA0B,UAAC1V,KAAD,EAAW;AACnC,YAAI5G,QAAQ,CAAZ;;AAEA7H,UAAE0H,OAAF,CAAUwP,MAAMzI,KAAN,CAAY+U,KAAtB,EAA6B,UAACY,CAAD,EAAO;AAClC,cAAGA,EAAEte,MAAF,KAAa2I,KAAhB,EAAuB5G;AACxB,SAFD;;AAIA,eAAOA,KAAP;AACD,OARD;;AAUAqP,YAAMmN,eAAN,GAAwB,UAACzS,IAAD,EAAU;AAChC,YAAI2P,QAAQ,EAAZ;AACA,YAAItM,IAAI,CAAR;AACAjV,UAAE0H,OAAF,CAAUkK,KAAKE,OAAf,EAAwB,UAACwS,CAAD,EAAI/O,CAAJ,EAAU;AAChC,cAAGN,MAAI,CAAP,EAAUsM,QAAQ+C,CAAR;AACVrP;AACD,SAHD;AAIA,eAAOsM,MAAMvd,KAAb;AACD,OARD;;AAUAkT,YAAMqN,QAAN,GAAiB,YAAM;AACrBrN,cAAMuM,SAAN,GAAkB,CAACvM,MAAMuM,SAAzB;AACD,OAFD;;AAIA,UAAIe,sBAAsB,SAAtBA,mBAAsB,GAAM;;AAE9B,YAAIC,gBAAgB,CAApB;;AAEAzkB,UAAE0H,OAAF,CAAU+G,MAAM+U,KAAhB,EAAuB,UAAC5R,IAAD,EAAO2D,CAAP,EAAa;AAClC,cAAG3D,KAAK9L,MAAL,KAAgB,UAAnB,EAA+B2e;AAChC,SAFD;;AAIA,YAAGA,kBAAkBhW,MAAM+U,KAAN,CAAY/V,MAAjC,EAAyC;AACvC;AACA0J,kBAAQ,CAAR,EAAWoM,SAAX,CAAqBvb,MAArB,CAA4BkP,MAAMzI,KAAN,CAAY3I,MAAxC;AACAoR,gBAAMzI,KAAN,CAAY3I,MAAZ,GAAqB,UAArB;AACA;AACAqR,kBAAQ,CAAR,EAAWoM,SAAX,CAAqBpiB,GAArB,CAAyB+V,MAAMzI,KAAN,CAAY3I,MAArC;AACD;AAEF,OAhBD;;AAkBAoR,YAAMwN,QAAN,GAAiB,UAACrK,MAAD,EAASzI,IAAT,EAAkB;AACjCyG,kBAAUpC,IAAV,CAAe;AACbqE,uBAAaD,MADA;AAEbsK,yBAAe,KAFF;AAGbxO,kBAAQ;AACNvE,kBAAMA,IADA;AAENnD,mBAAOA,KAFD;AAGNW,iBAAKA;AAHC,WAHK;AAQb8G,uBAAa,+CARA;AASbG,sBAAY,mCATC;AAUbkE,2BAAiB;AAVJ,SAAf,EAWG1Z,IAXH,CAYE,UAACE,IAAD,EAAU;AACR;AACAf,YAAE0H,OAAF,CAAU+G,MAAM+U,KAAhB,EAAuB,UAAC5R,IAAD,EAAO2D,CAAP,EAAa;AAClC,gBAAGxU,KAAK6Q,IAAL,CAAU1Q,KAAV,KAAoB0Q,KAAK1Q,KAA5B,EAAmCuN,MAAM+U,KAAN,CAAYjO,CAAZ,IAAiBxU,KAAK6Q,IAAtB;AACpC,WAFD;;AAIA+R;AACAa;AACA;AACAtN,gBAAMzI,KAAN,GAAcA,KAAd;AACD,SAtBH,EAuBE,UAACnN,GAAD,EAAS;AACPkB,kBAAQC,GAAR,CAAY,mBAAZ,EAAiCnB,GAAjC;AACD,SAzBH;AA2BD,OA5BD;;AA+BA4V,YAAM0N,SAAN,GAAkB,UAACvK,MAAD,EAAY;;AAE5BhC,kBAAUpC,IAAV,CAAe;AACbqE,uBAAaD,MADA;AAEbsK,yBAAe,KAFF;AAGbxO,kBAAQ;AACN1H,mBAAOA,KADD;AAENW,iBAAKA;AAFC,WAHK;AAOb8G,uBAAa,gDAPA;AAQbG,sBAAY,oCARC;AASbkE,2BAAiB;AATJ,SAAf,EAUG1Z,IAVH,CAWE,UAACE,IAAD,EAAU;AACR;AACAoW,kBAAQ,CAAR,EAAWoM,SAAX,CAAqBvb,MAArB,CAA4BkP,MAAMzI,KAAN,CAAY3I,MAAxC;;AAEA6d;AACA;AACAzM,gBAAMzI,KAAN,GAAc1N,KAAK0N,KAAnB;AACAA,kBAAQ1N,KAAK0N,KAAb;AACAyI,gBAAMzI,KAAN,CAAY+U,KAAZ,GAAoBxjB,EAAE0c,MAAF,CAAS3b,KAAK0N,KAAL,CAAW+U,KAApB,EAA2B,SAA3B,CAApB;;AAEA;AACArM,kBAAQ,CAAR,EAAWoM,SAAX,CAAqBpiB,GAArB,CAAyB+V,MAAMzI,KAAN,CAAY3I,MAArC;AACD,SAvBH,EAwBE,UAACxE,GAAD,EAAS;AACPkB,kBAAQC,GAAR,CAAY,mBAAZ,EAAiCnB,GAAjC;AACD,SA1BH;AA4BD,OA9BD;;AAgCA;AACAqiB;AAED,KA1KI,CA0KH;;AA1KG,GAAP,CAF8K,CA8K3K;AAEJ,CAhLgC,CAAjC;;;ACAA7kB,IAAIuX,UAAJ,CAAe,oCAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,IAAhB,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,oBAA/C,EAAqE,UAArE,EAAiF,UAAjF,EAA6F,KAA7F,EAAoG,OAApG,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYpW,EAAZ,EAAgBmY,SAAhB,EAA2BvC,QAA3B,EAAqCxE,MAArC,EAA6CpN,KAA7C,EAAoDE,KAApD,EAA2DgL,GAA3D,EAAgEX,KAAhE,EAA0E;;AAExE6H,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAO7H,KAAP,GAAeA,KAAf;AACA6H,SAAOwJ,MAAP,GAAgB,CACd,QADc,EAEd,SAFc,EAGd,UAHc,EAId,MAJc,EAKd,QALc,EAMd,WANc,CAAhB;;AASAxJ,SAAOsC,MAAP,GAAgB,YAAM;AACpBP,cAAU5B,IAAV,CAAe,EAAChI,OAAO6H,OAAO7H,KAAf,EAAf;AACD,GAFD;;AAIA6H,SAAOuO,YAAP,GAAsB,UAAC/e,MAAD,EAAY;;AAEhC;AACA,QAAIgf,cAAc/lB,QAAQ0C,IAAR,CAAa6U,OAAO7H,KAApB,CAAlB;AACAqW,gBAAYhf,MAAZ,GAAqBA,MAArB;;AAEAwL,WAAO/P,MAAP,CAAckN,MAAMvN,KAApB,EAA2B4jB,WAA3B,EAAwCjkB,IAAxC,CACE,UAACC,MAAD,EAAY;AACVwV,aAAO7H,KAAP,GAAe3N,MAAf;AACD,KAHH,EAIE,UAACQ,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,uBAAZ,EAAqCnB,GAArC;AACD,KANH;AAQD,GAdD;;AAgBA;AACAgV,SAAOwO,WAAP,GAAqB,UAAC7L,CAAD,EAAO;;AAE1B;AACA,QAAG3C,OAAOyO,MAAP,CAAchb,IAAd,KAAuB,IAAvB,IAA+BuM,OAAOyO,MAAP,CAAchb,IAAd,CAAmB7I,KAArD,EAA4DoV,OAAO7H,KAAP,CAAauW,UAAb,GAA0B1O,OAAOyO,MAAP,CAAchb,IAAd,CAAmB7I,KAA7C;;AAE5DoQ,WAAO/P,MAAP,CAAc+U,OAAO7H,KAAP,CAAavN,KAA3B,EAAkCoV,OAAO7H,KAAzC,EAAgD5N,IAAhD,CACE,UAACC,MAAD,EAAY;AACVwV,aAAO7H,KAAP,GAAe3N,MAAf;AACAuX,gBAAU5B,IAAV,CAAe,EAAChI,OAAO6H,OAAO7H,KAAf,EAAf;AACD,KAJH,EAKE,UAACnN,GAAD,EAAS;AACPwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,uBAA9B,CAAd;AACA3V,cAAQC,GAAR,CAAYnB,GAAZ;AACD,KARH;AAWD,GAhBD;;AAkBA;AACAgV,SAAO2O,WAAP,GAAqB,UAAC1E,UAAD,EAAgB;AACnC,QAAI3b,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA,QAAG0b,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5BvJ,UAAM0G,MAAN,CAAa2V,UAAb,EAAyB1f,IAAzB,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,IAAjB;AACD,KAHH,EAIE,UAAC5E,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAYnB,GAAZ;AACAsD,eAASjE,MAAT;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AACD,GAhBD;AAkBD,CAxED,CADA;;;ACAAlH,IAAIuX,UAAJ,CAAe,mCAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,IAAhB,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,mBAA/C,EAAoE,oBAApE,EAA0F,UAA1F,EAAsG,KAAtG,EAA6G,OAA7G,EAAsH,MAAtH,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYpW,EAAZ,EAAgBmY,SAAhB,EAA2BvC,QAA3B,EAAqCrE,KAArC,EAA4CH,MAA5C,EAAoDpN,KAApD,EAA2DkL,GAA3D,EAAgEX,KAAhE,EAAuEmD,IAAvE,EAAgF;;AAE9E0E,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAO7H,KAAP,GAAeA,KAAf;AACA6H,SAAO1E,IAAP,GAAcA,IAAd;AACA0E,SAAO4O,UAAP,GAAoB,KAApB;AACA5O,SAAOyO,MAAP,GAAgB,EAAChb,MAAM,IAAP,EAAhB;AACAuM,SAAO6O,cAAP,GAAwB,KAAxB;;AAEA7O,SAAOsC,MAAP,GAAgB,YAAM;AACpBP,cAAU5B,IAAV,CAAe,EAAC7E,MAAM0E,OAAO1E,IAAd,EAAoBnD,OAAOA,KAA3B,EAAf;AACD,GAFD;;AAIA6H,SAAO8O,aAAP,GAAuB,YAAM;AAC3B9O,WAAO4O,UAAP,GAAoB,CAAC5O,OAAO4O,UAA5B;AACD,GAFD;;AAIA5O,SAAOe,MAAP,CAAc,eAAd,EAA+B,UAAC2F,MAAD,EAASC,MAAT,EAAoB;AACjD,QAAG3G,OAAO4O,UAAV,EAAsB5O,OAAO4O,UAAP,GAAoB,KAApB;AACvB,GAFD;;AAIA5O,SAAOuO,YAAP,GAAsB,UAAC/e,MAAD,EAAY;;AAEhC;AACA,QAAIuf,aAAatmB,QAAQ0C,IAAR,CAAa6U,OAAO1E,IAApB,CAAjB;;AAEAyT,eAAWvf,MAAX,GAAoBA,MAApB;;AAEA2L,UAAMlQ,MAAN,CAAa8jB,UAAb,EAAyBxkB,IAAzB,CACE,UAACC,MAAD,EAAY;AACVwV,aAAO1E,IAAP,GAAc9Q,MAAd;AACD,KAHH,EAIE,UAACQ,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,uBAAZ,EAAqCnB,GAArC;AACD,KANH;AASD,GAhBD;;AAkBAgV,SAAOgP,aAAP,GAAuB,UAACpT,OAAD,EAAa;;AAElCT,UAAMQ,aAAN,CAAoBL,KAAK1Q,KAAzB,EAAgCgR,QAAQhR,KAAxC,EAA+CL,IAA/C,CACE,UAACC,MAAD,EAAY;AACV;AACAwV,aAAO1E,IAAP,GAAcA,OAAO9Q,MAArB;AACD,KAJH;AAOD,GATD;;AAWAwV,SAAOwJ,MAAP,GAAgB,CACd,SADc,EAEd,QAFc,EAGd,MAHc,EAId,UAJc,EAKd,QALc,EAMd,WANc,CAAhB;;AASA;AACAxJ,SAAO2O,WAAP,GAAqB,UAAC1E,UAAD,EAAgB;AACnC,QAAI3b,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA,QAAG0b,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5BvJ,UAAM0G,MAAN,CAAa2V,UAAb,EAAyB1f,IAAzB,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,IAAjB;AACD,KAHH,EAIE,UAAC5E,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAYnB,GAAZ;AACAsD,eAASjE,MAAT;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AACD,GAhBD;;AAkBAsQ,SAAOnE,UAAP,GAAoB,YAAM;;AAExBV,UAAMU,UAAN,CAAiBP,KAAK1Q,KAAtB,EAA6BoV,OAAOyO,MAAP,CAAchb,IAAd,CAAmB7I,KAAhD,EAAuDL,IAAvD,CACE,UAACC,MAAD,EAAY;AACVwV,aAAO1E,IAAP,GAAcA,OAAO9Q,MAArB;AACAwV,aAAO6O,cAAP,GAAwB,KAAxB;AACD,KAJH,EAKE,UAAC7jB,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,uBAAZ,EAAqCnB,GAArC;AACD,KAPH;AAUD,GAZD;AAeD,CA9FD,CADA;;;ACAAxC,IAAIiY,SAAJ,CAAc,oBAAd,EAAoC,CAAC,IAAD,EAAO,GAAP,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,QAArC,EAA+C,UAA/C,EAA2D,mBAA3D,EAAgF,QAAhF,EAA0F,UAAC7W,EAAD,EAAKF,CAAL,EAAQqY,SAAR,EAAmBvC,QAAnB,EAA6BxE,MAA7B,EAAqC0F,QAArC,EAA+CvF,KAA/C,EAAsD8T,MAAtD,EAAiE;;AAG7L,SAAO;AACL/N,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLzI,aAAO,QADF;AAELmD,YAAM;AAFD,KAHF;AAOLsE,iBAAa,gDAPR;AAQLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9B,UAAI/F,OAAOsF,MAAMtF,IAAjB;AACA,UAAInD,QAAQyI,MAAMzI,KAAlB;;AAEAyI,YAAMtU,IAAN,GAAagP,KAAK4T,WAAlB;;AAEA;AACAtO,YAAMpF,OAAN,GAAgB;AACdlP,cAAMgP,KAAK4T,WADG;AAEdxhB,eAAO;AAFO,OAAhB;;AAKA;AACAkT,YAAMhF,OAAN,GAAgB,YAAM;;AAEpB;AACA,YAAGgF,MAAMtU,IAAN,KAAe,MAAlB,EAA0B;AACxBsU,gBAAMpF,OAAN,CAAc9N,KAAd,GAAsBuhB,OAAOrO,MAAMpF,OAAN,CAAc9N,KAArB,EAA4ByhB,WAA5B,EAAtB;AACD;;AAED;AACAhU,cAAMO,gBAAN,CAAuBJ,KAAK1Q,KAA5B,EAAmCgW,MAAMpF,OAAN,CAAc9N,KAAjD,EAAwDnD,IAAxD,CACE,UAACC,MAAD,EAAY;AACVoW,gBAAMtF,IAAN,GAAa9Q,MAAb;AACA8Q,iBAAOsF,MAAMtF,IAAb;AACD,SAJH,EAKE,UAACtQ,GAAD,EAAS;AACPkB,kBAAQC,GAAR,CAAY,oBAAZ,EAAkCnB,GAAlC;;AAEA,cAAI7B,UAAU,EAAd;;AAEAA,qBAAW,4BAAX;;AAEA,cAAG6B,IAAIP,IAAJ,CAASC,KAAT,IAAkBM,IAAIP,IAAJ,CAASC,KAAT,CAAe0kB,KAAjC,IAA0CpkB,IAAIP,IAAJ,CAASC,KAAT,CAAe0kB,KAAf,CAAqB1kB,KAA/D,IAAwEM,IAAIP,IAAJ,CAASC,KAAT,CAAe0kB,KAAf,CAAqB1kB,KAArB,CAA2BvB,OAAtG,EAA+G;AAC7GA,uBAAW,cAAc6B,IAAIP,IAAJ,CAASC,KAAT,CAAe0kB,KAAf,CAAqB1kB,KAArB,CAA2BvB,OAApD;AACD;;AAEDqW,mBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B1Y,OAA9B,CAAd;AACD,SAjBH;AAoBD,OA5BD;AA8BD,KApDI,CAoDH;AApDG,GAAP,CAH6L,CAwD1L;AAEJ,CA1DmC,CAApC;;;ACAAX,IAAIiY,SAAJ,CAAc,kBAAd,EAAkC,CAAC,IAAD,EAAO,GAAP,EAAY,UAAC7W,EAAD,EAAKF,CAAL,EAAW;;AAEvD;AACA,SAAO;AACLwX,cAAU,GADL;AAELC,gBAAY,IAFP;AAGLP,WAAO,EAHF;AAILhB,iBAAa,0CAJR;AAKLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;AAC9B;AACA,UAAIgO,aAAapJ,KAAKC,KAAL,CAAW,CAAE7E,KAAKiO,EAAL,IAAW,IAAZ,GAAoB,GAApB,GAA0BjO,KAAKiO,EAAhC,IAAsC,CAAjD,IAAsD,CAAvE;;AAEA1O,YAAM0O,EAAN,GAAWjO,KAAKiO,EAAhB;AACAzO,cAAQ0O,QAAR,CAAiB,QAAOF,UAAxB;AACD;AAXI,GAAP;AAcD,CAjBiC,CAAlC;;;ACAA;;;;;;;;AAQA7mB,IAAIiY,SAAJ,CAAc,eAAd,EAA+B,CAAC,cAAD,EAAiB,QAAjB,EAA2B,UAAS+O,YAAT,EAAuBxU,MAAvB,EAA+B;AACvF,SAAO;AACLkG,cAAU,GADL;AAELtB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAa,UAAS6P,IAAT,EAAe3O,KAAf,EAAsB;AACjC,aAAOA,MAAMlB,WAAN,IAAqBA,WAA5B;AACD,KAFD,CAFK;AAKLgB,WAAO;AACL8O,2BAAqB,GADhB;AAELC,6BAAuB;AAFlB,KALF;AASLhP,UAAM,cAASC,KAAT,EAAgB;;AAEpBA,YAAMgP,SAAN,GAAkBhP,MAAM+O,qBAAN,CAA4B5Q,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAAlB;;AAEA6B,YAAMiP,WAAN,GAAoB,EAApB;AACA,UAAI7U,OAAO8U,QAAP,CAAgBnhB,IAAhB,KAAyB,EAA7B,EAAiC;AAC/BohB;AACD;AACDnP,YAAM7X,GAAN,CAAU,qBAAV,EAAiC,YAAW;AAC1CgnB;AACD,OAFD;;AAIA;;;;AAIA,eAASA,sBAAT,GAAkC;AAChC,YAAIC,YAAJ;AACA,YAAIC,WAAJ;AACA,YAAIJ,cAAc,EAAlB;AACA,YAAIK,eAAelV,OAAO8U,QAA1B;;AAEA,eAAMI,gBAAgBA,aAAavhB,IAAb,KAAsB,EAA5C,EAAgD;AAC9CqhB,yBAAeG,gBAAgBD,YAAhB,CAAf;AACA,cAAIF,YAAJ,EAAkB;AAChBC,0BAAcG,eAAeJ,YAAf,CAAd;;AAEA,gBAAIC,gBAAgB,KAAhB,IAAyB,CAACI,0BAA0BL,YAA1B,EAAwCH,WAAxC,CAA9B,EAAoF;;AAElF,kBAAIS,aAAaN,aAAavlB,IAAb,CAAkBmW,MAAMgP,SAAxB,CAAjB;;AAEA;AACA,kBAAGI,aAAavlB,IAAb,IAAqBulB,aAAavlB,IAAb,CAAkBmW,MAAMgP,SAAxB,CAArB,IAA2D,OAAOI,aAAavlB,IAAb,CAAkBmW,MAAMgP,SAAxB,CAAP,KAA8C,UAA5G,EAAwH;AACtHU,6BAAaN,aAAavlB,IAAb,CAAkBmW,MAAMgP,SAAxB,EAAmC5U,MAAnC,CAAb;AACD;;AAED6U,0BAAYld,IAAZ,CAAiB;AACfsd,6BAAaA,WADE;AAEfM,uBAAQP,aAAavlB,IAAb,IAAqBulB,aAAavlB,IAAb,CAAkBmW,MAAMgP,SAAxB,CAAtB,GAA4DU,UAA5D,GAAyEN,aAAarhB;AAF9E,eAAjB;AAID;AACF;AACDuhB,yBAAeA,aAAalhB,MAA5B;AACD;AACD6gB,oBAAYxJ,OAAZ;AACAzF,cAAMiP,WAAN,GAAoBA,WAApB;AACD;;AAED;;;;;;;AAOA,eAASM,eAAT,CAAyBD,YAAzB,EAAuC;AACrC,YAAIM,cAAJ;AACA,YAAIR,eAAeE,YAAnB;AACA,YAAIA,aAAaO,QAAb,KAA0B,IAA9B,EAAoC;AAClC,cAAI,OAAO7P,MAAM+O,qBAAb,KAAuC,WAA3C,EAAwD;AACtDa,6BAAiBE,eAAe9P,MAAM+O,qBAArB,EAA4CO,YAA5C,CAAjB;AACA,gBAAIM,cAAJ,EAAoB;AAClBR,6BAAevnB,QAAQ0C,IAAR,CAAa6P,OAAO1Q,GAAP,CAAWkmB,cAAX,CAAb,CAAf;AACA,kBAAIR,YAAJ,EAAkB;AAChBA,6BAAanQ,MAAb,GAAsBqQ,aAAarQ,MAAnC;AACD;AACF,aALD,MAKO;AACLmQ,6BAAe,KAAf;AACD;AACF,WAVD,MAUO;AACLA,2BAAe,KAAf;AACD;AACF;AACD,eAAOA,YAAP;AACD;;AAED;;;;;;;AAOA,eAASI,cAAT,CAAwBF,YAAxB,EAAsC;AACpC,YAAIS,oBAAJ;AACA,YAAIC,iBAAJ;AACA,YAAIX,WAAJ;;AAEA,YAAI,CAACrP,MAAM8O,mBAAX,EAAgC;AAC9B;AACA,iBAAOQ,aAAavhB,IAApB;AACD;AACDiiB,4BAAoBF,eAAe9P,MAAM8O,mBAArB,EAA0CQ,YAA1C,CAApB;;AAEA,YAAIU,sBAAsB,KAA1B,EAAiC;AAC/B,iBAAO,KAAP;AACD,SAFD,MAEO,IAAI,OAAOA,iBAAP,KAA6B,WAAjC,EAA8C;AACnD,iBAAOV,aAAavhB,IAApB;AACD,SAFM,MAEA;AACL;AACAgiB,iCAAyB,OAAOT,aAAarQ,MAApB,KAA+B,WAAhC,GAA+CqQ,aAAarQ,MAAb,CAAoBgR,OAAnE,GAA6EX,YAArG;AACAD,wBAAcT,aAAaoB,iBAAb,EAAgCD,oBAAhC,CAAd;AACA,iBAAOV,WAAP;AACD;AACF;;AAED;;;;;;;;AAQA,eAASS,cAAT,CAAwBI,UAAxB,EAAoC1R,OAApC,EAA6C;AAC3C,YAAIH,CAAJ;AACA,YAAI8R,gBAAgBD,WAAW/R,KAAX,CAAiB,GAAjB,CAApB;AACA,YAAI6R,oBAAoBxR,OAAxB;;AAEA,aAAKH,IAAI,CAAT,EAAYA,IAAI8R,cAAc5Z,MAA9B,EAAsC8H,GAAtC,EAA4C;AAC1C,cAAIxW,QAAQuoB,SAAR,CAAkBJ,kBAAkBG,cAAc9R,CAAd,CAAlB,CAAlB,CAAJ,EAA4D;AAC1D2R,gCAAoBA,kBAAkBG,cAAc9R,CAAd,CAAlB,CAApB;;AAEA,gBAAG,OAAO2R,iBAAP,KAA6B,UAAhC,EAA4C;AAC1CA,kCAAoBA,kBAAkB5V,MAAlB,CAApB;AACD;AAEF,WAPD,MAOO;AACL;AACA,mBAAO/O,SAAP;AACD;AACF;AACD,eAAO2kB,iBAAP;AACD;;AAED;;;;;;;AAOA,eAASP,yBAAT,CAAmClY,KAAnC,EAA0C0X,WAA1C,EAAuD;AACrD,YAAI5Q,CAAJ;AACA,YAAIgS,cAAc,KAAlB;AACA,aAAIhS,IAAI,CAAR,EAAWA,IAAI4Q,YAAY1Y,MAA3B,EAAmC8H,GAAnC,EAAwC;AACtC,cAAI4Q,YAAY5Q,CAAZ,EAAesR,KAAf,KAAyBpY,MAAMxJ,IAAnC,EAAyC;AACvCsiB,0BAAc,IAAd;AACD;AACF;AACD,eAAOA,WAAP;AACD;AACF;AAjKI,GAAP;AAmKD,CApK8B,CAA/B;ACRA;;;ACAAzoB,IAAIiY,SAAJ,CAAc,iBAAd,EAAiC,CAAC,IAAD,EAAO,GAAP,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,UAAC7W,EAAD,EAAKF,CAAL,EAAQqY,SAAR,EAAmBvC,QAAnB,EAAgC;;AAGpG,SAAO;AACL0B,cAAU,GADL;AAELC,gBAAY,KAFP;AAGLP,WAAO;AACLkK,UAAI,KADC;AAELhS,WAAK,MAFA;AAGL9E,cAAQ;AAHH,KAHF;AAQL4L,iBAAa,gDARR;AASLe,UAAM,cAACC,KAAD,EAAQC,OAAR,EAAiBQ,IAAjB,EAA0B;;AAE9B,UAAIyJ,KAAKlK,MAAMkK,EAAf;;AAEAlK,YAAMsQ,KAAN,GAAc,UAACA,KAAD,EAAW;AACvB,YAAGA,UAAU,OAAb,EAAsB,OAAO,gBAAP;AACtB,YAAGA,UAAU,IAAb,EAAmB,OAAO,UAAP;AACnB,YAAGA,UAAU,KAAb,EAAoB,OAAO,cAAP;AACrB,OAJD;;AAMA;AACAtQ,YAAMoK,WAAN,GAAoB,UAACxa,KAAD,EAAW;AAC7B,eAAO9G,EAAEuhB,KAAF,CAAQza,MAAMgR,KAAN,CAAY,gBAAZ,CAAR,CAAP;AACD,OAFD;;AAIA;AACAZ,YAAMsK,GAAN,GAAY,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCN,GAAGI,GAAnC,EAAwC,iBAAxC,CAAZ;;AAEA,UAAIG,SAASzK,MAAMsK,GAAN,CAAUI,oBAAV,CAA+B,KAA/B,EAAsC,CAAtC,CAAb;AACAD,aAAOzY,EAAP,GAAU,mBAAmBkY,GAAGlgB,KAAhC;;AAGA;AACA2gB,iBAAW,YAAM;AACf,YAAIC,WAAWC,SAASC,cAAT,CAAwBZ,GAAGlgB,KAA3B,CAAf;;AAEA4gB,iBAASG,WAAT,CACEH,SAASI,aAAT,CAAuBC,UAAvB,CAAkCjL,MAAMsK,GAAN,CAAUY,eAA5C,EAA6D,IAA7D,CADF;AAGA,YAAIC,UAAUC,WAAW,oBAAoBlB,GAAGlgB,KAAlC,EAAyC;AACrDqhB,qCAA2B,IAD0B;AAErDC,8BAAoB;AAFiC,SAAzC,CAAd;AAIAH,gBAAQI,MAAR;AACAJ,gBAAQK,GAAR;AACAL,gBAAQM,MAAR;AACAN,gBAAQoF,UAAR;AACApF,gBAAQqF,qBAAR;AACArF,gBAAQsF,WAAR;AACAtF,gBAAQuF,mBAAR;AACD,OAjBD,EAiBE,GAjBF;AAoBD,KApDI,CAoDH;AACF;;AArDK,GAAP;AAuDD,CA1DgC,CAAjC;ACAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA9oB,IAAI+oB,MAAJ,CAAW,CAAC,eAAD,EAAkB,UAASC,aAAT,EAAwB;AACnD;AACAA,gBAAcC,YAAd,CAA2B9e,IAA3B,CAAgC,kBAAhC;AACD,CAHU,CAAX;;AAKA;AACAnK,IAAIiB,OAAJ,CAAY,kBAAZ,EAAgCioB,gBAAhC;;AAGA;;;;;;;;AAQA,SAASA,gBAAT,CAA0B7oB,UAA1B,EAAsCe,EAAtC,EAA0C;AACxC;;;;;AAKA,SAAO;AACL+nB,mBAAe,uBAACpiB,QAAD,EAAc;;AAE3BrD,cAAQC,GAAR,CAAY,iBAAZ,EAA+BoD,QAA/B;;AAEA,cAAQA,SAASC,MAAjB;AACE,aAAK,GAAL;AACEtD,kBAAQC,GAAR,CAAY,WAAZ;AACAtD,qBAAW+oB,UAAX,CAAsB,WAAtB,EAAmC,EAACzoB,SAAS,qDAAV,EAAnC;AACA;;AAEF,aAAK,GAAL;AACE+C,kBAAQC,GAAR,CAAY,WAAZ;AACA;AACF,aAAK,GAAL;AACED,kBAAQC,GAAR,CAAY,qBAAZ;AACAtD,qBAAW+oB,UAAX,CAAsB,WAAtB,EAAmC,EAACzoB,SAAS,0DAAV,EAAnC;AACA;AACF,aAAK,CAAC,CAAN;AACE+C,kBAAQC,GAAR,CAAY,oBAAZ,EAAkCoD,QAAlC;AACA1G,qBAAW+oB,UAAX,CAAsB,WAAtB,EAAmC,EAACzoB,SAAS,6EAAV,EAAnC;AACA;AAhBJ;;AAmBA,aAAOS,GAAGS,MAAH,CAAUkF,QAAV,CAAP;AACD;AAzBI,GAAP;AA4BD;;AAED;AACAmiB,iBAAiBtoB,OAAjB,GAA2B,CAAE,YAAF,EAAgB,IAAhB,CAA3B;;;ACzGA;AACAZ,IAAIG,GAAJ,CAAQ,UAACE,UAAD,EAAgB;;AAGtB;AACAA,aAAWE,GAAX,CAAe,mBAAf,EAAoC,UAACC,KAAD,EAAQ6e,OAAR,EAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,EAAqD;AACvFnf,eAAWgpB,UAAX,GAAwB,IAAxB;AACD,GAFD;;AAIA;AACAhpB,aAAWE,GAAX,CAAe,qBAAf,EAAsC,UAACC,KAAD,EAAQ6e,OAAR,EAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,EAAqD;AACzFnf,eAAWgpB,UAAX,GAAwB,KAAxB;;AAEA;AACA,QAAGhK,QAAQlZ,IAAR,KAAiB,cAApB,EAAoC;AAClC4c,iBAAW,YAAM;AACf1iB,mBAAWgpB,UAAX,GAAwB,KAAxB;AACD,OAFD,EAEG,GAFH;AAGD;AAEF,GAVD;;AAYAhpB,aAAWE,GAAX,CAAe,mBAAf,EAAoC,UAACC,KAAD,EAAQ6e,OAAR,EAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,EAAqD;;AAEvF9b,YAAQC,GAAR,CAAY,qBAAZ,EAAmCnD,KAAnC,EAA0C6e,OAA1C,EAAmDC,QAAnD;AACAjf,eAAWgpB,UAAX,GAAwB,KAAxB;AAED,GALD;;AAOA;AACAhpB,aAAWipB,OAAX,GAAqBhoB,OAAOgoB,OAA5B;AACAjpB,aAAWiB,MAAX,GAAoBA,MAApB;AAED,CAhCD;;AAkCAtB,IAAI+oB,MAAJ,CAAW,UAASQ,qBAAT,EAAgC;AACzCA,wBAAsBC,UAAtB,GAAmC,UAASC,IAAT,EAAe;AAChD,WAAOA,OAAOhD,OAAOgD,IAAP,EAAaC,MAAb,CAAoB,YAApB,CAAP,GAA2C,EAAlD;AACD,GAFD;AAGD,CAJD;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;;;ACAA1pB,IAAI+oB,MAAJ,CAAW,CAAC,mBAAD,EAAsB,oBAAtB,EAA4C,gBAA5C,EAA8D,4BAA9D,EAA4F,UAACY,iBAAD,EAAoBC,kBAApB,EAAwCC,cAAxC,EAAwDC,0BAAxD,EAAuF;AAC7L;AACAH,oBAAkBI,SAAlB,CAA4B,IAA5B;;AAEA;AACAD,6BAA2BE,UAA3B,CAAsC,KAAtC;;AAEA;AACAJ,qBAAmBK,SAAnB,CAA6B,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACtDD,cAAUpoB,GAAV,CAAc,QAAd,EAAwB+d,EAAxB,CAA2B,WAA3B,EAAwC,IAAxC,EAA8C,EAACgC,UAAU,KAAX,EAA9C;AACA,WAAOsI,UAAUC,IAAV,EAAP;AACA,GAHD;;AAOC;AACD;AACAP;;AAEC;AAFD,GAGEla,KAHF,CAGQ,QAHR,EAGkB;AAChBsY,cAAU,IADM;AAEhB7Q,iBAAa,oBAFG;AAGbxV,aAAS;AACVV,SAAG,CAAC,IAAD,EAAO,aAAP,EAAsB,QAAtB,EAAgC,UAACE,EAAD,EAAKmE,QAAL,EAAeiN,MAAf,EAA0B;AAC3D,eAAOpR,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B,cAAG,CAAC0D,SAASoH,QAAT,EAAJ,EAAyB,OAAO/K,SAAP;;AAEzB2D,mBAASyH,IAAT,GAAgBjL,IAAhB,CACE,UAACkJ,IAAD,EAAU;AACR,gBAAGA,IAAH,EAASuH,OAAOqN,EAAP,CAAU,6BAAV;AACThe,mBAAO,mBAAP;AACE,WAJN,EAKK,UAACW,GAAD,EAAS;AACVZ;AACE,WAPN;AAUE,SAdG,CAAP;AAgBE,OAjBD;AADO;AAHI,GAHlB;;AA4BC;AA5BD,GA6BE+N,KA7BF,CA6BQ,gBA7BR,EA6B0B;AACxBrM,SAAK,UADmB;AAExB8T,iBAAa,6BAFW;AAGxBG,gBAAY;AAHY,GA7B1B;;AAmCC;AAnCD,GAoCE5H,KApCF,CAoCQ,cApCR,EAoCwB;AACtBrM,SAAK,QADiB;AAEtB8T,iBAAa,yBAFS;AAGtBG,gBAAY;AAHU,GApCxB;;AA0CC;AA1CD,GA2CE5H,KA3CF,CA2CQ,OA3CR,EA2CiB;AACfsY,cAAU,IADK;AAEf3kB,SAAK,QAFU;AAGf8T,iBAAa;AAHE,GA3CjB;;AAiDC;AAjDD,GAkDEzH,KAlDF,CAkDQ,WAlDR,EAkDqB;AACnBrM,SAAK,MADc;AAEnB8T,iBAAa;AAFM,GAlDrB;;AAuDC;AAvDD,GAwDEzH,KAxDF,CAwDQ,WAxDR,EAwDqB;AACnBrM,SAAK,MADc;AAEnB8T,iBAAa;AAFM,GAxDrB;;AA6DC;AA7DD,GA8DEzH,KA9DF,CA8DQ,WA9DR,EA8DqB;AACnBrM,SAAK,MADc;AAEnB8T,iBAAa;AAFM,GA9DrB;;AAoEC;AApED,GAqEEzH,KArEF,CAqEQ,WArER,EAqEqB;AACnBsY,cAAU,IADS;AAEnBoC,WAAO;AACN,WAAK;AACJjT,qBAAa,0BADT;AAEJG,oBAAY;AAFR,OADC;AAKN,2BAAqB;AACpBH,qBAAa,wBADO;AAEpBG,oBAAY;AAFQ,OALf;AASF,4BAAsB;AACxBH,qBAAa,kCADW;AAEpBG,oBAAY;AAFQ;AATpB,KAFY;AAgBhBtV,UAAM;AACPwlB,mBAAa,WADN;AAEJ6C,uBAAiB;AAFb,KAhBU;AAoBnB1oB,aAAS;AACPqJ,YAAM,CAAC,IAAD,EAAO,aAAP,EAAsB,UAAtB,EAAkC,QAAlC,EAA4C,eAA5C,EAA6D,YAA7D,EAA2E,UAAC7J,EAAD,EAAKmE,QAAL,EAAeH,KAAf,EAAsBoN,MAAtB,EAA8B+X,aAA9B,EAA6C9c,MAA7C,EAAwD;AACvI,eAAOrM,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B;AACA0D,mBAASyH,IAAT,GACMjL,IADN,CACWqD,MAAMsH,EADjB,EAEM3K,IAFN,CAEW,UAACkJ,IAAD,EAAU;AACd;AACAsf,0BAAcvd,IAAd,GAFc,CAEQ;;AAEtBpL,oBAAQqJ,IAAR;AACD,WAPN,EAQM1I,KARN,CAQY,UAACC,GAAD,EAAS;AAChB;AACAgQ,mBAAOqN,EAAP,CAAU,cAAV;AACAhe,mBAAOW,GAAP;AACA,WAZL;AAaA,SAfK,CAAP;AAgBA,OAjBI,CADC;AAmBJgM,eAAS,CAAC,IAAD,EAAO,UAAP,EAAmB,MAAnB,EAA2B,UAACpN,EAAD,EAAKgE,KAAL,EAAY6F,IAAZ,EAAqB;AAC1D,eAAO7J,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BD,kBAAQwD,MAAMoJ,OAAN,EAAR;AACE,SAFG,CAAP;AAGE,OAJQ,CAnBL;AAwBNjF,YAAM,CAAC,IAAD,EAAO,SAAP,EAAkB,UAACnI,EAAD,EAAK6I,IAAL,EAAc;AACpC,eAAO7I,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BoI,eAAKvI,GAAL,GAAWK,IAAX,CACE,UAACwH,IAAD,EAAU;AACR3H,oBAAQ2H,IAAR;AACA,WAHJ,EAIG,UAAC/G,GAAD,EAAS;AACPX,mBAAOW,GAAP;AACA,WANL;AASA,SAVK,CAAP;AAWA,OAZI,CAxBA;AAqCJkF,gBAAU,CAAC,aAAD,EAAgB,UAACqE,QAAD,EAAc;AACzC,eAAOA,SAASrK,GAAT,EAAP;AACE,OAFS;AArCN;AApBU,GArErB,EAoIIiO,KApIJ,CAoIU,gBApIV,EAoI4B;AACvBrM,SAAK,GADkB;AAEvB8T,iBAAa,0BAFU;AAGvBG,gBAAY;AAHW,GApI5B;;AA0IC;AA1ID,GA2IE5H,KA3IF,CA2IQ,mBA3IR,EA2I6B;AAC1BsY,cAAU,IADgB;AAE3B3kB,SAAK,UAFsB;AAGxB8T,iBAAa,gCAHW;AAIxBnV,UAAM;AACJwlB,mBAAa,SADT;AAEJ6C,uBAAiB;AAFb,KAJkB;AAQxB1oB,aAAS;AACT2T,kBAAY,CAAC,IAAD,EAAO,MAAP,EAAe,QAAf,EAAyB,MAAzB,EAAiC,UAAjC,EAA6C,UAACnU,EAAD,EAAKopB,IAAL,EAAWhY,MAAX,EAAmBvH,IAAnB,EAAyB+L,QAAzB,EAAsC;AAC7F,eAAO5V,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACA,cAAG,CAAC2oB,KAAK5U,MAAL,CAAY,aAAZ,EAA2B3K,IAA3B,CAAJ,EAAsC;AACpC+L,qBAASoD,UAAT,CAAoB,qCAApB;AACA5H,mBAAOqN,EAAP,CAAU,gBAAV;;AAEEje,oBAAQ,KAAR;AACD,WALH,MAKS;AACLA,oBAAQ,IAAR;AACD;AAEF,SAZI,CAAP;AAaC,OAdS;AADH;AARe,GA3I7B,EAsKI+N,KAtKJ,CAsKU,6BAtKV,EAsKyC;AACpCrM,SAAK,YAD+B;AAEpC8T,iBAAa,4CAFuB;AAGpCG,gBAAY,wCAHwB;AAIpCtV,UAAM;AACJwlB,mBAAa,SADT;AAEJ6C,uBAAiB,yBAAC9X,MAAD,EAAY;AAC3B,YAAGA,OAAO/K,OAAP,CAAetB,IAAf,CAAoBpF,OAApB,CAA4B,cAA5B,IAA8C,CAAC,CAAlD,EAAqD,OAAO,yBAAP;AACrD,YAAGyR,OAAO/K,OAAP,CAAetB,IAAf,CAAoBpF,OAApB,CAA4B,gBAA5B,IAAgD,CAAC,CAApD,EAAuD,OAAO,2BAAP;AACvD,eAAO,6BAAP;AACD;AANG,KAJ8B;AAYpCa,aAAS;AACPmO,eAAS,CAAC,IAAD,EAAO,YAAP,EAAqB,MAArB,EAA6B,yBAA7B,EAAwD,QAAxD,EAAkE,UAAC3O,EAAD,EAAKmU,UAAL,EAAiBiV,IAAjB,EAAuB5a,OAAvB,EAAgC4C,MAAhC,EAA2C;AACpH,YAAGgY,KAAK1U,OAAL,CAAa,WAAb,CAAH,EAA8B,OAAOtD,OAAOqN,EAAP,CAAU,2BAAV,CAAP;AAC9B,eAAOjQ,QAAQlO,GAAR,CAAY,EAACsf,QAAQ,cAAT,EAAZ,CAAP;AACD,OAHQ;AADF;AAZ2B,GAtKzC,EA0LIrR,KA1LJ,CA0LU,2BA1LV,EA0LuC;AAClCrM,SAAK,UAD6B;AAElC8T,iBAAa,wCAFqB;AAGlCG,gBAAY,sCAHsB;AAIlCtV,UAAM;AACJwlB,mBAAa;AADT,KAJ4B;AAOlC7lB,aAAS;AACPmO,eAAS,CAAC,IAAD,EAAO,YAAP,EAAqB,MAArB,EAA8B,yBAA9B,EAAyD,eAAzD,EAA0E,QAA1E,EAAoF,MAApF,EAA4F,UAAC3O,EAAD,EAAKmU,UAAL,EAAiBiV,IAAjB,EAAuB5a,OAAvB,EAAgC2a,aAAhC,EAA+C/X,MAA/C,EAAuDvH,IAAvD,EAAgE;AACnK,YAAIwf,cAAcF,cAAczoB,GAAd,CAAkB,8BAAlB,CAAlB;AACA,YAAI4D,UAAU6kB,cAAczoB,GAAd,CAAkB,iBAAlB,KAAwC2B,SAAtD;AACA,YAAG+mB,KAAK1U,OAAL,CAAa,WAAb,CAAH,EAA8B,OAAOtD,OAAOqN,EAAP,CAAU,6BAAV,CAAP;;AAE9B,YAAG4K,gBAAgB,IAAhB,IAAwBA,gBAAgBhnB,SAAxC,IAAqDgnB,gBAAgB,IAAxE,EAA8E,OAAO7a,QAAQlO,GAAR,CAAY,EAACoC,MAAM,SAAP,EAAkBkd,QAAQ,wBAA1B,EAAoDtb,SAASA,OAA7D,EAAZ,CAAP;AAC9E,YAAG+kB,gBAAgB,KAAnB,EAA0B,OAAO7a,QAAQlO,GAAR,CAAY,EAACA,KAAI,IAAL,EAAWoC,MAAM,SAAjB,EAA4Bkd,QAAQ,wBAApC,EAA8Dtb,SAASA,OAAvE,EAAZ,CAAP;AAC3B,OAPQ;AADF;AAPyB,GA1LvC,EA4MIiK,KA5MJ,CA4MU,yBA5MV,EA4MqC;AAChCrM,SAAK,QAD2B;AAEhC8T,iBAAa,oCAFmB;AAGhCG,gBAAY,oCAHoB;AAIhCtV,UAAM;AACJwlB,mBAAa;AADT,KAJ0B;AAOhC7lB,aAAS;AACPmO,eAAS,CAAC,IAAD,EAAO,yBAAP,EAAkC,eAAlC,EAAmD,MAAnD,EAA2D,UAAC3O,EAAD,EAAKwO,OAAL,EAAc2a,aAAd,EAAgC;AAClG,YAAIE,cAAcF,cAAczoB,GAAd,CAAkB,4BAAlB,CAAlB;AACA,YAAG2oB,gBAAgB,IAAhB,IAAwBA,gBAAgBhnB,SAAxC,IAAqDgnB,gBAAgB,IAAxE,EAA8E,OAAO7a,QAAQlO,GAAR,CAAY,EAACoC,MAAM,OAAP,EAAgBkd,QAAQ,oBAAxB,EAAZ,CAAP;AAC9E,YAAGyJ,gBAAgB,KAAnB,EAA0B,OAAO7a,QAAQlO,GAAR,CAAY,EAACA,KAAI,IAAL,EAAWoC,MAAM,OAAjB,EAA0Bkd,QAAQ,oBAAlC,EAAZ,CAAP;AAC3B,OAJQ;AADF;AAPuB,GA5MrC,EA4NIrR,KA5NJ,CA4NU,6BA5NV,EA4NyC;AACpCrM,SAAK,YAD+B;AAEpC8T,iBAAa,4CAFuB;AAGpCG,gBAAY,wCAHwB;AAIpCtV,UAAM;AACJwlB,mBAAa;AADT,KAJ8B;AAOpC7lB,aAAS;AACPmO,eAAS,CAAC,IAAD,EAAO,yBAAP,EAAkC,eAAlC,EAAmD,MAAnD,EAA2D,UAAC3O,EAAD,EAAKwO,OAAL,EAAc2a,aAAd,EAA6Btf,IAA7B,EAAsC;AACxG,YAAI6M,WAAW,EAAC2S,aAAaF,cAAczoB,GAAd,CAAkB,8BAAlB,CAAd,EAAf;AACA,YAAIgH,OAAO;AACTpD,mBAAS,KADA;AAETsb,kBAAQ,oBAFC;AAGTQ,qBAAW;AAHF,SAAX;;AAMA,YAAG1J,SAAS2S,WAAT,KAAyB,KAA5B,EAAmC3hB,KAAKpH,GAAL,GAAW,IAAX;;AAEnC,eAAOkO,QAAQlO,GAAR,CAAYoH,IAAZ,CAAP;AACD,OAXQ;AADF;AAP2B,GA5NzC,EAmPI6G,KAnPJ,CAmPU,uBAnPV,EAmPmC;AAC9B1N,UAAM;AACJwlB,mBAAa,eADT;AAEJ6C,uBAAiB;AAFb,KADwB;AAK9BhnB,SAAK,MAAIhC,OAAOgoB,OAAP,CAAeoB,IAAnB,GAAwB,QALC;AAM9BnT,gBAAY,0BANkB;AAO9BH,iBAAa,wBAPiB;AAQ9BxV,aAAS;AACP0O,WAAK,CAAC,GAAD,EAAM,IAAN,EAAY,cAAZ,EAA4B,SAA5B,EAAuC,MAAvC,EAA+C,UAACpP,CAAD,EAAIE,EAAJ,EAAQupB,YAAR,EAAsB1gB,IAAtB,EAA4BgB,IAA5B,EAAqC;AACvF,eAAO7J,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BoI,eAAKG,EAAL,CAAQugB,aAAa7K,GAArB,EAA0B/d,IAA1B,CACE,UAACuO,GAAD,EAAS;AACPA,gBAAIsa,OAAJ,GAAc1pB,EAAEL,MAAF,CAASyP,IAAIua,QAAb,EAAuB,EAAC5f,MAAM,EAAC7I,OAAO6I,KAAK7I,KAAb,EAAP,EAAvB,CAAd;AACAR,oBAAQ0O,GAAR;AACD,WAJH,EAKE,UAAC9N,GAAD,EAAS;AACPX,mBAAO,oBAAP;AACD,WAPH;AASD,SAVM,CAAP;AAWD,OAZI;AADE;AARqB,GAnPnC,EA4QI8N,KA5QJ,CA4QU,8BA5QV,EA4Q0C;AACrCsY,cAAU,IAD2B;AAErC3kB,SAAK,SAFgC;AAGrCrB,UAAM;AACJwlB,mBAAa,kBADT;AAEJ6C,uBAAiB;AAFb,KAH+B;AAOxClT,iBAAa,8BAP2B;AAQrCxV,aAAS;AACPmO,eAAS,CAAC,IAAD,EAAO,cAAP,EAAuB,yBAAvB,EAAkD,UAAC3O,EAAD,EAAKupB,YAAL,EAAmB/a,OAAnB,EAA+B;AACxF,eAAOA,QAAQU,GAAR,CAAYqa,aAAa7K,GAAzB,EAA8Bpe,GAA9B,EAAP;AACD,OAFQ;AADF;AAR4B,GA5Q1C,EA2RIiO,KA3RJ,CA2RU,sCA3RV,EA2RkD;AAC7CrM,SAAK,UADwC;AAE7CrB,UAAM;AACJwlB,mBAAa;AADT,KAFuC;AAKhDrQ,iBAAa,uCALmC;AAM7CG,gBAAY;AANiC,GA3RlD;;AAqSG;;;;AArSH,GAySI5H,KAzSJ,CAySU,oCAzSV,EAySgD;AAC3CrM,SAAK,0BADsC;AAE3CrB,UAAM;AACJwlB,mBAAa,OADT;AAEJ6C,uBAAiB;AAFb,KAFqC;AAM3ClT,iBAAa,mCAN8B;AAO3CG,gBAAY,mCAP+B;AAQ3C3V,aAAS;AACP4J,cAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,yBAAvB,EAAkD,UAACpK,EAAD,EAAKupB,YAAL,EAAmB/a,OAAnB,EAA+B;AACvF,eAAOA,QAAQU,GAAR,CAAYqa,aAAa7K,GAAzB,EAA8Bhe,GAA9B,CAAkC6oB,aAAajL,eAA/C,CAAP;AACD,OAFO;AADD;AARkC,GAzShD,EAwTI/P,KAxTJ,CAwTU,4CAxTV,EAwTwD;AACnDrM,SAAK,UAD8C;AAEnD8T,iBAAa,6CAFsC;AAGnDG,gBAAY,2CAHuC;AAInDtV,UAAM;AACJwlB,mBAAa;AADT,KAJ6C;AAOnD7lB,aAAS;AACPkpB,uBAAiB,CAAC,IAAD,EAAO,cAAP,EAAuB,2BAAvB,EAAoD,UAAC1pB,EAAD,EAAKupB,YAAL,EAAmBI,GAAnB,EAA2B;AAC9F,eAAOA,IAAIjpB,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,OAFgB,CADV;AAIPsL,qBAAe,CAAC,IAAD,EAAO,cAAP,EAAuB,sCAAvB,EAA+D,UAAC5pB,EAAD,EAAKupB,YAAL,EAAmBjZ,IAAnB,EAA4B;AACxG,eAAOA,KAAKhQ,GAAL,CAASipB,aAAa7K,GAAtB,EAA2B6K,aAAajL,eAAxC,CAAP;AACD,OAFc,CAJR;AAOPlD,iBAAW,CAAC,IAAD,EAAO,cAAP,EAAuB,qBAAvB,EAA8C,UAACpb,EAAD,EAAKupB,YAAL,EAAmBla,UAAnB,EAAkC;AACzF,eAAOA,WAAW3O,GAAX,CAAe6oB,aAAa7K,GAA5B,EAAiC6K,aAAajL,eAA9C,CAAP;AACD,OAFU;AAPJ;AAP0C,GAxTxD,EA4UI/P,KA5UJ,CA4UU,4DA5UV,EA4UwE;AACnErM,SAAK,aAD8D;AAEnErB,UAAM;AACJwlB,mBAAa;AADT,KAF6D;AAKnErQ,iBAAa,6EALsD;AAMnEG,gBAAY,2DANuD;AAOnE3V,aAAS;AACPiC,mBAAa,CAAC,IAAD,EAAO,cAAP,EAAuB,uBAAvB,EAAgD,UAACzC,EAAD,EAAKupB,YAAL,EAAmBM,YAAnB,EAAoC;AAC/F,eAAOA,aAAa5a,MAAb,CAAoBsa,aAAa7K,GAAjC,EAAsC6K,aAAajL,eAAnD,CAAP;AACD,OAFY,CADN;AAIPwL,0BAAoB,CAAC,IAAD,EAAO,cAAP,EAAuB,uBAAvB,EAAgD,UAAC9pB,EAAD,EAAKupB,YAAL,EAAmBM,YAAnB,EAAoC;AACtG,eAAOA,aAAa1a,OAAb,CAAqBoa,aAAa7K,GAAlC,EAAuC6K,aAAajL,eAApD,EAAqE,YAArE,CAAP;AACD,OAFmB,CAJb;AAOPyL,2BAAqB,CAAC,IAAD,EAAO,cAAP,EAAuB,uBAAvB,EAAgD,UAAC/pB,EAAD,EAAKupB,YAAL,EAAmBM,YAAnB,EAAoC;AACvG,eAAOA,aAAa1a,OAAb,CAAqBoa,aAAa7K,GAAlC,EAAuC6K,aAAajL,eAApD,EAAqE,aAArE,CAAP;AACD,OAFoB;AAPd;AAP0D,GA5UxE,EAgWI/P,KAhWJ,CAgWU,+CAhWV,EAgW2D;AACtDrM,SAAK,aADiD;AAEtDrB,UAAM;AACJwlB,mBAAa;AADT,KAFgD;AAKtDrQ,iBAAa,mDALyC;AAMtDG,gBAAY,8CAN0C;AAOtD3V,aAAS;AACPwpB,oBAAc,CAAC,IAAD,EAAO,cAAP,EAAuB,gBAAvB,EAAyC,UAAChqB,EAAD,EAAKupB,YAAL,EAAmBhX,WAAnB,EAAmC;AACxF,eAAOA,YAAYC,IAAZ,CAAiB+W,aAAa7K,GAA9B,EAAmC6K,aAAajL,eAAhD,CAAP;AACD,OAFa;AADP;AAP6C,GAhW3D,EA8WI/P,KA9WJ,CA8WU,yCA9WV,EA8WqD;AAChDrM,SAAK,OAD2C;AAEhDrB,UAAM;AACJwlB,mBAAa;AADT,KAF0C;AAKhDrQ,iBAAa,uCALmC;AAMhDG,gBAAY;AANoC,GA9WrD;;AAwXG;;;;AAxXH,GA4XI5H,KA5XJ,CA4XU,sCA5XV,EA4XkD;AAC7CrM,SAAK,4BADwC;AAE7CrB,UAAM;AACJwlB,mBAAa,SADT;AAEJ6C,uBAAiB;AAFb,KAFuC;AAM7ClT,iBAAa,uCANgC;AAO7CG,gBAAY,qCAPiC;AAQ7C3V,aAAS;AACP4J,cAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,yBAAvB,EAAkD,UAACpK,EAAD,EAAKupB,YAAL,EAAmB/a,OAAnB,EAA+B;AACvF,eAAOA,QAAQU,GAAR,CAAYqa,aAAa7K,GAAzB,EAA8Bhe,GAA9B,CAAkC6oB,aAAajL,eAA/C,CAAP;AACD,OAFO;AADD;AARoC,GA5XlD,EA2YI/P,KA3YJ,CA2YU,8CA3YV,EA2Y0D;AACrDrM,SAAK,UADgD;AAErD8T,iBAAa,+CAFwC;AAGrDG,gBAAY,6CAHyC;AAIrDtV,UAAM;AACJwlB,mBAAa;AADT,KAJ+C;AAOrD7lB,aAAS;AACP2P,WAAK,CAAC,IAAD,EAAO,cAAP,EAAuB,yCAAvB,EAAkE,UAACnQ,EAAD,EAAKupB,YAAL,EAAmBrZ,IAAnB,EAA4B;AACjG,eAAOA,KAAK5P,GAAL,CAASipB,aAAa7K,GAAtB,EAA2B6K,aAAajL,eAAxC,CAAP;AACD,OAFI,CADE;AAIP2L,UAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,2BAAvB,EAAoD,UAACjqB,EAAD,EAAKupB,YAAL,EAAmBzY,GAAnB,EAA2B;AACjF,eAAOA,IAAIpQ,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,OAFG,CAJG;AAOP5d,WAAK,CAAC,IAAD,EAAO,cAAP,EAAuB,sCAAvB,EAA+D,UAACV,EAAD,EAAKupB,YAAL,EAAmBjZ,IAAnB,EAA4B;AAC9F,eAAOA,KAAKhQ,GAAL,CAASipB,aAAa7K,GAAtB,EAA2B6K,aAAajL,eAAxC,CAAP;AACD,OAFI,CAPE;AAUPpD,UAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAClb,EAAD,EAAKupB,YAAL,EAAmB/Y,GAAnB,EAA2B;AACnF,eAAOA,IAAI9P,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,OAFG,CAVG;AAaP4L,UAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,yBAAvB,EAAkD,UAAClqB,EAAD,EAAKupB,YAAL,EAAmB3Y,GAAnB,EAA2B;AAC/E,eAAOA,IAAItQ,GAAJ,CAAQipB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,OAFG,CAbG;AAgBP5D,yBAAmB,CAAC,IAAD,EAAO,cAAP,EAAuB,wCAAvB,EAAiE,UAAC1a,EAAD,EAAKupB,YAAL,EAAmBlW,kBAAnB,EAA0C;AAC5H,eAAOA,mBAAmB/S,GAAnB,CAAuBipB,aAAa7K,GAApC,EAAyC6K,aAAajL,eAAtD,CAAP;AACD,OAFkB,CAhBZ;AAmBP6L,iBAAW,CAAC,IAAD,EAAO,cAAP,EAAuB,uBAAvB,EAAgD,UAACnqB,EAAD,EAAKupB,YAAL,EAAmBhZ,UAAnB,EAAkC;AAC3F,eAAOA,WAAW7P,GAAX,CAAe6oB,aAAa7K,GAA5B,EAAiC6K,aAAajL,eAA9C,CAAP;AACD,OAFU;AAnBJ;AAP4C,GA3Y1D,EA4aI/P,KA5aJ,CA4aU,sDA5aV,EA4akE;AAC7DrM,SAAK,kBADwD;AAE7DrB,UAAM;AACJwlB,mBAAa;AADT,KAFuD;AAK7DrQ,iBAAa,+DALgD;AAM7DG,gBAAY,qDANiD;AAO7D3V,aAAS;AACPqH,gBAAU,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAC7H,EAAD,EAAKupB,YAAL,EAAmBa,SAAnB,EAAiC;AAC/F,eAAOA,UAAU1pB,GAAV,CAAc6oB,aAAa7K,GAA3B,EAAgC6K,aAAajL,eAA7C,CAAP;AACD,OAFS;AADH;AAPoD,GA5alE,EA0bI/P,KA1bJ,CA0bU,sDA1bV,EA0bkE;AAC7DrM,SAAK,kBADwD;AAE7DrB,UAAM;AACJwlB,mBAAa;AADT,KAFuD;AAK7DrQ,iBAAa,+DALgD;AAM7DG,gBAAY,qDANiD;AAO7D3V,aAAS;AACP6pB,eAAS,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAACrqB,EAAD,EAAKupB,YAAL,EAAmBe,QAAnB,EAAgC;AAC7F,eAAOA,SAAS5pB,GAAT,CAAa6oB,aAAa7K,GAA1B,EAA+B6K,aAAajL,eAA5C,CAAP;AACD,OAFQ;AADF;AAPoD,GA1blE,EAwcI/P,KAxcJ,CAwcU,oDAxcV,EAwcgE;AAC3DrM,SAAK,gBADsD;AAE3DrB,UAAM;AACJwlB,mBAAa;AADT,KAFqD;AAK3DrQ,iBAAa,2DAL8C;AAM3DG,gBAAY,mDAN+C;AAO3D3V,aAAS;AACPiC,mBAAa,CAAC,IAAD,EAAO,cAAP,EAAuB,yCAAvB,EAAkE,UAACzC,EAAD,EAAKupB,YAAL,EAAmBva,IAAnB,EAA4B;AACzG,eAAOA,KAAKC,MAAL,CAAYsa,aAAa7K,GAAzB,EAA8B6K,aAAajL,eAA3C,CAAP;AACD,OAFY,CADN;AAIPwL,0BAAoB,CAAC,IAAD,EAAO,cAAP,EAAuB,yCAAvB,EAAkE,UAAC9pB,EAAD,EAAKupB,YAAL,EAAmBva,IAAnB,EAA4B;AAChH,eAAOA,KAAKG,OAAL,CAAaoa,aAAa7K,GAA1B,EAA+B6K,aAAajL,eAA5C,EAA6D,YAA7D,CAAP;AACD,OAFmB,CAJb;AAOPyL,2BAAqB,CAAC,IAAD,EAAO,cAAP,EAAuB,yCAAvB,EAAkE,UAAC/pB,EAAD,EAAKupB,YAAL,EAAmBva,IAAnB,EAA4B;AACjH,eAAOA,KAAKG,OAAL,CAAaoa,aAAa7K,GAA1B,EAA+B6K,aAAajL,eAA5C,EAA6D,aAA7D,CAAP;AACD,OAFoB,CAPd;AAUXiM,qBAAe,CAAC,IAAD,EAAO,cAAP,EAAuB,2CAAvB,EAAoE,UAACvqB,EAAD,EAAKupB,YAAL,EAAmBvW,GAAnB,EAA2B;AACxG,eAAOA,IAAI/D,MAAJ,CAAWsa,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,CAAP;AACD,OAFU;AAVJ;AAPkD,GAxchE,EA+dI/P,KA/dJ,CA+dU,8DA/dV,EA+d0E;AACrErM,SAAK,0BADgE;AAErErB,UAAM;AACJwlB,mBAAa;AADT,KAF+D;AAKrErQ,iBAAa,+EALwD;AAMrEG,gBAAY,6DANyD;AAOrE3V,aAAS;AACPgqB,cAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,eAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,kBAA3D,CAAP;AACD,OAFO,CADD;AAIPmM,yBAAmB,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACzqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACnF,eAAOA,OAAOG,YAAP,CAAoB0Z,aAAa7K,GAAjC,EAAsC6K,aAAajL,eAAnD,CAAP;AACD,OAFkB;AAJZ;AAP4D,GA/d1E,EAgfI/P,KAhfJ,CAgfU,gDAhfV,EAgf4D;AACvDrM,SAAK,YADkD;AAEvDrB,UAAM;AACJwlB,mBAAa;AADT,KAFiD;AAKvDrQ,iBAAa,mDAL0C;AAMvDG,gBAAY,+CAN2C;AAOvD3V,aAAS;AACPgqB,cAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,eAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,kBAA3D,CAAP;AACD,OAFO;AADD;AAP8C,GAhf5D,EA8fI/P,KA9fJ,CA8fU,+CA9fV,EA8f2D;AACtDrM,SAAK,WADiD;AAEtDrB,UAAM;AACJwlB,mBAAa;AADT,KAFgD;AAKtDrQ,iBAAa,iDALyC;AAMtDG,gBAAY,8CAN0C;AAOtD3V,aAAS;AACPgqB,cAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,eAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,oCAA3D,CAAP;AACD,OAFO;AADD;AAP6C,GA9f3D,EA4gBI/P,KA5gBJ,CA4gBU,qDA5gBV,EA4gBiE;AAC5DrM,SAAK,iBADuD;AAE5DrB,UAAM;AACJwlB,mBAAa;AADT,KAFsD;AAK5DrQ,iBAAa,6DAL+C;AAM5DG,gBAAY,oDANgD;AAO5D3V,aAAS;AACPgqB,cAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,eAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,mDAA3D,CAAP;AACD,OAFO,CADD;AAIPoM,6BAAuB,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAAC1qB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACvF,eAAOA,OAAOE,eAAP,CAAuB2Z,aAAa7K,GAApC,EAAyC6K,aAAajL,eAAtD,CAAP;AACD,OAFsB,CAJhB;AAOPpD,UAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAClb,EAAD,EAAKupB,YAAL,EAAmB/Y,GAAnB,EAA2B;AACnF,eAAOA,IAAI9P,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,OAFG,CAPG;AAUPqM,sBAAgB,CAAC,IAAD,EAAO,cAAP,EAAuB,qCAAvB,EAA8D,UAAC3qB,EAAD,EAAKupB,YAAL,EAAmBqB,UAAnB,EAAkC;AAC9G,eAAOA,WAAWtqB,GAAX,CAAeipB,aAAa7K,GAA5B,EAAiC6K,aAAajL,eAA9C,CAAP;AACD,OAFe,CAVT;AAaP5D,yBAAmB,CAAC,IAAD,EAAO,cAAP,EAAuB,wCAAvB,EAAiE,UAAC1a,EAAD,EAAKupB,YAAL,EAAmBlW,kBAAnB,EAA0C;AAC5H,eAAOA,mBAAmB/S,GAAnB,CAAuBipB,aAAa7K,GAApC,EAAyC6K,aAAajL,eAAtD,CAAP;AACD,OAFkB;AAbZ;AAPmD,GA5gBjE,EAsiBI/P,KAtiBJ,CAsiBU,yDAtiBV,EAsiBqE;AAChErM,SAAK,qBAD2D;AAEhErB,UAAM;AACJwlB,mBAAa;AADT,KAF0D;AAKhErQ,iBAAa,qEALmD;AAMhEG,gBAAY,wDANoD;AAOhE3V,aAAS;AACPgqB,cAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,eAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,2EAA3D,CAAP;AACD,OAFO,CADD;AAIPpD,UAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAClb,EAAD,EAAKupB,YAAL,EAAmB/Y,GAAnB,EAA2B;AACnF,eAAOA,IAAI9P,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,OAFG,CAJG;AAOP9G,YAAM,CAAC,IAAD,EAAO,cAAP,EAAuB,4BAAvB,EAAqD,UAACxX,EAAD,EAAKupB,YAAL,EAAmB9W,IAAnB,EAA4B;AACrF,eAAOA,KAAKnS,GAAL,CAASipB,aAAa7K,GAAtB,EAA2B6K,aAAajL,eAAxC,CAAP;AACD,OAFK;AAPC;AAPuD,GAtiBrE,EA0jBI/P,KA1jBJ,CA0jBU,0DA1jBV,EA0jBsE;AACjErM,SAAK,sBAD4D;AAEjErB,UAAM;AACJwlB,mBAAa;AADT,KAF2D;AAKjErQ,iBAAa,uEALoD;AAMjEG,gBAAY,yDANqD;AAOjE3V,aAAS;AACPgqB,cAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,eAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,qGAA3D,CAAP;AACD,OAFO,CADD;AAIPpD,UAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAClb,EAAD,EAAKupB,YAAL,EAAmB/Y,GAAnB,EAA2B;AACnF,eAAOA,IAAI9P,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,OAFG,CAJG;AAOP0C,WAAK,CAAC,IAAD,EAAO,cAAP,EAAuB,4BAAvB,EAAqD,UAAChhB,EAAD,EAAKupB,YAAL,EAAmBhW,GAAnB,EAA2B;AACnF,eAAOA,IAAIjT,GAAJ,CAAQipB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,OAFI,CAPE;AAUPoM,6BAAuB,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAAC1qB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACvF,eAAOA,OAAOE,eAAP,CAAuB2Z,aAAa7K,GAApC,EAAyC6K,aAAajL,eAAtD,CAAP;AACD,OAFsB;AAVhB;AAPwD,GA1jBtE,EAilBI/P,KAjlBJ,CAilBU,yDAjlBV,EAilBqE;AAChErM,SAAK,qBAD2D;AAEhErB,UAAM;AACJwlB,mBAAa;AADT,KAF0D;AAKhErQ,iBAAa,+EALmD;AAMhEG,gBAAY,wDANoD;AAOhE3V,aAAS;AACP0a,UAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAClb,EAAD,EAAKupB,YAAL,EAAmB/Y,GAAnB,EAA2B;AACnF,eAAOA,IAAI9P,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,OAFG,CADG;AAIP5B,gBAAU,CAAC,IAAD,EAAO,cAAP,EAAuB,gCAAvB,EAAyD,UAAC1c,EAAD,EAAKupB,YAAL,EAAmBsB,SAAnB,EAAiC;AAClG,eAAOA,UAAUvqB,GAAV,CAAcipB,aAAa7K,GAA3B,EAAgC6K,aAAajL,eAA7C,CAAP;AACD,OAFS,CAJH;AAOPwM,mBAAa,CAAC,IAAD,EAAO,cAAP,EAAuB,mCAAvB,EAA4D,UAAC9qB,EAAD,EAAKupB,YAAL,EAAmB7W,WAAnB,EAAmC;AAC1G,eAAOA,YAAYpS,GAAZ,CAAgBipB,aAAa7K,GAA7B,EAAkC6K,aAAajL,eAA/C,CAAP;AACD,OAFY,CAPN;AAUPyM,qBAAe,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAAC/qB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AAC/E,eAAOA,OAAOC,gBAAP,CAAwB4Z,aAAa7K,GAArC,EAA0C6K,aAAajL,eAAvD,CAAP;AACD,OAFc;AAVR;AAPuD,GAjlBrE,EAwmBI/P,KAxmBJ,CAwmBU,iDAxmBV,EAwmB6D;AACxDrM,SAAK,aADmD;AAExDrB,UAAM;AACJwlB,mBAAa;AADT,KAFkD;AAKxDrQ,iBAAa,kEAL2C;AAMxDG,gBAAY,gDAN4C;AAOxD3V,aAAS;AACPwqB,mBAAa,CAAC,IAAD,EAAO,cAAP,EAAuB,kBAAvB,EAA2C,UAAChrB,EAAD,EAAKupB,YAAL,EAAmBtW,aAAnB,EAAqC;AAC3F,eAAOA,cAAcC,UAAd,CAAyB5S,GAAzB,CAA6BipB,aAAa7K,GAA1C,EAA+C6K,aAAajL,eAA5D,CAAP;AACD,OAFY;AADN;AAP+C,GAxmB7D,EAsnBI/P,KAtnBJ,CAsnBU,4CAtnBV,EAsnBwD;AACnDrM,SAAK,QAD8C;AAEnDrB,UAAM;AACJwlB,mBAAa;AADT,KAF6C;AAKnDrQ,iBAAa,wDALsC;AAMnDG,gBAAY,2CANuC;AAOnD3V,aAAS;AACPyqB,cAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,kBAAvB,EAA2C,UAACjrB,EAAD,EAAKupB,YAAL,EAAmBtW,aAAnB,EAAqC;AACtF,eAAOA,cAAcE,KAAd,CAAoB7S,GAApB,CAAwBipB,aAAa7K,GAArC,EAA0C6K,aAAajL,eAAvD,CAAP;AACD,OAFO;AADD;AAP0C,GAtnBxD,EAooBI/P,KApoBJ,CAooBU,iDApoBV,EAooB6D;AACxDrM,SAAK,aADmD;AAExDrB,UAAM;AACJwlB,mBAAa;AADT,KAFkD;AAKxDrQ,iBAAa,qDAL2C;AAMxDG,gBAAY,gDAN4C;AAOxD3V,aAAS;AACPwpB,oBAAc,CAAC,IAAD,EAAO,cAAP,EAAuB,gBAAvB,EAAyC,UAAChqB,EAAD,EAAKupB,YAAL,EAAmBhX,WAAnB,EAAmC;AACxF,eAAOA,YAAYC,IAAZ,CAAiB+W,aAAa7K,GAA9B,EAAmC6K,aAAajL,eAAhD,CAAP;AACD,OAFa;AADP;AAP+C,GApoB7D,EAkpBI/P,KAlpBJ,CAkpBU,2CAlpBV,EAkpBuD;AAClDrM,SAAK,OAD6C;AAElDrB,UAAM;AACJwlB,mBAAa;AADT,KAF4C;AAKlDrQ,iBAAa,yCALqC;AAMlDG,gBAAY;AANsC,GAlpBvD,EA2pBI5H,KA3pBJ,CA2pBU,8CA3pBV,EA2pB0D;AACrDrM,SAAK,UADgD;AAErDrB,UAAM;AACJwlB,mBAAa;AADT,KAF+C;AAKrDrQ,iBAAa,+CALwC;AAMrDG,gBAAY,6CANyC;AAOrD3V,aAAS;AACPyG,eAAS,CAAC,IAAD,EAAO,cAAP,EAAuB,oBAAvB,EAA6C,UAACjH,EAAD,EAAKupB,YAAL,EAAmBpf,QAAnB,EAAgC;AACpF,eAAOA,SAASof,aAAa7K,GAAtB,EAA2B6K,aAAajL,eAAxC,EAAyDhe,GAAzD,EAAP;AACD,OAFQ,CADF;AAIP4qB,YAAM,CAAC,IAAD,EAAO,cAAP,EAAuB,oBAAvB,EAA6C,UAAClrB,EAAD,EAAKupB,YAAL,EAAmBpf,QAAnB,EAAgC;AACjF,eAAOA,SAASof,aAAa7K,GAAtB,EAA2B6K,aAAajL,eAAxC,EAAyD7T,GAAzD,CAA6DnK,GAA7D,EAAP;AACD,OAFK;AAJC;AAP4C,GA3pB1D,EA4qBIiO,KA5qBJ,CA4qBU,kDA5qBV,EA4qB8D;AACzDrM,SAAK,cADoD;AAEzDrB,UAAM;AACJwlB,mBAAa;AADT,KAFmD;AAKzDrQ,iBAAa,uDAL4C;AAMzDG,gBAAY,iDAN6C;AAOzD3V,aAAS;AACP2Y,mBAAa,CAAC,IAAD,EAAO,cAAP,EAAuB,wBAAvB,EAAiD,UAACnZ,EAAD,EAAKupB,YAAL,EAAmB3c,YAAnB,EAAoC;AAChG,eAAOA,aAAatM,GAAb,CAAiBipB,aAAa7K,GAA9B,EAAmC6K,aAAajL,eAAhD,CAAP;AACD,OAFY;AADN;AAPgD,GA5qB9D,EA0rBI/P,KA1rBJ,CA0rBU,iBA1rBV,EA0rB6B;AACxBrM,SAAK,QADmB;AAExBrB,UAAM;AACJwlB,mBAAa;AADT,KAFkB;AAKxBrQ,iBAAa;AALW,GA1rB7B,EAksBIzH,KAlsBJ,CAksBU,uBAlsBV,EAksBmC;AAC9BrM,SAAK,QADyB;AAE9BrB,UAAM;AACJwlB,mBAAa,gBADT;AAEJ6C,uBAAiB;AAFb,KAFwB;AAM9B/S,gBAAY,kCANkB;AAO9BH,iBAAa,iCAPiB;AAQ9BxV,aAAS;AACP8e,aAAO,CAAC,IAAD,EAAO,UAAP,EAAmB,UAACtf,EAAD,EAAKgE,KAAL,EAAe;AACvC,eAAOA,MAAM1D,GAAN,EAAP;AACD,OAFM,CADA;AAIP6M,cAAQ,CAAC,IAAD,EAAO,UAAP,EAAmB,UAACnN,EAAD,EAAKgE,KAAL,EAAe;AACxC,eAAOA,MAAMwJ,KAAN,CAAYlN,GAAZ,EAAP;AACD,OAFO;AAJD;AARqB,GAlsBnC,EAotBIiO,KAptBJ,CAotBU,gCAptBV,EAotB4C;AACvCrM,SAAK,WADkC;AAEvCrB,UAAM;AACJwlB,mBAAa;AADT,KAFiC;AAKvClQ,gBAAY,2CAL2B;AAMvCH,iBAAa;AAN0B,GAptB5C,EA6tBIzH,KA7tBJ,CA6tBU,8BA7tBV,EA6tB0C;AACrCrM,SAAK,SADgC;AAErCrB,UAAM;AACJwlB,mBAAa;AADT,KAF+B;AAKrClQ,gBAAY,yCALyB;AAMrCH,iBAAa;AANwB,GA7tB1C,EAsuBIzH,KAtuBJ,CAsuBU,OAtuBV,EAsuBmB;AACdrM,SAAK,QADS;AAEd2kB,cAAU,IAFI;AAGd7Q,iBAAa,kBAHC;AAIdG,gBAAY,kBAJE;AAKdtV,UAAM;AACJwlB,mBAAa;AADT,KALQ;AAQd7lB,aAAS;AACPqJ,YAAM,CAAC,IAAD,EAAO,aAAP,EAAsB,QAAtB,EAAgC,UAAC7J,EAAD,EAAKmE,QAAL,EAAeiN,MAAf,EAA0B;AAC9D,eAAOpR,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B;AACA0D,mBAASyH,IAAT,GAAgBjL,IAAhB,CACE,UAACkJ,IAAD,EAAU;AACR;AACArJ,oBAAQqJ,IAAR;AACD,WAJH,EAKE,UAACzI,GAAD,EAAS;AACP;AACAgQ,mBAAOqN,EAAP,CAAU,cAAV;AACAhe,mBAAOW,GAAP;AACD,WATH;AAYD,SAdM,CAAP;AAeD,OAhBK;AADC;AARK,GAtuBnB,EAmwBImN,KAnwBJ,CAmwBU,WAnwBV,EAmwBuB;AAClBrM,SAAK,WADa;AAElB2kB,cAAU,IAFQ;AAGlBhmB,UAAM;AACJwlB,mBAAa;AADT,KAHY;AAMlBjU,cAAU,cANQ;AAOlB5R,aAAS;AACP0O,WAAK,CAAC,IAAD,EAAO,cAAP,EAAuB,SAAvB,EAAkC,UAAClP,EAAD,EAAKupB,YAAL,EAAmB1gB,IAAnB,EAA4B;AACjE,eAAOA,KAAKG,EAAL,CAAQugB,aAAa7K,GAArB,CAAP;AACD,OAFI;AADE;AAPS,GAnwBvB,EAixBInQ,KAjxBJ,CAixBU,kBAjxBV,EAixB8B;AACzBrM,SAAK,0BADoB;AAEzB2kB,cAAU,IAFe;AAGzBzU,cAAU,cAHe;AAIzB5R,aAAS;AACP4J,cAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,yBAAvB,EAAkD,UAACpK,EAAD,EAAKupB,YAAL,EAAmB/a,OAAnB,EAA+B;AACvF,eAAOA,QAAQU,GAAR,CAAYqa,aAAa7K,GAAzB,EAA8Bhe,GAA9B,CAAkC6oB,aAAajL,eAA/C,CAAP;AACD,OAFO;AADD;AAJgB,GAjxB9B,EA4xBI/P,KA5xBJ,CA4xBU,0BA5xBV,EA4xBsC;AACjCrM,SAAK,UAD4B;AAEjCrB,UAAM;AACJwlB,mBAAa;AADT,KAF2B;AAKjC4C,WAAO;AACL,UAAI;AACFjT,qBAAa,mCADX;AAEFG,oBAAY;AAFV,OADC;AAKL,0CAAoC;AAClCH,qBAAa,oDADqB;AAElCG,oBAAY,6CAFsB;AAGlC3V,iBAAS;AACP2P,eAAK,CAAC,IAAD,EAAO,cAAP,EAAuB,yCAAvB,EAAkE,UAACnQ,EAAD,EAAKupB,YAAL,EAAmBrZ,IAAnB,EAA4B;AACjG,mBAAOA,KAAK5P,GAAL,CAASipB,aAAa7K,GAAtB,EAA2B6K,aAAajL,eAAxC,CAAP;AACD,WAFI,CADE;AAIP5d,eAAK,CAAC,IAAD,EAAO,cAAP,EAAuB,sCAAvB,EAA+D,UAACV,EAAD,EAAKupB,YAAL,EAAmBjZ,IAAnB,EAA4B;AAC9F,mBAAOA,KAAKhQ,GAAL,CAASipB,aAAa7K,GAAtB,EAA2B6K,aAAajL,eAAxC,CAAP;AACD,WAFI,CAJE;AAOPpD,cAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAClb,EAAD,EAAKupB,YAAL,EAAmB/Y,GAAnB,EAA2B;AACnF,mBAAOA,IAAI9P,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,WAFG,CAPG;AAUP2L,cAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,2BAAvB,EAAoD,UAACjqB,EAAD,EAAKupB,YAAL,EAAmBzY,GAAnB,EAA2B;AACjF,mBAAOA,IAAIpQ,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,WAFG,CAVG;AAaP4L,cAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,yBAAvB,EAAkD,UAAClqB,EAAD,EAAKupB,YAAL,EAAmB3Y,GAAnB,EAA2B;AAC/E,mBAAOA,IAAItQ,GAAJ,CAAQipB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,WAFG,CAbG;AAgBP5D,6BAAmB,CAAC,IAAD,EAAO,cAAP,EAAuB,wCAAvB,EAAiE,UAAC1a,EAAD,EAAKupB,YAAL,EAAmBlW,kBAAnB,EAA0C;AAC5H,mBAAOA,mBAAmB/S,GAAnB,CAAuBipB,aAAa7K,GAApC,EAAyC6K,aAAajL,eAAtD,CAAP;AACD,WAFkB;AAhBZ;AAHyB,OAL/B;AA6BL,kDAA4C;AAC1CtI,qBAAa,oEAD6B;AAE1CG,oBAAY,qDAF8B;AAG1C3V,iBAAS;AACPqH,oBAAU,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAC7H,EAAD,EAAKupB,YAAL,EAAmBa,SAAnB,EAAiC;AAC/F,mBAAOA,UAAU1pB,GAAV,CAAc6oB,aAAa7K,GAA3B,EAAgC6K,aAAajL,eAA7C,CAAP;AACD,WAFS;AADH;AAHiC,OA7BvC;AAsCL,kDAA4C;AAC1CtI,qBAAa,oEAD6B;AAE1CG,oBAAY,qDAF8B;AAG1C3V,iBAAS;AACP6pB,mBAAS,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAACrqB,EAAD,EAAKupB,YAAL,EAAmBe,QAAnB,EAAgC;AAC7F,mBAAOA,SAAS5pB,GAAT,CAAa6oB,aAAa7K,GAA1B,EAA+B6K,aAAajL,eAA5C,CAAP;AACD,WAFQ;AADF;AAHiC,OAtCvC;AA+CL,wDAAkD,EAAEtI,aAAa,0EAAf,EA/C7C;AAgDL,qDAA+C;AAC7CA,qBAAa,0EADgC;AAE7CG,oBAAY,wDAFiC;AAG7C3V,iBAAS;AACP2Y,uBAAa,CAAC,IAAD,EAAO,cAAP,EAAuB,wBAAvB,EAAiD,UAACnZ,EAAD,EAAKupB,YAAL,EAAmB3c,YAAnB,EAAoC;AAChG,mBAAOA,aAAatM,GAAb,CAAiBipB,aAAa7K,GAA9B,EAAmC6K,aAAajL,eAAhD,CAAP;AACD,WAFY;AADN;AAHoC,OAhD1C;AAyDL,oDAA8C;AAC5CtI,qBAAa,uDAD+B;AAE5CG,oBAAY,2CAFgC;AAG5C3V,iBAAS;AACPyqB,kBAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,kBAAvB,EAA2C,UAACjrB,EAAD,EAAKupB,YAAL,EAAmBtW,aAAnB,EAAqC;AACtF,mBAAOA,cAAcE,KAAd,CAAoB7S,GAApB,CAAwBipB,aAAa7K,GAArC,EAA0C6K,aAAajL,eAAvD,CAAP;AACD,WAFO;AADD;AAHmC,OAzDzC;AAkEL,sCAAgC;AAC9BtI,qBAAa,4CADiB;AAE9BG,oBAAY,yCAFkB;AAG9B3V,iBAAS;AACPiC,uBAAa,CAAC,IAAD,EAAO,cAAP,EAAuB,yCAAvB,EAAkE,UAACzC,EAAD,EAAKupB,YAAL,EAAmBva,IAAnB,EAA4B;AACzG,mBAAOA,KAAKC,MAAL,CAAYsa,aAAa7K,GAAzB,EAA8B6K,aAAajL,eAA3C,CAAP;AACD,WAFY,CADN;AAIP6M,8BAAoB,CAAC,IAAD,EAAO,cAAP,EAAuB,yCAAvB,EAAkE,UAACnrB,EAAD,EAAKupB,YAAL,EAAmBva,IAAnB,EAA4B;AAChH,mBAAOA,KAAKG,OAAL,CAAaoa,aAAa7K,GAA1B,EAA+B6K,aAAajL,eAA5C,EAA6D,SAA7D,CAAP;AACD,WAFmB,CAJb;AAOPwL,8BAAoB,CAAC,IAAD,EAAO,cAAP,EAAuB,yCAAvB,EAAkE,UAAC9pB,EAAD,EAAKupB,YAAL,EAAmBva,IAAnB,EAA4B;AAChH,mBAAOA,KAAKG,OAAL,CAAaoa,aAAa7K,GAA1B,EAA+B6K,aAAajL,eAA5C,EAA6D,YAA7D,CAAP;AACD,WAFmB,CAPb;AAUPyL,+BAAqB,CAAC,IAAD,EAAO,cAAP,EAAuB,yCAAvB,EAAkE,UAAC/pB,EAAD,EAAKupB,YAAL,EAAmBva,IAAnB,EAA4B;AACjH,mBAAOA,KAAKG,OAAL,CAAaoa,aAAa7K,GAA1B,EAA+B6K,aAAajL,eAA5C,EAA6D,aAA7D,CAAP;AACD,WAFoB;AAVd;AAHqB,OAlE3B;AAoFL,0DAAoD;AAClDtI,qBAAa,oFADqC;AAElDG,oBAAY,6DAFsC;AAGlD3V,iBAAS;AACPgqB,kBAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,mBAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,kBAA3D,CAAP;AACD,WAFO,CADD;AAIPmM,6BAAmB,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACzqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACnF,mBAAOA,OAAOG,YAAP,CAAoB0Z,aAAa7K,GAAjC,EAAsC6K,aAAajL,eAAnD,CAAP;AACD,WAFkB;AAJZ;AAHyC,OApF/C;AAgGL,mDAA6C;AAC3CtI,qBAAa,sEAD8B;AAE3CG,oBAAY,sDAF+B;AAG3C3V,iBAAS;AACPgqB,kBAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,mBAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,yHAA3D,CAAP;AACD,WAFO,CADD;AAIPpD,cAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAClb,EAAD,EAAKupB,YAAL,EAAmB/Y,GAAnB,EAA2B;AACnF,mBAAOA,IAAI9P,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,WAFG,CAJG;AAOPqM,0BAAgB,CAAC,IAAD,EAAO,cAAP,EAAuB,qCAAvB,EAA8D,UAAC3qB,EAAD,EAAKupB,YAAL,EAAmBqB,UAAnB,EAAkC;AAC9G,mBAAOA,WAAWtqB,GAAX,CAAeipB,aAAa7K,GAA5B,EAAiC6K,aAAajL,eAA9C,CAAP;AACD,WAFe,CAPT;AAUP5D,6BAAmB,CAAC,IAAD,EAAO,cAAP,EAAuB,wCAAvB,EAAiE,UAAC1a,EAAD,EAAKupB,YAAL,EAAmBlW,kBAAnB,EAA0C;AAC5H,mBAAOA,mBAAmB/S,GAAnB,CAAuBipB,aAAa7K,GAApC,EAAyC6K,aAAajL,eAAtD,CAAP;AACD,WAFkB,CAVZ;AAaPoM,iCAAuB,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAAC1qB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACvF,mBAAOA,OAAOE,eAAP,CAAuB2Z,aAAa7K,GAApC,EAAyC6K,aAAajL,eAAtD,CAAP;AACD,WAFsB;AAbhB;AAHkC,OAhGxC;AAqHL,qDAA+C;AAC7CtI,qBAAa,0EADgC;AAE7CG,oBAAY,wDAFiC;AAG7C3V,iBAAS;AACPgqB,kBAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,mBAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,eAA3D,CAAP;AACD,WAFO,CADD;AAIPpD,cAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAClb,EAAD,EAAKupB,YAAL,EAAmB/Y,GAAnB,EAA2B;AACnF,mBAAOA,IAAI9P,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,WAFG,CAJG;AAOP9G,gBAAM,CAAC,IAAD,EAAO,cAAP,EAAuB,4BAAvB,EAAqD,UAACxX,EAAD,EAAKupB,YAAL,EAAmB9W,IAAnB,EAA4B;AACrF,mBAAOA,KAAKnS,GAAL,CAASipB,aAAa7K,GAAtB,EAA2B6K,aAAajL,eAAxC,CAAP;AACD,WAFK;AAPC;AAHoC,OArH1C;AAoIL,2DAAqD;AACnDtI,qBAAa,gFADsC;AAEnDG,oBAAY,8DAFuC;AAGnD3V,iBAAS;AACPgqB,kBAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,mBAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,6DAA3D,CAAP;AACD,WAFO;AADD;AAH0C,OApIhD;AA6IL,qDAA+C;AAC7CtI,qBAAa,0EADgC;AAE7CG,oBAAY,wDAFiC;AAG7C3V,iBAAS;AACPgqB,kBAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,mBAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,uEAA3D,CAAP;AACD,WAFO,CADD;AAIPpD,cAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAClb,EAAD,EAAKupB,YAAL,EAAmB/Y,GAAnB,EAA2B;AACnF,mBAAOA,IAAI9P,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,WAFG,CAJG;AAOP0C,eAAK,CAAC,IAAD,EAAO,cAAP,EAAuB,4BAAvB,EAAqD,UAAChhB,EAAD,EAAKupB,YAAL,EAAmBhW,GAAnB,EAA2B;AACnF,mBAAOA,IAAIjT,GAAJ,CAAQipB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,WAFI,CAPE;AAUPoM,iCAAuB,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAAC1qB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACvF,mBAAOA,OAAOE,eAAP,CAAuB2Z,aAAa7K,GAApC,EAAyC6K,aAAajL,eAAtD,CAAP;AACD,WAFsB;AAVhB;AAHoC,OA7I1C;AA+JL,qDAA+C;AAC7CtI,qBAAa,0EADgC;AAE7CG,oBAAY,wDAFiC;AAG7C3V,iBAAS;AACPgqB,kBAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAACxqB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AACxE,mBAAOA,OAAOhP,GAAP,CAAW6oB,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,EAA2D,oCAA3D,CAAP;AACD,WAFO,CADD;AAIPpD,cAAI,CAAC,IAAD,EAAO,cAAP,EAAuB,6BAAvB,EAAsD,UAAClb,EAAD,EAAKupB,YAAL,EAAmB/Y,GAAnB,EAA2B;AACnF,mBAAOA,IAAI9P,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,WAFG,CAJG;AAOP5B,oBAAU,CAAC,IAAD,EAAO,cAAP,EAAuB,gCAAvB,EAAyD,UAAC1c,EAAD,EAAKupB,YAAL,EAAmBsB,SAAnB,EAAiC;AAClG,mBAAOA,UAAUvqB,GAAV,CAAcipB,aAAa7K,GAA3B,EAAgC6K,aAAajL,eAA7C,CAAP;AACD,WAFS,CAPH;AAUPwM,uBAAa,CAAC,IAAD,EAAO,cAAP,EAAuB,mCAAvB,EAA4D,UAAC9qB,EAAD,EAAKupB,YAAL,EAAmB7W,WAAnB,EAAmC;AAC1G,mBAAOA,YAAYpS,GAAZ,CAAgBipB,aAAa7K,GAA7B,EAAkC6K,aAAajL,eAA/C,CAAP;AACD,WAFY,CAVN;AAaPyM,yBAAe,CAAC,IAAD,EAAO,cAAP,EAAuB,WAAvB,EAAoC,UAAC/qB,EAAD,EAAKupB,YAAL,EAAmB7Z,MAAnB,EAA8B;AAC/E,mBAAOA,OAAOC,gBAAP,CAAwB4Z,aAAa7K,GAArC,EAA0C6K,aAAajL,eAAvD,CAAP;AACD,WAFc;AAbR;AAHoC,OA/J1C;AAoLL,6CAAuC;AACrCtI,qBAAa,0DADwB;AAErCG,oBAAY,gDAFyB;AAGrC3V,iBAAS;AACPwpB,wBAAc,CAAC,IAAD,EAAO,cAAP,EAAuB,gBAAvB,EAAyC,UAAChqB,EAAD,EAAKupB,YAAL,EAAmBhX,WAAnB,EAAmC;AACxF,mBAAOA,YAAYC,IAAZ,CAAiB+W,aAAa7K,GAA9B,EAAmC6K,aAAajL,eAAhD,CAAP;AACD,WAFa;AADP;AAH4B;AApLlC,KAL0B;AAmMjC9d,aAAS;AACP+pB,qBAAe,CAAC,IAAD,EAAO,cAAP,EAAuB,2CAAvB,EAAoE,UAACvqB,EAAD,EAAKupB,YAAL,EAAmBvW,GAAnB,EAA2B;AAC5G,eAAOA,IAAI/D,MAAJ,CAAWsa,aAAa7K,GAAxB,EAA6B6K,aAAajL,eAA1C,CAAP;AACD,OAFc;AADR;AAnMwB,GA5xBtC,EAw+BI/P,KAx+BJ,CAw+BU,wBAx+BV,EAw+BoC;AAC/BrM,SAAK,QAD0B;AAE/BrB,UAAM;AACJwlB,mBAAa;AADT,KAFyB;AAK/B4C,WAAO;AACL,UAAI;AACFjT,qBAAa,+BADX;AAEFG,oBAAY;AAFV,OADC;AAKL,wCAAkC;AAChCH,qBAAa,kDADmB;AAEhCG,oBAAY,2CAFoB;AAGhC3V,iBAAS;AACPkpB,2BAAiB,CAAC,IAAD,EAAO,cAAP,EAAuB,2BAAvB,EAAoD,UAAC1pB,EAAD,EAAKupB,YAAL,EAAmBI,GAAnB,EAA2B;AAC9F,mBAAOA,IAAIjpB,GAAJ,CAAQ6oB,aAAa7K,GAArB,EAA0B6K,aAAajL,eAAvC,CAAP;AACD,WAFgB,CADV;AAIPsL,yBAAe,CAAC,IAAD,EAAO,cAAP,EAAuB,sCAAvB,EAA+D,UAAC5pB,EAAD,EAAKupB,YAAL,EAAmBjZ,IAAnB,EAA4B;AACxG,mBAAOA,KAAKhQ,GAAL,CAASipB,aAAa7K,GAAtB,EAA2B6K,aAAajL,eAAxC,CAAP;AACD,WAFc,CAJR;AAOPvX,mBAAS,CAAC,IAAD,EAAO,mBAAP,EAA4B,UAAC/G,EAAD,EAAKwG,GAAL,EAAa;AAChD,mBAAOA,IAAIO,OAAJ,EAAP;AACD,WAFQ,CAPF;AAUPqU,qBAAW,CAAC,IAAD,EAAO,cAAP,EAAuB,qBAAvB,EAA8C,UAACpb,EAAD,EAAKupB,YAAL,EAAmBla,UAAnB,EAAkC;AACzF,mBAAOA,WAAW3O,GAAX,CAAe6oB,aAAa7K,GAA5B,EAAiC6K,aAAajL,eAA9C,CAAP;AACD,WAFU;AAVJ;AAHuB,OAL7B;AAuBL,4CAAsC;AACpCtI,qBAAa,0DADuB;AAEpCG,oBAAY,+CAFwB;AAGpC3V,iBAAS;AACPiC,uBAAa,CAAC,IAAD,EAAO,cAAP,EAAuB,uBAAvB,EAAgD,UAACzC,EAAD,EAAKupB,YAAL,EAAmBM,YAAnB,EAAoC;AAC/F,mBAAOA,aAAa5a,MAAb,CAAoBsa,aAAa7K,GAAjC,EAAsC6K,aAAajL,eAAnD,CAAP;AACD,WAFY,CADN;AAIPwL,8BAAoB,CAAC,IAAD,EAAO,cAAP,EAAuB,uBAAvB,EAAgD,UAAC9pB,EAAD,EAAKupB,YAAL,EAAmBM,YAAnB,EAAoC;AACtG,mBAAOA,aAAa1a,OAAb,CAAqBoa,aAAa7K,GAAlC,EAAuC6K,aAAajL,eAApD,EAAqE,YAArE,CAAP;AACD,WAFmB,CAJb;AAOPyL,+BAAqB,CAAC,IAAD,EAAO,cAAP,EAAuB,uBAAvB,EAAgD,UAAC/pB,EAAD,EAAKupB,YAAL,EAAmBM,YAAnB,EAAoC;AACvG,mBAAOA,aAAa1a,OAAb,CAAqBoa,aAAa7K,GAAlC,EAAuC6K,aAAajL,eAApD,EAAqE,aAArE,CAAP;AACD,WAFoB;AAPd;AAH2B,OAvBjC;AAsCL,2CAAqC;AACnCtI,qBAAa,wDADsB;AAEnCG,oBAAY;AAFuB;AAtChC;AALwB,GAx+BpC,EA0hCI5H,KA1hCJ,CA0hCU,yBA1hCV,EA0hCqC;AAChCrM,SAAK,gBAD2B;AAEhC2kB,cAAU,IAFsB;AAGhChmB,UAAM;AACJwlB,mBAAa,WADT;AAEJ6C,uBAAiB;AAFb,KAH0B;AAOhC/S,gBAAY,eAPoB;AAQhCH,iBAAa;AARmB,GA1hCrC,EAqiCIzH,KAriCJ,CAqiCU,mCAriCV,EAqiC+C;AAC1CrM,SAAK,YADqC;AAE1CrB,UAAM;AACJwlB,mBAAa;AADT,KAFoC;AAK1ClQ,gBAAY,yBAL8B;AAM1CH,iBAAa,kDAN6B;AAO1CxV,aAAS;AACPuG,eAAS,CAAC,IAAD,EAAO,mBAAP,EAA4B,UAAC/G,EAAD,EAAKwG,GAAL,EAAa;AAChD,eAAOA,IAAIO,OAAJ,EAAP;AACD,OAFQ;AADF;AAPiC,GAriC/C,EAmjCIwH,KAnjCJ,CAmjCU,oCAnjCV,EAmjCgD;AAC3CrM,SAAK,aADsC;AAE3CrB,UAAM;AACJwlB,mBAAa;AADT,KAFqC;AAK3C9lB,YAAQ;AACN+G,eAAS;AADH,KALmC;AAQ3C6O,gBAAY,0BAR+B;AAS3CH,iBAAa,oDAT8B;AAU3CxV,aAAS;AACP2G,kBAAY,CAAC,IAAD,EAAO,mBAAP,EAA4B,cAA5B,EAA4C,UAACnH,EAAD,EAAKwG,GAAL,EAAU+iB,YAAV,EAA2B;AACjF,YAAGA,aAAajiB,OAAhB,EAAyB;AACvB,iBAAOd,IAAIW,UAAJ,CAAe7G,GAAf,CAAmB,GAAnB,EAAwB,CAAxB,EAA2BipB,aAAajiB,OAAxC,CAAP;AACD,SAFD,MAEO;AACL,iBAAOd,IAAIW,UAAJ,CAAe7G,GAAf,CAAmB,GAAnB,EAAwB,CAAxB,CAAP;AACD;AACF,OANW,CADL;AAQP8qB,iBAAW,CAAC,IAAD,EAAO,mBAAP,EAA4B,cAA5B,EAA6C,UAACprB,EAAD,EAAKwG,GAAL,EAAU+iB,YAAV,EAA2B;AACjF,YAAGA,aAAajiB,OAAb,KAAyB,IAA5B,EAAkC;AAChC,iBAAOd,IAAIW,UAAJ,CAAeQ,KAAf,CAAqB4hB,aAAajiB,OAAlC,CAAP;AACD,SAFD,MAEO;AACL,iBAAOd,IAAIW,UAAJ,CAAeQ,KAAf,EAAP;AACD;AACF,OANU,CARJ;AAePlB,kBAAY,CAAC,IAAD,EAAO,mBAAP,EAA4B,UAACzG,EAAD,EAAKwG,GAAL,EAAa;AACnD,eAAOA,IAAIC,UAAJ,EAAP;AACD,OAFW;AAfL;AAVkC,GAnjChD,EAklCI8H,KAllCJ,CAklCU,gCAllCV,EAklC4C;AACvCrM,SAAK,SADkC;AAEvCrB,UAAM;AACJwlB,mBAAa;AADT,KAFiC;AAKvC9lB,YAAQ;AACN+G,eAAS;AADH,KAL+B;AAQvC6O,gBAAY,sBAR2B;AASvCH,iBAAa,4CAT0B;AAUvCxV,aAAS;AACPmG,cAAQ,CAAC,IAAD,EAAO,mBAAP,EAA4B,cAA5B,EAA4C,UAAC3G,EAAD,EAAKwG,GAAL,EAAU+iB,YAAV,EAA2B;AAC7E,YAAGA,aAAajiB,OAAhB,EAAyB;AACvB,iBAAOd,IAAIG,MAAJ,CAAWrG,GAAX,CAAe,GAAf,EAAoB,CAApB,EAAuBipB,aAAajiB,OAApC,CAAP;AACD,SAFD,MAEO;AACL,iBAAOd,IAAIG,MAAJ,CAAWrG,GAAX,CAAe,GAAf,EAAoB,CAApB,CAAP;AACD;AACF,OANO,CADD;AAQP+qB,oBAAc,CAAC,IAAD,EAAO,mBAAP,EAA4B,cAA5B,EAA4C,UAACrrB,EAAD,EAAKwG,GAAL,EAAU+iB,YAAV,EAA2B;AACnF,YAAGA,aAAajiB,OAAb,KAAyB,IAA5B,EAAkC;AAChC,iBAAOd,IAAIG,MAAJ,CAAWgB,KAAX,CAAiB4hB,aAAajiB,OAA9B,CAAP;AACD,SAFD,MAEO;AACL,iBAAOd,IAAIG,MAAJ,CAAWgB,KAAX,EAAP;AACD;AACF,OANa;AARP;AAV8B,GAllC5C,EA8mCI4G,KA9mCJ,CA8mCU,oBA9mCV,EA8mCgC;AAC3BrM,SAAK,WADsB;AAE3BrB,UAAM;AACJwlB,mBAAa,cADT;AAEJ6C,uBAAiB;AAFb,KAFqB;AAM3B/S,gBAAY,+BANe;AAO3BH,iBAAa,kCAPc;AAQ3BxV,aAAS;AACP8qB,mBAAa,CAAC,IAAD,EAAO,yBAAP,EAAkC,UAACtrB,EAAD,EAAK+Q,WAAL,EAAqB;AAClE,eAAOA,YAAYzQ,GAAZ,EAAP;AACD,OAFY,CADN;AAIP;AACAirB,qBAAe,CAAC,IAAD,EAAO,GAAP,EAAY,yBAAZ,EAAuC,MAAvC,EAA+C,eAA/C,EAAgE,UAACvrB,EAAD,EAAKF,CAAL,EAAQiR,WAAR,EAAqBlH,IAArB,EAA2Bsf,aAA3B,EAA6C;AAC1H,eAAOpY,YAAYzQ,GAAZ,CAAgB,EAACkrB,MAAOrC,cAAczoB,GAAd,CAAkB,qBAAlB,CAAD,GAA6CZ,EAAE2H,IAAF,CAAO0hB,cAAczoB,GAAd,CAAkB,qBAAlB,EAAyC8qB,IAAhD,EAAqD,GAArD,CAA7C,GAAyGnpB,SAAhH,EAAhB,CAAP;AACD,OAFc;AALR;AARkB,GA9mChC,EAioCIkM,KAjoCJ,CAioCU,0BAjoCV,EAioCsC;AACjCrM,SAAK,QAD4B;AAEjCrB,UAAM;AACJwlB,mBAAa;AADT,KAF2B;AAKjClQ,gBAAY,qCALqB;AAMjCH,iBAAa,qCANoB;AAOjCxV,aAAS;AACPof,cAAQ,CAAC,IAAD,EAAO,GAAP,EAAY,oBAAZ,EAAkC,MAAlC,EAA0C,eAA1C,EAA2D,UAAC5f,EAAD,EAAKF,CAAL,EAAQsR,MAAR,EAAgBvH,IAAhB,EAAsBsf,aAAtB,EAAwC;AACzG,eAAO/X,OAAO9Q,GAAP,CAAW,EAACsF,QAASujB,cAAczoB,GAAd,CAAkB,gBAAlB,CAAD,GAAwCZ,EAAE2H,IAAF,CAAO0hB,cAAczoB,GAAd,CAAkB,gBAAlB,EAAoCkF,MAA3C,EAAmD,GAAnD,CAAxC,GAAkG,4BAA3G,EAAX,CAAP;AACD,OAFO;AADD;AAPwB,GAjoCtC,EA+oCI2I,KA/oCJ,CA+oCU,yBA/oCV,EA+oCqC;AAChCrM,SAAK,cAD2B;AAEhCrB,UAAM;AACJwlB,mBAAa;AADT,KAF0B;AAKhClQ,gBAAY,oCALoB;AAMhCH,iBAAa,0CANmB;AAOhCxV,aAAS;AACPirB,YAAM,CAAC,IAAD,EAAO,cAAP,EAAuB,yBAAvB,EAAkD,UAACzrB,EAAD,EAAKupB,YAAL,EAAmBxY,WAAnB,EAAmC;AACzF,eAAOA,YAAYjE,QAAZ,CAAqByc,aAAaiC,IAAlC,CAAP;AACD,OAFK,CADC;AAIP5L,cAAQ,CAAC,IAAD,EAAO,cAAP,EAAuB,oBAAvB,EAA6C,UAAC5f,EAAD,EAAKupB,YAAL,EAAmBnY,MAAnB,EAA8B;AACjF,eAAOA,OAAOC,QAAP,CAAgB,EAACma,MAAMjC,aAAaiC,IAApB,EAA0B5lB,QAAQ,gBAAlC,EAAhB,CAAP;AACD,OAFO;AAJD;AAPuB,GA/oCrC,EAgqCI2I,KAhqCJ,CAgqCU,+BAhqCV,EAgqC2C;AACtCrM,SAAK,aADiC;AAEtCrB,UAAM;AACJwlB,mBAAa;AADT,KAFgC;AAKtClQ,gBAAY,0CAL0B;AAMtCH,iBAAa,+CANyB;AAOtCxV,aAAS;AACP2M,cAAQ,CAAC,IAAD,EAAO,UAAP,EAAmB,UAACnN,EAAD,EAAKgE,KAAL,EAAe;AACxC,eAAOA,MAAMwJ,KAAN,CAAYlN,GAAZ,EAAP;AACD,OAFO,CADD;AAIPgrB,mBAAa,CAAC,IAAD,EAAO,yBAAP,EAAkC,UAACtrB,EAAD,EAAK+Q,WAAL,EAAqB;AAClE,eAAOA,YAAYzQ,GAAZ,CAAgB,EAAC8X,QAAQ,IAAT,EAAhB,CAAP;AACD,OAFY,CAJN;AAOPsT,aAAO,CAAC,IAAD,EAAO,mBAAP,EAA4B,UAAC1rB,EAAD,EAAKkR,KAAL,EAAe;AAChD,eAAOA,MAAM5Q,GAAN,EAAP;AACD,OAFM;AAPA;AAP6B,GAhqC3C,EAorCIiO,KAprCJ,CAorCU,+BAprCV,EAorC2C;AACtCrM,SAAK,yBADiC;AAEtCrB,UAAM;AACJwlB,mBAAa;AADT,KAFgC;AAKtClQ,gBAAY,0CAL0B;AAMtCH,iBAAa,+CANyB;AAOtCxV,aAAS;AACPwQ,kBAAY,CAAC,IAAD,EAAO,cAAP,EAAuB,yBAAvB,EAAkD,UAAChR,EAAD,EAAKupB,YAAL,EAAmBxY,WAAnB,EAAmC;AAC/F,eAAOA,YAAYjE,QAAZ,CAAqByc,aAAavY,UAAlC,CAAP;AACD,OAFW,CADL;AAIP2a,wBAAkB,CAAC,IAAD,EAAO,cAAP,EAAuB,8BAAvB,EAAuD,UAAC3rB,EAAD,EAAKupB,YAAL,EAAmBqC,OAAnB,EAA+B;AACtG,eAAOA,QAAQzZ,WAAR,CAAoBoX,aAAavY,UAAjC,CAAP;AACD,OAFiB,CAJX;AAOP4O,cAAQ,CAAC,IAAD,EAAO,oBAAP,EAA6B,YAA7B,EAA2C,UAAC5f,EAAD,EAAKoR,MAAL,EAAaJ,UAAb,EAA4B;AAC7E,eAAOI,OAAOC,QAAP,CAAgB,EAACma,MAAMxa,WAAWwa,IAAlB,EAAwB5lB,QAAQ,gBAAhC,EAAhB,CAAP;AACD,OAFO,CAPD;AAUP4H,aAAO,CAAC,IAAD,EAAO,YAAP,EAAqB,UAArB,EAAiC,UAACxN,EAAD,EAAKgR,UAAL,EAAiBhN,KAAjB,EAA2B;AACjE,eAAOA,MAAMwJ,KAAN,CAAYV,QAAZ,CAAqBkE,WAAWxD,KAAX,CAAiBxM,KAAtC,CAAP;AACD,OAFM,CAVA;AAaPiQ,gBAAU,CAAC,IAAD,EAAO,YAAP,EAAqB,yBAArB,EAAgD,UAACjR,EAAD,EAAKgR,UAAL,EAAiBD,WAAjB,EAAiC;AACzF,eAAOA,YAAYE,QAAZ,CAAqBD,WAAWhQ,KAAhC,CAAP;AACD,OAFS;AAbH;AAP6B,GAprC3C,EA8sCIuN,KA9sCJ,CA8sCU,oCA9sCV,EA8sCgD;;AAE3CrM,SAAK,yCAFsC;AAG3CrB,UAAM;AACJwlB,mBAAa;AADT,KAHqC;AAM3ClQ,gBAAY,+CAN+B;AAO3CH,iBAAa,+DAP8B;AAQ3CxV,aAAS;AACPqrB,iBAAW,CAAC,IAAD,EAAO,cAAP,EAAuB,8BAAvB,EAAuD,UAAC7rB,EAAD,EAAKupB,YAAL,EAAmBrX,SAAnB,EAAiC;AACjG,eAAOA,UAAUC,WAAV,CAAsBoX,aAAavY,UAAnC,CAAP;AACD,OAFU,CADJ;AAIPA,kBAAY,CAAC,IAAD,EAAO,cAAP,EAAuB,yBAAvB,EAAkD,UAAChR,EAAD,EAAKupB,YAAL,EAAmBxY,WAAnB,EAAmC;AAC/F,eAAOA,YAAYjE,QAAZ,CAAqByc,aAAavY,UAAlC,CAAP;AACD,OAFW;AAJL;AARkC,GA9sChD,EAguCIzC,KAhuCJ,CAguCU,kBAhuCV,EAguC8B;AACzBrM,SAAK,SADoB;AAEzBrB,UAAM;AACJwlB,mBAAa,UADT;AAEJ6C,uBAAiB;AAFb,KAFmB;AAMzB/S,gBAAY,6BANa;AAOzBH,iBAAa;AAPY,GAhuC9B,EA0uCIzH,KA1uCJ,CA0uCU,wBA1uCV,EA0uCoC;AAC/BrM,SAAK,QAD0B;AAE/BrB,UAAM;AACJwlB,mBAAa;AADT,KAFyB;AAK/BlQ,gBAAY,mCALmB;AAM/BH,iBAAa,mCANkB;AAO/BxV,aAAS;AACPqT,gBAAU,CAAC,IAAD,EAAO,cAAP,EAAuB,UAAC7T,EAAD,EAAKK,SAAL,EAAmB;AAClD,eAAOA,UAAUC,GAAV,CAAc,EAAC8f,WAAW,IAAZ,EAAkB9b,SAAS,KAA3B,EAAd,CAAP;AACD,OAFS,CADH;AAIP1C,mBAAa,CAAC,IAAD,EAAO,cAAP,EAAuB,UAAC5B,EAAD,EAAKK,SAAL,EAAmB;AACrD,eAAOA,UAAUuB,WAAV,EAAP;AACD,OAFY;AAJN;AAPsB,GA1uCpC,EA2vCI2M,KA3vCJ,CA2vCU,oBA3vCV,EA2vCgC;AAC3BrM,SAAK,WADsB;AAE3BrB,UAAM;AACJwlB,mBAAa,UADT;AAEJ6C,uBAAiB;AAFb,KAFqB;AAM3B/S,gBAAY,+BANe;AAO3BH,iBAAa;AAPc,GA3vChC,EAqwCIzH,KArwCJ,CAqwCU,0BArwCV,EAqwCsC;AACjCrM,SAAK,QAD4B;AAEjCrB,UAAM;AACJwlB,mBAAa;AADT,KAF2B;AAKjClQ,gBAAY,qCALqB;AAMjCH,iBAAa,qCANoB;AAOjCxV,aAAS;AACPmO,eAAS,CAAC,qBAAD,EAAwB,UAACH,OAAD,EAAa;AAC5C,eAAOA,QAAQlO,GAAR,CAAY,EAACgE,SAAS,KAAV,EAAZ,CAAP;AACD,OAFQ;AADF;AAPwB,GArwCtC,EAmxCIiK,KAnxCJ,CAmxCU,2BAnxCV,EAmxCuC;AAClCrM,SAAK,wDAD6B;AAElCrB,UAAM;AACJwlB,mBAAa;AADT,KAF4B;AAKlClQ,gBAAY,sCALsB;AAMlCH,iBAAa,uCANqB;AAOlCxV,aAAS;AACP4J,cAAQ,CAAC,qBAAD,EAAwB,cAAxB,EAAwC,UAACoE,OAAD,EAAU+a,YAAV,EAA2B;AACzE,eAAO/a,QAAQ3B,GAAR,CAAY0c,aAAa7a,OAAzB,EAAkC6a,aAAa9a,MAA/C,EAAuD8a,aAAanf,MAApE,CAAP;AACD,OAFO;AADD;AAPyB,GAnxCvC;AAiyCA,CAlzCU,CAAX;;;AnFCA;;;;;;;;;;AAUAxL,IAAIG,GAAJ,CAAQ,CAAC,YAAD,EAAe,OAAf,EAAwB,WAAxB,EAAqC,eAArC,EAAsD,UAAtD,EAAkE,GAAlE,EAAuE,UAACE,UAAD,EAAac,KAAb,EAAoB+oB,SAApB,EAA+B5d,aAA/B,EAA8ClH,KAA9C,EAAqDlE,CAArD,EAA2D;;AAExI;AACA,MAAIgC,QAAQoJ,cAAc,eAAd,CAAZ;;AAEA;AACA,MAAGpJ,KAAH,EAAU;AACR/B,UAAM2L,QAAN,CAAevJ,OAAf,CAAuBwJ,MAAvB,CAA8B,eAA9B,IAAiD7J,KAAjD;AACD;;AAED,MAAI+H,aAAJ;;AAEA7F,QAAMsH,EAAN,GACG3K,IADH,CACQ,UAAC6S,CAAD,EAAO;;AAEX;AACA;AACAvU,eAAW6sB,cAAX,GAA4B,CAAE,CAAChsB,EAAE6U,IAAF,CAAO7U,EAAEwU,SAAF,CAAYd,EAAErG,MAAd,EAAsB,UAAC+G,CAAD,EAAO;AAAE,aAAO,EAACnP,MAAMmP,EAAEnP,IAAF,CAAOxB,WAAP,EAAP,EAAP;AAAoC,KAAnE,CAAP,EAA6E,EAAC,QAAQ,WAAT,EAA7E,CAA/B;;AAEA;;AAEAsG,WAAO2J,CAAP;;AAEA,QAAI4V,OAAON,UAAUpoB,GAAV,CAAc,MAAd,CAAX;;AAEA;;;;;;;AAOAzB,eAAW8sB,sBAAX,GAAoC3C,KAAKnV,QAAzC;;AAGAhV,eAAW+sB,oBAAX,GAAkC5C,KAAK5U,MAAvC;AAED,GAzBH,EA0BGrT,KA1BH,CA0BS,UAACC,GAAD,EAAS;AACd;AACAnC,eAAW6sB,cAAX,GAA4B,KAA5B;AACAxpB,YAAQC,GAAR,CAAY,gBAAZ,EAA8BnB,GAA9B;AACD,GA9BH;AAgCD,CA5CO,CAAR;;;ACXAxC,IAAIiB,OAAJ,CAAY,QAAZ,EAAsB,CAAC,eAAD,EAAkB,UAACkM,aAAD,EAAmB;;AAEzD,SAAOA,cAAc;AACnBO,cAAUJ,GAAGhM,OAAOC,SAAP,CAAiBiM,MAApB;AADS,GAAd,CAAP;AAGD,CALqB,CAAtB;;;AmFAAxN,IAAIuX,UAAJ,CAAe,gDAAf,EACE,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,SAAtB,EAAiC,WAAjC,EAA8C,UAA9C,EAA0D,KAA1D,EAAiE,QAAjE,EAA2E,cAA3E,EACE,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBvN,IAAhB,EAAsBsP,SAAtB,EAAiCvC,QAAjC,EAA2C1G,GAA3C,EAAgD9E,MAAhD,EAAwDoI,IAAxD,EAAiE;;AAE/D4D,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAO5D,IAAP,GAAcA,IAAd;;AAEA4D,SAAO6V,SAAP,GAAmB,UAAC5W,CAAD,EAAO;AACxB,WAAO6W,OAAO7W,CAAP,EAAU9P,OAAV,CAAkB,GAAlB,EAAsB,EAAtB,CAAP;AACD,GAFD;AAID,CAXH,CADF;;;ACAA3G,IAAIuX,UAAJ,CAAe,6DAAf,EACE,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,KAApE,EAA2E,QAA3E,EAAqF,mBAArF,EACE,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmDqG,GAAnD,EAAwDsb,MAAxD,EAAgEC,iBAAhE,EAAsF;;AAEpF;AACArU,SAAOoU,MAAP,GAAgBA,MAAhB;;AAEA;AACApU,SAAOqU,iBAAP,GAA2BA,iBAA3B;AACArU,SAAO+V,cAAP,GAAwB,EAAEC,OAAO1oB,IAAP,CAAY+mB,iBAAZ,EAA+Bld,MAA/B,KAA0C,CAA5C,CAAxB;AAED,CAVH,CADF;;;ACAA3O,IAAIuX,UAAJ,CAAe,qDAAf,EACE,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,MAA/C,EAAuD,SAAvD,EAAkE,6BAAlE,EAAiG,KAAjG,EAAwG,QAAxG,EAAkH,UAAlH,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgB+B,SAAhB,EAA2BvC,QAA3B,EAAqCyW,IAArC,EAA2CxjB,IAA3C,EAAiDuhB,SAAjD,EAA4Dlb,GAA5D,EAAiE9E,MAAjE,EAAyEkiB,eAAzE,EAA6F;;AAE7FlW,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOkW,eAAP,GAA0BA,oBAAoB,IAArB,GAA8B,EAA9B,GAAmCA,gBAAgBzkB,QAA5E;AACAuO,SAAOmW,YAAP,GAAsBF,KAAKG,WAAL,CAAiBpW,OAAOkW,eAAxB,CAAtB;AACAlW,SAAOvO,QAAP,GAAkBykB,eAAlB;;AAGA;AACAlW,SAAO9G,IAAP,GAAc,UAACvF,IAAD,EAAU;;AAEtB;AACAqgB,cAAU9a,IAAV,CAAeJ,IAAIjG,KAAnB,EAA0BmB,OAAOpJ,KAAjC,EAAwC+I,IAAxC,EAA8CpJ,IAA9C,CACE,UAACC,MAAD,EAAY;AACVwV,aAAOvO,QAAP,GAAkBjH,MAAlB;AACD,KAHH;AAKD,GARD;;AAUA;AACAwV,SAAOnG,UAAP,GAAoB,UAAClG,IAAD,EAAU;;AAE5B;AACAqgB,cAAUna,UAAV,CAAqBf,IAAIjG,KAAzB,EAAgCmB,OAAOpJ,KAAvC,EAA8C+I,IAA9C,EAAoDpJ,IAApD,CACE,UAACC,MAAD,EAAY;AACVwV,aAAOvO,QAAP,GAAkBjH,MAAlB;AACD,KAHH;AAKD,GARD;;AAWE;AACFwV,SAAOqW,cAAP,GAAwB,UAACtS,MAAD,EAAY;;AAElChC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,oEAFA;AAGbC,cAAQ;AACN/G,aAAKA;AADC,OAHK;AAMbmL,uBAAiB,KANJ;AAOblE,kBAAY,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,6BAA/C,EAA8E,UAACnW,EAAD,EAAKF,CAAL,EAAQkX,KAAR,EAAemB,SAAf,EAA0BrB,QAA1B,EAAoCsT,SAApC,EAAkD;;AAE1IpT,cAAMsV,eAAN,GAAwBA,eAAxB;;AAEA;AACAtV,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV,CAAiB,kCAAjB;AACD,SAFD;;AAIA;AACA1B,cAAM3V,MAAN,GAAe,UAAC0X,CAAD,EAAO;;AAEpB,cAAGA,EAAE2T,QAAL,EAAe;AACb3T,cAAE4T,SAAF;AACA9tB,oBAAQ2I,OAAR,CAAgBuR,EAAE6T,MAAlB,EAA0B,UAACtkB,KAAD,EAAW;AACnCzJ,sBAAQ2I,OAAR,CAAgBc,KAAhB,EAAuB,UAACukB,UAAD,EAAgB;AACrCA,2BAAWC,WAAX;AACD,eAFD;AAGD,aAJD;AAKA;AACD;;AAED,cAAIC,iBAAiB,EAAC,YAAY/V,MAAMsV,eAAN,CAAsBzkB,QAAnC,EAArB;;AAEAuiB,oBAAU/oB,MAAV,CAAiB6N,IAAIjG,KAArB,EAA4BmB,OAAOpJ,KAAnC,EAA0C+rB,cAA1C,EAA0DpsB,IAA1D,CACE,UAACC,MAAD,EAAY;AACVuX,sBAAU5B,IAAV,CAAe,EAAChX,SAAS,wBAAV,EAAoCgL,SAASwiB,cAA7C,EAAf;AACD,WAHH,EAIE,UAACjsB,KAAD,EAAW;AACTksB,kBAAM,+BAAN;AACA1qB,oBAAQC,GAAR,CAAYzB,KAAZ;AACD,WAPH;AAUD,SAxBD,CAV0I,CAkCxI;AACH,OAnCW;AAPC,KAAf,EA2CGH,IA3CH,CA2CQ,UAACC,MAAD,EAAY;AAClB;AACAwV,aAAOmW,YAAP,GAAsBF,KAAKG,WAAL,CAAiB5rB,OAAO2J,OAAP,CAAe1C,QAAhC,CAAtB;AACAuO,aAAOvO,QAAP,GAAkBykB,kBAAkB1rB,OAAO2J,OAA3C;;AAEA;AACAqL,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrX,OAAOrB,OAArC,CAAd;AACD,KAlDD,EAkDG,UAACuB,KAAD,EAAW;AACZ8U,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BnX,KAA9B,CAAd;AACD,KApDD;AAqDD,GAvDD;AAyDD,CA1FC,CADF;;;ACAAlC,IAAIuX,UAAJ,CAAe,wDAAf,EACE,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,qCAApE,EAA2G,KAA3G,EAAkH,QAAlH,EAA4H,IAA5H,EAAkI,QAAlI,EAA4I,MAA5I,EACE,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmDyK,eAAnD,EAAoEpE,GAApE,EAAyE9E,MAAzE,EAAiF8Q,EAAjF,EAAqFsP,MAArF,EAA6FhT,IAA7F,EAAsG;;AAEpG;AACApB,SAAOoU,MAAP,GAAgBA,MAAhB;AACApU,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAO6W,SAAP,GAAmB,EAAnB;;AAGA7W,SAAO8W,QAAP,GAAkB;AAChBC,cAAU,sCADM;AAEhBC,YAAQ,4CAFQ;AAGhB9T,gBAAY,8BAHI;AAIhB+T,qBAAiB,8CAJD;AAKhBC,wBAAoB,wCALJ;AAMhBC,uBAAmB,4CANH;AAOhBC,oBAAgB;AAPA,GAAlB;;AAUA,MAAIC,aAAa,SAAbA,UAAa,CAACjW,IAAD,EAAU;;AAEzB,QAAIkW,YAAY;AACdP,gBAAU,EADI;AAEdC,cAAQ,EAFM;AAGd9T,kBAAY,EAHE;AAId+T,uBAAiB,EAJH;AAKdC,0BAAoB,EALN;AAMdC,yBAAmB,EANL;AAOdC,sBAAgB;AAPF,KAAhB;;AAUA;AACA1tB,MAAE0H,OAAF,CAAUgQ,IAAV,EAAgB,UAACiC,GAAD,EAAM1E,CAAN,EAAY;AAC1B,UAAG,EAAE0E,IAAIkU,UAAJ,IAAkBD,SAApB,CAAH,EAAmCA,UAAUjU,IAAIkU,UAAd,IAA4B,EAA5B;AACnC;AACAD,gBAAUjU,IAAIkU,UAAd,EAA0B5kB,IAA1B,CAA+B0Q,GAA/B;AACD,KAJD;;AAMA;AACArD,WAAO6W,SAAP,GAAmBS,SAAnB;AACD,GArBD;;AAuBAD,aAAWjW,IAAX;AAGD,CA9CH,CADF;;;ACAA5Y,IAAIuX,UAAJ,CAAe,oDAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,oBAApE,EAA0F,KAA1F,EAAiG,OAAjG,EAA0G,SAA1G,EAAqH,MAArH,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQgX,KAAR,EAAe5F,MAAf,EAAuB+G,SAAvB,EAAkCvC,QAAlC,EAA4C/M,IAA5C,EAAkDsB,QAAlD,EAA4D+E,GAA5D,EAAiEhI,KAAjE,EAAwE0mB,OAAxE,EAAiF1C,IAAjF,EAA0F;;AAExFlU,QAAM9P,KAAN,GAAcA,KAAd;AACA8P,QAAM4W,OAAN,GAAgBA,OAAhB;AACA5W,QAAMkU,IAAN,GAAaA,IAAb;AACAlU,QAAM6W,WAAN,GAAoB3mB,MAAMgkB,IAA1B;AACAlU,QAAM8W,QAAN,GAAiBF,QAAQ1mB,MAAM6mB,GAAd,CAAjB;AACA/W,QAAMgX,aAAN,GAAsBJ,QAAQ1mB,MAAM+mB,QAAd,CAAtB;AACAjX,QAAMuB,OAAN,GAAgB,CAAC,OAAD,EAAU,aAAV,EAAyB,WAAzB,EAAsC,WAAtC,EAAmD,WAAnD,CAAhB;AACAvB,QAAMkX,SAAN,GAAkB;AAChBC,kBAAc,IADE;AAEhB9N,gBAAY;AAFI,GAAlB;;AAKArJ,QAAMxC,MAAN,GAAe;AACblK,YAAQ;AACN8jB,qBAAe,KADT;AAEN1Q,cAAQ,KAFF;AAGNnT,eAAS;AAHH,KADK;AAMbC,aAAS;AACP4jB,qBAAe,KADR;AAEP1Q,cAAQ,KAFD;AAGPnT,eAAS;AAHF;AANI,GAAf;;AAaAyM,QAAMqX,IAAN,GAAa,KAAb;;AAEArX,QAAM0B,MAAN,GAAe,YAAM;AAAEP,cAAUO,MAAV;AAAoB,GAA3C;;AAEA1B,QAAMsX,YAAN,GAAqB,EAArB;;AAEAtX,QAAMuX,OAAN,GAAgB,UAACxV,CAAD,EAAO;AAAE,WAAQ/B,MAAMsX,YAAN,CAAmB3uB,OAAnB,CAA2BoZ,CAA3B,IAAgC,CAAC,CAAzC;AAA6C,GAAtE;;AAEA;AACA/B,QAAMkX,SAAN,CAAgBzuB,MAAhB,GAAyB,UAAC6D,KAAD,EAAW;;AAElC,QAAIoB,WAAW1E,GAAG2E,KAAH,EAAf;;AAEAwF,aAAS+E,IAAIjG,KAAb,EAAoBmB,OAAOpJ,KAA3B,EAAkCyJ,GAAlC,CAAsCC,MAAtC,CAA6CpH,KAA7C,EAAoD3C,IAApD,CACE,UAACuqB,IAAD,EAAU;AACRxmB,eAASlE,OAAT,CAAiB0qB,IAAjB;AACD,KAHH,EAIE,UAAC9pB,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,2BAAZ,EAAyCnB,GAAzC;AACD,KANH;AAQA,WAAOsD,SAASoB,OAAhB;AACD,GAbD;;AAeA;AACAkR,QAAMwX,MAAN,GAAe,UAACA,MAAD,EAAY;AACzB;AACArkB,aAAS+E,IAAIjG,KAAb,EAAoBmB,OAAOpJ,KAA3B,EAAkCyJ,GAAlC,CAAsCpG,MAAtC,CAA6C,EAACoG,KAAK+jB,OAAO/jB,GAAb,EAA7C,EAAgEvD,MAAMlG,KAAtE,EAA6EL,IAA7E,CACE,UAACqF,IAAD,EAAU;AACR;AACA,UAAI4V,QAAQ,KAAZ;AACA9b,QAAE0H,OAAF,CAAUwP,MAAM6W,WAAhB,EAA6B,UAACpV,CAAD,EAAG1D,CAAH,EAAS;AACpC,YAAG0D,EAAEhO,GAAF,KAAUzE,KAAKyE,GAAlB,EAAuB;AACrBuM,gBAAM6W,WAAN,CAAkB9Y,CAAlB,IAAuB/O,IAAvB;AACA4V,kBAAQ,IAAR;AACD;AACF,OALD;;AAOA,UAAG,CAACA,KAAJ,EAAW5E,MAAM6W,WAAN,CAAkB9kB,IAAlB,CAAuB/C,IAAvB;AACX4P,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,wBAA9B,EAAwDlK,QAAxD,CAAiE,aAAjE,CAAd;AACD,KAbH,EAcE,UAAC3M,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,0BAAZ;AACD,KAhBH;AAkBD,GApBD;;AAsBA;AACAyU,QAAMyX,SAAN,GAAkB,UAAC5V,OAAD,EAAa;AAC7B,QAAI6V,YAAY7vB,QAAQ0C,IAAR,CAAasX,OAAb,CAAhB;;AAEA1O,aAAS+E,IAAIjG,KAAb,EAAoBmB,OAAOpJ,KAA3B,EAAkCyJ,GAAlC,CAAsC3C,MAAtC,CAA6C+Q,QAAQ7X,KAArD,EAA4DL,IAA5D,CACE,UAACqF,IAAD,EAAU;AACR,UAAI2oB,QAAQ/Y,SAASoC,MAAT,GACTC,WADS,CACG,2BADH,EAETzD,MAFS,CAEF,MAFE,EAGToa,eAHS,CAGO,IAHP,EAITC,cAJS,CAIM,YAJN,EAKT3Y,SALS,CAKC,IALD,EAMTnI,QANS,CAMA,aANA,CAAZ;;AAQA6H,eAASG,IAAT,CAAc4Y,KAAd,EAAqBhuB,IAArB,CACE,UAACmuB,IAAD,EAAU;AACR;AACA,YAAGA,SAAS,IAAZ,EAAkB;AAChB;AACA9X,gBAAMwX,MAAN,CAAa,EAAC/jB,KAAKikB,UAAUjkB,GAAhB,EAAb;AACD;AACF,OAPH,CAOI;AAPJ;AASD,KAnBH,EAoBE,UAACrJ,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,0BAAZ;AACD,KAtBH;AAwBD,GA3BD;;AA8BA;AACAyU,QAAM1M,MAAN,GAAe,YAAM;AACnB;AACAH,aAAS+E,IAAIjG,KAAb,EAAoBmB,OAAOpJ,KAA3B,EAAkCsJ,MAAlC,CAAyCpD,MAAMlG,KAA/C,EAAsDgW,MAAMxC,MAAN,CAAalK,MAAb,CAAoBC,OAA1E,EAAmF5J,IAAnF,CACE,UAACqF,IAAD,EAAU;AACR;AACAmS,gBAAU5B,IAAV,CAAe,EAACnX,OAAO,QAAR,EAAkByB,MAAMmF,IAAxB,EAAf;AACD,KAJH,EAKE,UAAC5E,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,kBAAZ,EAAgCnB,GAAhC;AACAwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,oCAA9B,EAAoElK,QAApE,CAA6E,aAA7E,CAAd;AACD,KARH;AAUD,GAZD;;AAcA;AACAiJ,QAAMxM,OAAN,GAAgB,YAAM;AACpB,QAAIukB,SAASlwB,QAAQ0C,IAAR,CAAa2F,KAAb,CAAb;AACAiD,aAAS+E,IAAIjG,KAAb,EAAoBmB,OAAOpJ,KAA3B,EAAkCwJ,OAAlC,CAA0CtD,MAAMlG,KAAhD,EAAuDgW,MAAMxC,MAAN,CAAahK,OAAb,CAAqBD,OAA5E,EAAqF5J,IAArF,CACE,UAACC,MAAD,EAAY;AACV;AACAuX,gBAAU5B,IAAV,CAAe,EAACnX,OAAO,SAAR,EAAmByB,MAAMkuB,MAAzB,EAAf;AACD,KAJH,EAKE,UAAC3tB,GAAD,EAAS;AACPwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,qCAA9B,EAAqElK,QAArE,CAA8E,aAA9E,CAAd;AACD,KAPH;AAUD,GAZD;;AAcA;AACAiJ,QAAMgY,aAAN,GAAsB,UAACvkB,GAAD,EAAS;AAC7B;AACA,QAAI5L,QAAQowB,QAAR,CAAiBxkB,GAAjB,CAAJ,EAA2B,OAAOA,GAAP;;AAE3B;AACA,WAAO,EAAEA,KAAKA,GAAP,EAAY/H,MAAM,KAAlB,EAAP;AACD,GAND;;AASA;AACA,MAAIwsB,cAAc,SAAdA,WAAc,CAACC,MAAD,EAASrS,MAAT,EAAoB;AACpC,QAAIvE,UAAU,CAAC,aAAD,EAAgB,WAAhB,EAA6B,WAA7B,EAA0C,WAA1C,CAAd;AACAzY,MAAE0H,OAAF,CAAU2nB,MAAV,EAAkB,UAAC1W,CAAD,EAAI1D,CAAJ,EAAU;AAC1B,UAAG+H,OAAO/H,CAAP,MAAc0D,CAAd,IAAmBF,QAAQ5Y,OAAR,CAAgBoV,CAAhB,MAAuB,CAAC,CAA9C,EAAiD;AAC/CiC,cAAMsX,YAAN,CAAmBvlB,IAAnB,CAAwBgM,CAAxB;AACD;AACF,KAJD;AAMD,GARD;;AAUA;AACA,MAAG7N,MAAMxE,IAAN,IAAc,QAAjB,EAA2B;AACzBwsB,gBAAYlY,MAAMgX,aAAlB,EAAiChX,MAAM8W,QAAvC;AACD;AAGF,CAnKD,CADA;;;ACAAlvB,IAAIuX,UAAJ,CAAe,oDAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,UAAzD,EAAqE,SAArE,EAAgF,oBAAhF,EAAsG,KAAtG,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQgX,KAAR,EAAe5F,MAAf,EAAuB+G,SAAvB,EAAkCvC,QAAlC,EAA4CkB,QAA5C,EAAsDjO,IAAtD,EAA4DsB,QAA5D,EAAsE+E,GAAtE,EAA8E;;AAE5E;AACA8H,QAAM9H,GAAN,GAAYA,GAAZ;;AAEA;AACA8H,QAAM4G,KAAN,GAAc,OAAd;AACA5G,QAAMoY,OAAN,GAAgB,EAAhB;;AAEApY,QAAM/M,MAAN,GAAe,EAAf;;AAEA+M,QAAMc,iBAAN,GAA0B,YAAM;AAC9Bd,UAAMe,WAAN,GAAoB,SAApB;AACAjB,aAAS,YAAK;AACZE,YAAMe,WAAN,GAAoB,mBAApB;AACD,KAFD,EAEE,IAFF;AAGAnC,aAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,sBAA9B,CAAd;AACD,GAND;;AAQA;AACAjB,QAAM0B,MAAN,GAAe,YAAM;AAAEP,cAAUO,MAAV;AAAoB,GAA3C;;AAEA1B,QAAMqY,SAAN,GAAkB,YAAM;AACtBrY,UAAM4G,KAAN,GAAc,SAAd;;AAGA/U,SAAKoB,MAAL,CAAYiF,IAAIjG,KAAhB,EAAuBiB,GAAvB,GAA6BvJ,IAA7B,CACE,UAACqF,IAAD,EAAU;AACRgR,YAAMoY,OAAN,GAAgBppB,KAAKopB,OAArB;AACApY,YAAM/M,MAAN,GAAejE,KAAKiE,MAApB;AACA+M,YAAM4G,KAAN,GAAc,UAAd;;AAEAhI,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,+BAA9B,CAAd;AACD,KAPH,EAQE,UAAC7W,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,2BAAZ;AAED,KAXH;AAcD,GAlBD;AAoBD,CA3CD,CADA;;;ACAA3D,IAAIuX,UAAJ,CAAe,6CAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,KAApE,EAA2E,QAA3E,EAAqF,oBAArF,EAA2G,SAA3G,EAAsH,MAAtH,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmDqG,GAAnD,EAAwD9E,MAAxD,EAAgED,QAAhE,EAA0ElD,OAA1E,EAAmFikB,IAAnF,EAA4F;;AAE1F9U,SAAOnP,OAAP,GAAiBA,OAAjB;AACAmP,SAAOnP,OAAP,GAAiBnH,EAAE0c,MAAF,CAASpG,OAAOnP,OAAhB,EAAyB,WAAzB,EAAsCwV,OAAtC,EAAjB;AACArG,SAAO8U,IAAP,GAAcA,IAAd;;AAEA;AACA9U,SAAO/L,MAAP,GAAgB,UAAC8P,MAAD,EAASjT,KAAT,EAAmB;;AAEjCiD,aAAS+E,IAAIjG,KAAb,EAAoBmB,OAAOpJ,KAA3B,EAAkCqJ,MAAlC,CAAyCnD,MAAMlG,KAA/C,EAAsDL,IAAtD,CACE,UAACitB,OAAD,EAAa;AACXzV,gBAAUpC,IAAV,CAAe;AACbqE,qBAAaD,MADA;AAEbnE,qBAAa,sDAFA;AAGbqE,yBAAiB,KAHJ;AAIbpE,gBAAQ;AACN/O,iBAAOA,KADD;AAEN0mB,mBAASA,OAFH;AAGN1C,gBAAMA,IAHA;AAINhc,eAAKA;AAJC,SAJK;AAUbiH,oBAAY;AAVC,OAAf,EAWGxV,IAXH,CAYE,UAACC,MAAD,EAAY;;AAEV;AACA0B,gBAAQC,GAAR,CAAY,eAAZ,EAA6BnD,KAA7B;AACA,YAAGwB,OAAOxB,KAAP,KAAiB,QAApB,EAA8B;AAC5BgX,iBAAOnP,OAAP,GAAiBnH,EAAEwvB,MAAF,CAAS1uB,OAAOC,IAAhB,EAAsBuV,OAAOnP,OAA7B,CAAjB;AACA2O,mBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,qCAA9B,CAAd;AACD;;AAED;AACA,YAAGrX,OAAOxB,KAAP,KAAiB,SAApB,EAA+B;AAC7B;AACAgX,iBAAOnP,OAAP,GAAiBnH,EAAEL,MAAF,CAAS2W,OAAOnP,OAAhB,EAAyB,UAACsoB,CAAD,EAAO;AAAE,mBAAQA,EAAEvuB,KAAF,KAAYJ,OAAOC,IAAP,CAAYG,KAAhC;AAAwC,WAA1E,CAAjB;AACA4U,mBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,qCAA9B,CAAd;AACD;AACF,OA3BH,EA4BE,UAAC7W,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,iBAAZ,EAA+BnB,GAA/B;AACD,OA9BH;AAgCD,KAlCH,EAmCE,UAACA,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,wBAAZ;AACD,KArCH;AAwCD,GA1CD;AA4CD,CApDD,CADA;;;ACAA3D,IAAIuX,UAAJ,CAAe,+CAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,KAAtB,EAA6B,QAA7B,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwBlC,GAAxB,EAA6Bsb,MAA7B,EAAwC;;AAEtC;AACApU,SAAOoU,MAAP,GAAgBA,MAAhB;AAED,CAND,CADA;;;ACAA5rB,IAAIuX,UAAJ,CAAe,mDAAf,EACE,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,yCAApE,EAA+G,KAA/G,EAAsH,QAAtH,EAAgI,aAAhI,EAA+I,oBAA/I,EAAqK,qBAArK,EAA4L,eAA5L,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmDghB,YAAnD,EAAiE3a,GAAjE,EAAsE9E,MAAtE,EAA8E3H,WAA9E,EAA2FqnB,kBAA3F,EAA+GC,mBAA/G,EAAoIQ,aAApI,EAAsJ;;AAEtJnU,SAAO0T,kBAAP,GAA4B,EAA5B;AACA1T,SAAO2T,mBAAP,GAA6B,EAA7B;AACA3T,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAO8C,OAAP,GAAiB,EAAjB;AACA9C,SAAO3T,WAAP,GAAqB,EAAC0W,aAAa,EAAd,EAAkBC,YAAY,EAA9B,EAAkCC,YAAY,EAA9C,EAAkDC,YAAY,EAA9D,EAAkEC,SAAS,IAA3E,EAArB;AACAnD,SAAOmU,aAAP,GAAuBA,aAAvB;AACAnU,SAAOoZ,WAAP,GAAqB,KAArB;AACApZ,SAAOqZ,qBAAP,GAA+B,KAA/B;;AAGA;AACArZ,SAAOsZ,gBAAP,GAA0B,UAACvV,MAAD,EAAY;;AAEpC,QAAI/K,OAAO,EAAX;;AAEA+I,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,oFAFA;AAGbqE,uBAAiB,KAHJ;AAIbpE,cAAQ;AACN/G,aAAKkH,OAAOlH,GADN;AAENE,cAAMA,IAFA;AAGN8J,iBAAS9C,OAAO8C,OAHV;AAINoB,kBAAU,KAJJ;AAKNlQ,gBAAQA;AALF,OAJK;AAWb+L,kBAAY,+EAXC,CAW+E;AAX/E,KAAf;AAaD,GAjBD;;AAmBA;AACAC,SAAOuZ,aAAP,GAAuB,YAAM;;AAE3BvZ,WAAOqZ,qBAAP,GAA+B,IAA/B;;AAEA;AACA,QAAG,CAACrZ,OAAOoZ,WAAX,EAAwB;AACtB;AACApZ,aAAO3T,WAAP,GAAqB,EAAC0W,aAAa,EAAd,EAAkBC,YAAY,EAA9B,EAAkCC,YAAY,EAA9C,EAAkDC,YAAY,EAA9D,EAAkEC,SAAS,EAA3E,EAArB;;AAEA;AACAsQ,mBAAa1a,OAAb,CAAqBD,IAAIjG,KAAzB,EAAgCmB,OAAOpJ,KAAvC,EAA8C,SAA9C,EAAyDL,IAAzD,CACE,UAACqF,IAAD,EAAU;AACRwT,qBAAaxT,IAAb;AACAoQ,eAAOoZ,WAAP,GAAqB,IAArB;AACApZ,eAAOqZ,qBAAP,GAA+B,KAA/B;AACD,OALH,EAME,UAACruB,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,yBAAZ,EAAuCnB,GAAvC;AACD,OARH;AAUD;;AAED;AACA,QAAGgV,OAAOoZ,WAAV,EAAuB;;AAErB;AACApZ,aAAO3T,WAAP,GAAqB,EAAC0W,aAAa,EAAd,EAAkBC,YAAY,EAA9B,EAAkCC,YAAY,EAA9C,EAAkDC,YAAY,EAA9D,EAAkEC,SAAS,IAA3E,EAArB;;AAEA;AACAsQ,mBAAa5a,MAAb,CAAoBC,IAAIjG,KAAxB,EAA+BmB,OAAOpJ,KAAtC,EAA6CL,IAA7C,CACE,UAACqF,IAAD,EAAU;AACRwT,qBAAaxT,IAAb;AACAoQ,eAAOqZ,qBAAP,GAA+BrZ,OAAOoZ,WAAP,GAAqB,KAApD;AACD,OAJH,EAKE,UAACpuB,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,yBAAZ,EAAuCnB,GAAvC;AACD,OAPH;AAUD;AAEF,GAzCD;;AA2CA;AACAgV,SAAO0D,OAAP,GAAiB,UAAChR,GAAD,EAAS;AACxB,QAAGA,QAAQ,KAAX,EAAkB;;AAElB;AACAhJ,MAAE0H,OAAF,CAAU4O,OAAO3T,WAAjB,EAA8B,UAACgW,CAAD,EAAI1D,CAAJ,EAAU;AACtC;AACAjV,QAAE0H,OAAF,CAAUiR,CAAV,EAAa,UAACgB,GAAD,EAAMmW,KAAN,EAAgB;AAC3B;AACA,YAAGnW,OAAOA,IAAIC,cAAJ,KAAuB3E,CAAjC,EAAoC;;AAElC;AACAqB,iBAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCmW,OAAvC,CAA+CpW,GAA/C;;AAEArD,iBAAO3T,WAAP,CAAmBsS,CAAnB,EAAsBwJ,MAAtB,CAA6BqR,KAA7B,EAAmC,CAAnC;AACD;AAEF,OAVD;AAYD,KAdD;AAgBD,GApBD;;AAsBA;AACAxZ,SAAO2D,OAAP,GAAiB,UAAC/L,GAAD,EAAS;AACxB,QAAGA,IAAI4J,KAAJ,CAAU,aAAV,CAAH,EAA6B;AAC3B,aAAO,MAAP;AACD;AACD,QAAG5J,IAAI4J,KAAJ,CAAU,yDAAV,CAAH,EAAyE;AACvE,aAAO,MAAP;AACD;AACD,WAAO,MAAP;AACD,GARD;;AAUA;AACAxB,SAAO4D,WAAP,GAAqB,UAACjD,IAAD,EAAU;AAC7B,WAAQA,KAAKpX,OAAL,CAAa,SAAb,KAA2B,CAAC,CAA7B,GAAkC,YAAYoX,IAA9C,GAAqDA,IAA5D;AACD,GAFD;;AAIA;AACAX,SAAO6D,SAAP,GAAmB,UAACnP,IAAD,EAAU;AAC3B,WAAOA,KAAK8M,KAAL,CAAW,WAAX,EAAwB,CAAxB,CAAP;AACD,GAFD;;AAIA;AACA,MAAIkY,mBAAmB,SAAnBA,gBAAmB,CAACC,UAAD,EAAattB,WAAb,EAA6B;;AAElDA,gBAAY+E,OAAZ,CAAoB,UAACiS,GAAD,EAAS;;AAE3B;;AAEA;AACA,UAAG,EAAEA,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAArB,IAAgCotB,UAAlC,CAAH,EAAkD;AAChDtW,YAAIE,QAAJ,GAAe,EAAf;AACA,eAAOoW,WAAWtW,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAAhC,IAA2C8W,GAAlD,CAFgD,CAEO;AACxD;;AAED,UAAGA,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAArB,IAAgCotB,UAAnC,EAA+C,OAAOA,WAAWtW,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAAhC,EAAyCgX,QAAzC,CAAkD5Q,IAAlD,CAAuD0Q,GAAvD,CAAP;AAEhD,KAZD;;AAcA,WAAO3Z,EAAE8Z,MAAF,CAASmW,UAAT,CAAP;AAED,GAlBD;;AAoBA;AACA,MAAIvW,eAAe,SAAfA,YAAe,CAAC/W,WAAD,EAAiB;AAClC;AACAA,gBAAY+E,OAAZ,CAAoB,UAACiS,GAAD,EAAS;;AAE3B;AACA,UAAGrD,OAAO8C,OAAP,CAAevZ,OAAf,CAAuB8Z,IAAIvR,MAA3B,MAAuC,CAAC,CAA3C,EAA8CkO,OAAO8C,OAAP,CAAenQ,IAAf,CAAoB0Q,IAAIvR,MAAxB;;AAE9C;AACA,UAAG,EAAEuR,IAAIC,cAAJ,IAAsBtD,OAAO3T,WAA/B,CAAH,EAAgD2T,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,IAAyC,EAAzC;;AAGhD;AACA,UAAG,EAAED,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,CAA9B,CAAH,EAA0E;AACxED,YAAIE,QAAJ,GAAe,EAAf;AACA,eAAOvD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,IAAmE8W,GAA1E;AACD;;AAED;AACA,UAAGA,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,CAA/B,EAAuE;AACrE,eAAOtD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,EACJgX,QADI,CACKvD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,EAAiEgX,QAAjE,CAA0EpM,MAD/E,IACyFkM,GADhG;AAED;AAEF,KArBD;;AAuBA3Z,MAAE0H,OAAF,CAAU4O,OAAO3T,WAAjB,EAA8B,UAACmX,MAAD,EAAS7E,CAAT,EAAe;AAC3CqB,aAAO3T,WAAP,CAAmBsS,CAAnB,IAAwBjV,EAAE8Z,MAAF,CAASA,MAAT,CAAxB;AACA;AACD,KAHD;AAKD,GA9BD;;AAgCA;AACAJ,eAAa/W,WAAb;;AAEA;AACA2T,SAAO0T,kBAAP,GAA4BgG,iBAAiB1Z,OAAO0T,kBAAxB,EAA4CA,kBAA5C,CAA5B;AACA1T,SAAO2T,mBAAP,GAA6B+F,iBAAiB1Z,OAAO2T,mBAAxB,EAA6CA,mBAA7C,CAA7B;AAED,CAvLC,CADF;;;ACAAnrB,IAAIuX,UAAJ,CAAe,0CAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,yBAApE,EAA+F,KAA/F,EAAsG,QAAtG,EAAgH,yBAAhH,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmD2F,OAAnD,EAA4DU,GAA5D,EAAiE9E,MAAjE,EAAyE8S,uBAAzE,EAAqG;;AAEnG9G,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAO4Z,KAAP,GAAe,CAAC,kBAAD,EAAoB,SAApB,EAA8B,UAA9B,EAAyC,OAAzC,EAAkD,WAAlD,CAAf;AACA5Z,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAO6Z,qBAAP,GAA+B,KAA/B;;AAEA,MAAIC,cAAcrxB,QAAQ0C,IAAR,CAAa6I,MAAb,CAAlB;;AAEA;AACA,MAAI+S,cAAc,SAAdA,WAAc,CAACpT,IAAD,EAAU;;AAE1ByE,YAAQuB,UAAR,CAAmBqG,OAAOhM,MAAP,CAAcpJ,KAAjC,EAAwC+I,KAAKF,IAAL,CAAU7I,KAAlD,EAAyD+I,KAAKA,IAA9D,EAAoEpJ,IAApE,CACE,UAACC,MAAD,EAAY;AACV;AACAwV,aAAOhM,MAAP,GAAgBA,SAASxJ,MAAzB;AACD,KAJH,EAKE,UAACQ,GAAD,EAAS;AACPwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,wBAA9B,CAAd;AACD,KAPH;AAUD,GAZD;;AAcA;AACA7B,SAAOtO,MAAP,GAAgB,YAAM;AACpB,WAAOqV,WAAP;AACD,GAFD;;AAIA/G,SAAO+Z,UAAP,GAAoB,UAAC1wB,MAAD,EAAY;AAC9B,WAAO,UAAC2wB,KAAD,EAAW;AAChB,aAAQA,MAAMrmB,IAAN,IAActK,MAAtB;AACD,KAFD;AAGD,GAJD;;AAMA;AACA2W,SAAOia,OAAP,GAAiB,UAAClW,MAAD,EAASmW,aAAT,EAA2B;;AAE1CnY,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,6CAFA;AAGbqE,uBAAiB,KAHJ;AAIblE,kBAAY,CAAC,OAAD,EAAU,UAAV,EAAsB,UAACa,KAAD,EAAQhT,KAAR,EAAkB;;AAElDgT,cAAMjN,IAAN,GAAa,EAACA,MAAMumB,aAAP,EAAb;;AAEAtZ,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV;AACD,SAFD;;AAIA1B,cAAM+N,WAAN,GAAoB,UAAC1E,UAAD,EAAgB;AAClC,cAAI3b,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA,cAAG0b,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5BvJ,gBAAM0G,MAAN,CAAa2V,UAAb,EAAyB1f,IAAzB,CACE,UAACqF,IAAD,EAAU;AACRtB,qBAASlE,OAAT,CAAiBwF,IAAjB;AACD,WAHH,EAIE,UAAC5E,GAAD,EAAS;AACPkB,oBAAQC,GAAR,CAAYnB,GAAZ;AACAsD,qBAASjE,MAAT;AACD,WAPH;;AAUA,iBAAOiE,SAASoB,OAAhB;AACD,SAhBD;;AAkBAkR,cAAM/V,GAAN,GAAY,UAAC8X,CAAD,EAAO;;AAEjB;AACA,cAAGA,EAAE2T,QAAL,EAAe;AACb3T,cAAE4T,SAAF;AACA9tB,oBAAQ2I,OAAR,CAAgBuR,EAAE6T,MAAlB,EAA0B,UAACtkB,KAAD,EAAW;AACnCzJ,sBAAQ2I,OAAR,CAAgBc,KAAhB,EAAuB,UAACukB,UAAD,EAAgB;AACrCA,2BAAWC,WAAX;AACD,eAFD;AAGD,aAJD;AAKA;AACD;;AAED;AACAte,kBAAQsB,QAAR,CAAiBsG,OAAOhM,MAAP,CAAcpJ,KAA/B,EAAsCgW,MAAMjN,IAAN,CAAWF,IAAX,CAAgB7I,KAAtD,EAA6DgW,MAAMjN,IAAN,CAAWA,IAAxE,EAA8EpJ,IAA9E,CACE,UAACqF,IAAD,EAAU;AACRmS,sBAAU5B,IAAV,CAAe,EAAC1V,MAAMmF,IAAP,EAAazG,SAASyX,MAAMjN,IAAN,CAAWF,IAAX,CAAgBwT,SAAhB,GAA4B,GAA5B,GAAkCrG,MAAMjN,IAAN,CAAWF,IAAX,CAAgByT,QAAlD,GAA6D,qBAA7D,GAAqFJ,wBAAwBlG,MAAMjN,IAAN,CAAWA,IAAnC,CAArF,GAAgI,GAAhI,GAAsIiN,MAAMjN,IAAN,CAAWA,IAAvK,EAAf;AACD,WAHH,EAIE,UAAC3I,GAAD,EAAS;AACPkB,oBAAQC,GAAR,CAAY,eAAZ,EAA6BnB,GAA7B;AACD,WANH;AAQD,SAtBD,CA1BkD,CAgD/C;AAEJ,OAlDW,CAJC,CAsDV;;AAtDU,KAAf,EAwDGT,IAxDH,CAyDE,UAACiR,OAAD,EAAa;AACX,UAAIA,OAAJ,EAAagE,SAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrG,QAAQrS,OAAtC,CAAd;AACb6W,aAAOhM,MAAP,GAAgBA,SAASwH,QAAQ/Q,IAAjC;AACD,KA5DH,EA6DE,UAACC,KAAD,EAAW;AACT8U,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,sBAA9B,CAAd;AACD,KA/DH;AAkED,GApED,CApCmG,CAwGhG;;AAEH7B,SAAOma,WAAP,GAAqB,YAAM;;AAEzB,QAAGna,OAAOhM,MAAP,CAAc1H,IAAd,KAAuBwtB,YAAYxtB,IAAtC,EAA4C0T,OAAO6Z,qBAAP,GAA+B,IAA/B;AAC5C,QAAG7Z,OAAOhM,MAAP,CAAcmE,KAAd,KAAwB2hB,YAAY3hB,KAAvC,EAA8C6H,OAAO6Z,qBAAP,GAA+B,IAA/B;AAC9C,QAAG7Z,OAAOhM,MAAP,CAAcomB,aAAd,KAAgCN,YAAYM,aAA/C,EAA8Dpa,OAAO6Z,qBAAP,GAA+B,IAA/B;AAC9D,QAAG7Z,OAAOhM,MAAP,CAAcqmB,SAAd,KAA4BP,YAAYO,SAA3C,EAAsDra,OAAO6Z,qBAAP,GAA+B,IAA/B;;AAEtD,QAAG7Z,OAAO6Z,qBAAP,IAAgCllB,KAAK2lB,SAAL,CAAeta,OAAOhM,MAAtB,MAAkCW,KAAK2lB,SAAL,CAAeR,WAAf,CAArE,EAAkG;AAChG9Z,aAAO6Z,qBAAP,GAA+B,KAA/B;AACD;AAEF,GAXD;;AAaA7Z,SAAOua,cAAP,GAAwB,YAAM;;AAE5Bva,WAAO6Z,qBAAP,GAA+B,KAA/B;;AAEA;AACAzhB,YAAQnN,MAAR,CAAe+U,OAAOhM,MAAtB,EAA8BzJ,IAA9B,CACE,UAACC,MAAD,EAAY;AACV;AACAwV,aAAOhM,MAAP,GAAgBxJ,MAAhB;AACAsvB,oBAAcrxB,QAAQ0C,IAAR,CAAaX,MAAb,CAAd;;AAEAgV,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,oCAA9B,CAAd;AACD,KAPH,EAQE,UAAC7W,GAAD,EAAS;AACP;AACAgV,aAAOhM,MAAP,GAAgBvL,QAAQ0C,IAAR,CAAa2uB,WAAb,CAAhB;AACAta,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,2CAA9B,CAAd;AACD,KAZH;AAeD,GApBD;AAuBD,CA/ID,CADA;;;ACAArZ,IAAIuX,UAAJ,CAAe,qDAAf,EACE,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,SAA/C,EAA0D,6BAA1D,EAAyF,cAAzF,EAAyG,aAAzG,EAAwH,KAAxH,EAA+H,QAA/H,EAAyI,SAAzI,EACE,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgB+B,SAAhB,EAA2BvC,QAA3B,EAAqC/M,IAArC,EAA2CyhB,QAA3C,EAAqDsG,YAArD,EAAmEzsB,QAAnE,EAA6E+K,GAA7E,EAAkF9E,MAAlF,EAA0FigB,OAA1F,EAAsG;;AAEpGjU,SAAOlH,GAAP,GAAaA,GAAb;;AAEA,MAAI2hB,aAAa,SAAbA,UAAa,CAACvP,GAAD,EAAS;;AAExB;AACA,QAAIM,WAAWC,SAASC,cAAT,CAAwB,UAAxB,CAAf;;AAEA,QAAGF,SAASkP,SAAT,CAAmBvjB,MAAnB,GAA4B,CAA/B,EAAkC;AAChC;AACAqU,eAASkP,SAAT,GAAqB,EAArB;AACD;;AAED;AACA1a,WAAOiU,OAAP,GAAiB,IAAI9I,SAAJ,GAAgBC,eAAhB,CAAgCF,GAAhC,EAAqC,iBAArC,CAAjB;;AAEA;AACA,QAAIG,SAASrL,OAAOiU,OAAP,CAAe3I,oBAAf,CAAoC,KAApC,EAA2C,CAA3C,CAAb;AACAD,WAAOzY,EAAP,GAAU,SAAV,CAfwB,CAeH;AACrByY,WAAOsP,KAAP,GAAe,6BAAf,CAhBwB,CAgBsB;;AAE9C;AACA,QAAIC,UAAU,EAAd;;AAEA;AACA;AACArP,eAAW,YAAM;AACfC,iBAAWC,SAASC,cAAT,CAAwB,UAAxB,CAAX;;AAEAF,eAASG,WAAT,CACEH,SAASI,aAAT,CAAuBC,UAAvB,CAAkC7L,OAAOiU,OAAP,CAAenI,eAAjD,EAAkE,IAAlE,CADF;AAGA,UAAI8O,UAAU5O,WAAW,UAAX,EAAuB;AACnCC,mCAA2B,IADQ;AAEnCC,4BAAoB,IAFe;AAGnC2O,6BAAqB;AAHc,OAAvB,CAAd;AAKAD,cAAQzO,MAAR;AACAyO,cAAQxO,GAAR;AACAwO,cAAQvO,MAAR;AACD,KAdD,EAcE,GAdF;AAgBD,GAvCD;;AAyCA;AACA,MAAG4H,YAAY,IAAf,EAAqBwG,WAAWxG,QAAQA,OAAnB;AACrB,MAAGA,YAAY,IAAf,EAAqBwG,WAAW,0VAAX;;AAGrB;;;;;AAKAza,SAAO/U,MAAP,GAAgB,UAAC8Y,MAAD,EAAY;;AAE1BhC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,oEAFA;AAGbC,cAAQ;AACN/G,aAAKA;AADC,OAHK;AAMbmL,uBAAiB,KANJ;AAOblE,kBAAY,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,UAACnW,EAAD,EAAKF,CAAL,EAAQkX,KAAR,EAAemB,SAAf,EAA0BrB,QAA1B,EAAuC;;AAEhGE,cAAMka,OAAN,GAAgB,QAAhB;AACAla,cAAMma,QAAN,GAAiB,CAAjB;AACAna,cAAMoa,QAAN,GAAiB,EAAjB;;AAEA;AACApa,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV,CAAiB,kCAAjB;AACD,SAFD;;AAIA,YAAIyV,qBAAJ;AACA,YAAIkD,WAAWra,MAAMqa,QAAN,GAAiB,IAAIT,YAAJ,CAAiB;AAC/C1uB,eAAKhC,OAAOC,SAAP,CAAiBC,GAAjB,GAAuB,OAAvB,GAAiC8O,IAAIjG,KAArC,GAA8C,UAA9C,GAA2DmB,OAAOpJ,KAAlE,GAA0E;AADhC,SAAjB,CAAhC;;AAIAqwB,iBAASlvB,OAAT,CAAiB,eAAjB,IAAoCgC,SAASoH,QAAT,EAApC;AACA8lB,iBAASpvB,MAAT,GAAkB,KAAlB;AACAovB,iBAASC,KAAT,GAAiB,SAAjB;;AAEA;AACAD,iBAAS/pB,OAAT,CAAiByB,IAAjB,CAAsB;AACpBhE,gBAAM,YADc;AAEpBwsB,cAAI,YAASC,IAAT,EAAe/sB,OAAf,EAAwB;AAC1B,gBAAG+sB,KAAK9uB,IAAL,KAAc,eAAjB,EAAkCJ,QAAQC,GAAR,CAAY,qBAAZ;AAClC,mBAAQivB,KAAK9uB,IAAL,KAAc,eAAtB;AACD;AALmB,SAAtB;;AAQA2uB,iBAASI,WAAT,GAAuB,UAASC,QAAT,EAAmB/rB,QAAnB,EAA6BC,MAA7B,EAAqCzD,OAArC,EAA8C;AACnEG,kBAAQqvB,IAAR,CAAa,aAAb,EAA4BD,QAA5B,EAAsC/rB,QAAtC,EAAgDC,MAAhD,EAAwDzD,OAAxD;AACD,SAFD;;AAIA;AACAkvB,iBAASO,iBAAT,GAA6B,UAACF,QAAD,EAAc;AACzCpvB,kBAAQC,GAAR,CAAY,WAAZ,EAAyBmvB,QAAzB;AACA1a,gBAAMoa,QAAN,GAAiBM,SAASG,IAAT,CAAc9sB,IAA/B;AACAopB,yBAAeuD,QAAf;AACA1a,gBAAMka,OAAN,GAAc,QAAd;AACD,SALD;;AAOAG,iBAASS,cAAT,GAA0B,UAACJ,QAAD,EAAWP,QAAX,EAAwB;AAChDna,gBAAMma,QAAN,GAAiBA,QAAjB;AACD,SAFD;;AAIA;AACAna,cAAM+a,cAAN,GAAuB,YAAM;AAC3B/a,gBAAMgb,aAAN,GAAsB,IAAtB;AACAX,mBAASY,UAAT,CAAoB9D,YAApB;AACD,SAHD;;AAKA;AACAkD,iBAASa,cAAT,GAA0B,UAACR,QAAD,EAAW/rB,QAAX,EAAqBC,MAArB,EAA6BzD,OAA7B,EAAyC;AACjEG,kBAAQqvB,IAAR,CAAa,0BAAb,EAAyChsB,QAAzC;AACAwS,oBAAU5B,IAAV,CAAe,EAAC1V,MAAM8E,QAAP,EAAiBpG,SAAS,gCAA1B,EAAf;AACD,SAHD;AAKD,OAzDW;AAPC,KAAf,EAiEGoB,IAjEH,CAiEQ,UAACC,MAAD,EAAY;AAClB;AACAiwB,iBAAWjwB,OAAOC,IAAP,CAAYwpB,OAAvB;AACA;AACAzU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrX,OAAOrB,OAArC,CAAd;AACD,KAtED,EAsEG,UAACuB,KAAD,EAAW;AACZ8U,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BnX,KAA9B,CAAd;AACD,KAxED;AAyED,GA3ED;AA6ED,CArIH,CADF;;;ACAAlC,IAAIuX,UAAJ,CAAe,oDAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,qCAApE,EAA2G,WAA3G,EAAwH,KAAxH,EAA+H,QAA/H,EAAyI,IAAzI,EAA+I,QAA/I,EAAyJ,gBAAzJ,EAA2K,mBAA3K,EAAgM,uBAAhM,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmDyK,eAAnD,EAAoEqN,MAApE,EAA4EzR,GAA5E,EAAiF9E,MAAjF,EAAyF8Q,EAAzF,EAA6FsP,MAA7F,EAAqGG,cAArG,EAAqHjQ,iBAArH,EAAwIgQ,qBAAxI,EAAkK;;AAEhK;AACAtU,SAAOoU,MAAP,GAAgBA,MAAhB;AACApU,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOuU,cAAP,GAAwB,EAAxB;AACAvU,SAAOsE,iBAAP,GAA2BA,iBAA3B;AACAtE,SAAO8E,EAAP,GAAY,IAAZ;AACA9E,SAAOsU,qBAAP,GAA+B,EAA/B;;AAEA,MAAIyH,mBAAmB,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;AAC/B,QAAI9R,YAAY;AACd6M,gBAAU,EADI;AAEdC,cAAQ,EAFM;AAGd9T,kBAAY,EAHE;AAIdC,eAAS;AAJK,KAAhB;;AAOA;AACAzZ,MAAE0H,OAAF,CAAU4qB,IAAV,EAAgB,UAAC3Y,GAAD,EAAM1E,CAAN,EAAY;AAC1B,UAAG,EAAE0E,IAAI4Y,YAAJ,IAAoB/R,SAAtB,CAAH,EAAqCA,UAAU7G,IAAI4Y,YAAd,IAA8B,EAA9B;AACrC;AACA/R,gBAAU7G,IAAI4Y,YAAd,EAA4BtpB,IAA5B,CAAiC0Q,GAAjC;AACD,KAJD;;AAMA;AACArD,WAAOuU,cAAP,GAAwBrK,SAAxB;AACD,GAjBD;;AAmBA,MAAIgS,iBAAiB,SAAjBA,cAAiB,GAAM;AACzB,QAAI5nB,SAAS5K,EAAE6U,IAAF,CAAOuG,EAAP,EAAW,EAACqX,YAAYnoB,OAAO4U,cAAP,CAAsBwT,2BAAnC,EAAX,CAAb;;AAEA,QAAG,CAAC9nB,MAAJ,EAAYA,SAAS5K,EAAE6U,IAAF,CAAOuG,EAAP,EAAW,EAACqX,YAAY,SAAb,EAAX,CAAT;;AAEZnc,WAAO8E,EAAP,GAAYxQ,MAAZ;AACD,GAND;;AAQA,MAAI+nB,+BAA+B,SAA/BA,4BAA+B,CAACjI,MAAD,EAAY;;AAE7C,QAAIkI,UAAU;AACZC,eAAS;AACPC,eAAO,EADA;AAEPC,aAAK,EAFE;AAGP3R,YAAI;AAHG,OADG;AAMZ4R,mBAAa;AACXF,eAAO,EADI;AAEXC,aAAK,EAFM;AAGX3R,YAAI;AAHO,OAND;AAWZ6R,cAAQ;AACNC,mBAAW,EADL;AAEN9R,YAAI;AAFE;AAXI,KAAd;;AAiBA,QAAI+R,SAAS;AACXrxB,mBAAa,EADF;AAEXgxB,aAAO;AACLD,iBAAS,EADJ;AAELG,qBAAa;AAFR,OAFI;AAMXD,WAAK;AACHF,iBAAS,EADN;AAEHG,qBAAa;AAFV,OANM;AAUX5R,UAAI;AACFyR,iBAAS,EADP;AAEFG,qBAAa;AAFX,OAVO;AAcXC,cAAQ;AACNG,mBAAW,EADL;AAENhS,YAAI;AAFE;AAdG,KAAb;;AAoBAphB,MAAE0H,OAAF,CAAUgjB,MAAV,EAAkB,UAAC2I,GAAD,EAAS;;AAEzB;AACA,UAAGA,IAAI/B,QAAJ,CAAazxB,OAAb,CAAqB,MAArB,IAA+B,CAAC,CAAnC,EAAsC;;AAEtC;AACA,UAAIyzB,SAASD,IAAItuB,GAAJ,CAAQsQ,KAAR,CAAc,GAAd,CAAb;;AAEA;AACAge,UAAIZ,UAAJ,GAAiBa,OAAO,CAAP,KAAa,IAA9B;;AAEA;AACA,UAAG,CAACD,IAAIZ,UAAR,EAAoBY,IAAIZ,UAAJ,GAAiBnoB,OAAO4U,cAAP,CAAsBwT,2BAAvC,CAZK,CAY+D;;AAExF;AACA,UAAGW,IAAI/B,QAAJ,CAAazxB,OAAb,CAAqB,QAArB,IAAiC,CAAC,CAAlC,IAAuCwzB,IAAI/B,QAAJ,CAAazxB,OAAb,CAAqB,WAArB,IAAoC,CAAC,CAA/E,EAAkF,OAAOszB,OAAOF,MAAP,CAAcG,SAAd,GAA0BC,GAAjC;;AAElF;AACA,UAAGA,IAAIZ,UAAJ,CAAehvB,WAAf,MAAgC,CAACzD,EAAE6U,IAAF,CAAOse,OAAOrxB,WAAd,EAA2B,EAACmD,MAAMouB,IAAIZ,UAAJ,CAAehvB,WAAf,EAAP,EAA3B,CAApC,EAAsG0vB,OAAOrxB,WAAP,CAAmBmH,IAAnB,CAAwB,EAAChE,MAAMouB,IAAIZ,UAAJ,CAAehvB,WAAf,EAAP,EAAqC8vB,SAAS,KAA9C,EAAxB;;AAEtG,UAAGD,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,eAAlB,IAAqC,CAAC,CAAtC,IAA2CyzB,OAAO,CAAP,MAAc,WAA5D,EAAyEH,OAAOL,KAAP,CAAaD,OAAb,CAAqB5pB,IAArB,CAA0BoqB,GAA1B;AACzE,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,aAAlB,IAAmC,CAAC,CAApC,IAAyCyzB,OAAO,CAAP,MAAc,SAA1D,EAAqEH,OAAOJ,GAAP,CAAWF,OAAX,CAAmB5pB,IAAnB,CAAwBoqB,GAAxB;;AAErE,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,oBAAlB,IAA0C,CAAC,CAA3C,IAAgDyzB,OAAO,CAAP,MAAc,OAAjE,EAA0EH,OAAOL,KAAP,CAAaE,WAAb,CAAyB/pB,IAAzB,CAA8BoqB,GAA9B;AAC1E,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,kBAAlB,IAAwC,CAAC,CAAzC,IAA8CyzB,OAAO,CAAP,MAAc,KAA/D,EAAsEH,OAAOJ,GAAP,CAAWC,WAAX,CAAuB/pB,IAAvB,CAA4BoqB,GAA5B;AAEvE,KA1BD;;AA4BA7wB,YAAQC,GAAR,CAAY0wB,MAAZ;;AAEA7c,WAAOsU,qBAAP,GAA+BuI,MAA/B;AAED,GAvED;;AA0EA;;;;;;;;;AASA7c,SAAOkd,uBAAP,GAAiC,UAACC,KAAD,EAAQ7wB,IAAR,EAAkC;AAAA,QAApB6vB,UAAoB,uEAAT,IAAS;;;AAEjE;AACA,WAAOzyB,EAAE6U,IAAF,CAAOyB,OAAOsU,qBAAP,CAA6BhoB,IAA7B,EAAmC6wB,KAAnC,CAAP,EAAkD,UAACC,CAAD,EAAO;AAC9D,aAAQA,EAAEjB,UAAF,CAAahvB,WAAb,OAA+BgvB,WAAWhvB,WAAX,EAAvC;AACD,KAFM,CAAP;AAID,GAPD;;AAUAkvB,+BAA6B/H,qBAA7B;AACAyH,mBAAiBxH,cAAjB;AACA2H;AAED,CAxID,CADA;;;ACAA1zB,IAAIuX,UAAJ,CAAe,8CAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,KAApE,EAA2E,QAA3E,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmDqG,GAAnD,EAAwDsb,MAAxD,EAAmE;;AAEjE;AACApU,SAAOoU,MAAP,GAAgBA,MAAhB;;AAEA;AACApU,SAAOqd,SAAP,GAAmB,UAACC,GAAD,EAAS;AAC1B,WAAOA,IAAI9b,KAAJ,CAAU,gBAAV,EAA4B,CAA5B,CAAP;AACD,GAFD;AAID,CAXD,CADA;;;ACAAhZ,IAAIuX,UAAJ,CAAe,yDAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,KAApE,EAA2E,QAA3E,EAAqF,QAArF,EAA+F,KAA/F,EAAsG,IAAtG,EAA4G,uBAA5G,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmDqG,GAAnD,EAAwD9E,MAAxD,EAAgEogB,MAAhE,EAAwExJ,GAAxE,EAA6E9F,EAA7E,EAAiFwP,qBAAjF,EAA2G;;AAEzG;AACAtU,SAAOoU,MAAP,GAAgBA,MAAhB;AACApU,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAO8E,EAAP,GAAYA,EAAZ;AACA9E,SAAOud,SAAP,GAAmB,EAAnB;;AAGA,MAAIrB,iBAAiB,SAAjBA,cAAiB,GAAM;AACzB,QAAI5nB,SAAS5K,EAAE6U,IAAF,CAAOuG,EAAP,EAAW,EAACqX,YAAYnoB,OAAO4U,cAAP,CAAsBwT,2BAAnC,EAAX,CAAb;;AAEA,QAAG,CAAC9nB,MAAJ,EAAYA,SAAS5K,EAAE6U,IAAF,CAAOuG,EAAP,EAAW,EAACqX,YAAY,SAAb,EAAX,CAAT;;AAEZnc,WAAO8E,EAAP,GAAYxQ,MAAZ;AACD,GAND;;AAQA0L,SAAO8W,QAAP,GAAkB;AAChBC,cAAU,kFADM;AAEhBC,YAAQ,qDAFQ;AAGhB9T,gBAAY,wCAHI;AAIhBsa,uBAAmB;AAJH,GAAlB;;AAOA,MAAInB,+BAA+B,SAA/BA,4BAA+B,CAACjI,MAAD,EAAY;;AAE7C,QAAIyI,SAAS;AACXrxB,mBAAa,EADF;AAEXsf,UAAI;AACFyR,iBAAS,EADP;AAEFG,qBAAa;AAFX,OAFO;AAMXC,cAAQ;AACN7R,YAAI;AADE;AANG,KAAb;;AAWAphB,MAAE0H,OAAF,CAAUgjB,MAAV,EAAkB,UAAC2I,GAAD,EAAS;;AAEzB,UAAGA,IAAItuB,GAAJ,CAAQlF,OAAR,CAAgB,IAAhB,MAA0B,CAAC,CAA9B,EAAiC;;AAEjC,UAAIyzB,SAASD,IAAItuB,GAAJ,CAAQsQ,KAAR,CAAc,GAAd,CAAb;AACAge,UAAIZ,UAAJ,GAAiBa,OAAO,CAAP,KAAa,IAA9B;AACA,UAAG,CAACD,IAAIZ,UAAR,EAAoBY,IAAIZ,UAAJ,GAAiBnoB,OAAO4U,cAAP,CAAsBwT,2BAAvC,CANK,CAM+D;;AAExF,UAAGW,IAAIZ,UAAJ,CAAehvB,WAAf,MAAgC,CAACzD,EAAE6U,IAAF,CAAOse,OAAOrxB,WAAd,EAA2B,EAACmD,MAAMouB,IAAIZ,UAAJ,CAAehvB,WAAf,EAAP,EAA3B,CAApC,EAAsG0vB,OAAOrxB,WAAP,CAAmBmH,IAAnB,CAAwB,EAAChE,MAAMouB,IAAIZ,UAAJ,CAAehvB,WAAf,EAAP,EAAqC8vB,SAAS,KAA9C,EAAxB;;AAEtG,UAAGD,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,YAAlB,IAAkC,CAAC,CAAnC,IAAwCyzB,OAAO,CAAP,MAAc,QAAzD,EAAmEH,OAAO/R,EAAP,CAAUyR,OAAV,CAAkB5pB,IAAlB,CAAuBoqB,GAAvB;AACnE,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,iBAAlB,IAAuC,CAAC,CAAxC,IAA6CyzB,OAAO,CAAP,MAAc,IAA9D,EAAoEH,OAAO/R,EAAP,CAAU4R,WAAV,CAAsB/pB,IAAtB,CAA2BoqB,GAA3B;;AAEpE,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,WAAlB,IAAiC,CAAC,CAArC,EAAwCszB,OAAOF,MAAP,CAAc7R,EAAd,GAAmBiS,GAAnB;AAEzC,KAfD;;AAiBA7wB,YAAQC,GAAR,CAAY,eAAZ,EAA6B0wB,MAA7B;;AAEA7c,WAAOsU,qBAAP,GAA+BuI,MAA/B;AAED,GAlCD;;AAoCA;;;;;;;;;AASA7c,SAAOkd,uBAAP,GAAiC,UAACC,KAAD,EAAQ7wB,IAAR,EAAkC;AAAA,QAApB6vB,UAAoB,uEAAT,IAAS;;;AAEjE,QAAGA,eAAe,IAAlB,EAAwB;AACtB,UAAIY,MAAM/c,OAAOsU,qBAAP,CAA6BhoB,IAA7B,EAAmC6wB,KAAnC,CAAV;AACA,UAAGJ,OAAOA,IAAI5lB,MAAJ,KAAe,CAAzB,EAA4B,OAAO4lB,IAAI,CAAJ,CAAP;AAC7B;AACD,WAAOrzB,EAAE6U,IAAF,CAAOyB,OAAOsU,qBAAP,CAA6BhoB,IAA7B,EAAmC6wB,KAAnC,CAAP,EAAkD,UAACC,CAAD,EAAO;AAC9D,aAAQA,EAAEjB,UAAF,CAAahvB,WAAb,OAA+BgvB,WAAWhvB,WAAX,EAAvC;AACD,KAFM,CAAP;AAID,GAVD;;AAaA,MAAIswB,aAAa,SAAbA,UAAa,CAACC,UAAD,EAAgB;;AAE/B,QAAI9S,MAAM;AACRmM,gBAAU,EADF;AAERC,cAAQ,EAFA;AAGR9T,kBAAY,EAHJ;AAIRsa,yBAAmB;AAJX,KAAV;;AAOA;AACA9zB,MAAE0H,OAAF,CAAUssB,UAAV,EAAsB,UAACra,GAAD,EAAM1E,CAAN,EAAY;AAChC,UAAG,EAAE0E,IAAIsa,SAAJ,IAAiB/S,GAAnB,CAAH,EAA4BA,IAAIvH,IAAIsa,SAAR,IAAqB,EAArB;AAC5B;AACA/S,UAAIvH,IAAIsa,SAAR,EAAmBhrB,IAAnB,CAAwB0Q,GAAxB;AACD,KAJD;;AAMA;AACArD,WAAOud,SAAP,GAAmB3S,GAAnB;AACD,GAlBD;;AAoBA6S,aAAW7S,GAAX;AACAsR;AACAG,+BAA6B/H,qBAA7B;AAED,CA5GD,CADA;;;ACAA9rB,IAAIuX,UAAJ,CAAe,6CAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,SAAhC,EAA2C,4BAA3C,EAAyE,gCAAzE,EAA2G,6BAA3G,EAA0I,yCAA1I,EAAqL,WAArL,EAAkM,UAAlM,EAA8M,KAA9M,EAAqN,QAArN,EAA+N,KAA/N,EAAsO,KAAtO,EAA6O,IAA7O,EAAmP,IAAnP,EAAyP,IAAzP,EAA+P,mBAA/P,EAAoR,WAApR,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoR,MAAR,EAAgBgF,MAAhB,EAAwBvN,IAAxB,EAA8BmrB,eAA9B,EAA+CC,mBAA/C,EAAoEC,gBAApE,EAAsFhkB,IAAtF,EAA4FiI,SAA5F,EAAuGvC,QAAvG,EAAiH1G,GAAjH,EAAsH9E,MAAtH,EAA8H+F,GAA9H,EAAmIzP,GAAnI,EAAwIwa,EAAxI,EAA4IgP,EAA5I,EAAgJD,EAAhJ,EAAoJvP,iBAApJ,EAAuKyP,SAAvK,EAAqL;;AAEnL;AACAjP,KAAGiZ,qBAAH,GAA4B/pB,OAAO4U,cAAP,CAAsBwT,2BAAtB,KAAsD,SAAvD,GAAoEtX,GAAGkZ,yBAAvE,GAAmGlZ,GAAGmZ,4BAAjI;AACAnZ,KAAGoZ,uBAAH,GAA8BlqB,OAAO4U,cAAP,CAAsBwT,2BAAtB,KAAsD,SAAvD,GAAoEtX,GAAGqZ,2BAAvE,GAAqGrZ,GAAGsZ,8BAArI;;AAEApe,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOvV,IAAP,GAAc;AACZH,SAAKA,GADO;AAEZwa,QAAIA,EAFQ;AAGZ+O,QAAIA,EAHQ;AAIZC,QAAIA,EAJQ;AAKZuK,QAAIrqB,OAAO4U,cALC;AAMZrO,QAAIvG,OAAOsqB,kBANC;AAOZvK,eAAYA,cAAc,IAAf,GAAuBA,SAAvB,GAAmC,EAACwK,SAAS,MAAV,EAAkBC,iBAAiB,MAAnC;AAPlC,GAAd;AASAxe,SAAOsE,iBAAP,GAA2BA,iBAA3B;AACAtE,SAAOye,YAAP,GAAsB,IAAtB;AACAze,SAAO0e,aAAP,GAAuB;AACrBC,SAAK,CADgB;AAErBC,mBAAe,CAFM;AAGrBC,uBAAmB,CAHE;AAIrBC,uBAAmB;AAJE,GAAvB;;AAOA9e,SAAO+e,WAAP,GAAqB,YAAM;AACzB/jB,WAAOqN,EAAP,CAAU,oBAAV;AACD,GAFD;;AAIA,MAAI2W,kBAAkB,SAAlBA,eAAkB,CAACzyB,OAAD,EAAa;AACjC,QAAI6U,OAAO,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,EAA4C,iBAA5C,EAA+D,iBAA/D,CAAX;;AAEA;AACA,QAAI7U,QAAQ0yB,WAAR,CAAoBzd,KAApB,CAA0B,mDAA1B,CAAJ,EAAoF;AAClFjV,cAAQD,IAAR,GAAe,eAAf;AACA,aAAOC,OAAP;AACD;;AAED;AACA,QAAIA,QAAQ0yB,WAAR,CAAoBzd,KAApB,CAA0B,6DAA1B,CAAJ,EAA8F;AAC5FjV,cAAQD,IAAR,GAAe,mBAAf;AACA,aAAOC,OAAP;AACD;;AAED;AACA,QAAIA,QAAQ0yB,WAAR,CAAoB9xB,WAApB,GAAkC5D,OAAlC,CAA0C,YAA1C,MAA4D,CAAC,CAAjE,EAAoE;AAClEgD,cAAQD,IAAR,GAAe,mBAAf;AACA,aAAOC,OAAP;AACD;;AAED;AACAA,YAAQD,IAAR,GAAe,KAAf;AACA,WAAOC,OAAP;AAED,GAzBD;;AA2BA;AACA,MAAI2yB,kBAAkB,SAAlBA,eAAkB,CAACC,QAAD,EAAc;;AAElC,QAAIzgB,SAAS,EAAb;;AAEA;AACAsB,WAAO0e,aAAP,GAAuB,EAAEC,KAAK,CAAP,EAAUC,eAAe,CAAzB,EAA4BC,mBAAmB,CAA/C,EAAkDC,mBAAmB,CAArE,EAAvB;;AAEAK,aAAS/tB,OAAT,CAAiB,UAAC7E,OAAD,EAAUoS,CAAV,EAAgB;AAC/B;AACAD,aAAO/L,IAAP,CAAYqsB,gBAAgBzyB,OAAhB,CAAZ;;AAEA;AACA,UAAI,CAACyT,OAAO0e,aAAP,CAAqB3kB,IAAI4E,CAAJ,EAAOrS,IAA5B,CAAL,EAAwC0T,OAAO0e,aAAP,CAAqB3kB,IAAI4E,CAAJ,EAAOrS,IAA5B,IAAoC,CAApC;AACxC0T,aAAO0e,aAAP,CAAqB3kB,IAAI4E,CAAJ,EAAOrS,IAA5B;AAED,KARD;;AAUA,WAAOoS,MAAP;AACD,GAlBD;AAmBAsB,SAAOof,YAAP,GAAsBF,gBAAgBnlB,GAAhB,CAAtB;;AAGAiG,SAAOqf,eAAP,GAAyB,UAACC,IAAD,EAAU;AACjC,QAAGtf,OAAOye,YAAP,KAAwBa,IAA3B,EAAiC,OAAOtf,OAAOye,YAAP,GAAsB,IAA7B;AACjCze,WAAOye,YAAP,GAAsBa,IAAtB;AACD,GAHD;;AAKAtf,SAAOuf,cAAP,GAAwB,UAACnV,QAAD,EAAc;AACpC,WAAQA,SAAS9d,IAAT,KAAkB0T,OAAOye,YAAzB,IAAyCze,OAAOye,YAAP,KAAwB,IAAzE;AACD,GAFD;;AAIA;AACAze,SAAOwf,QAAP,GAAkB,UAACzb,MAAD,EAAY;;AAE5BhC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,2DAFA;AAGbqE,uBAAiB,KAHJ;AAIblE,kBAAY,CAAC,OAAD,EAAU,UAACa,KAAD,EAAW;;AAE/BA,cAAMyd,EAAN,GAAWre,OAAOvV,IAAP,CAAY4zB,EAAvB;;AAEAzd,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV,CAAiB,wBAAjB;AACD,SAFD;;AAIA1B,cAAM3V,MAAN,GAAe,UAAC0X,CAAD,EAAO;AACpB;AACA,cAAIA,EAAE2T,QAAN,EAAgB;AACd3T,cAAE4T,SAAF;AACA9tB,oBAAQ2I,OAAR,CAAgBuR,EAAE6T,MAAlB,EAA0B,UAACtkB,KAAD,EAAW;AACnCzJ,sBAAQ2I,OAAR,CAAgBc,KAAhB,EAAuB,UAACukB,UAAD,EAAgB;AACrCA,2BAAWC,WAAX;AACD,eAFD;AAGD,aAJD;AAKA;AACD;;AAEDxqB,kBAAQC,GAAR,CAAYyxB,eAAZ;;AAEA;AACAA,0BAAgB3yB,MAAhB,CAAuB6N,IAAIjG,KAA3B,EAAkCmB,OAAOpJ,KAAzC,EAAgDgW,MAAMyd,EAAtD,EAA0D9zB,IAA1D,CACE,UAACC,MAAD,EAAY;AACVuX,sBAAU5B,IAAV,CAAe,wBAAf;AACD,WAHH,EAIE,UAACzV,KAAD,EAAW;AACTksB,kBAAM,+BAAN;AACA1qB,oBAAQC,GAAR,CAAYzB,KAAZ;AACD,WAPH;AASD,SAxBD,CAR+B,CAgC5B;AACJ,OAjCW,CAJC,CAqCV;;AArCU,KAAf,EAuCGH,IAvCH,CAuCQ,UAACiR,OAAD,EAAa;AACnB,UAAIA,OAAJ,EAAagE,SAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrG,OAA9B,CAAd;AACd,KAzCD,EAyCG,UAAC9Q,KAAD,EAAW;AACZ8U,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BnX,KAA9B,CAAd;AACD,KA3CD;AA6CD,GA/CD,CA1FmL,CAyIhL;;;AAGH;AACAsV,SAAOyf,QAAP,GAAkB,UAAC1b,MAAD,EAAY;;AAE5BhC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,8DAFA;AAGbqE,uBAAiB,KAHJ;AAIblE,kBAAY,CAAC,OAAD,EAAU,UAACa,KAAD,EAAW;;AAE/BA,cAAMyd,EAAN,GAAW51B,QAAQ0C,IAAR,CAAa6U,OAAOvV,IAAP,CAAY4zB,EAAzB,CAAX,CAF+B,CAEU;AACzCzd,cAAM0D,iBAAN,GAA0BtE,OAAOsE,iBAAjC,CAH+B,CAGqB;;AAEpD1D,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV,CAAiB,wBAAjB;AACD,SAFD;;AAIA1B,cAAM3V,MAAN,GAAe,YAAM;;AAEnB;AACA2yB,0BAAgB3yB,MAAhB,CAAuB+U,OAAOlH,GAAP,CAAWjG,KAAlC,EAAyCmB,OAAOpJ,KAAhD,EAAuDgW,MAAMyd,EAA7D,EAAiE9zB,IAAjE,CACE,UAACC,MAAD,EAAY;AACVuX,sBAAU5B,IAAV,CAAe,EAAChX,SAAS,wBAAV,EAAoCsB,MAAMmW,MAAMyd,EAAhD,EAAf;AACD,WAHH,EAIE,UAAC3zB,KAAD,EAAW;AACTksB,kBAAM,+BAAN;AACA1qB,oBAAQC,GAAR,CAAYzB,KAAZ;AACD,WAPH;AAUD,SAbD,CAT+B,CAsB5B;AACJ,OAvBW,CAJC,CA2BV;;AA3BU,KAAf,EA6BGH,IA7BH,CA6BQ,UAACiR,OAAD,EAAa;AACnB,UAAIA,OAAJ,EAAagE,SAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrG,QAAQrS,OAAtC,CAAd;AACb6W,aAAOvV,IAAP,CAAY4zB,EAAZ,GAAiB7iB,QAAQ/Q,IAAzB;AACD,KAhCD,EAgCG,UAACC,KAAD,EAAW;AACZ8U,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BnX,KAA9B,CAAd;AACD,KAlCD;AAoCD,GAtCD,CA7ImL,CAmLhL;;AAEH;AACAsV,SAAO0f,aAAP,GAAuB,UAAC3b,MAAD,EAAY;;AAEjChC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,+DAFA;AAGbqE,uBAAiB,KAHJ;AAIblE,kBAAY,CAAC,OAAD,EAAU,UAACa,KAAD,EAAW;;AAE/BA,cAAMrG,EAAN,GAAW9R,QAAQ0C,IAAR,CAAa6U,OAAOvV,IAAP,CAAY8P,EAAzB,CAAX,CAF+B,CAEU;;AAEzCqG,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV,CAAiB,wBAAjB;AACD,SAFD;;AAKA1B,cAAM3V,MAAN,GAAe,YAAM;;AAEnB;AACA4yB,8BAAoB5yB,MAApB,CAA2B+U,OAAOlH,GAAP,CAAWjG,KAAtC,EAA6C+N,MAAMrG,EAAnD,EAAuDhQ,IAAvD,CACE,UAACC,MAAD,EAAY;AACVuX,sBAAU5B,IAAV,CAAe,EAAChX,SAAS,wBAAV,EAAoCsB,MAAMmW,MAAMrG,EAAhD,EAAf;AACD,WAHH,EAIE,UAAC7P,KAAD,EAAW;AACTksB,kBAAM,+BAAN;AACA1qB,oBAAQC,GAAR,CAAYzB,KAAZ;AACD,WAPH;AAUD,SAbD,CAT+B,CAsB5B;AACJ,OAvBW,CAJC,CA2BV;;AA3BU,KAAf,EA6BGH,IA7BH,CA6BQ,UAACiR,OAAD,EAAa;AACnB,UAAIA,OAAJ,EAAagE,SAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrG,QAAQrS,OAAtC,CAAd;AACb6W,aAAOvV,IAAP,CAAY8P,EAAZ,GAAiBiB,QAAQ/Q,IAAzB;AACD,KAhCD,EAgCG,UAACC,KAAD,EAAW;AACZ8U,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BnX,KAA9B,CAAd;AACD,KAlCD;AAoCD,GAtCD,CAtLmL,CA4NhL;;;AAGHsV,SAAOvV,IAAP,CAAYsP,GAAZ,GAAkBrQ,EAAE0c,MAAF,CAASrM,GAAT,EAAc,MAAd,CAAlB;;AAEA;;;AAGAiG,SAAO2f,aAAP,GAAuB,UAAC5b,MAAD,EAAY;;AAEjChC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,sDAFA;AAGbqE,uBAAiB,KAHJ;AAIblE,kBAAY,CAAC,OAAD,EAAU,UAACa,KAAD,EAAW;AAC/BA,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV,CAAiB,EAACnZ,SAAS,wBAAV,EAAjB;AACD,SAFD;;AAIA;AACAyX,cAAM/V,GAAN,GAAY,YAAM;;AAEhB;AACAiP,eAAK7L,MAAL,CAAY6K,IAAIjG,KAAhB,EAAuBmB,OAAOpJ,KAA9B,EAAqCgW,MAAMrT,UAA3C,EAAuDhD,IAAvD,CACE,UAACqF,IAAD,EAAU;AACR;AACAmK,gBAAIpH,IAAJ,CAAS/C,IAAT;;AAEA;AACAoQ,mBAAOvV,IAAP,CAAYsP,GAAZ,GAAkBmlB,gBAAgBnlB,GAAhB,CAAlB;AACAiG,mBAAOvV,IAAP,CAAYsP,GAAZ,GAAkBrQ,EAAE0c,MAAF,CAASrM,GAAT,EAAc,MAAd,CAAlB;;AAEAgI,sBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,IAAT,EAAerG,SAAS,2BAAxB,EAAf;AACD,WAVH,EAWE,UAAC6B,GAAD,EAAS;AACPkB,oBAAQC,GAAR,CAAY,0BAAZ,EAAwCnB,GAAxC;AACA+W,sBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,KAAT,EAAgBrG,SAAS,gCAAzB,EAAf;AACD,WAdH;AAiBD,SApBD,CAN+B,CA0B5B;AACJ,OA3BW,CAJC,CA+BV;;AA/BU,KAAf,EAiCGoB,IAjCH,CAiCQ,UAACiR,OAAD,EAAa;AACnB,UAAIA,OAAJ,EAAagE,SAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrG,QAAQrS,OAAtC,CAAd;AACd,KAnCD,EAmCG,UAACuB,KAAD,EAAW;AACZ8U,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,wBAA9B,CAAd;AACD,KArCD;AAuCD,GAzCD;;AA2CA;;;;;;AAMA7B,SAAO4f,gBAAP,GAA0B,UAAS7b,MAAT,EAAiBxW,UAAjB,EAA6B;;AAErD,QAAIsyB,iBAAiBp3B,QAAQ0C,IAAR,CAAaoC,UAAb,CAArB;;AAEAwU,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,yDAFA;AAGbqE,uBAAiB,KAHJ;AAIblE,kBAAY,CAAC,OAAD,EAAU,UAACa,KAAD,EAAW;AAC/BA,cAAMrT,UAAN,GAAmBA,UAAnB;;AAEAqT,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV,CAAiB,EAACnZ,SAAS,wBAAV,EAAjB;AACD,SAFD;;AAIA;AACAyX,cAAM3V,MAAN,GAAe,UAACgP,OAAD,EAAa;;AAE1B;AACAH,eAAKpI,MAAL,CAAYoH,IAAIjG,KAAhB,EAAuBmB,OAAOpJ,KAA9B,EAAqC2C,WAAW3C,KAAhD,EAAuDgW,MAAMzM,OAA7D,EAAsE8F,OAAtE,EAA+E1P,IAA/E,CACE,UAACqF,IAAD,EAAU;AACRoQ,mBAAOvV,IAAP,CAAYsP,GAAZ,GAAkBrQ,EAAEW,MAAF,CAAS2V,OAAOvV,IAAP,CAAYsP,GAArB,EAA0B,UAAC+D,CAAD,EAAO;AAAE,qBAAQA,EAAElT,KAAF,KAAY2C,WAAW3C,KAA/B;AAAwC,aAA3E,CAAlB;AACAmP,kBAAMrQ,EAAEW,MAAF,CAAS0P,GAAT,EAAc,UAAC+D,CAAD,EAAO;AAAE,qBAAQA,EAAElT,KAAF,KAAY2C,WAAW3C,KAA/B;AAAwC,aAA/D,CAAN;;AAGA;AACA,gBAAGqP,OAAH,EAAY+F,OAAOvV,IAAP,CAAYH,GAAZ,GAAkBZ,EAAEW,MAAF,CAAS2V,OAAOvV,IAAP,CAAYH,GAArB,EAA0B,UAACmB,CAAD,EAAO;AAAE,qBAAQA,EAAEq0B,YAAF,KAAmBvyB,WAAW0xB,WAAtC;AAAqD,aAAxF,CAAlB;;AAEZ;AACAjf,mBAAO0e,aAAP,CAAqBmB,eAAevzB,IAApC;;AAEAyV,sBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,IAAT,EAAerG,SAAS,+BAA+B8Q,OAAD,GAAY,SAAZ,GAAwB,OAAtD,IAAiE,GAAzF,EAAf;AACD,WAbH,EAcE,UAACjP,GAAD,EAAS;AACPkB,oBAAQC,GAAR,CAAY,0BAAZ,EAAwCnB,GAAxC;AACA+W,sBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,IAAT,EAAerG,SAAS,2BAA2B8Q,OAAD,GAAY,SAAZ,GAAwB,OAAlD,IAA6D,GAArF,EAAf;AACD,WAjBH;AAoBD,SAvBD,CAR+B,CA+B5B;AACJ,OAhCW,CAJC,CAoCV;;AApCU,KAAf,EAsCG1P,IAtCH,CAsCQ,UAACiR,OAAD,EAAa;AACnB,UAAIA,OAAJ,EAAagE,SAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrG,QAAQrS,OAAtC,CAAd;AACd,KAxCD,EAwCG,UAACuB,KAAD,EAAW;AACZ8U,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,wBAA9B,CAAd;AACD,KA1CD;AA4CD,GAhDD;AAkDD,CAxUD,CADA;;;ACAArZ,IAAIuX,UAAJ,CAAe,sDAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,cAA/C,EAA+D,wBAA/D,EAAyF,mBAAzF,EAA8G,KAA9G,EAAqH,QAArH,EAA+H,OAA/H,EAAwI,UAAxI,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQgX,KAAR,EAAemB,SAAf,EAA0BvC,QAA1B,EAAoCugB,SAApC,EAA+CvpB,YAA/C,EAA6DpG,GAA7D,EAAkE0I,GAAlE,EAAuE9E,MAAvE,EAA+ElD,KAA/E,EAAsF4mB,QAAtF,EAAmG;;AAEjG9W,QAAMof,GAAN,GAAY,SAAZ;AACApf,QAAM9P,KAAN,GAAeA,SAAS,EAAEmvB,QAAQ,EAAV,EAAcC,eAAe,IAA7B,EAAmCC,WAAW,EAA9C,EAAkDC,OAAO,IAAzD,EAAxB;AACAxf,QAAMtU,IAAN,GAAcwE,KAAD,GAAUA,MAAMxE,IAAhB,GAAuBorB,QAApC;AACA9W,QAAM3S,MAAN,GAAgB,CAACypB,QAAjB;AACA9W,QAAMyf,iBAAN,GAA0B,CACxB,EAACvvB,OAAO,eAAR,EAAyB1C,aAAY,6CAArC,EADwB,EAExB,EAAC0C,OAAO,gBAAR,EAA0B1C,aAAY,4CAAtC,EAFwB,EAGxB,EAAC0C,OAAO,iBAAR,EAA2B1C,aAAY,0CAAvC,EAHwB,EAIxB,EAAC0C,OAAO,gBAAR,EAA0B1C,aAAY,yCAAtC,EAJwB,EAKxB,EAAC0C,OAAO,cAAR,EAAwB1C,aAAY,iDAApC,EALwB,EAMxB,EAAC0C,OAAO,aAAR,EAAuB1C,aAAY,gDAAnC,EANwB,EAOxB,EAAC0C,OAAO,eAAR,EAAyB1C,aAAY,wCAArC,EAPwB,EAQxB,EAAC0C,OAAO,SAAR,EAAmB1C,aAAY,wCAA/B,EARwB,EASxB,EAAC0C,OAAO,WAAR,EAAqB1C,aAAY,kCAAjC,EATwB,EAUxB,EAAC0C,OAAO,WAAR,EAAqB1C,aAAY,kCAAjC,EAVwB,EAWxB,EAAC0C,OAAO,cAAR,EAAwB1C,aAAY,2BAApC,EAXwB,EAYxB,EAAC0C,OAAO,cAAR,EAAwB1C,aAAY,2BAApC,EAZwB,EAaxB,EAAC0C,OAAO,cAAR,EAAwB1C,aAAY,6BAApC,EAbwB,EAcxB,EAAC0C,OAAO,aAAR,EAAuB1C,aAAY,4BAAnC,EAdwB,EAexB,EAAC0C,OAAO,UAAR,EAAoB1C,aAAY,4DAAhC,EAfwB,EAgBxB,EAAC0C,OAAO,oBAAR,EAA8B1C,aAAY,oCAA1C,EAhBwB,EAiBxB,EAAC0C,OAAO,aAAR,EAAuB1C,aAAY,6BAAnC,EAjBwB,EAkBxB,EAAC0C,OAAO,oBAAR,EAA8B1C,aAAY,qEAA1C,EAlBwB,EAmBxB,EAAC0C,OAAO,iBAAR,EAA2B1C,aAAY,iCAAvC,EAnBwB,EAoBxB,EAAC0C,OAAO,yBAAR,EAAmC1C,aAAa,KAAhD,EApBwB,EAqBxB,EAAC0C,OAAO,wBAAR,EAAkC1C,aAAa,KAA/C,EArBwB,EAsBxB,EAAC0C,OAAO,UAAR,EAAoB1C,aAAa,KAAjC,EAtBwB,CAA1B;;AAyBAwS,QAAMyf,iBAAN,GAA0B32B,EAAE0c,MAAF,CAASxF,MAAMyf,iBAAf,EAAkC,OAAlC,CAA1B;;AAEAzf,QAAM+W,GAAN,GAAY;AACV2I,2BAAuB,IADb;AAEVC,oBAAgB;AAFN,GAAZ;;AAKA3f,QAAM4f,sBAAN,GAA+B,UAACC,MAAD,EAASrhB,OAAT,EAAqB;AAClD,WAAOwB,MAAM9P,KAAN,CAAYqvB,SAAZ,CAAsBM,MAAtB,EAA8BrhB,OAA9B,CAAsC+I,MAAtC,CAA6C/I,OAA7C,EAAqD,CAArD,CAAP;AACD,GAFD;;AAIAwB,QAAM8f,eAAN,GAAwB,UAACD,MAAD,EAAY;AAClC,WAAO7f,MAAM9P,KAAN,CAAYqvB,SAAZ,CAAsBhY,MAAtB,CAA6BsY,MAA7B,EAAoC,CAApC,CAAP;AACD,GAFD;;AAIA7f,QAAM+f,mBAAN,GAA4B,UAACF,MAAD,EAAY;;AAEtC;AACA,QAAGA,WAAS,IAAZ,EAAkB;AAChB7f,YAAM9P,KAAN,CAAYqvB,SAAZ,CAAsBxtB,IAAtB,CAA2B,EAAC7B,OAAO,IAAR,EAAcsO,SAAS,CAACwB,MAAM+W,GAAN,CAAU2I,qBAAX,CAAvB,EAA3B;AACA1f,YAAM+W,GAAN,CAAU2I,qBAAV,GAAkC,IAAlC,CAFgB,CAEwB;AACxC;AACD;;AAED,QAAG1f,MAAM+W,GAAN,CAAU2I,qBAAV,KAAoC,IAAvC,EAA6C;AAC7C1f,UAAM9P,KAAN,CAAYqvB,SAAZ,CAAsBM,MAAtB,EAA8BrhB,OAA9B,CAAsCzM,IAAtC,CAA2CiO,MAAM+W,GAAN,CAAU2I,qBAArD,EAVsC,CAUuC;AAC7E1f,UAAM+W,GAAN,CAAU2I,qBAAV,GAAkC,IAAlC,CAXsC,CAWE;AACzC,GAZD;;AAcA1f,QAAMggB,YAAN,GAAqB,YAAM;AACzB,QAAGhgB,MAAM+W,GAAN,CAAU4I,cAAV,KAA6B,IAAhC,EAAsC;AACtC3f,UAAM9P,KAAN,CAAYqvB,SAAZ,CAAsBxtB,IAAtB,CAA2B,EAAC7B,OAAO8P,MAAM+W,GAAN,CAAU4I,cAAlB,EAAkCnhB,SAAS,EAA3C,EAA3B;AACAwB,UAAM+W,GAAN,CAAU4I,cAAV,GAA2B,IAA3B;AACD,GAJD;;AAMA;AACA,MAAIM,UAAU,EAAd;AACA,MAAG/vB,UAAU,IAAb,EAAmB;AACjBpH,MAAE0H,OAAF,CAAUN,MAAMmvB,MAAhB,EAAwB,UAACx0B,CAAD,EAAO;AAC7B,UAAGA,MAAM,IAAT,EAAeo1B,QAAQluB,IAAR,CAAa,EAAC7B,OAAOrF,CAAR,EAAb;AAChB,KAFD;AAGD;;AAED,MAAIq1B,aAAa,EAAjB;AACA;AACAlgB,QAAMgY,aAAN,GAAsB,UAACmI,OAAD,EAAa;AACjC;AACA,QAAIt4B,QAAQowB,QAAR,CAAiBkI,OAAjB,CAAJ,EAA+B,OAAOA,OAAP;;AAE/B;AACA,WAAO,EAAEA,SAASA,OAAX,EAAoBz0B,MAAM,KAA1B,EAAP;AACD,GAND;;AAQAsU,QAAMmgB,OAAN,GAAgB,EAAhB;;AAEA;AACAngB,QAAMmgB,OAAN,CAAc13B,MAAd,GAAuB,UAAC6D,KAAD,EAAW;AAChC,QAAIoB,WAAW1E,GAAG2E,KAAH,EAAf;AACA,QAAGrB,MAAMiK,MAAN,GAAe,CAAlB,EAAqB7I,SAASlE,OAAT,CAAiB,EAAjB;;AAErB,QAAG8C,MAAMiK,MAAN,IAAgB,CAAnB,EAAsB;AACpB/G,UAAIM,OAAJ,CAAYxD,KAAZ,EAAmB3C,IAAnB,CACE,UAACy2B,OAAD,EAAa;AACX1yB,iBAASlE,OAAT,CAAiB42B,OAAjB;AACD,OAHH,EAIE,UAACh2B,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,8BAAZ,EAA4CnB,GAA5C;AACD,OANH;AAQD;AACD,WAAOsD,SAASoB,OAAhB;AACD,GAfD;;AAiBAkR,QAAMqgB,UAAN,GAAmB,EAAnB;;AAEArgB,QAAMqgB,UAAN,CAAiB53B,MAAjB,GAA0B,UAAC6D,KAAD,EAAW;AACnC,WAAOtD,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BD,cAAQ,EAAR;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA;AACAwW,QAAMJ,IAAN,GAAa,YAAM;;AAEjB,QAAI0gB,iBAAiBz4B,QAAQ0C,IAAR,CAAayV,MAAM9P,KAAnB,CAArB;;AAEA;AACA,QAAI+vB,UAAU,EAAd;AACAn3B,MAAE0H,OAAF,CAAUwP,MAAM9P,KAAN,CAAYmvB,MAAtB,EAA8B,UAAC5d,CAAD,EAAM;AAClCwe,cAAQluB,IAAR,CAAa0P,EAAE0e,OAAf;AACD,KAFD;;AAIAG,mBAAejB,MAAf,GAAwBY,OAAxB;;AAEA;AACA,QAAGnJ,aAAa,KAAhB,EAAuB;;AAErBwJ,qBAAe50B,IAAf,GAAsBorB,QAAtB,CAFqB,CAEW;;AAEhC;AACAlhB,mBAAavI,MAAb,CAAoB6K,IAAIjG,KAAxB,EAA+BmB,OAAOpJ,KAAtC,EAA6Cs2B,cAA7C,EAA6D32B,IAA7D,CACE,UAACC,MAAD,EAAY;AACV;AACAuX,kBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,QAAT,EAAmB/E,MAAMD,MAAzB,EAAf;AACD,OAJH,EAKE,UAACQ,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,6BAAZ;AACD,OAPH;AASD,KAdD,MAcO;AACL;AACAqK,mBAAaC,GAAb,CAAiBqC,IAAIjG,KAArB,EAA4BmB,OAAOpJ,KAAnC,EAA4CK,MAA5C,CAAmDi2B,eAAet2B,KAAlE,EAAyEs2B,cAAzE,EAAyF32B,IAAzF,CACE,UAACC,MAAD,EAAY;AACV;AACAuX,kBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,QAAT,EAAmB/E,MAAMD,MAAzB,EAAf;AACD,OAJH,EAKE,UAACQ,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,yBAAZ;AACD,OAPH;AASD;AACF,GAvCD;;AAyCA;AACAyU,QAAMlP,MAAN,GAAe,YAAM;AACnB,QAAI+Q,UAAUha,QAAQ0C,IAAR,CAAa2F,KAAb,CAAd;AACAiR,cAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,SAAT,EAAoB/E,MAAM,EAACG,OAAO6X,QAAQ7X,KAAhB,EAAuB0B,MAAMmW,QAAQnW,IAArC,EAA1B,EAAf;;AAEAkK,iBAAaC,GAAb,CAAiBqC,IAAIjG,KAArB,EAA4BmB,OAAOpJ,KAAnC,EAA0C8G,MAA1C,CAAiDZ,MAAMlG,KAAvD,EAA8DL,IAA9D,CACE,UAACC,MAAD,EAAY;AACV0B,cAAQC,GAAR,CAAY,6BAAZ;AACA;AACA4V,gBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,SAAT,EAAoB/E,MAAM02B,YAA1B,EAAf;AACD,KALH,EAME,UAACn2B,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,yBAAZ;AACD,KARH;AAUD,GAdD;;AAgBAyU,QAAM0B,MAAN,GAAe,YAAM;AACnBP,cAAUO,MAAV;AACD,GAFD;AAID,CAhLD,CADA,E,CAiLK;;;ACjLL9Z,IAAIuX,UAAJ,CAAe,iDAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,KAApE,EAA2E,QAA3E,EAAqF,wBAArF,EAA+G,aAA/G,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmDqG,GAAnD,EAAwD9E,MAAxD,EAAgEwC,YAAhE,EAA8EuM,WAA9E,EAA8F;;AAE5F/C,SAAO+C,WAAP,GAAqB;AACnBA,iBAAa,EADM;AAEnBqe,qBAAiB;AAFE,GAArB;;AAKAphB,SAAOqhB,UAAP,GAAoB,EAApB;;AAEA;AACA,MAAIC,oBAAoB,SAApBA,iBAAoB,GAAM;AAC5B53B,MAAE0H,OAAF,CAAU2R,WAAV,EAAuB,UAACV,CAAD,EAAO;AAC5B,UAAGA,EAAE/V,IAAF,KAAW,aAAd,EAA6B;AAC3B,YAAIu0B,UAAU,EAAd;AACAn3B,UAAE0H,OAAF,CAAUiR,EAAE4d,MAAZ,EAAoB,UAACx0B,CAAD,EAAO;AACzBo1B,kBAAQluB,IAAR,CAAclK,QAAQowB,QAAR,CAAiBptB,CAAjB,CAAD,GAAwBA,CAAxB,GAA4B,EAACs1B,SAASt1B,CAAV,EAAzC;AACD,SAFD;AAGA4W,UAAE4d,MAAF,GAAWY,OAAX;AACA7gB,eAAO+C,WAAP,CAAmBA,WAAnB,CAA+BpQ,IAA/B,CAAoC0P,CAApC;AACD;AACD,UAAGA,EAAE/V,IAAF,KAAW,iBAAd,EAAiC0T,OAAO+C,WAAP,CAAmBqe,eAAnB,CAAmCzuB,IAAnC,CAAwC0P,CAAxC;AAClC,KAVD;AAWD,GAZD;;AAcAif;;AAEA;AACAthB,SAAOxC,IAAP,GAAc,UAACuG,MAAD,EAASjT,KAAT,EAAmB;AAC/BiR,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEb7B,2BAAqB,KAFR;AAGbrC,cAAQ;AACN6X,kBAAU,KADJ;AAEN5mB,eAAOA,KAFD;AAGNgI,aAAKA,GAHC;AAIN9E,gBAAQA;AAJF,OAHK;AASb4L,mBAAa,4DATA;AAUbG,kBAAY;AAVC,KAAf,EAWGxV,IAXH,CAYE,UAACC,MAAD,EAAY;AACV;AACA,UAAGA,OAAOgF,MAAP,KAAkB,SAArB,EAAgC;AAC9B,YAAI/E,OAAOD,OAAOC,IAAlB;;AAEA,YAAGA,KAAK6B,IAAL,KAAc,aAAjB,EAAgC7B,KAAKw1B,MAAL,GAAcsB,aAAa92B,KAAKw1B,MAAlB,CAAd;;AAEhC;AACAv2B,UAAE0H,OAAF,CAAU4O,OAAO+C,WAAP,CAAmBtY,KAAK6B,IAAxB,CAAV,EAAyC,UAACb,CAAD,EAAIwT,CAAJ,EAAU;AACjD,cAAGxT,EAAEb,KAAF,KAAYH,KAAKG,KAApB,EAA2BoV,OAAO+C,WAAP,CAAmBtY,KAAK6B,IAAxB,EAA8B2S,CAA9B,IAAmCxT,CAAnC;AAC5B,SAFD;;AAIA+T,iBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,eAAd,EAAhB,CAAd;AACD;;AAED;AACA,UAAGrX,OAAOgF,MAAP,KAAkB,SAArB,EAAgC;AAC9B,YAAI/E,QAAOD,OAAOC,IAAlB;AACDf,UAAEgI,MAAF,CAASsO,OAAO+C,WAAP,CAAmBtY,MAAK6B,IAAxB,CAAT,EAAwC,UAACb,CAAD,EAAO;AAAC,iBAAQA,EAAEb,KAAF,KAAYH,MAAKG,KAAzB;AAAkC,SAAlF;AACC4U,iBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,4BAAd,EAAhB,CAAd;AACD;AACF,KAjCH,EAkCE,YAAM;AACJrC,eAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,uBAAd,EAAhB,CAAd;AACD,KApCH;AAsCD,GAvCD;;AAyCA;;;;;;AAMA,MAAI0f,eAAe,SAAfA,YAAe,CAACV,OAAD,EAAa;AAC9B,QAAIW,aAAa,EAAjB;AACA93B,MAAE0H,OAAF,CAAUyvB,OAAV,EAAmB,UAACp1B,CAAD,EAAO;AACxB+1B,iBAAW7uB,IAAX,CAAiBlK,QAAQowB,QAAR,CAAiBptB,CAAjB,CAAD,GAAwBA,CAAxB,GAA4B,EAACs1B,SAASt1B,CAAV,EAA5C;AACD,KAFD;AAGA,WAAO+1B,UAAP;AACD,GAND;;AAQAxhB,SAAO0X,QAAP,GAAkB,UAAC3T,MAAD,EAASzX,IAAT,EAAkB;;AAElC;AACAyV,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEb7B,2BAAqB,KAFR;AAGbrC,cAAQ;AACN6X,kBAAUprB,IADJ;AAENwE,eAAO,KAFD;AAGNgI,aAAKA,GAHC;AAIN9E,gBAAQA;AAJF,OAHK;AASb4L,mBAAa,4DATA;AAUbG,kBAAY;AAVC,KAAf,EAWGxV,IAXH,CAYE,UAACC,MAAD,EAAY;AACV,UAAIC,OAAOD,OAAOC,IAAlB;;AAEA;AACA,UAAGA,KAAK6B,IAAL,KAAc,aAAjB,EAAgC;AAC9B7B,aAAKw1B,MAAL,GAAcsB,aAAa92B,KAAKw1B,MAAlB,CAAd;AACAjgB,eAAO+C,WAAP,CAAmBA,WAAnB,CAA+BpQ,IAA/B,CAAoClI,IAApC;AACD;AACD,UAAGA,KAAK6B,IAAL,KAAc,iBAAjB,EAAoC0T,OAAO+C,WAAP,CAAmBqe,eAAnB,CAAmCzuB,IAAnC,CAAwClI,IAAxC;;AAEpC+U,eAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,iBAAd,EAAhB,CAAd;AACD,KAvBH,EAwBE,UAACS,MAAD,EAAY;AACV9C,eAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,sBAAd,EAAhB,CAAd;AACD,KA1BH;AA6BD,GAhCD;;AAkCA;AACA7B,SAAOyhB,aAAP,GAAuB,UAACC,KAAD,EAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,UAA5B,EAAwCC,QAAxC,EAAqD;;AAE1E51B,YAAQC,GAAR,CAAY,MAAZ,EAAoBu1B,KAApB;AACAx1B,YAAQC,GAAR,CAAY,UAAZ,EAAwBw1B,SAAxB;AACAz1B,YAAQC,GAAR,CAAY,QAAZ,EAAsBy1B,OAAtB;AACA11B,YAAQC,GAAR,CAAY,WAAZ,EAAyB01B,UAAzB;AACA31B,YAAQC,GAAR,CAAY,SAAZ,EAAuB21B,QAAvB;;AAEA;AACA,QAAIC,UAAU,EAAd;;AAEA;AACAr4B,MAAE0H,OAAF,CAAUwwB,OAAV,EAAmB,UAACn2B,CAAD,EAAIwT,CAAJ,EAAU;AAC3BxT,QAAEu2B,IAAF,GAAS/iB,CAAT;AACA8iB,cAAQpvB,IAAR,CAAa6D,aAAaC,GAAb,CAAiBqC,IAAIjG,KAArB,EAA4BmB,OAAOpJ,KAAnC,EAA4CK,MAA5C,CAAmDQ,EAAEb,KAArD,EAA4Da,CAA5D,CAAb;AACD,KAHD;;AAKA7B,OAAGM,GAAH,CAAO63B,OAAP,EAAgBx3B,IAAhB,CACE,UAACC,MAAD,EAAY;AACVgV,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,qBAA9B,CAAd;AACD,KAHH,EAIE,UAAC7W,GAAD,EAAS;AACPwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,kCAA9B,CAAd;AACD,KANH;AASD,GA1BD;AA6BD,CAnJD,CADA;;;ACAArZ,IAAIuX,UAAJ,CAAe,8CAAf,EACE,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,SAAtB,EAAiC,WAAjC,EAA8C,UAA9C,EAA0D,KAA1D,EAAiE,QAAjE,EAA2E,cAA3E,EACE,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBvN,IAAhB,EAAsBsP,SAAtB,EAAiCvC,QAAjC,EAA2C1G,GAA3C,EAAgD9E,MAAhD,EAAwDoI,IAAxD,EAAiE;;AAE/D4D,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAO5D,IAAP,GAAcA,IAAd;;AAEA4D,SAAO6V,SAAP,GAAmB,UAAC5W,CAAD,EAAO;AACxB,WAAO6W,OAAO7W,CAAP,EAAU9P,OAAV,CAAkB,GAAlB,EAAsB,EAAtB,CAAP;AACD,GAFD;AAID,CAXH,CADF;;;ACAA3G,IAAIuX,UAAJ,CAAe,2DAAf,EACE,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,uBAApE,EAA6F,KAA7F,EAAoG,QAApG,EAA8G,aAA9G,EAA6H,oBAA7H,EAAmJ,qBAAnJ,EACE,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmDghB,YAAnD,EAAiE3a,GAAjE,EAAsE9E,MAAtE,EAA8E3H,WAA9E,EAA2FqnB,kBAA3F,EAA+GC,mBAA/G,EAAuI;;AAErI3T,SAAO0T,kBAAP,GAA4B,EAA5B;AACA1T,SAAO2T,mBAAP,GAA6B,EAA7B;AACA3T,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAO8C,OAAP,GAAiB,EAAjB;AACA9C,SAAO3T,WAAP,GAAqB,EAAC0W,aAAa,EAAd,EAAkBC,YAAY,EAA9B,EAAkCC,YAAY,EAA9C,EAAkDC,YAAY,EAA9D,EAArB;;AAEA;AACAlD,SAAOsZ,gBAAP,GAA0B,UAACvV,MAAD,EAAY;;AAEpC,QAAI/K,OAAO,EAAX;;AAEA+I,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,oFAFA;AAGbqE,uBAAiB,KAHJ;AAIbpE,cAAQ;AACN/G,aAAKkH,OAAOlH,GADN;AAENE,cAAMA,IAFA;AAGN8J,iBAAS9C,OAAO8C,OAHV;AAINoB,kBAAU,KAJJ;AAKNlQ,gBAAQA;AALF,OAJK;AAWb+L,kBAAY,+EAXC,CAW+E;AAX/E,KAAf;AAaD,GAjBD;;AAmBA;AACAC,SAAO0D,OAAP,GAAiB,UAAChR,GAAD,EAAS;AACxB,QAAGA,QAAQ,KAAX,EAAkB;;AAElB;AACAhJ,MAAE0H,OAAF,CAAU4O,OAAO3T,WAAjB,EAA8B,UAACgW,CAAD,EAAI1D,CAAJ,EAAU;AACtC;AACAjV,QAAE0H,OAAF,CAAUiR,CAAV,EAAa,UAACgB,GAAD,EAAMmW,KAAN,EAAgB;AAC3B;AACA,YAAGnW,OAAOA,IAAIC,cAAJ,KAAuB3E,CAAjC,EAAoC;;AAElC;AACAqB,iBAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCmW,OAAvC,CAA+CpW,GAA/C;;AAEArD,iBAAO3T,WAAP,CAAmBsS,CAAnB,EAAsBwJ,MAAtB,CAA6BqR,KAA7B,EAAmC,CAAnC;AACD;AAEF,OAVD;AAYD,KAdD;AAgBD,GApBD;;AAsBA;AACAxZ,SAAO2D,OAAP,GAAiB,UAAC/L,GAAD,EAAS;AACxB,QAAGA,IAAI4J,KAAJ,CAAU,aAAV,CAAH,EAA6B;AAC3B,aAAO,MAAP;AACD;AACD,QAAG5J,IAAI4J,KAAJ,CAAU,yDAAV,CAAH,EAAyE;AACvE,aAAO,MAAP;AACD;AACD,WAAO,MAAP;AACD,GARD;;AAUA;AACAxB,SAAO4D,WAAP,GAAqB,UAACjD,IAAD,EAAU;AAC7B,WAAQA,KAAKpX,OAAL,CAAa,SAAb,KAA2B,CAAC,CAA7B,GAAkC,YAAYoX,IAA9C,GAAqDA,IAA5D;AACD,GAFD;;AAIA;AACAX,SAAO6D,SAAP,GAAmB,UAACnP,IAAD,EAAU;AAC3B,WAAOA,KAAK8M,KAAL,CAAW,WAAX,EAAwB,CAAxB,CAAP;AACD,GAFD;;AAIA;AACA,MAAIkY,mBAAmB,SAAnBA,gBAAmB,CAACC,UAAD,EAAattB,WAAb,EAA6B;;AAElDA,gBAAY+E,OAAZ,CAAoB,UAACiS,GAAD,EAAS;;AAE3B;;AAEA;AACA,UAAG,EAAEA,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAArB,IAAgCotB,UAAlC,CAAH,EAAkD;AAChDtW,YAAIE,QAAJ,GAAe,EAAf;AACA,eAAOoW,WAAWtW,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAAhC,IAA2C8W,GAAlD,CAFgD,CAEO;AACxD;;AAED,UAAGA,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAArB,IAAgCotB,UAAnC,EAA+C,OAAOA,WAAWtW,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAAhC,EAAyCgX,QAAzC,CAAkD5Q,IAAlD,CAAuD0Q,GAAvD,CAAP;AAEhD,KAZD;;AAcA,WAAO3Z,EAAE8Z,MAAF,CAASmW,UAAT,CAAP;AAED,GAlBD;;AAoBA;AACA,MAAIvW,eAAe,SAAfA,YAAe,CAAC/W,WAAD,EAAiB;AAClC;AACAA,gBAAY+E,OAAZ,CAAoB,UAACiS,GAAD,EAAS;;AAE3B;AACA,UAAGrD,OAAO8C,OAAP,CAAevZ,OAAf,CAAuB8Z,IAAIvR,MAA3B,MAAuC,CAAC,CAA3C,EAA8CkO,OAAO8C,OAAP,CAAenQ,IAAf,CAAoB0Q,IAAIvR,MAAxB;;AAE9C;AACA,UAAG,EAAEuR,IAAIC,cAAJ,IAAsBtD,OAAO3T,WAA/B,CAAH,EAAgD2T,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,IAAyC,EAAzC;;AAGhD;AACA,UAAG,EAAED,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,CAA9B,CAAH,EAA0E;AACxED,YAAIE,QAAJ,GAAe,EAAf;AACA,eAAOvD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,IAAmE8W,GAA1E;AACD;;AAED;AACA,UAAGA,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,CAA/B,EAAuE;AACrE,eAAOtD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,EACJgX,QADI,CACKvD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,EAAiEgX,QAAjE,CAA0EpM,MAD/E,IACyFkM,GADhG;AAED;AAEF,KArBD;;AAuBA3Z,MAAE0H,OAAF,CAAU4O,OAAO3T,WAAjB,EAA8B,UAACmX,MAAD,EAAS7E,CAAT,EAAe;AAC3CqB,aAAO3T,WAAP,CAAmBsS,CAAnB,IAAwBjV,EAAE8Z,MAAF,CAASA,MAAT,CAAxB;AACA;AACD,KAHD;AAKD,GA9BD;;AAgCA;AACAJ,eAAa/W,WAAb;;AAEA;AACA2T,SAAO0T,kBAAP,GAA4BgG,iBAAiB1Z,OAAO0T,kBAAxB,EAA4CA,kBAA5C,CAA5B;AACA1T,SAAO2T,mBAAP,GAA6B+F,iBAAiB1Z,OAAO2T,mBAAxB,EAA6CA,mBAA7C,CAA7B;AAED,CAvIH,CADF;;;ACAAnrB,IAAIuX,UAAJ,CAAe,wCAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,yBAApE,EAA+F,KAA/F,EAAsG,QAAtG,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmD2F,OAAnD,EAA4DU,GAA5D,EAAiE9E,MAAjE,EAA4E;;AAE1EgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAO6Z,qBAAP,GAA+B,KAA/B;;AAEA,MAAIC,cAAcrxB,QAAQ0C,IAAR,CAAa6I,MAAb,CAAlB;;AAEAgM,SAAOma,WAAP,GAAqB,YAAM;;AAEzB,QAAGna,OAAOhM,MAAP,CAAc1H,IAAd,KAAuBwtB,YAAYxtB,IAAtC,EAA4C0T,OAAO6Z,qBAAP,GAA+B,IAA/B;AAC5C,QAAG7Z,OAAOhM,MAAP,CAAcmE,KAAd,KAAwB2hB,YAAY3hB,KAAvC,EAA8C6H,OAAO6Z,qBAAP,GAA+B,IAA/B;AAC9C,QAAG7Z,OAAOhM,MAAP,CAAcomB,aAAd,KAAgCN,YAAYM,aAA/C,EAA8Dpa,OAAO6Z,qBAAP,GAA+B,IAA/B;AAC9D,QAAG7Z,OAAOhM,MAAP,CAAcqmB,SAAd,KAA4BP,YAAYO,SAA3C,EAAsDra,OAAO6Z,qBAAP,GAA+B,IAA/B;;AAEtD,QAAG7Z,OAAO6Z,qBAAP,IAAgCllB,KAAK2lB,SAAL,CAAeta,OAAOhM,MAAtB,MAAkCW,KAAK2lB,SAAL,CAAeR,WAAf,CAArE,EAAkG;AAChG9Z,aAAO6Z,qBAAP,GAA+B,KAA/B;AACD;AAEF,GAXD;;AAaA7Z,SAAOua,cAAP,GAAwB,YAAM;;AAE5Bva,WAAO6Z,qBAAP,GAA+B,KAA/B;;AAEA;AACAzhB,YAAQnN,MAAR,CAAe+U,OAAOhM,MAAtB,EAA8BzJ,IAA9B,CACE,UAACC,MAAD,EAAY;AACV;AACAwV,aAAOhM,MAAP,GAAgBxJ,MAAhB;AACAsvB,oBAAcrxB,QAAQ0C,IAAR,CAAaX,MAAb,CAAd;;AAEAgV,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,oCAA9B,CAAd;AACD,KAPH,EAQE,UAAC7W,GAAD,EAAS;AACP;AACAgV,aAAOhM,MAAP,GAAgBvL,QAAQ0C,IAAR,CAAa2uB,WAAb,CAAhB;AACAta,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,2CAA9B,CAAd;AACD,KAZH;AAeD,GApBD;AAuBD,CA7CD,CADA;;;ACAArZ,IAAIuX,UAAJ,CAAe,2CAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,SAAhC,EAA2C,WAA3C,EAAwD,UAAxD,EAAoE,KAApE,EAA2E,QAA3E,EAAqF,iBAArF,EAAwG,eAAxG,EAAyH,qBAAzH,EAAgJ,gCAAhJ,EAAkL,sCAAlL,EAA0N,WAA1N,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoR,MAAR,EAAgBgF,MAAhB,EAAwBvN,IAAxB,EAA8BsP,SAA9B,EAAyCvC,QAAzC,EAAmD1G,GAAnD,EAAwD9E,MAAxD,EAAgEsf,eAAhE,EAAiFE,aAAjF,EAAgGva,UAAhG,EAA4G4kB,mBAA5G,EAAiI3jB,IAAjI,EAAuI8K,SAAvI,EAAqJ;;AAEnJhF,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOzF,EAAP,GAAYzB,IAAIwlB,kBAAhB;AACAte,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOsT,eAAP,GAAyBA,eAAzB;AACAtT,SAAOwT,aAAP,GAAuBA,aAAvB;AACAxT,SAAOgF,SAAP,GAAmBA,SAAnB;;AAEA;AACAhF,SAAO0f,aAAP,GAAuB,UAAC3b,MAAD,EAAY;;AAEjChC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,+DAFA;AAGbqE,uBAAiB,KAHJ;AAIblE,kBAAY,CAAC,OAAD,EAAU,UAACa,KAAD,EAAW;;AAE/BA,cAAMrG,EAAN,GAAW9R,QAAQ0C,IAAR,CAAa6U,OAAOhM,MAAP,CAAcsqB,kBAA3B,CAAX,CAF+B,CAE4B;;AAE3D1d,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV,CAAiB,wBAAjB;AACD,SAFD;;AAIA1B,cAAM3V,MAAN,GAAe,YAAM;;AAEnB;AACA4yB,8BAAoB5yB,MAApB,CAA2B+U,OAAOlH,GAAP,CAAWjG,KAAtC,EAA6CmB,OAAOpJ,KAApD,EAA2DgW,MAAMrG,EAAjE,EAAqEhQ,IAArE,CACE,UAACC,MAAD,EAAY;AACVuX,sBAAU5B,IAAV,CAAe,EAAChX,SAAS,wBAAV,EAAoCsB,MAAMmW,MAAMrG,EAAhD,EAAf;AACD,WAHH,EAIE,UAAC7P,KAAD,EAAW;AACTksB,kBAAM,+BAAN;AACA1qB,oBAAQC,GAAR,CAAYzB,KAAZ;AACD,WAPH;AAUD,SAbD,CAR+B,CAqB5B;AACJ,OAtBW,CAJC,CA0BV;;AA1BU,KAAf,EA4BGH,IA5BH,CA4BQ,UAACiR,OAAD,EAAa;AACnB,UAAIA,OAAJ,EAAagE,SAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrG,QAAQrS,OAAtC,CAAd;AACb6W,aAAOvV,IAAP,CAAY8P,EAAZ,GAAiBiB,QAAQ/Q,IAAzB;AACD,KA/BD,EA+BG,UAACC,KAAD,EAAW;AACZ8U,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BnX,KAA9B,CAAd;AACD,KAjCD;AAmCD,GArCD,CAVmJ,CA+ChJ;;;AAGH;AACAsV,SAAO9G,IAAP,GAAc,UAACvF,IAAD,EAAU;;AAEtB;AACAsF,eAAWC,IAAX,CAAgBJ,IAAIjG,KAApB,EAA2BmB,OAAOpJ,KAAlC,EAAyC+I,IAAzC,EAA+CpJ,IAA/C,CACE,UAACC,MAAD,EAAY;AACVwV,aAAOgF,SAAP,GAAmBxa,MAAnB;AACD,KAHH;AAKD,GARD;;AAUA;AACAwV,SAAOnG,UAAP,GAAoB,UAAClG,IAAD,EAAU;;AAE5B;AACAsF,eAAWE,MAAX,CAAkBL,IAAIjG,KAAtB,EAA6BmB,OAAOpJ,KAApC,EAA2C+I,IAA3C,EAAiDpJ,IAAjD,CACE,UAACC,MAAD,EAAY;AACVwV,aAAOgF,SAAP,GAAmBxa,MAAnB;AACD,KAHH;AAKD,GARD;;AAYA;AACAwV,SAAOiiB,WAAP,GAAqB,UAACle,MAAD,EAAS/a,KAAT,EAAmB;;AAEtC+Y,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,oDAFA;AAGbqE,uBAAiB,KAHJ;AAIblE,kBAAY,CAAC,OAAD,EAAU,UAACa,KAAD,EAAW;;AAE/BA,cAAM5X,KAAN,GAAcP,QAAQ0C,IAAR,CAAanC,KAAb,CAAd;;AAEA4X,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV,CAAiB,wBAAjB;AACD,SAFD;;AAIA1B,cAAM3V,MAAN,GAAe,YAAM;;AAEnB;AACAiP,eAAKjP,MAAL,CAAY+U,OAAOlH,GAAP,CAAWjG,KAAvB,EAA8BmB,OAAOpJ,KAArC,EAA4C5B,MAAM4B,KAAlD,EAAyDgW,MAAM5X,KAA/D,EAAsEuB,IAAtE,CACE,UAACC,MAAD,EAAY;AACVuX,sBAAU5B,IAAV,CAAe,EAAChX,SAAS,wBAAV,EAAoCsB,MAAMD,MAA1C,EAAf;AACD,WAHH,EAIE,UAACE,KAAD,EAAW;AACTksB,kBAAM,+BAAN;AACA1qB,oBAAQC,GAAR,CAAYzB,KAAZ;AACD,WAPH;AAUD,SAbD,CAR+B,CAqB5B;AACJ,OAtBW,CAJC,CA0BV;;AA1BU,KAAf,EA4BGH,IA5BH,CA4BQ,UAACiR,OAAD,EAAa;AACnB,UAAIA,OAAJ,EAAagE,SAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrG,QAAQrS,OAAtC,CAAd;AACbO,QAAE0H,OAAF,CAAU4O,OAAOwT,aAAjB,EAAgC,UAAC/nB,CAAD,EAAIwT,CAAJ,EAAU;AACxC,YAAGxT,EAAEb,KAAF,KAAY4Q,QAAQ/Q,IAAR,CAAaG,KAA5B,EAAmCoV,OAAOwT,aAAP,CAAqBvU,CAArB,IAA0BzD,QAAQ/Q,IAAlC;AACpC,OAFD;AAGD,KAjCD,EAiCG,UAACC,KAAD,EAAW;AACZ8U,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,wBAA9B,CAAd;AACD,KAnCD;AAqCD,GAvCD,CA3EmJ,CAkHhJ;AAEJ,CArHD,CADA;;;ACAArZ,IAAIuX,UAAJ,CAAe,0DAAf,EACE,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,KAApE,EAA2E,QAA3E,EAAqF,IAArF,EAA2F,UAA3F,EAAuG,SAAvG,EAAkH,aAAlH,EAAiI,eAAjI,EACE,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmDqG,GAAnD,EAAwD9E,MAAxD,EAAgE8Q,EAAhE,EAAoEwB,QAApE,EAA8E4b,OAA9E,EAAuFxN,WAAvF,EAAoGC,aAApG,EAAsH;;AAEpH;AACA3U,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOmiB,WAAP,GAAqB,EAArB;AACAniB,SAAOoiB,UAAP,GAAoB,EAApB;AACApiB,SAAO0U,WAAP,GAAqBA,WAArB;AACA1U,SAAO2U,aAAP,GAAuBjrB,EAAE24B,KAAF,CAAQ34B,EAAE8Z,MAAF,CAASmR,aAAT,CAAR,EAAgC,CAAhC,CAAvB;;AAEA3U,SAAO8W,QAAP,GAAkB;AAChBC,cAAU,+DADM;AAEhBC,YAAQ,qEAFQ;AAGhB9T,gBAAY;AAHI,GAAlB;;AAMAlD,SAAOsiB,eAAP,GAAyB;AACvBvL,cAAU,mEADa;AAEvBC,YAAQ,yEAFe;AAGvB9T,gBAAY;AAHW,GAAzB;;AAMA;AACAlD,SAAOqd,SAAP,GAAmB,UAACC,GAAD,EAAS;AAC1B,WAAOA,IAAI9b,KAAJ,CAAU,gBAAV,EAA4B,CAA5B,CAAP;AACD,GAFD;;AAIAxB,SAAOuiB,WAAP,GAAqB,UAACr1B,KAAD,EAAW;;AAE9B,WAAO,UAACs1B,IAAD,EAAU;AACf,UAAI,CAACt1B,KAAL,EAAY,OAAO,IAAP;AACZ;AACA,UAAI1C,SAAS,KAAb;;AAEA;AACA,UAAIg4B,KAAKxpB,IAAL,CAAU7L,WAAV,GAAwB5D,OAAxB,CAAgC2D,MAAMC,WAAN,EAAhC,MAAyD,CAAC,CAA9D,EAAiE3C,SAAS,IAAT;;AAEjE;AACA,UAAIg4B,KAAKC,SAAL,CAAet1B,WAAf,GAA6B5D,OAA7B,CAAqC2D,MAAMC,WAAN,EAArC,MAA8D,CAAC,CAAnE,EAAsE3C,SAAS,IAAT;;AAEtE;AACA,UAAIg4B,KAAKE,WAAL,CAAiBv1B,WAAjB,GAA+B5D,OAA/B,CAAuC2D,MAAMC,WAAN,EAAvC,MAAgE,CAAC,CAArE,EAAwE3C,SAAS,IAAT;;AAExE,aAAOA,MAAP;AAED,KAhBD;AAiBD,GAnBD;;AAqBA;AACA,MAAIm4B,oBAAoB,SAApBA,iBAAoB,CAACnyB,KAAD,EAAQlE,IAAR,EAAiB;;AAEvC,QAAIs2B,cAAc;AAChB7L,gBAAU,EADM;AAEhBC,cAAQ,EAFQ;AAGhB9T,kBAAY;AAHI,KAAlB;;AAMA,QAAI2f,UAAU,SAAd;AACA,QAAGv2B,SAAS,SAAZ,EAAuBu2B,UAAU,aAAV;AACvB,QAAGv2B,SAAS,SAAZ,EAAuBu2B,UAAU,aAAV;;AAEvB;AACAn5B,MAAE0H,OAAF,CAAUZ,KAAV,EAAiB,UAAC6S,GAAD,EAAM1E,CAAN,EAAY;AAC3B,UAAG,EAAE0E,IAAIwf,OAAJ,KAAgBD,WAAlB,CAAH,EAAmCA,YAAYvf,IAAIwf,OAAJ,CAAZ,IAA4B,EAA5B;AACnC;AACAD,kBAAYvf,IAAIwf,OAAJ,CAAZ,EAA0BlwB,IAA1B,CAA+B0Q,GAA/B;AACD,KAJD;;AAMA;;AAEA,QAAG/W,SAAS,SAAZ,EAAuB0T,OAAOmiB,WAAP,GAAqBS,WAArB;AACvB,QAAGt2B,SAAS,SAAZ,EAAuB0T,OAAOoiB,UAAP,GAAoBQ,WAApB;AAExB,GAxBD;;AA0BAD,oBAAkBrc,QAAlB,EAA4B,SAA5B;AACAqc,oBAAkBT,OAAlB,EAA2B,SAA3B;AAED,CA/EH,CADF;;;ACAA15B,IAAIuX,UAAJ,CAAe,wDAAf,EACE,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,SAAzD,EAAoE,KAApE,EAA2E,QAA3E,EAAqF,IAArF,EAA2F,UAA3F,EAAuG,aAAvG,EAAsH,eAAtH,EACE,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB+G,SAAxB,EAAmCvC,QAAnC,EAA6C/M,IAA7C,EAAmDqG,GAAnD,EAAwD9E,MAAxD,EAAgE8Q,EAAhE,EAAoEwB,QAApE,EAA8EoO,WAA9E,EAA2FC,aAA3F,EAA6G;;AAE3G;AACA3U,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;;AAEAgM,SAAOmiB,WAAP,GAAqB,EAArB;AACAniB,SAAO0U,WAAP,GAAqBA,WAArB;AACA1U,SAAO2U,aAAP,GAAuBjrB,EAAE24B,KAAF,CAAQ34B,EAAE8Z,MAAF,CAASmR,aAAT,CAAR,EAAgC,CAAhC,CAAvB;;AAEA3U,SAAO8iB,aAAP,GAAuB;AACrB/L,cAAU,2DADW;AAErBC,YAAQ,iEAFa;AAGrB9T,gBAAY;AAHS,GAAvB;;AAMAlD,SAAO+iB,eAAP,GAAyB;AACvBC,gBAAY,wBADW;AAEvBC,iBAAa;AAFU,GAAzB;AAIA;AACAjjB,SAAOqd,SAAP,GAAmB,UAACC,GAAD,EAAS;AAC1B,WAAOA,IAAI9b,KAAJ,CAAU,gBAAV,EAA4B,CAA5B,CAAP;AACD,GAFD;;AAIAxB,SAAOkjB,gBAAP,GAA0B,YAAM;;AAE9B,QAAG5c,SAASnP,MAAT,KAAoB,CAAvB,EAA0B,OAAO,EAACglB,YAAY,KAAb,EAAoBgH,YAAY,CAAhC,EAAP;;AAE1B,QAAIhH,aAAc7V,SAAS,CAAT,EAAY8c,UAAb,GAA2B9c,SAAS,CAAT,EAAY8c,UAAZ,CAAuBrW,SAAvB,CAAiCzG,SAAS,CAAT,EAAY8c,UAAZ,CAAuBC,WAAvB,CAAmC,UAAnC,IAA+C,CAAhF,EAAmF/c,SAAS,CAAT,EAAY8c,UAAZ,CAAuBC,WAAvB,CAAmC,aAAnC,CAAnF,CAA3B,GAAmK,KAApL;;AAEA,WAAOlH,UAAP;AACD,GAPD;;AASAnc,SAAOuiB,WAAP,GAAqB,UAACr1B,KAAD,EAAW;;AAE9B,WAAO,UAACs1B,IAAD,EAAU;AACf,UAAI,CAACt1B,KAAL,EAAY,OAAO,IAAP;AACZ;AACA,UAAI1C,SAAS,KAAb;;AAEA;AACA,UAAIg4B,KAAKxpB,IAAL,CAAU7L,WAAV,GAAwB5D,OAAxB,CAAgC2D,MAAMC,WAAN,EAAhC,MAAyD,CAAC,CAA9D,EAAiE3C,SAAS,IAAT;;AAEjE;AACA,UAAIg4B,KAAKC,SAAL,CAAet1B,WAAf,GAA6B5D,OAA7B,CAAqC2D,MAAMC,WAAN,EAArC,MAA8D,CAAC,CAAnE,EAAsE3C,SAAS,IAAT;;AAEtE;AACA,UAAIg4B,KAAKE,WAAL,CAAiBv1B,WAAjB,GAA+B5D,OAA/B,CAAuC2D,MAAMC,WAAN,EAAvC,MAAgE,CAAC,CAArE,EAAwE3C,SAAS,IAAT;;AAExE,aAAOA,MAAP;AAED,KAhBD;AAiBD,GAnBD;;AAqBA;AACA,MAAIm4B,oBAAoB,SAApBA,iBAAoB,CAACnyB,KAAD,EAAQlE,IAAR,EAAiB;;AAEvC,QAAIs2B,cAAc;AAChB7L,gBAAU,EADM;AAEhBC,cAAQ,EAFQ;AAGhB9T,kBAAY,EAHI;AAIhB8f,kBAAY,EAJI;AAKhBC,mBAAa;AALG,KAAlB;;AAQA,QAAIJ,UAAU,aAAd;AACA,QAAGv2B,SAAS,SAAZ,EAAuBu2B,UAAU,aAAV;;AAEvB;AACAn5B,MAAE0H,OAAF,CAAUZ,KAAV,EAAiB,UAAC6S,GAAD,EAAM1E,CAAN,EAAY;AAC3B,UAAG,EAAE0E,IAAIwf,OAAJ,KAAgBD,WAAlB,CAAH,EAAmCA,YAAYvf,IAAIwf,OAAJ,CAAZ,IAA4B,EAA5B;AACnC;AACAD,kBAAYvf,IAAIwf,OAAJ,CAAZ,EAA0BlwB,IAA1B,CAA+B0Q,GAA/B;AACD,KAJD;;AAMArD,WAAOmiB,WAAP,GAAqBS,WAArB;AAED,GAtBD;;AAwBA,MAAIU,gBAAgB,SAAhBA,aAAgB,GAAM;;AAExB,QAAIC,SAAS,EAAb;;AAEA75B,MAAE0H,OAAF,CAAUujB,aAAV,EAAyB,UAACwI,KAAD,EAAW;AAClC,UAAInkB,OAAOmkB,MAAMnC,QAAN,CAAejc,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAX;AACAwkB,aAAOvqB,IAAP,IAAemkB,KAAf;AACD,KAHD;;AAKAnd,WAAO2U,aAAP,GAAuB4O,MAAvB;AAED,GAXD;;AAaAD;AACAX,oBAAkBrc,QAAlB,EAA4B,SAA5B;AAED,CAjGH,CADF;;;ACAA9d,IAAIuX,UAAJ,CAAe,gDAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,KAAtB,EAA6B,QAA7B,EAAuC,WAAvC,EAAoD,UAApD,EAAgE,kBAAhE,EAAoF,aAApF,EAAmG,MAAnG,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBlH,GAAhB,EAAqB9E,MAArB,EAA6B+N,SAA7B,EAAwCvC,QAAxC,EAAkD3C,aAAlD,EAAiE+X,WAAjE,EAA8EnhB,IAA9E,EAAuF;;AAErFuM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAO4U,WAAP,GAAqBA,WAArB;AACA5U,SAAO2X,GAAP,GAAa,EAAEloB,MAAM,IAAR,EAAb;AACAuQ,SAAOvM,IAAP,GAAcA,IAAd;;AAEAuM,SAAOnV,GAAP,GAAa,UAAC8X,CAAD,EAAO;;AAElBzW,YAAQC,GAAR,CAAY6T,OAAO2X,GAAnB;;AAEA,QAAIltB,OAAO;AACTgF,YAAMuQ,OAAO2X,GAAP,CAAWloB;AADR,KAAX;;AAIAoN,kBAAcC,UAAd,CAAyB7O,MAAzB,CAAgC6K,IAAIjG,KAApC,EAA2CmB,OAAOpJ,KAAlD,EAAyDH,IAAzD,EACGF,IADH,CACQ,UAACC,MAAD,EAAY;AAChBwV,aAAO4U,WAAP,CAAmBjiB,IAAnB,CAAwBnI,MAAxB;AACAwV,aAAO2X,GAAP,CAAWloB,IAAX,GAAkB,IAAlB;AACD,KAJH,EAKG1E,KALH,CAKS,UAACU,CAAD,EAAO;AACZ+T,eAASoD,UAAT,CAAoB,oCAApB;AACD,KAPH;AASD,GAjBD;AAoBD,CA7BD,CADA;;;;;ACAApa,IAAIuX,UAAJ,CAAe,+EAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,WAAhB,EAA6B,UAA7B,EAAyC,cAAzC,EAAyD,YAAzD,EAAuE,qBAAvE,EAA8F,mBAA9F,EAAmH,UAAnH,EAA+H,WAA/H,EAA4I,UAA5I,EAAwJ,MAAxJ,EAAgK,UAAhK,EAA4K,SAA5K,EAAuL,yCAAvL,EAAkO,KAAlO,EAAyO,QAAzO,EACA,UAACrW,CAAD,EAAIkX,KAAJ,EAAWmB,SAAX,EAAsBvC,QAAtB,EAAgCugB,SAAhC,EAA2CvrB,OAA3C,EAAoDiI,QAApD,EAA8DrM,GAA9D,EAAmExC,KAAnE,EAA0Ega,SAA1E,EAAqFlH,QAArF,EAA+F1H,IAA/F,EAAqGkL,QAArG,EAA+GpB,OAA/G,EAAwH0gB,OAAxH,EAAiI1qB,GAAjI,EAAsI9E,MAAtI,EAAiJ;AAAA;;AAE/I4M,QAAM5H,IAAN,GAAavQ,QAAQ0C,IAAR,CAAa6N,IAAb,CAAb;AACA4H,QAAMkC,OAAN,GAAgBA,OAAhB;AACAlC,QAAM6iB,UAAN,GAAoBvf,YAAY,QAAb,GAAyB,QAAzB,GAAoC,QAAvD;AACAtD,QAAM6S,YAAN,GAAqBsM,UAAUz1B,GAAV,CAAc,aAAd,CAArB;AACAsW,QAAM8iB,eAAN,GAAwB,KAAxB;AACA9iB,QAAMpP,SAAN,GAAkB,EAAlB;AACAoP,QAAM9H,GAAN,GAAYA,GAAZ;;AAEA8H,QAAM+iB,WAAN,GAAoB,EAAEzf,aAAa,KAAf,CAApB,CAV+I,CAUpG;;AAE3CtD,QAAMyG,MAAN,GAAe,CACb,EAAC1X,OAAO,gBAAR,EAA0BvB,aAAY,mCAAtC,EAA2EwE,IAAI,QAA/E,EADa,EAEb,EAACjD,OAAO,mBAAR,EAA6BvB,aAAa,4BAA1C,EAAwEwE,IAAI,WAA5E,EAFa,EAGb,EAACjD,OAAO,qBAAR,EAA+BvB,aAAa,2BAA5C,EAAyEwE,IAAI,IAA7E,EAHa,CAAf;AAKA,MAAIgxB,cAAchjB,MAAMgjB,WAAN,GAAoB,CAAtC;;AAEAhjB,QAAMijB,cAAN,GAAuB9D,UAAUz1B,GAAV,CAAc,eAAd,CAAvB;AACAsW,QAAMkjB,EAAN;AACE1kB,aAAS,IADX;AAEE3O,uBAAoByT,aAAa,QAAd,GAA0B,IAA1B,GAAiClL,KAAK+qB,YAF3D;AAGEz3B,UAAM,IAHR;AAIE03B,eAAW;AAJb,2CAKW,IALX,8CAMgB,IANhB,0CAOY,IAPZ,yCAQW,IARX,oCASM,IATN,0CAUY,IAVZ,wCAWU,KAXV,yCAYW,IAZX,iDAamB,IAbnB,0CAcY,IAdZ,sCAeQp2B,MAAM6H,GAAN,CAAU1F,QAflB;;AAkBA6Q,QAAMrQ,MAAN,GAAe;AACb0zB,WAAO,KADM;AAEbC,WAAO,IAFM;AAGbC,cAAU;AAHG,GAAf;;AAMAvjB,QAAMwjB,SAAN,GAAkB,YAAM;AACtBxjB,UAAMgjB,WAAN;AACD,GAFD;AAGAhjB,QAAMyjB,SAAN,GAAkB,YAAM;AACtB,QAAIC,aAAJ;AACA;AACA,YAAO1jB,MAAMgjB,WAAb;AACE,WAAK,CAAL;AACEU,eAAO1jB,MAAM2jB,UAAb;AACA;AACF,WAAK,CAAL;AACED,eAAO1jB,MAAM4jB,aAAb;AACA;AACF,WAAK,CAAL;AACEF,eAAO1jB,MAAM6jB,MAAb;AACA;AATJ;;AAYAH,SAAKI,aAAL;AACA,QAAGJ,KAAKK,MAAR,EAAgB;AACd/jB,YAAMgjB,WAAN;AACD;AACD,QAAG,CAACU,KAAKK,MAAT,EAAiBnlB,SAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAY,wCAAb,EAAhB,CAAd;AAClB,GApBD;;AAsBAjB,QAAMgkB,MAAN,GAAe,YAAM;AACnBhkB,UAAM6jB,MAAN,CAAaC,aAAb;;AAEA,QAAG,CAAC9jB,MAAM6jB,MAAN,CAAaE,MAAjB,EAAyBnlB,SAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAY,wCAAb,EAAhB,CAAd;;AAEzB;AACA,QAAGjB,MAAM6jB,MAAN,CAAaE,MAAhB,EAAwB;;AAEtB;AACA,aAAO/jB,MAAM5H,IAAN,CAAWuK,QAAlB;;AAEA3C,YAAM5H,IAAN,CAAW6rB,OAAX,GAAqBjkB,MAAMkjB,EAA3B;AACAljB,YAAM5H,IAAN,CAAW6rB,OAAX,CAAmBjyB,EAAnB,GAAwBgO,MAAMpP,SAAN,CAAgBlF,IAAxC;AACAsU,YAAM5H,IAAN,CAAW6rB,OAAX,CAAmBC,OAAnB,GAA6BlkB,MAAM5H,IAAN,CAAWxH,SAAxC;AACAoP,YAAM5H,IAAN,CAAW6rB,OAAX,CAAmBE,QAAnB,GAA8BnkB,MAAMpP,SAAN,CAAgB7B,KAA9C;AACAiR,YAAM5H,IAAN,CAAW6rB,OAAX,CAAmBr4B,QAAnB,GAA8BoU,MAAM5H,IAAN,CAAWxM,QAAzC;AACAoU,YAAM5H,IAAN,CAAW6rB,OAAX,CAAmBG,eAAnB,GAAqCpkB,MAAM5H,IAAN,CAAW7E,OAAhD;AACAyM,YAAM5H,IAAN,CAAW6rB,OAAX,CAAmB12B,OAAnB,GAA6ByS,MAAMpP,SAAN,CAAgBrD,OAA7C;;AAEAjC,cAAQC,GAAR,CAAY,uBAAZ,EAAqCyU,MAAM5H,IAA3C;AACA;AACA,UAAGkL,aAAa,KAAhB,EAAuB;AACrBsf,gBAAQ/sB,GAAR,CAAYmK,MAAM9H,GAAN,CAAUjG,KAAtB,EAA6BmB,OAAOpJ,KAApC,EAA2CoO,KAAKpO,KAAhD,EAAuDqD,MAAvD,CAA8D2S,MAAM5H,IAApE,EAA0EzO,IAA1E,CACE,UAACC,MAAD,EAAY;AACVuX,oBAAU5B,IAAV,CAAe,wBAAf;AACD,SAHH,EAIE,UAACzV,KAAD,EAAW;AACTksB,gBAAM,8CAAN;AACA1qB,kBAAQC,GAAR,CAAYzB,KAAZ;AACD,SAPH;AASD,OAVD,MAUO;AACL84B,gBAAQ/sB,GAAR,CAAYmK,MAAM9H,GAAN,CAAUjG,KAAtB,EAA6BmB,OAAOpJ,KAApC,EAA2CoO,KAAKpO,KAAhD,EAAuDK,MAAvD,CAA8D2V,MAAM5H,IAApE,EAA0EzO,IAA1E,CACE,UAACC,MAAD,EAAY;AACVuX,oBAAU5B,IAAV,CAAe,wBAAf;AACD,SAHH,EAIE,UAACzV,KAAD,EAAW;AACTksB,gBAAM,8CAAN;AACA1qB,kBAAQC,GAAR,CAAYzB,KAAZ;AACD,SAPH;AASD;AAEF;AACF,GA5CD;;AA8CA;AACAkW,QAAMqkB,WAAN,CAAkB,CAAC,mBAAD,EAAsB,WAAtB,EAAmC,gBAAnC,EAAqD,qBAArD,EAA4E,yBAA5E,EAAuG,cAAvG,EAAuH,eAAvH,EAAwI,kBAAxI,CAAlB,EAA+K,UAACC,OAAD,EAAUC,OAAV,EAAsB;;AAEnMvkB,UAAMkjB,EAAN,CAASrzB,iBAAT,GAA6By0B,QAAQ,CAAR,IAAa,GAAb,GAAmBA,QAAQ,CAAR,CAAnB,GAAgC,GAAhC,GAAsCA,QAAQ,CAAR,CAAnE;;AAEAtkB,UAAMkjB,EAAN,CAASx3B,IAAT,GAAgB44B,QAAQ,CAAR,CAAhB;AACAtkB,UAAMkjB,EAAN,CAAS1kB,OAAT,GAAmB8lB,QAAQ,CAAR,CAAnB;AACAtkB,UAAMkjB,EAAN,CAAS3kB,YAAT,GAAwB+lB,QAAQ,CAAR,CAAxB;AACAtkB,UAAMkjB,EAAN,CAASt3B,QAAT,GAAoB04B,QAAQ,CAAR,CAApB;AACAtkB,UAAMkjB,EAAN,CAASE,SAAT,GAAqBkB,QAAQ,CAAR,CAArB;AAED,GAVD;;AAYA;AACAtkB,QAAM0B,MAAN,GAAe,YAAM;AACnBP,cAAUO,MAAV,CAAiB,4BAAjB;AACD,GAFD;;AAIA;AACA1B,QAAMwkB,aAAN,GAAsB,UAACnb,UAAD,EAAgB;AACpC,WAAOA,aAAarJ,MAAM6S,YAAN,CAAmB/mB,WAAnB,CAA+BrD,MAA/B,CAAuCg8B,eAAepb,UAAf,CAAvC,CAAb,GAAmFrJ,MAAM6S,YAAN,CAAmB/mB,WAA7G;AACD,GAFD;;AAKA;AACAkU,QAAM0kB,WAAN,GAAoB,UAACrb,UAAD,EAAgB;AAClC,WAAOA,aAAarJ,MAAM6S,YAAN,CAAmBhnB,OAAnB,CAA2BpD,MAA3B,CAAmCg8B,eAAepb,UAAf,CAAnC,CAAb,GAA+ErJ,MAAM6S,YAAN,CAAmBhnB,OAAzG;AACD,GAFD;;AAIA;AACA,MAAI44B,iBAAiB,SAAjBA,cAAiB,CAACn4B,KAAD,EAAW;;AAE9B,QAAIq4B,iBAAiB98B,QAAQ+8B,SAAR,CAAkBt4B,KAAlB,CAArB,CAF8B,CAEiB;;AAE/C;AACA,WAAO,UAAC4D,KAAD,EAAW;AAChB,aAAQA,MAAMvH,OAAN,CAAcg8B,cAAd,IAAgC,CAAC,CAAzC;AACD,KAFD;AAGD,GARD;;AAUA;AACA3kB,QAAMG,MAAN,CAAa,kBAAb,EAAiC,UAAC2F,MAAD,EAASC,MAAT,EAAoB;;AAEnD,QAAI8e,WAAWhpB,SAAS/P,WAAT,CAAqBga,MAArB,CAAf;AACAxa,YAAQC,GAAR,CAAY,iBAAZ,EAA+Bs5B,QAA/B;AACA,QAAGA,QAAH,EAAa;AACX,UAAGA,YAAY,GAAf,EAAoB;AAClB;AACA7kB,cAAM8kB,aAAN,GAAoB,KAApB;AACA9kB,cAAM5H,IAAN,CAAWsK,cAAX,GAA4B,IAA5B;AACA;AACD;AACD;AACA1C,YAAM8kB,aAAN,GAAoB,IAApB;AACA9kB,YAAM5H,IAAN,CAAWsK,cAAX,GAA4BmiB,QAA5B;AACD;AACD;AACA,QAAGA,aAAa,KAAhB,EAAuB;AACrB7kB,YAAM8kB,aAAN,GAAoB,KAApB;AACA9kB,YAAM5H,IAAN,CAAWsK,cAAX,GAA4B,IAA5B;AACA;AACD;AAEF,GAtBD;;AAwBA;AACA1C,QAAM+kB,SAAN,GAAkB,YAAM;;AAEtB;AACA/kB,UAAMglB,UAAN,GAAmB,KAAnB;;AAEA,QAAGhlB,MAAM5H,IAAN,CAAWxH,SAAX,KAAyB,EAAzB,IAA+BoP,MAAM5H,IAAN,CAAWxH,SAAX,KAAyBvF,SAAxD,IAAqE2U,MAAM5H,IAAN,CAAWxH,SAAX,CAAqB2F,MAArB,KAAgC,CAAxG,EAA2G;AACzGyJ,YAAM8iB,eAAN,GAAwB,KAAxB;AACA9iB,YAAMpP,SAAN,CAAgB7B,KAAhB,GAAwB,EAAxB;AACAiR,YAAMpP,SAAN,CAAgBlF,IAAhB,GAAqB,OAArB;AACA;AACD;;AAED;AACA,QAAIoI,aAAJ;;AAEA;AACA,QAAG,CAACkM,MAAM5H,IAAN,CAAWxH,SAAX,CAAqBgQ,KAArB,CAA2B,kBAA3B,CAAJ,EAAoD;AAClDZ,YAAM8iB,eAAN,GAAwB,KAAxB;AACA9iB,YAAMpP,SAAN,CAAgB7B,KAAhB,GAAwB,EAAxB;AACAiR,YAAMpP,SAAN,CAAgBlF,IAAhB,GAAqB,OAArB;AACA;AACD;;AAEDoI,WAAOkM,MAAM5H,IAAN,CAAWxH,SAAX,CAAqBgQ,KAArB,CAA2B,aAA3B,EAA0C,CAA1C,CAAP;;AAEA;AACAZ,UAAMglB,UAAN,GAAmB,IAAnB;;AAEA;AACApxB,YAAQC,OAAR,CAAgBC,IAAhB,EAAsBnK,IAAtB,CACE,UAACkK,OAAD,EAAa;AACXmM,YAAM8iB,eAAN,GAAwB,IAAxB;AACA9iB,YAAMpP,SAAN,CAAgB7B,KAAhB,GAAwB8E,QAAQ9E,KAAhC;AACAiR,YAAMpP,SAAN,CAAgBlF,IAAhB,GAAuB,QAAvB;AACAsU,YAAMglB,UAAN,GAAmB,KAAnB;AACD,KANH,EAOE,UAAC56B,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,qCAAZ,EAAmDnB,GAAnD;AACD,KATH;AAWD,GAxCD;;AA0CA;AACA4V,QAAMG,MAAN,CAAa,sBAAb,EAAqC,UAAC8kB,MAAD,EAASC,MAAT,EAAoB;;AAEvD;AACA,QAAG,CAACA,WAAW75B,SAAX,IAAwB65B,WAAW,IAApC,KAA8CD,WAAW55B,SAAX,IAAwB45B,WAAW,IAApF,EAA2F;AACzFjlB,YAAMmlB,gBAAN;AACD,KAFD,MAEO;AACL;AACA,UAAGnlB,MAAMrQ,MAAN,CAAa4zB,QAAhB,EAA0BvjB,MAAMmlB,gBAAN;AAC3B;;AAED;AACA,QAAGF,WAAW,IAAX,IAAmBA,WAAW55B,SAAjC,EAA4C2U,MAAMrQ,MAAN,CAAa4zB,QAAb,GAAwB,KAAxB;AAC7C,GAZD;;AAeA;AACAvjB,QAAMmlB,gBAAN,GAAyB,YAAM;AAC7BnlB,UAAMrQ,MAAN,CAAa2zB,KAAb,GAAqB,IAArB;AACAtjB,UAAMrQ,MAAN,CAAa0zB,KAAb,GAAqB,KAArB;;AAEA;AACA7zB,QAAIE,QAAJ,CAAaC,MAAb,CAAoBqQ,MAAMkjB,EAAN,CAASrzB,iBAA7B,EAAgDlG,IAAhD,CACE,UAACC,MAAD,EAAY;AACVoW,YAAMrQ,MAAN,CAAa2zB,KAAb,GAAqB,KAArB;AACAtjB,YAAMrQ,MAAN,CAAa0zB,KAAb,GAAqB,IAArB;AACD,KAJH,EAKE,UAACj5B,GAAD,EAAS;AACP4V,YAAMrQ,MAAN,CAAa2zB,KAAb,GAAqB,KAArB;AACAtjB,YAAMrQ,MAAN,CAAa0zB,KAAb,GAAqB,KAArB;AACD,KARH;AAUD,GAfD;;AAkBA;AACArjB,QAAM+kB,SAAN;AAED,CAtQD,CADA,E,CAuQK;;;ACvQLn9B,IAAIuX,UAAJ,CAAe,0EAAf,EACE,CAAC,GAAD,EAAM,QAAN,EAAgB,WAAhB,EAA6B,UAA7B,EAAyC,aAAzC,EAAwD,UAACrW,CAAD,EAAIsW,MAAJ,EAAY+B,SAAZ,EAAuBvC,QAAvB,EAAiCiU,YAAjC,EAAkD;;AAE1GvnB,UAAQC,GAAR,CAAY,oCAAZ;;AAEA,MAAI2M,MAAM,QAAV;AACAkH,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOgmB,KAAP,GAAe,EAAf;;AAEAhmB,SAAOimB,gBAAP,GAA0B,UAACliB,MAAD,EAAS/K,IAAT,EAAkB;;AAE1C+I,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,qFAFA;AAGbC,cAAQ;AACN/G,aAAKA,GADC;AAENE,cAAMA;AAFA,OAHK;AAObiL,uBAAiB,KAPJ;AAQblE,kBAAY;AARC,KAAf,EASGxV,IATH,CASQ,UAACiR,OAAD,EAAa;AACnB,UAAGA,OAAH,EAAYgE,SAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BrG,OAA9B,CAAd;AACb,KAXD,EAWG,UAAC9Q,KAAD,EAAW;AACZ8U,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BnX,KAA9B,CAAd;AACD,KAbD;AAcD,GAhBD;;AAmBA2B,cAAY+E,OAAZ,CAAoB,UAACiS,GAAD,EAAS;;AAE3B;AACA,QAAG,EAAEA,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAOgmB,KAArC,CAAH,EAAgD;AAC9C3iB,UAAIE,QAAJ,GAAe,EAAf;AACA,aAAOvD,OAAOgmB,KAAP,CAAa3iB,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAA9B,IAAyC8W,GAAhD;AACD;;AAGD,QAAGA,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAOgmB,KAAtC,EAA6C;AAC3C,aAAOhmB,OAAOgmB,KAAP,CAAa3iB,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAA9B,EAAuCgX,QAAvC,CAAgDvD,OAAOgmB,KAAP,CAAa3iB,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAA9B,EAAuCgX,QAAvC,CAAgDpM,MAAhG,IAA0GkM,GAAjH;AACD;AAEF,GAbD;AAgBD,CA3CC,CADF;;;ACAA7a,IAAIuX,UAAJ,CAAe,2CAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,KAAtB,EAA6B,QAA7B,EAAuC,WAAvC,EAAoD,UAApD,EAAgE,kBAAhE,EAAoF,QAApF,EAA8F,cAA9F,EAA8G,aAA9G,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBlH,GAAhB,EAAqB9E,MAArB,EAA6B+N,SAA7B,EAAwCvC,QAAxC,EAAkD3C,aAAlD,EAAiEgY,MAAjE,EAAyE2F,YAAzE,EAAuFzsB,QAAvF,EAAoG;;AAElGiS,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAO6U,MAAP,GAAgBA,MAAhB;AACA7U,SAAO2X,GAAP,GAAa,EAAEhpB,MAAM,EAAR,EAAb;;AAGAqR,SAAOkmB,QAAP,GAAkB,QAAlB;AACAlmB,SAAO+a,QAAP,GAAkB,CAAlB;AACA/a,SAAOgb,QAAP,GAAkB,EAAlB;;AAEA;AACAhb,SAAOtO,MAAP,GAAgB,UAACqL,KAAD,EAAW;;AAEzB,QAAIiK,UAAUjF,UAAUiF,OAAV,GACXrX,KADW,CACL,gBADK,EAEXkS,WAFW,CAEC,6CAFD,EAGXuF,EAHW,CAGR,KAHQ,EAIX9E,MAJW,CAIJ,QAJI,CAAd;;AAMAP,cAAUpC,IAAV,CAAeqH,OAAf,EACGzc,IADH,CACQ,UAACC,MAAD,EAAY;AAChBqS,oBAAcE,KAAd,CAAoBrL,MAApB,CAA2BoH,IAAIjG,KAA/B,EAAsCmB,OAAOpJ,KAA7C,EAAoDmS,MAAMnS,KAA1D,EACGL,IADH,CACQ,UAACC,MAAD,EAAY;AAChBwV,eAAO6U,MAAP,CAAc1M,MAAd,CAAqBze,EAAEy8B,OAAF,CAAUnmB,OAAO6U,MAAjB,EAAyB,EAACjqB,OAAOmS,MAAMnS,KAAd,EAAzB,CAArB,EAAqE,CAArE;AACD,OAHH,EAIGG,KAJH,CAIS,UAACU,CAAD,EAAO;AACZ+T,iBAASoD,UAAT,CAAoB,4DAApB;AACD,OANH;AAOD,KATH,EAUG7X,KAVH,CAUS,UAACU,CAAD,EAAO;AACZ+T,eAASoD,UAAT,CAAoB,iBAApB;AACD,KAZH;AAcD,GAtBD;;AAwBA,MAAIwjB,sBAAsB,CACxB,YADwB,EAExB,WAFwB,EAGxB,WAHwB,EAIxB,WAJwB,EAKxB,WALwB,CAA1B;;AAQA;AACApmB,SAAOsC,MAAP,GAAgB,YAAM;AACpBP,cAAUO,MAAV,CAAiB,kCAAjB;AACD,GAFD;;AAKA,MAAIyV,eAAe,IAAnB;AACA,MAAIkD,WAAW,EAAf;;AAEA,MAAIoL,gBAAgB,SAAhBA,aAAgB,GAAM;AACxB,QAAIjpB,IAAI4C,OAAOib,QAAP,GAAkB,IAAIT,YAAJ,CAAiB;AACzC1uB,WAAQhC,OAAOC,SAAP,CAAiBC,GAAzB,aAAoC8O,IAAIjG,KAAxC,gBAAwDmB,OAAOpJ,KAA/D;AADyC,KAAjB,CAA1B;;AAIAwS,MAAErR,OAAF,CAAU,eAAV,IAA6BgC,SAASoH,QAAT,EAA7B;AACAiI,MAAEvR,MAAF,GAAW,MAAX;AACAuR,MAAE8d,KAAF,GAAU,MAAV,CAPwB,CAOH;;AAErBnD,mBAAe,IAAf;;AAEA/X,WAAO+a,QAAP,GAAkB,CAAlB;;AAEA,WAAO3d,CAAP;AACD,GAdD;;AAiBA6d,aAAWoL,eAAX;;AAEA;AACApL,WAAS/pB,OAAT,CAAiByB,IAAjB,CAAsB;AACpBhE,UAAM,YADc;AAEpBwsB,QAAI,YAASC,IAAT,EAAe/sB,OAAf,EAAwB;;AAE1B4sB,eAASqL,QAAT,GAAoB,CAAC,EAAC33B,MAAMqR,OAAO2X,GAAP,CAAWhpB,IAAlB,EAAD,CAApB;AACA,UAAGy3B,oBAAoB78B,OAApB,CAA4B6xB,KAAK9uB,IAAjC,MAA2C,CAAC,CAA/C,EAAkD;AAChDkT,iBAASoD,UAAT,CAAoB,6DAA6DlZ,EAAE2H,IAAF,CAAO+0B,mBAAP,EAA4B,IAA5B,CAAjF;AACA,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;AAVmB,GAAtB;;AAaAnL,WAASI,WAAT,GAAuB,UAASC,QAAT,EAAmB/rB,QAAnB,EAA6BC,MAA7B,EAAqCzD,OAArC,EAA8C;AACnEG,YAAQqvB,IAAR,CAAa,aAAb,EAA4BD,QAA5B,EAAsC/rB,QAAtC,EAAgDC,MAAhD,EAAwDzD,OAAxD;AACAyT,aAASoD,UAAT,CAAoB,gCAAgCrT,SAASpG,OAA7D;AACD,GAHD;;AAKA;AACA8xB,WAASO,iBAAT,GAA6B,UAACF,QAAD,EAAc;AACzCtb,WAAOgb,QAAP,GAAkBM,SAASG,IAAT,CAAc9sB,IAAhC;AACAopB,mBAAeuD,QAAf;;AAEAtb,WAAOkmB,QAAP,GAAkB,QAAlB,CAJyC,CAIb;AAC7B,GALD;;AAOAjL,WAASS,cAAT,GAA0B,UAACJ,QAAD,EAAWP,QAAX,EAAwB;AAChD/a,WAAO+a,QAAP,GAAkBA,QAAlB;AACD,GAFD;;AAIA;AACA/a,SAAO2b,cAAP,GAAwB,YAAM;AAC5B3b,WAAO4b,aAAP,GAAuB,IAAvB;;AAEAX,aAASC,KAAT,GAAiB,MAAjB,CAH4B,CAGA;AAC5BD,aAASqL,QAAT,GAAoB,CAAC,EAAC33B,MAAMqR,OAAO2X,GAAP,CAAWhpB,IAAlB,EAAD,CAApB;AACAssB,aAASY,UAAT,CAAoB9D,YAApB;AACD,GAND;;AAQA;AACAkD,WAASa,cAAT,GAA0B,UAACR,QAAD,EAAW/rB,QAAX,EAAqBC,MAArB,EAA6BzD,OAA7B,EAAyC;AACjE;AACAyT,aAASoD,UAAT,CAAoB,qCAApB;AACA5C,WAAO6U,MAAP,CAAcliB,IAAd,CAAmBpD,QAAnB;AACAyQ,WAAO2X,GAAP,CAAWhpB,IAAX,GAAkB,EAAlB;AACAqR,WAAOkmB,QAAP,GAAkB,QAAlB;;AAEA;AACAjL,aAASsL,UAAT;AACAxO,mBAAe,IAAf;AACA/X,WAAO+a,QAAP,GAAkB,CAAlB;AAED,GAZD;AAgBD,CAnID,CADA;;;ACAAvyB,IAAIuX,UAAJ,CAAe,qDAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,UAAzC,EAAqD,6BAArD,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYiW,IAAZ,EAAkBnd,GAAlB,EAAuB9E,MAAvB,EAA+BvC,QAA/B,EAAyCuiB,SAAzC,EAAuD;;AAErD;AACAhU,SAAOvO,QAAP,GAAkBA,QAAlB;AACAuO,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOwmB,iBAAP,GAA2B,EAA3B;;AAEA,MAAIC,gBAAiBh1B,QAAD,GAAaA,SAASA,QAAT,CAAkBtC,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,EAAqC4P,KAArC,CAA2C,MAA3C,CAAb,GAAkE,CAAC,wBAAD,EAA2B,kBAA3B,CAAtF;;AAEArV,IAAE0H,OAAF,CAAUq1B,aAAV,EAAyB,UAACC,CAAD,EAAO;AAC9B,QAAGA,EAAEvvB,MAAF,GAAW,CAAd,EAAiB6I,OAAOwmB,iBAAP,CAAyB7zB,IAAzB,CAA8BsjB,KAAKG,WAAL,CAAiBsQ,CAAjB,CAA9B;AAClB,GAFD;AAID,CAfD,CADA;;;ACAAl+B,IAAIuX,UAAJ,CAAe,gDAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,cAAjC,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYlH,GAAZ,EAAiB9E,MAAjB,EAAyB4f,YAAzB,EAA0C;;AAExC;AACA5T,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAO4T,YAAP,GAAsBA,YAAtB;;AAEA5T,SAAOuR,MAAP,GAAgBvd,OAAOud,MAAP,CAAcxS,KAAd,CAAoB,IAApB,CAAhB;AAED,CAVD,CADA;;;ACAAvW,IAAIuX,UAAJ,CAAe,wDAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,MAAnD,EAA2D,IAA3D,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYiW,IAAZ,EAAkBnd,GAAlB,EAAuB9E,MAAvB,EAA+BogB,MAA/B,EAAuChT,IAAvC,EAA6C0D,EAA7C,EAAoD;;AAElD;AACA9E,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAO8E,EAAP,GAAYA,EAAZ;AACA9E,SAAOoU,MAAP,GAAgBA,MAAhB;AACApU,SAAO6W,SAAP,GAAmB,EAAnB;;AAGA,MAAIQ,aAAa,SAAbA,UAAa,CAACjW,IAAD,EAAU;;AAEzB,QAAIkW,YAAY;AACdP,gBAAU,EADI;AAEdC,cAAQ,EAFM;AAGd9T,kBAAY,EAHE;AAId+T,uBAAiB,EAJH;AAKdC,0BAAoB,EALN;AAMdC,yBAAmB,EANL;AAOdC,sBAAgB;AAPF,KAAhB;;AAUA;AACA1tB,MAAE0H,OAAF,CAAUgQ,IAAV,EAAgB,UAACiC,GAAD,EAAM1E,CAAN,EAAY;AAC1B,UAAG,EAAE0E,IAAIkU,UAAJ,IAAkBD,SAApB,CAAH,EAAmCA,UAAUjU,IAAIkU,UAAd,IAA4B,EAA5B;AACnC;AACAD,gBAAUjU,IAAIkU,UAAd,EAA0B5kB,IAA1B,CAA+B0Q,GAA/B;AACD,KAJD;;AAMA;AACArD,WAAO6W,SAAP,GAAmBS,SAAnB;AACD,GArBD;;AAuBAD,aAAWjW,IAAX;;AAEApB,SAAO8W,QAAP,GAAkB;AAChBC,cAAU,sCADM;AAEhBC,YAAQ,4CAFQ;AAGhB9T,gBAAY,8BAHI;AAIhB+T,qBAAiB,8CAJD;AAKhBC,wBAAoB,wCALJ;AAMhBC,uBAAmB,4CANH;AAOhBC,oBAAgB;AAPA,GAAlB;AAWD,CA/CD,CADA;;;ACAA5uB,IAAIuX,UAAJ,CAAe,8DAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,QAAzC,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYiW,IAAZ,EAAkBnd,GAAlB,EAAuB9E,MAAvB,EAA+BogB,MAA/B,EAA0C;;AAExC;AACApU,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOoU,MAAP,GAAgBA,MAAhB;AAED,CARD,CADA;;;ACAA5rB,IAAIuX,UAAJ,CAAe,yCAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,aAAjC,EAAgD,oBAAhD,EAAsE,qBAAtE,EAA6F,eAA7F,EAA8G,oBAA9G,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYlH,GAAZ,EAAiB9E,MAAjB,EAAyB3H,WAAzB,EAAsCqnB,kBAAtC,EAA0DC,mBAA1D,EAA+EQ,aAA/E,EAA8FY,kBAA9F,EAAqH;;AAEnH;AACA/U,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAO8C,OAAP,GAAiB,EAAjB;AACA9C,SAAO3T,WAAP,GAAqB,EAAC0W,aAAa,EAAd,EAAkBC,YAAY,EAA9B,EAAkCC,YAAY,EAA9C,EAAkDC,YAAY,EAA9D,EAAkEC,SAAS,EAA3E,EAArB;AACAnD,SAAO0T,kBAAP,GAA4B,EAA5B;AACA1T,SAAO2T,mBAAP,GAA4B,EAA5B;AACA3T,SAAOmU,aAAP,GAAuBA,aAAvB;;AAEA9nB,gBAAcA,YAAY6sB,MAAZ,CAAmBnE,kBAAnB,CAAd;;AAEA;AACA,MAAI2E,mBAAmB,SAAnBA,gBAAmB,CAACC,UAAD,EAAattB,WAAb,EAA6B;;AAElDA,gBAAY+E,OAAZ,CAAoB,UAACiS,GAAD,EAAS;;AAE3B;;AAEA;AACA,UAAG,EAAEA,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAArB,IAAgCotB,UAAlC,CAAH,EAAkD;AAChDtW,YAAIE,QAAJ,GAAe,EAAf;AACA,eAAOoW,WAAWtW,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAAhC,IAA2C8W,GAAlD,CAFgD,CAEO;AACxD;;AAED,UAAGA,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAArB,IAAgCotB,UAAnC,EAA+C,OAAOA,WAAWtW,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAAhC,EAAyCgX,QAAzC,CAAkD5Q,IAAlD,CAAuD0Q,GAAvD,CAAP;AAEhD,KAZD;;AAcA,WAAO3Z,EAAE8Z,MAAF,CAASmW,UAAT,CAAP;AAED,GAlBD;;AAoBA;AACA,MAAIvW,eAAe,SAAfA,YAAe,CAAC/W,WAAD,EAAiB;AAClC;AACAA,gBAAY+E,OAAZ,CAAoB,UAACiS,GAAD,EAAS;;AAE3B;AACA,UAAGrD,OAAO8C,OAAP,CAAevZ,OAAf,CAAuB8Z,IAAIvR,MAA3B,MAAuC,CAAC,CAA3C,EAA8CkO,OAAO8C,OAAP,CAAenQ,IAAf,CAAoB0Q,IAAIvR,MAAxB;;AAE9C;AACA,UAAG,EAAEuR,IAAIC,cAAJ,IAAsBtD,OAAO3T,WAA/B,CAAH,EAAgD2T,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,IAAyC,EAAzC;;AAEhD;AACA,UAAG,EAAED,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,CAA9B,CAAH,EAA0E;AACxED,YAAIE,QAAJ,GAAe,EAAf;AACA,eAAOvD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,IAAmE8W,GAA1E;AACD;;AAED;AACA,UAAGA,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,CAA/B,EAAuE;AACrE,eAAOtD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,EACJgX,QADI,CACKvD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,EAAiEgX,QAAjE,CAA0EpM,MAD/E,IACyFkM,GADhG;AAED;AAEF,KApBD;;AAsBA3Z,MAAE0H,OAAF,CAAU4O,OAAO3T,WAAjB,EAA8B,UAACmX,MAAD,EAAS7E,CAAT,EAAe;AAC3CqB,aAAO3T,WAAP,CAAmBsS,CAAnB,IAAwBjV,EAAE8Z,MAAF,CAASA,MAAT,CAAxB;AACA;AACD,KAHD;AAKD,GA7BD;;AA+BA;AACAJ,eAAa/W,WAAb;;AAEA;AACA2T,SAAO0T,kBAAP,GAA4BgG,iBAAiB1Z,OAAO0T,kBAAxB,EAA4CA,kBAA5C,CAA5B;AACA1T,SAAO2T,mBAAP,GAA6B+F,iBAAiB1Z,OAAO2T,mBAAxB,EAA6CA,mBAA7C,CAA7B;AAGD,CA3ED,CADA;;;ACAAnrB,IAAIuX,UAAJ,CAAe,6DAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,mBAAnD,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYiW,IAAZ,EAAkBnd,GAAlB,EAAuB9E,MAAvB,EAA+BogB,MAA/B,EAAuCC,iBAAvC,EAA6D;;AAE3D;AACArU,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOoU,MAAP,GAAgBA,MAAhB;AACApU,SAAOqU,iBAAP,GAA2BA,iBAA3B;AACArU,SAAO+V,cAAP,GAAwB,EAAEC,OAAO1oB,IAAP,CAAY+mB,iBAAZ,EAA+Bld,MAA/B,KAA0C,CAA5C,CAAxB;AAED,CAVD,CADA;;;ACAA3O,IAAIuX,UAAJ,CAAe,wDAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,UAAnD,EAA+D,aAA/D,EAA8E,eAA9E,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYiW,IAAZ,EAAkBnd,GAAlB,EAAuB9E,MAAvB,EAA+BogB,MAA/B,EAAuC9N,QAAvC,EAAiDoO,WAAjD,EAA8DC,aAA9D,EAAgF;;AAE9E;AACA3U,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOoU,MAAP,GAAgBA,MAAhB;AACApU,SAAO0U,WAAP,GAAqBA,WAArB;AACA1U,SAAO2U,aAAP,GAAuB,EAAvB;AACA3U,SAAOmiB,WAAP,GAAqB,EAArB;;AAEA;AACAniB,SAAOqd,SAAP,GAAmB,UAACC,GAAD,EAAS;AAC1B,WAAOA,IAAI9b,KAAJ,CAAU,gBAAV,EAA4B,CAA5B,CAAP;AACD,GAFD;;AAIAxB,SAAO8W,QAAP,GAAkB;AAChBC,cAAU,2DADM;AAEhBC,YAAQ,iEAFQ;AAGhB9T,gBAAY,mDAHI;AAIhB8f,gBAAY,wBAJI;AAKhBC,iBAAa;AALG,GAAlB;;AAQA;AACA,MAAIN,oBAAoB,SAApBA,iBAAoB,CAACnyB,KAAD,EAAQlE,IAAR,EAAiB;;AAEvC,QAAIs2B,cAAc;AAChB7L,gBAAU,EADM;AAEhBC,cAAQ,EAFQ;AAGhB9T,kBAAY,EAHI;AAIhB8f,kBAAY,EAJI;AAKhBC,mBAAa;AALG,KAAlB;;AAQA,QAAIJ,UAAU,aAAd;AACA,QAAGv2B,SAAS,SAAZ,EAAuBu2B,UAAU,aAAV;;AAEvB;AACAn5B,MAAE0H,OAAF,CAAUZ,KAAV,EAAiB,UAAC6S,GAAD,EAAM1E,CAAN,EAAY;AAC3B,UAAG,EAAE0E,IAAIwf,OAAJ,KAAgBD,WAAlB,CAAH,EAAmCA,YAAYvf,IAAIwf,OAAJ,CAAZ,IAA4B,EAA5B;AACnC;AACAD,kBAAYvf,IAAIwf,OAAJ,CAAZ,EAA0BlwB,IAA1B,CAA+B0Q,GAA/B;AACD,KAJD;;AAMArD,WAAOmiB,WAAP,GAAqBS,WAArB;AAED,GAtBD;;AAwBAD,oBAAkBrc,QAAlB,EAA4B,SAA5B;;AAEA,MAAIrH,IAAI,CAAR;;AAEA,MAAI0nB,cAAc,EAAlB;AACAj9B,IAAE0H,OAAF,CAAUujB,aAAV,EAAyB,UAACzd,CAAD,EAAO;AAC9ByvB,gBAAYh0B,IAAZ,CAAiBuE,CAAjB;AACD,GAFD;;AAIA,SAAM+H,IAAI0nB,YAAYxvB,MAAtB,EAA8B;;AAE5B6I,WAAO2U,aAAP,CAAqBhiB,IAArB,CAA0B,CAACg0B,YAAY1nB,CAAZ,CAAD,EAAiB0nB,YAAY1nB,IAAE,CAAd,CAAjB,CAA1B;AACAA,QAAIA,IAAI,CAAR;AACD;AAEF,CAhED,CADA;;;ACAAzW,IAAIuX,UAAJ,CAAe,qDAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,UAAhB,EAA4B,KAA5B,EAAmC,QAAnC,EAA6C,SAA7C,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYU,QAAZ,EAAsB5H,GAAtB,EAA2B9E,MAA3B,EAAmCigB,OAAnC,EAA+C;;AAE7C;AACAjU,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAO4mB,eAAP,GAAyB3S,OAAzB;;AAEA,MAAIwG,aAAa,SAAbA,UAAa,CAACvP,GAAD,EAAS;;AAExB;AACA,QAAIM,WAAWC,SAASC,cAAT,CAAwB,UAAxB,CAAf;;AAEA,QAAGF,SAASkP,SAAT,CAAmBvjB,MAAnB,GAA4B,CAA/B,EAAkC;AAChC;AACAqU,eAASkP,SAAT,GAAqB,EAArB;AACD;;AAED;AACA1a,WAAOiU,OAAP,GAAiB,IAAI9I,SAAJ,GAAgBC,eAAhB,CAAgCF,GAAhC,EAAqC,iBAArC,CAAjB;;AAEA;AACA,QAAIG,SAASrL,OAAOiU,OAAP,CAAe3I,oBAAf,CAAoC,KAApC,EAA2C,CAA3C,CAAb;AACAD,WAAOzY,EAAP,GAAU,SAAV,CAfwB,CAeH;AACrByY,WAAOsP,KAAP,GAAe,6BAAf,CAhBwB,CAgBsB;;AAE9C;AACA,QAAIC,UAAU,EAAd;;AAEA;AACA;AACArP,eAAW,YAAM;AACfC,iBAAWC,SAASC,cAAT,CAAwB,UAAxB,CAAX;;AAEAF,eAASG,WAAT,CACEH,SAASI,aAAT,CAAuBC,UAAvB,CAAkC7L,OAAOiU,OAAP,CAAenI,eAAjD,EAAkE,IAAlE,CADF;AAGA,UAAI8O,UAAU5O,WAAW,UAAX,EAAuB;AACnCC,mCAA2B,IADQ;AAEnCC,4BAAoB,KAFe;AAGnC2O,6BAAqB;AAHc,OAAvB,CAAd;AAKAD,cAAQzO,MAAR;AACAyO,cAAQxO,GAAR;AACAwO,cAAQvO,MAAR;AACAuO,cAAQzJ,UAAR;AACAyJ,cAAQxJ,qBAAR;AACAwJ,cAAQvJ,WAAR;AACAuJ,cAAQtJ,mBAAR;AACD,KAlBD,EAkBE,GAlBF;AAoBD,GA3CD;;AA6CA5Q,WAAS,YAAM;AACb,QAAGuT,YAAY,IAAf,EAAqBwG,WAAWxG,QAAQA,OAAnB;AACrB,QAAGA,YAAY,IAAf,EAAqBwG,WAAW,0VAAX;AACtB,GAHD,EAGG,GAHH;AAKD,CA1DD,CADA;;;ACAAjyB,IAAIuX,UAAJ,CAAe,2CAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,QAAjC,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYlH,GAAZ,EAAiB9E,MAAjB,EAAyB6gB,MAAzB,EAAoC;;AAElC;AACA7U,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAO6U,MAAP,GAAgBA,MAAhB;AAED,CARD,CADA;;;ACAArsB,IAAIuX,UAAJ,CAAe,sDAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,IAAnD,EAAyD,gBAAzD,EAA2E,mBAA3E,EAAgG,uBAAhG,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYiW,IAAZ,EAAkBnd,GAAlB,EAAuB9E,MAAvB,EAA+BogB,MAA/B,EAAuCtP,EAAvC,EAA2CyP,cAA3C,EAA2DjQ,iBAA3D,EAA8EgQ,qBAA9E,EAAwG;;AAEtG;AACAtU,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOoU,MAAP,GAAgBA,MAAhB;AACApU,SAAOuU,cAAP,GAAwB,EAAxB;AACAvU,SAAOsE,iBAAP,GAA2B,EAA3B;AACAtE,SAAOwE,UAAP,GAAoB,KAApB;AACAxE,SAAO8E,EAAP,GAAY,IAAZ;;AAEA9E,SAAOsB,UAAP,GAAoB,UAACC,UAAD,EAAgB;AAClC,WAAOA,WAAWC,KAAX,CAAiB,yBAAjB,EAA4C,CAA5C,CAAP;AACD,GAFD;;AAIA,MAAI8D,mBAAmB,SAAnBA,gBAAmB,CAACK,IAAD,EAAU;AAC/B3F,WAAOsE,iBAAP,GAA2B,EAA3B;AACA,QAAIsB,UAAW5F,OAAOwE,UAAR,GAAsB,CAAtB,GAA0B,CAAxC;;AAEA9a,MAAE0H,OAAF,CAAUuU,IAAV,EAAgB,UAAC7H,CAAD,EAAIa,CAAJ,EAAU;AACxB,UAAGb,EAAE+H,IAAF,GAASD,OAAZ,EAAqBA,UAAU9H,EAAE+H,IAAZ;AACtB,KAFD;;AAIAnc,MAAE0H,OAAF,CAAUuU,IAAV,EAAgB,UAAC7H,CAAD,EAAIa,CAAJ,EAAU;;AAExB;AACAb,QAAEgI,OAAF,GAAYhI,EAAEgI,OAAF,CAAUC,OAAV,CAAkB,CAAlB,CAAZ;AACAjI,QAAE+H,IAAF,GAAS/H,EAAE+H,IAAF,CAAOE,OAAP,CAAe,CAAf,CAAT;;AAEA;AACAjI,QAAEkI,aAAF,GAAkBC,KAAKC,KAAL,CAAY,CAAEpI,EAAEgI,OAAF,GAAY,CAAb,GAAkB,CAAlB,GAAsBhI,EAAEgI,OAAzB,IAAqC,GAAtC,GAA6C,CAAxD,IAA6D,CAA/E;AACAhI,QAAEqI,UAAF,GAAeF,KAAKC,KAAL,CAAapI,EAAE+H,IAAF,GAAOD,OAAR,GAAmB,GAApB,GAA2B,CAAtC,IAA2C,CAA1D;;AAEA5F,aAAOsE,iBAAP,CAAyB3R,IAAzB,CAA8BmL,CAA9B;AAED,KAZD;AAcD,GAtBD;;AAwBA,MAAIie,mBAAmB,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;;AAE/B,QAAI9R,YAAY;AACd6M,gBAAU,EADI;AAEdC,cAAQ,EAFM;AAGd9T,kBAAY,EAHE;AAIdC,eAAS;AAJK,KAAhB;;AAOA;AACAzZ,MAAE0H,OAAF,CAAU4qB,IAAV,EAAgB,UAAC3Y,GAAD,EAAM1E,CAAN,EAAY;AAC1B,UAAG,EAAE0E,IAAI4Y,YAAJ,IAAoB/R,SAAtB,CAAH,EAAqCA,UAAU7G,IAAI4Y,YAAd,IAA8B,EAA9B;AACrC;AACA/R,gBAAU7G,IAAI4Y,YAAd,EAA4BtpB,IAA5B,CAAiC0Q,GAAjC;AACD,KAJD;;AAMA;AACArD,WAAOuU,cAAP,GAAwBrK,SAAxB;AACD,GAlBD;;AAoBA,MAAIgS,iBAAiB,SAAjBA,cAAiB,GAAM;AACzB,QAAI5nB,SAAS5K,EAAE6U,IAAF,CAAOuG,EAAP,EAAW,EAACqX,YAAYnoB,OAAO4U,cAAP,CAAsBwT,2BAAnC,EAAX,CAAb;;AAEA,QAAG,CAAC9nB,MAAJ,EAAYA,SAAS5K,EAAE6U,IAAF,CAAOuG,EAAP,EAAW,EAACqX,YAAY,SAAb,EAAX,CAAT;;AAEZnc,WAAO8E,EAAP,GAAYxQ,MAAZ;AACD,GAND;;AAQA,MAAI+nB,+BAA+B,SAA/BA,4BAA+B,CAACjI,MAAD,EAAY;;AAE7C,QAAIkI,UAAU;AACZC,eAAS;AACPC,eAAO,EADA;AAEPC,aAAK,EAFE;AAGP3R,YAAI;AAHG,OADG;AAMZ4R,mBAAa;AACXF,eAAO,EADI;AAEXC,aAAK,EAFM;AAGX3R,YAAI;AAHO,OAND;AAWZ6R,cAAQ;AACNC,mBAAW,EADL;AAEN9R,YAAI;AAFE;AAXI,KAAd;;AAiBA,QAAI+R,SAAS;AACXrxB,mBAAa,EADF;AAEXgxB,aAAO;AACLD,iBAAS,EADJ;AAELG,qBAAa;AAFR,OAFI;AAMXD,WAAK;AACHF,iBAAS,EADN;AAEHG,qBAAa;AAFV,OANM;AAUX5R,UAAI;AACFyR,iBAAS,EADP;AAEFG,qBAAa;AAFX,OAVO;AAcXC,cAAQ;AACNG,mBAAW,EADL;AAENhS,YAAI;AAFE;AAdG,KAAb;;AAoBAphB,MAAE0H,OAAF,CAAUgjB,MAAV,EAAkB,UAAC2I,GAAD,EAAS;;AAEzB,UAAIC,SAASD,IAAItuB,GAAJ,CAAQsQ,KAAR,CAAc,GAAd,CAAb;AACAge,UAAIZ,UAAJ,GAAiBa,OAAO,CAAP,KAAa,IAA9B;AACA,UAAG,CAACD,IAAIZ,UAAR,EAAoBY,IAAIZ,UAAJ,GAAiBnoB,OAAO4U,cAAP,CAAsBwT,2BAAvC,CAJK,CAI+D;;AAExF,UAAGW,IAAIZ,UAAJ,IAAkB,CAACzyB,EAAE6U,IAAF,CAAOse,OAAOrxB,WAAd,EAA2B,EAACmD,MAAMouB,IAAIZ,UAAX,EAA3B,CAAtB,EAA0EU,OAAOrxB,WAAP,CAAmBmH,IAAnB,CAAwB,EAAChE,MAAMouB,IAAIZ,UAAX,EAAuBc,SAAS,KAAhC,EAAxB;;AAE1E,UAAGD,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,eAAlB,IAAqC,CAAC,CAAzC,EAA4CszB,OAAOL,KAAP,CAAaD,OAAb,CAAqB5pB,IAArB,CAA0BoqB,GAA1B;AAC5C,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,aAAlB,IAAmC,CAAC,CAAvC,EAA0CszB,OAAOJ,GAAP,CAAWF,OAAX,CAAmB5pB,IAAnB,CAAwBoqB,GAAxB;AAC1C,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,YAAlB,IAAkC,CAAC,CAAtC,EAAyCszB,OAAO/R,EAAP,CAAUyR,OAAV,CAAkB5pB,IAAlB,CAAuBoqB,GAAvB;;AAEzC,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,oBAAlB,IAA0C,CAAC,CAA9C,EAAiDszB,OAAOL,KAAP,CAAaE,WAAb,CAAyB/pB,IAAzB,CAA8BoqB,GAA9B;AACjD,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,kBAAlB,IAAwC,CAAC,CAA5C,EAA+CszB,OAAOJ,GAAP,CAAWC,WAAX,CAAuB/pB,IAAvB,CAA4BoqB,GAA5B;AAC/C,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,iBAAlB,IAAuC,CAAC,CAA3C,EAA8CszB,OAAO/R,EAAP,CAAU4R,WAAV,CAAsB/pB,IAAtB,CAA2BoqB,GAA3B;;AAE9C,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,kBAAlB,IAAwC,CAAC,CAA5C,EAA+CszB,OAAOF,MAAP,CAAcG,SAAd,CAAwBnqB,IAAxB,CAA6BoqB,GAA7B;AAC/C,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,WAAlB,IAAiC,CAAC,CAArC,EAAwCszB,OAAOF,MAAP,CAAc7R,EAAd,GAAmBiS,GAAnB;AAEzC,KAnBD;;AAqBA/c,WAAOsU,qBAAP,GAA+BuI,MAA/B;AAED,GA9DD;;AAiEA;;;;;;;;;AASA7c,SAAOkd,uBAAP,GAAiC,UAACC,KAAD,EAAQ7wB,IAAR,EAAkC;AAAA,QAApB6vB,UAAoB,uEAAT,IAAS;;;AAEjE,WAAOzyB,EAAE6U,IAAF,CAAOyB,OAAOsU,qBAAP,CAA6BhoB,IAA7B,EAAmC6wB,KAAnC,CAAP,EAAkD,EAAChB,YAAYA,UAAb,EAAlD,CAAP;AAED,GAJD;;AAOAE,+BAA6B/H,qBAA7B;AACAyH,mBAAiBxH,cAAjB;AACA2H;;AAEAH,mBAAiBxH,cAAjB;AACAjP,mBAAiB7c,QAAQ0C,IAAR,CAAamZ,iBAAb,CAAjB;AAED,CA5JD,CADA;;;ACAA9b,IAAIuX,UAAJ,CAAe,wDAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,IAAnD,EAAyD,KAAzD,EAAgE,uBAAhE,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYiW,IAAZ,EAAkBnd,GAAlB,EAAuB9E,MAAvB,EAA+BogB,MAA/B,EAAuCtP,EAAvC,EAA2C8F,GAA3C,EAAgD0J,qBAAhD,EAA0E;;AAExE;AACAtU,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOoU,MAAP,GAAgBA,MAAhB;AACApU,SAAO8E,EAAP,GAAYA,EAAZ;AACA9E,SAAO6mB,WAAP,GAAqB,EAArB;;AAEA7mB,SAAO8W,QAAP,GAAkB;AAChBC,cAAU,kFADM;AAEhBC,YAAQ,qDAFQ;AAGhB9T,gBAAY,wCAHI;AAIhBsa,uBAAmB;AAJH,GAAlB;;AAOA,MAAIC,aAAa,SAAbA,UAAa,CAACC,UAAD,EAAgB;;AAE/B,QAAI9S,MAAM;AACRmM,gBAAU,EADF;AAERC,cAAQ,EAFA;AAGR9T,kBAAY,EAHJ;AAIRsa,yBAAmB;AAJX,KAAV;;AAOA;AACA9zB,MAAE0H,OAAF,CAAUssB,UAAV,EAAsB,UAACra,GAAD,EAAM1E,CAAN,EAAY;AAChC,UAAG,EAAE0E,IAAIsa,SAAJ,IAAiB/S,GAAnB,CAAH,EAA4BA,IAAIvH,IAAIsa,SAAR,IAAqB,EAArB;AAC5Bta,UAAIyjB,UAAJ,GAAiBp9B,EAAE2H,IAAF,CAAOgS,IAAIyjB,UAAJ,CAAe/nB,KAAf,CAAqB,GAArB,CAAP,EAAkC,IAAlC,CAAjB;AACA;AACA6L,UAAIvH,IAAIsa,SAAR,EAAmBhrB,IAAnB,CAAwB0Q,GAAxB;;AAEAA,UAAI6H,GAAJ,GAAU+K,KAAKG,WAAL,CAAiB/S,IAAI6H,GAArB,CAAV;AACAlL,aAAO6mB,WAAP,CAAmBl0B,IAAnB,CAAwB0Q,GAAxB;AACD,KARD;;AAUA;AACArD,WAAOud,SAAP,GAAmB3S,GAAnB;AACD,GAtBD;;AAyBA,MAAIsR,iBAAiB,SAAjBA,cAAiB,GAAM;AACzB,QAAI5nB,SAAS5K,EAAE6U,IAAF,CAAOuG,EAAP,EAAW,EAACqX,YAAYnoB,OAAO4U,cAAP,CAAsBwT,2BAAnC,EAAX,CAAb;;AAEA,QAAG,CAAC9nB,MAAJ,EAAYA,SAAS5K,EAAE6U,IAAF,CAAOuG,EAAP,EAAW,EAACqX,YAAY,SAAb,EAAX,CAAT;;AAEZnc,WAAO8E,EAAP,GAAYxQ,MAAZ;AACD,GAND;;AAQA,MAAI+nB,+BAA+B,SAA/BA,4BAA+B,CAACjI,MAAD,EAAY;;AAE7C,QAAIkI,UAAU;AACZC,eAAS;AACPC,eAAO,EADA;AAEPC,aAAK,EAFE;AAGP3R,YAAI;AAHG,OADG;AAMZ4R,mBAAa;AACXF,eAAO,EADI;AAEXC,aAAK,EAFM;AAGX3R,YAAI;AAHO,OAND;AAWZ6R,cAAQ;AACNC,mBAAW,EADL;AAEN9R,YAAI;AAFE;AAXI,KAAd;;AAiBA,QAAI+R,SAAS;AACXrxB,mBAAa,EADF;AAEXgxB,aAAO;AACLD,iBAAS,EADJ;AAELG,qBAAa;AAFR,OAFI;AAMXD,WAAK;AACHF,iBAAS,EADN;AAEHG,qBAAa;AAFV,OANM;AAUX5R,UAAI;AACFyR,iBAAS,EADP;AAEFG,qBAAa;AAFX,OAVO;AAcXC,cAAQ;AACNG,mBAAW,EADL;AAENhS,YAAI;AAFE;AAdG,KAAb;;AAoBAphB,MAAE0H,OAAF,CAAUgjB,MAAV,EAAkB,UAAC2I,GAAD,EAAS;;AAEzB,UAAIC,SAASD,IAAItuB,GAAJ,CAAQsQ,KAAR,CAAc,GAAd,CAAb;AACAge,UAAIZ,UAAJ,GAAiBa,OAAO,CAAP,KAAa,IAA9B;AACA,UAAG,CAACD,IAAIZ,UAAR,EAAoBY,IAAIZ,UAAJ,GAAiBnoB,OAAO4U,cAAP,CAAsBwT,2BAAvC,CAJK,CAI+D;;AAExF,UAAGW,IAAIZ,UAAJ,IAAkB,CAACzyB,EAAE6U,IAAF,CAAOse,OAAOrxB,WAAd,EAA2B,EAACmD,MAAMouB,IAAIZ,UAAX,EAA3B,CAAtB,EAA0EU,OAAOrxB,WAAP,CAAmBmH,IAAnB,CAAwB,EAAChE,MAAMouB,IAAIZ,UAAX,EAAuBc,SAAS,KAAhC,EAAxB;;AAE1E,UAAGD,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,eAAlB,IAAqC,CAAC,CAAzC,EAA4CszB,OAAOL,KAAP,CAAaD,OAAb,CAAqB5pB,IAArB,CAA0BoqB,GAA1B;AAC5C,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,aAAlB,IAAmC,CAAC,CAAvC,EAA0CszB,OAAOJ,GAAP,CAAWF,OAAX,CAAmB5pB,IAAnB,CAAwBoqB,GAAxB;;AAE1C,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,YAAlB,IAAkC,CAAC,CAAtC,EAAyCszB,OAAO/R,EAAP,CAAUyR,OAAV,CAAkB5pB,IAAlB,CAAuBoqB,GAAvB;;AAEzC,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,oBAAlB,IAA0C,CAAC,CAA9C,EAAiDszB,OAAOL,KAAP,CAAaE,WAAb,CAAyB/pB,IAAzB,CAA8BoqB,GAA9B;AACjD,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,kBAAlB,IAAwC,CAAC,CAA5C,EAA+CszB,OAAOJ,GAAP,CAAWC,WAAX,CAAuB/pB,IAAvB,CAA4BoqB,GAA5B;;AAE/C,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,iBAAlB,IAAuC,CAAC,CAA3C,EAA8CszB,OAAO/R,EAAP,CAAU4R,WAAV,CAAsB/pB,IAAtB,CAA2BoqB,GAA3B;;AAE9C,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,kBAAlB,IAAwC,CAAC,CAA5C,EAA+CszB,OAAOF,MAAP,CAAcG,SAAd,CAAwBnqB,IAAxB,CAA6BoqB,GAA7B;AAC/C,UAAGC,OAAO,CAAP,EAAUzzB,OAAV,CAAkB,WAAlB,IAAiC,CAAC,CAArC,EAAwCszB,OAAOF,MAAP,CAAc7R,EAAd,GAAmBiS,GAAnB;AAEzC,KArBD;;AAuBA/c,WAAOsU,qBAAP,GAA+BuI,MAA/B;AAED,GAhED;;AAkEA;;;;;;;;;AASA7c,SAAOkd,uBAAP,GAAiC,UAACC,KAAD,EAAQ7wB,IAAR,EAAkC;AAAA,QAApB6vB,UAAoB,uEAAT,IAAS;;;AAEjE,WAAOzyB,EAAE6U,IAAF,CAAOyB,OAAOsU,qBAAP,CAA6BhoB,IAA7B,EAAmC6wB,KAAnC,CAAP,EAAkD,EAAChB,YAAYA,UAAb,EAAlD,CAAP;AAED,GAJD;;AAMAsB,aAAW7S,GAAX;AACAsR;AACAG,+BAA6B/H,qBAA7B;AAED,CAvID,CADA;;;ACAA9rB,IAAIuX,UAAJ,CAAe,6CAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,KAAjC,EAAwC,KAAxC,EAA+C,IAA/C,EAAqD,IAArD,EAA2D,IAA3D,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYlH,GAAZ,EAAiB9E,MAAjB,EAAyB+F,GAAzB,EAA8BzP,GAA9B,EAAmCwa,EAAnC,EAAuC+O,EAAvC,EAA2CC,EAA3C,EAAkD;;AAEhD;AACA9T,SAAOvV,IAAP,GAAc,EAACsP,KAAKA,GAAN,EAAW+K,IAAIA,EAAf,EAAmB+O,IAAIA,EAAvB,EAA2BC,IAAIA,EAA/B,EAAmCvZ,IAAIvG,OAAOsqB,kBAA9C,EAAkED,IAAIrqB,OAAO4U,cAA7E,EAAd;;AAEA5I,SAAOvV,IAAP,CAAYH,GAAZ,GAAkB,EAAlB;AACA0V,SAAOvV,IAAP,CAAYH,GAAZ,GAAkBA,GAAlB;AACA0V,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;;AAGA,MAAIkmB,kBAAkB,SAAlBA,eAAkB,CAACzyB,OAAD,EAAa;AACjC,QAAI6U,OAAO,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,EAA4C,iBAA5C,EAA+D,iBAA/D,CAAX;;AAEA;AACA,QAAI7U,QAAQ0yB,WAAR,CAAoBzd,KAApB,CAA0B,mDAA1B,CAAJ,EAAoF;AAClFjV,cAAQD,IAAR,GAAe,eAAf;AACA,aAAOC,OAAP;AACD;;AAED;AACA,QAAIA,QAAQ0yB,WAAR,CAAoBzd,KAApB,CAA0B,6DAA1B,CAAJ,EAA8F;AAC5FjV,cAAQD,IAAR,GAAe,mBAAf;AACA,aAAOC,OAAP;AACD;;AAED;AACA,QAAIA,QAAQ0yB,WAAR,CAAoB9xB,WAApB,GAAkC5D,OAAlC,CAA0C,YAA1C,MAA4D,CAAC,CAAjE,EAAoE;AAClEgD,cAAQD,IAAR,GAAe,mBAAf;AACA,aAAOC,OAAP;AACD;;AAED;AACAA,YAAQD,IAAR,GAAe,KAAf;AACA,WAAOC,OAAP;AAED,GAzBD;;AA2BA;AACA,MAAI2yB,kBAAkB,SAAlBA,eAAkB,CAACC,QAAD,EAAc;;AAElC,QAAIzgB,SAAS,EAAb;;AAEA;AACAsB,WAAO0e,aAAP,GAAuB,EAAEC,KAAK,CAAP,EAAUC,eAAe,CAAzB,EAA4BC,mBAAmB,CAA/C,EAAkDC,mBAAmB,CAArE,EAAvB;;AAEAK,aAAS/tB,OAAT,CAAiB,UAAC7E,OAAD,EAAUoS,CAAV,EAAgB;AAC/B;AACAD,aAAO/L,IAAP,CAAYqsB,gBAAgBzyB,OAAhB,CAAZ;;AAEA;AACA,UAAI,CAACyT,OAAO0e,aAAP,CAAqB3kB,IAAI4E,CAAJ,EAAOrS,IAA5B,CAAL,EAAwC0T,OAAO0e,aAAP,CAAqB3kB,IAAI4E,CAAJ,EAAOrS,IAA5B,IAAoC,CAApC;AACxC0T,aAAO0e,aAAP,CAAqB3kB,IAAI4E,CAAJ,EAAOrS,IAA5B;AAED,KARD;;AAUA,WAAOoS,MAAP;AACD,GAlBD;AAmBAsB,SAAOof,YAAP,GAAsBF,gBAAgBnlB,GAAhB,CAAtB;;AAEAiG,SAAO+mB,oBAAP,GAA8B,UAACv2B,KAAD,EAAW;AACvC,WAAQA,SAAS,WAAV,GAAyB,IAAzB,GAAgCA,MAAMrB,OAAN,CAAc,aAAd,EAA6B,EAA7B,CAAvC;AACD,GAFD;AAKD,CAlED,CADA;;;ACAA3G,IAAIuX,UAAJ,CAAe,wDAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,aAAzC,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYiW,IAAZ,EAAkBnd,GAAlB,EAAuB9E,MAAvB,EAA+B+O,WAA/B,EAA+C;;AAE7C;AACA/C,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAO+C,WAAP,GAAqB,EAACA,aAAa,EAAd,EAAkBqe,iBAAiB,EAAnC,EAArB;;AAEA;AACA,MAAIE,oBAAoB,SAApBA,iBAAoB,GAAM;AAC5B53B,MAAE0H,OAAF,CAAU2R,WAAV,EAAuB,UAACV,CAAD,EAAO;AAC5B,UAAGA,EAAE/V,IAAF,KAAW,aAAd,EAA6B0T,OAAO+C,WAAP,CAAmBA,WAAnB,CAA+BpQ,IAA/B,CAAoC0P,CAApC;AAC7B,UAAGA,EAAE/V,IAAF,KAAW,iBAAd,EAAiC0T,OAAO+C,WAAP,CAAmBqe,eAAnB,CAAmCzuB,IAAnC,CAAwC0P,CAAxC;AAClC,KAHD;AAID,GALD;;AAOAif;AAED,CAlBD,CADA;;;ACAA94B,IAAIuX,UAAJ,CAAe,+CAAf,EACE,CAAC,GAAD,EAAM,QAAN,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,aAAjC,EAAgD,oBAAhD,EAAsE,qBAAtE,EACE,UAACrW,CAAD,EAAIsW,MAAJ,EAAYlH,GAAZ,EAAiB9E,MAAjB,EAAyB3H,WAAzB,EAAsCqnB,kBAAtC,EAA0DC,mBAA1D,EAAkF;;AAEhF;AACA3T,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAO8C,OAAP,GAAiB,EAAjB;AACA9C,SAAO3T,WAAP,GAAqB,EAAC0W,aAAa,EAAd,EAAkBC,YAAY,EAA9B,EAAkCC,YAAY,EAA9C,EAAkDC,YAAY,EAA9D,EAAkEC,SAAS,EAA3E,EAArB;AACAnD,SAAO0T,kBAAP,GAA4B,EAA5B;AACA1T,SAAO2T,mBAAP,GAA4B,EAA5B;;AAEA;AACA,MAAI+F,mBAAmB,SAAnBA,gBAAmB,CAACC,UAAD,EAAattB,WAAb,EAA6B;;AAElDA,gBAAY+E,OAAZ,CAAoB,UAACiS,GAAD,EAAS;;AAE3B;;AAEA;AACA,UAAG,EAAEA,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAArB,IAAgCotB,UAAlC,CAAH,EAAkD;AAChDtW,YAAIE,QAAJ,GAAe,EAAf;AACA,eAAOoW,WAAWtW,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAAhC,IAA2C8W,GAAlD,CAFgD,CAEO;AACxD;;AAED,UAAGA,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAArB,IAAgCotB,UAAnC,EAA+C,OAAOA,WAAWtW,IAAIrK,IAAJ,GAAW,GAAX,GAAiBqK,IAAI9W,OAAhC,EAAyCgX,QAAzC,CAAkD5Q,IAAlD,CAAuD0Q,GAAvD,CAAP;AAEhD,KAZD;;AAcA,WAAO3Z,EAAE8Z,MAAF,CAASmW,UAAT,CAAP;AAED,GAlBD;;AAoBA;AACA,MAAIvW,eAAe,SAAfA,YAAe,CAAC/W,WAAD,EAAiB;AAClC;AACAA,gBAAY+E,OAAZ,CAAoB,UAACiS,GAAD,EAAS;;AAE3B;AACA,UAAGrD,OAAO8C,OAAP,CAAevZ,OAAf,CAAuB8Z,IAAIvR,MAA3B,MAAuC,CAAC,CAA3C,EAA8CkO,OAAO8C,OAAP,CAAenQ,IAAf,CAAoB0Q,IAAIvR,MAAxB;;AAE9C;AACA,UAAG,EAAEuR,IAAIC,cAAJ,IAAsBtD,OAAO3T,WAA/B,CAAH,EAAgD2T,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,IAAyC,EAAzC;;AAEhD;AACA,UAAG,EAAED,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,CAA9B,CAAH,EAA0E;AACxED,YAAIE,QAAJ,GAAe,EAAf;AACA,eAAOvD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,IAAmE8W,GAA1E;AACD;;AAED;AACA,UAAGA,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAjB,IAA4ByT,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,CAA/B,EAAuE;AACrE,eAAOtD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,EACJgX,QADI,CACKvD,OAAO3T,WAAP,CAAmBgX,IAAIC,cAAvB,EAAuCD,IAAIrK,IAAJ,GAAS,GAAT,GAAaqK,IAAI9W,OAAxD,EAAiEgX,QAAjE,CAA0EpM,MAD/E,IACyFkM,GADhG;AAED;AAEF,KApBD;;AAsBA3Z,MAAE0H,OAAF,CAAU4O,OAAO3T,WAAjB,EAA8B,UAACmX,MAAD,EAAS7E,CAAT,EAAe;AAC3CqB,aAAO3T,WAAP,CAAmBsS,CAAnB,IAAwBjV,EAAE8Z,MAAF,CAASA,MAAT,CAAxB;AACA;AACD,KAHD;AAKD,GA7BD;;AA+BA;AACAJ,eAAa/W,WAAb;;AAEA;AACA2T,SAAO0T,kBAAP,GAA4BgG,iBAAiB1Z,OAAO0T,kBAAxB,EAA4CA,kBAA5C,CAA5B;AACA1T,SAAO2T,mBAAP,GAA6B+F,iBAAiB1Z,OAAO2T,mBAAxB,EAA6CA,mBAA7C,CAA7B;AAGD,CAxEH,CADF;;;ACAAnrB,IAAIuX,UAAJ,CAAe,8CAAf,EACE,CAAC,GAAD,EAAM,QAAN,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,UAACrW,CAAD,EAAIsW,MAAJ,EAAYlH,GAAZ,EAAiB9E,MAAjB,EAA4B;;AAE3DgM,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOuR,MAAP,GAAgBvd,OAAOud,MAAP,CAAcxS,KAAd,CAAoB,IAApB,CAAhB;AAED,CAND,CADF;;;ACAAvW,IAAIuX,UAAJ,CAAe,2CAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,iBAAjC,EAAoD,eAApD,EAAqE,SAArE,EAAgF,WAAhF,EAA6F,UAACrW,CAAD,EAAIsW,MAAJ,EAAYlH,GAAZ,EAAiB9E,MAAjB,EAAyBsf,eAAzB,EAA0CE,aAA1C,EAAyDwT,SAAzD,EAAoEhiB,SAApE,EAAkF;;AAE7K;AACAhF,SAAOvV,IAAP,GAAc,EAAC8P,IAAIvG,OAAOsqB,kBAAZ,EAAgCD,IAAIrqB,OAAO4U,cAA3C,EAAd;;AAEA5I,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOsT,eAAP,GAAyBA,eAAzB;AACAtT,SAAOwT,aAAP,GAAuBA,aAAvB;AACAxT,SAAOgnB,SAAP,GAAmBA,SAAnB;AACAhnB,SAAOgF,SAAP,GAAmBA,SAAnB;;AAEA9Y,UAAQC,GAAR,CAAY,YAAZ,EAA0B66B,SAA1B;AAED,CAdD,CADA;;;ACAAx+B,IAAIuX,UAAJ,CAAe,sBAAf,EACE,CAAC,GAAD,EAAM,QAAN,EAAgB,QAAhB,EAA0B,SAA1B,EAAqC,WAArC,EAAkD,eAAlD,EAAmE,MAAnE,EAA2E,SAA3E,EAAsF,MAAtF,EACE,UAACrW,CAAD,EAAIsW,MAAJ,EAAYhF,MAAZ,EAAoBvI,IAApB,EAA0B6G,MAA1B,EAAkCyZ,aAAlC,EAAiDtf,IAAjD,EAAuDuD,OAAvD,EAAgEgc,IAAhE,EAAyE;;AAEvEhT,SAAOinB,KAAP,GAAe;AACbppB,cAAUmV,KAAKnV,QADF;AAEbO,YAAQ4U,KAAK5U;AAFA,GAAf;;AAKA4B,SAAOhJ,OAAP,GAAiBA,OAAjB;AACAgJ,SAAOvM,IAAP,GAAcA,IAAd;AACAuM,SAAOhF,MAAP,GAAgBA,MAAhB;;AAEAgF,SAAOknB,SAAP,GAAmBnU,cAAczoB,GAAd,CAAkB,cAAlB,CAAnB;AACA0V,SAAOmnB,MAAP,GAAgB,YAAM;AACpBpU,kBAAcvS,IAAd,CAAmB,cAAnB,EAAmC,CAACR,OAAOknB,SAA3C;AACAlnB,WAAOknB,SAAP,GAAmB,CAAClnB,OAAOknB,SAA3B;AACD,GAHD;AAKD,CAlBH,CADF;;;ACAA1+B,IAAIuX,UAAJ,CAAe,uCAAf,EAAwD,CAAC,IAAD,EAAO,GAAP,EAAY,OAAZ,EAAqB,UAArB,EAAiC,UAAjC,EAA6C,aAA7C,EAA4D,WAA5D,EAAyE,UAACnW,EAAD,EAAKF,CAAL,EAAQkX,KAAR,EAAe9S,KAAf,EAAsBF,KAAtB,EAA6BG,QAA7B,EAAuCgU,SAAvC,EAAqD;;AAEpL;AACAnB,QAAM0B,MAAN,GAAe,YAAM;AACnBP,cAAUO,MAAV;AACD,GAFD;;AAIA1B,QAAMwmB,QAAN,GAAiB,EAAjB;AACAxmB,QAAMzI,KAAN,GAAa,MAAb;;AAEAyI,QAAMnN,IAAN,GAAa;AACX1D,cAAU,EADC;AAEXC,cAAU;AAFC,GAAb;;AAKA4Q,QAAM9Q,KAAN,GAAc;AACZu3B,oBAAgB,KADJ;AAEZC,gBAAY;AAFA,GAAd;;AAKA;AACA1mB,QAAMrN,IAAN,GAAa,UAACoP,CAAD,EAAO;;AAElB/B,UAAM2mB,aAAN,GAAsB,IAAtB;;AAEA3mB,UAAM4mB,KAAN,GAAc,YAAM;AAClBzlB,gBAAU5B,IAAV;AACD,KAFD;;AAIA;AACA,QAAIxQ,QAAQiR,MAAMwmB,QAAN,CAAe96B,IAAf,GAAsB,IAAtB,GAA2BsU,MAAMwmB,QAAN,CAAez3B,KAAtD;;AAEA;AACA7B,UAAME,MAAN,CAAaC,MAAb,CAAoB,OAApB,EAA6B,MAA7B,EAAqC0B,KAArC,EAA4CiR,MAAMwmB,QAAN,CAAeh5B,WAA3D,EAAwE,EAACW,YAAY,CAAE,EAAEJ,MAAM,YAAR,EAAF,CAAb,EAAwCM,QAAQ,CAAC,UAAD,EAAa2R,MAAMwmB,QAAN,CAAe96B,IAA5B,CAAhD,EAAxE,EAA6J/B,IAA7J,CACE,UAACk9B,GAAD,EAAS;AACP;AACA7mB,YAAMzI,KAAN,GAAc,OAAd;AACAyI,YAAM5S,MAAN,GAAey5B,GAAf;AACAv7B,cAAQC,GAAR,CAAY,gCAAZ,EAA8Cs7B,GAA9C;AACD,KANH,EAOE,UAACz8B,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,yBAAZ,EAAuCnB,GAAvC;AACD,KATH;AAWD,GAvBD;AAyBD,CA9CuD,CAAxD;;;ACAAxC,IAAIuX,UAAJ,CAAe,8BAAf,EACE,CAAC,GAAD,EAAM,QAAN,EAAgB,WAAhB,EAA6B,SAA7B,EAAwC,UAACrW,CAAD,EAAIkX,KAAJ,EAAWmB,SAAX,EAAsBtP,IAAtB,EAA+B;;AAErEmO,QAAM9N,IAAN,GAAa,EAACgG,KAAK;;AAEnB;AAFa,GAAb,CAGA8H,MAAM0B,MAAN,GAAe,YAAM;AACnBP,cAAUO,MAAV,CAAiB,4BAAjB;AACD,GAFD;;AAIA;AACA1B,QAAM9N,IAAN,GAAa,UAAC6P,CAAD,EAAO;;AAElB;AACA,QAAGA,EAAE2T,QAAL,EAAe;AACb3T,QAAE4T,SAAF;AACA9tB,cAAQ2I,OAAR,CAAgBuR,EAAE6T,MAAlB,EAA0B,UAACtkB,KAAD,EAAW;AACnCzJ,gBAAQ2I,OAAR,CAAgBc,KAAhB,EAAuB,UAACukB,UAAD,EAAgB;AACrCA,qBAAWC,WAAX;AACD,SAFD;AAGD,OAJD;AAKA;AACD;;AAED;AACAjkB,SAAKK,IAAL,CAAU8N,MAAM9N,IAAN,CAAWgG,GAArB,EAA0BvO,IAA1B,CACE,UAACC,MAAD,EAAY;AACVuX,gBAAU5B,IAAV,CAAe,sBAAf;AACD,KAHH,EAIE,UAACzV,KAAD,EAAW;AACTksB,YAAM,+BAAN;AACA1qB,cAAQC,GAAR,CAAYzB,KAAZ;AACD,KAPH;AAUD,GAxBD,CAVqE,CAkCnE;AAEH,CApCD,CADF,E,CAqCM;;;ACrCNlC,IAAIuX,UAAJ,CAAe,8BAAf,EACE,CAAC,GAAD,EAAM,QAAN,EAAgB,YAAhB,EAA8B,QAA9B,EAAwC,WAAxC,EAAqD,UAArD,EAAiE,UAAjE,EAA6E,aAA7E,EAA4F,SAA5F,EAAuG,eAAvG,EACE,UAACrW,CAAD,EAAIsW,MAAJ,EAAY0nB,UAAZ,EAAwB1sB,MAAxB,EAAgC+G,SAAhC,EAA2CvC,QAA3C,EAAqDkB,QAArD,EAA+D3S,QAA/D,EAAyEiJ,OAAzE,EAAkF+b,aAAlF,EAAoG;;AAElG/S,SAAOhJ,OAAP,GAAiBA,OAAjB;;AAEAgJ,SAAO2nB,UAAP,GAAoB,YAAM;AACxBD,eAAW,oBAAX,EAAiCP,MAAjC;AACD,GAFD;;AAKA;AACAnnB,SAAO4nB,YAAP,GAAsB,UAAC7jB,MAAD,EAAY;;AAEhChC,cAAUpC,IAAV,CAAe;AACbI,kBAAY,uCADC;AAEbH,mBAAa,yBAFA;AAGboE,mBAAaD,MAHA;AAIb7B,2BAAqB;AAJR,KAAf,EAKG3X,IALH,CAME,UAACk9B,GAAD,EAAS;AACP;AACD,KARH,EASE,UAACnlB,MAAD,EAAY;AACV;AACD,KAXH;AAcD,GAhBD;;AAkBAtC,SAAO6nB,UAAP,GAAoB,UAAC9jB,MAAD,EAAY;;AAE9BhC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,wBAFA;AAGbqE,uBAAiB,KAHJ;AAIblE,kBAAY;AAJC,KAAf;AAMD,GARD;;AAUA;;;;AAIAC,SAAO8nB,UAAP,GAAoB,YAAM;;AAExB/5B,aAAS2H,MAAT,GAAkBnL,IAAlB,CACE,UAACqF,IAAD,EAAU;AACR;AACA4P,eAASoD,UAAT,CAAoB,2BAApB;AACA5H,aAAOqN,EAAP,CAAU,cAAV;AACD,KALH,EAME,UAACrd,GAAD,EAAS;AACPwU,eAASoD,UAAT,CAAoB,kCAApB;AACD,KARH;AAWD,GAbD;AAeD,CA1DH,CADF;;;ACAApa,IAAIuX,UAAJ,CAAe,kBAAf,EAAmC,CAAC,GAAD,EAAM,UAAN,EAAkB,QAAlB,EAA4B,UAACrW,CAAD,EAAIoE,KAAJ,EAAWkS,MAAX,EAAsB,CAIpF,CAJkC,CAAnC;;;ACAAxX,IAAIuX,UAAJ,CAAe,kBAAf,EAAmC,CAAC,GAAD,EAAM,QAAN,EAAe,UAACrW,CAAD,EAAIsW,MAAJ,EAAe;;AAE/DA,SAAO+nB,KAAP,GAAe,IAAf;AAED,CAJkC,CAAnC;ACAA;;;ACAAv/B,IAAIuX,UAAJ,CAAe,6BAAf,EAA8C,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAmB,CAEtF,CAF6C,CAA9C;;;ACAAxX,IAAIuX,UAAJ,CAAe,+BAAf,EAAgD,CAAC,GAAD,EAAM,QAAN,EAAgB,YAAhB,EAA8B,QAA9B,EAAwC,WAAxC,EAAqD,UAArD,EAAiE,aAAjE,EAAgF,SAAhF,EAA2F,UAACrW,CAAD,EAAIsW,MAAJ,EAAY0nB,UAAZ,EAAwB1sB,MAAxB,EAAgC+G,SAAhC,EAA2CvC,QAA3C,EAAqDzR,QAArD,EAA+DiJ,OAA/D,EAA2E,CAGrN,CAH+C,CAAhD;;;ACAAxO,IAAIuX,UAAJ,CAAe,2BAAf,EAA4C,CAAC,GAAD,EAAM,QAAN,EAAgB,QAAhB,EAA0B,UAACrW,CAAD,EAAIsW,MAAJ,EAAYhF,MAAZ,EAAuB;;AAE3FA,SAAOqN,EAAP,CAAU,6BAAV;AAGD,CAL2C,CAA5C;;;ACAA7f,IAAIuX,UAAJ,CAAe,+BAAf,EAAgD,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAmB,CAExF,CAF+C,CAAhD;;;ACAAxX,IAAIuX,UAAJ,CAAe,0BAAf,EAA2C,CAAC,GAAD,EAAM,QAAN,EAAgB,UAACrW,CAAD,EAAIsW,MAAJ,EAAe,CAEzE,CAF0C,CAA3C;;;ACAAxX,IAAIuX,UAAJ,CAAe,eAAf,EAAgC,CAAC,IAAD,EAAO,QAAP,EAAiB,UAACnW,EAAD,EAAKoW,MAAL,EAAgB,CAIhE,CAJ+B,CAAhC;;;ACAAxX,IAAIuX,UAAJ,CAAe,iCAAf,EACE,CAAC,GAAD,EAAM,QAAN,EAAgB,QAAhB,EAA0B,SAA1B,EAAqC,WAArC,EAAkD,eAAlD,EAAmE,MAAnE,EAA2E,QAA3E,EACE,UAACrW,CAAD,EAAIsW,MAAJ,EAAYhF,MAAZ,EAAoBvI,IAApB,EAA0B6G,MAA1B,EAAkCyZ,aAAlC,EAAiDtf,IAAjD,EAAuDO,MAAvD,EAAkE;;AAEhEgM,SAAOvM,IAAP,GAAcA,IAAd;AACAuM,SAAOhF,MAAP,GAAgBA,MAAhB;AACAgF,SAAOhM,MAAP,GAAgBA,MAAhB;;AAEA9H,UAAQC,GAAR,CAAY,QAAZ,EAAsB6H,MAAtB;AAED,CATH,CADF;;;ACAAxL,IAAIuX,UAAJ,CAAe,+BAAf,EACA,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,yBAAtB,EAAiD,oBAAjD,EAAuE,mBAAvE,EAA4F,WAA5F,EAAyG,UAAzG,EACA,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAgBrF,WAAhB,EAA6BK,MAA7B,EAAqCG,KAArC,EAA4C4G,SAA5C,EAAuDvC,QAAvD,EAAoE,CAGnE,CAJD,CADA;;;ACAAhX,IAAIuX,UAAJ,CAAe,yBAAf,EAA0C,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,aAAtB,EAAqC,UAArC,EAAiD,QAAjD,EAA2D,MAA3D,EAAmE,UAAnE,EAA+E,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAgBjS,QAAhB,EAA0BH,KAA1B,EAAiCoN,MAAjC,EAAyCgY,IAAzC,EAA+CxT,QAA/C,EAA4D;;AAEnLQ,SAAOvM,IAAP,GAAc;AACZ1D,cAAU,IADE;AAEZC,cAAU;AAFE,GAAd;;AAKA;AACAgQ,SAAOlQ,KAAP,GAAe,UAAC6S,CAAD,EAAO;AACpB,QAAGA,EAAE2T,QAAL,EAAe;AACb3T,QAAE4T,SAAF;AACA9tB,cAAQ2I,OAAR,CAAgBuR,EAAE6T,MAAlB,EAA0B,UAACtkB,KAAD,EAAW;AACnCzJ,gBAAQ2I,OAAR,CAAgBc,KAAhB,EAAuB,UAACukB,UAAD,EAAgB;AACrCA,qBAAWC,WAAX;AACD,SAFD;AAGD,OAJD;AAKA;AACD;;AAED;AACA3oB,aAAS+B,KAAT,CAAekQ,OAAOvM,IAAP,CAAY1D,QAA3B,EAAqCiQ,OAAOvM,IAAP,CAAYzD,QAAjD,EACGzF,IADH,CACQqD,MAAMsH,EADd,EAEG3K,IAFH,CAEQ,UAACC,MAAD,EAAY;AAChBwoB,WAAKxU,UAAL,CAAgBhU,MAAhB;;AAEA,UAAGwoB,KAAK1U,OAAL,CAAa,WAAb,CAAH,EAA8B;AAC5BtD,eAAOqN,EAAP,CAAU,6BAAV;AACD,OAFD,MAEO;AACLrN,eAAOqN,EAAP,CAAU,6BAAV;AACD;AACF,KAVH,EAWGtd,KAXH,CAWS,UAACL,KAAD,EAAW;AAChB,UAAGA,MAAM8E,MAAN,KAAiB,GAApB,EAAyB,OAAOgQ,SAASoD,UAAT,CAAoB,sDAApB,CAAP;AACzB1W,cAAQC,GAAR,CAAY,cAAZ,EAA4BzB,KAA5B;AACD,KAdH;AAeD,GA3BD;AA6BD,CArCyC,CAA1C;;;ACAAlC,IAAIuX,UAAJ,CAAe,uCAAf,EAAwD,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,WAAtB,EAAkC,UAAlC,EAA8C,WAA9C,EAA2D,UAA3D,EAAuE,aAAvE,EAAsF,UAACnW,EAAD,EAAKF,CAAL,EAAQkX,KAAR,EAAemB,SAAf,EAA0BnU,KAA1B,EAAiCo6B,SAAjC,EAA4CC,QAA5C,EAAsDC,WAAtD,EAAsE;;AAElN;AACAtnB,QAAMxJ,KAAN,GAAc4wB,SAAd;AACApnB,QAAMqnB,QAAN,GAAiBA,QAAjB;AACArnB,QAAMsnB,WAAN,GAAoBA,WAApB;;AAEA;AACA,MAAGD,QAAH,EAAa;AACXrnB,UAAMxJ,KAAN,GAAc;AACZzI,YAAM;AADM,KAAd;AAGD;;AAEDiS,QAAM+N,WAAN,GAAoB,UAAC1E,UAAD,EAAgB;AAClC,QAAI3b,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA,QAAG0b,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5BvJ,UAAM0G,MAAN,CAAa2V,UAAb,EAAyB1f,IAAzB,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,IAAjB;AACD,KAHH,EAIE,UAAC5E,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAYnB,GAAZ;AACAsD,eAASjE,MAAT;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AACD,GAhBD;;AAkBAkR,QAAMunB,WAAN,GAAoB,UAACC,eAAD,EAAqB;AACvC,QAAI95B,WAAW1E,GAAG2E,KAAH,EAAf;;AAEA,QAAG65B,gBAAgBjxB,MAAhB,KAA2B,CAA9B,EAAiC,OAAO,EAAP;;AAEjCvJ,UAAM0G,MAAN,CAAa8zB,eAAb,EAA8B79B,IAA9B,CACE,UAACqF,IAAD,EAAU;AACRtB,eAASlE,OAAT,CAAiBwF,IAAjB;AACD,KAHH,EAIE,UAAC5E,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAYnB,GAAZ;AACAsD,eAASjE,MAAT;AACD,KAPH;;AAUA,WAAOiE,SAASoB,OAAhB;AACD,GAhBD;;AAmBAkR,QAAM0B,MAAN,GAAe,YAAM;AACnBP,cAAUO,MAAV,CAAiB,EAAC9S,QAAQ,KAAT,EAAgBrG,SAAS,8BAAzB,EAAjB;AACD,GAFD;;AAIAyX,QAAMqZ,OAAN,GAAgB,YAAM;;AAEpB,QAAGvwB,EAAE6U,IAAF,CAAOqC,MAAMxJ,KAAN,CAAY8R,KAAnB,EAA0B,EAACte,OAAOgW,MAAMvJ,MAAN,CAAazM,KAArB,EAA1B,CAAH,EAA2D,OAAOgsB,MAAM,+CAAN,CAAP;;AAE3D;AACAhpB,UAAMwJ,KAAN,CAAYC,MAAZ,CAAmBuJ,MAAMxJ,KAAN,CAAYxM,KAA/B,EAAsCC,GAAtC,CAA0C+V,MAAMvJ,MAAN,CAAazM,KAAvD,EAA8DL,IAA9D,CACE,UAACqF,IAAD,EAAU;AACRgR,YAAMxJ,KAAN,CAAY8R,KAAZ,CAAkBvW,IAAlB,CAAuB/C,IAAvB;;AAEAgR,YAAMvJ,MAAN,GAAe,IAAf;AACAuJ,YAAMynB,WAAN,GAAoB,EAApB;AAED,KAPH,EAQE,UAACr9B,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,oBAAZ,EAAkCnB,GAAlC;AACD,KAVH;AAaD,GAlBD;;AAoBA;AACA4V,QAAM0nB,UAAN,GAAmB,UAACvkB,MAAD,EAAStQ,IAAT,EAAkB;;AAEnC,QAAGuT,QAAQ,0CAAyCvT,KAAKwT,SAA9C,GAA0D,GAA1D,GAAgExT,KAAKyT,QAArE,GAA+E,OAA/E,GAAwFtG,MAAMxJ,KAAN,CAAYzI,IAApG,GAA0G,GAAlH,CAAH,EAA2H;AACzHf,YAAMwJ,KAAN,CAAYC,MAAZ,CAAmBuJ,MAAMxJ,KAAN,CAAYxM,KAA/B,EAAsC8G,MAAtC,CAA6C+B,KAAK7I,KAAlD,EAAyDL,IAAzD,CACE,UAACqF,IAAD,EAAU;AACR;AACAgR,cAAMxJ,KAAN,CAAY8R,KAAZ,GAAoBxf,EAAEL,MAAF,CAASuX,MAAMxJ,KAAN,CAAY8R,KAArB,EAA4B,UAAC9L,CAAD,EAAO;AACrD,iBAAQA,EAAExS,KAAF,KAAY6I,KAAK7I,KAAzB;AACD,SAFmB,CAApB;AAGD,OANH,EAOE,UAACI,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,kCAAZ,EAAgDnB,GAAhD;AACD,OATH;AAWD;AAEF,GAhBD;;AAkBA;AACA4V,QAAM3V,MAAN,GAAe,UAAC0X,CAAD,EAAO;AACpB;AACA,QAAGA,EAAE2T,QAAL,EAAe;AACb3T,QAAE4T,SAAF;AACA9tB,cAAQ2I,OAAR,CAAgBuR,EAAE6T,MAAlB,EAA0B,UAACtkB,KAAD,EAAW;AACnCzJ,gBAAQ2I,OAAR,CAAgBc,KAAhB,EAAuB,UAACukB,UAAD,EAAgB;AACrCA,qBAAWC,WAAX;AACD,SAFD;AAGD,OAJD;AAKA;AACD;;AAED9V,UAAMxJ,KAAN,CAAYmxB,KAAZ,GAAoB3nB,MAAMxJ,KAAN,CAAYmxB,KAAZ,CAAkB39B,KAAtC;;AAEA;AACA,QAAG,CAACq9B,QAAJ,EAAc;AACZr6B,YAAMwJ,KAAN,CAAYnM,MAAZ,CAAmB2V,MAAMxJ,KAAN,CAAYxM,KAA/B,EAAsCgW,MAAMxJ,KAA5C,EAAmD7M,IAAnD,CACE,UAAC6M,KAAD,EAAW;AACT;AACA2K,kBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,IAAT,EAAe/E,MAAM2M,KAArB,EAA4BjO,SAAS,6BAArC,EAAf;AACD,OAJH,EAKE,UAAC6B,GAAD,EAAS;AACP+W,kBAAUO,MAAV,CAAiB,EAAC9S,QAAQ,KAAT,EAAgBrG,SAAS,8BAAzB,EAAjB;AACD,OAPH;AASD;AACD;AACA,QAAG8+B,QAAH,EAAa;AACXr6B,YAAMwJ,KAAN,CAAYnJ,MAAZ,CAAmB2S,MAAMxJ,KAAzB,EAAgC7M,IAAhC,CACE,UAAC6M,KAAD,EAAW;AACT;AACA2K,kBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,IAAT,EAAe/E,MAAM2M,KAArB,EAA4BjO,SAAS,2BAArC,EAAkE8+B,UAAU,IAA5E,EAAf;AACD,OAJH,EAKE,UAACj9B,GAAD,EAAS;AACP+W,kBAAUO,MAAV,CAAiB,EAAC9S,QAAQ,KAAT,EAAgBrG,SAAS,8BAAzB,EAAjB;AACD,OAPH;AASD;AAEF,GAvCD;AAyCD,CAxIuD,CAAxD;;;ACAAX,IAAIuX,UAAJ,CAAe,yCAAf,EAA0D,CAAC,GAAD,EAAM,QAAN,EAAgB,YAAhB,EAA8B,QAA9B,EAAwC,WAAxC,EAAqD,UAArD,EAAiE,aAAjE,EAAgF,UAAhF,EAA4F,SAA5F,EAAuG,QAAvG,EAAiH,UAACrW,CAAD,EAAIsW,MAAJ,EAAY0nB,UAAZ,EAAwB1sB,MAAxB,EAAgC+G,SAAhC,EAA2CvC,QAA3C,EAAqDzR,QAArD,EAA+DH,KAA/D,EAAsEoJ,OAAtE,EAA+ED,MAA/E,EAA0F;;AAEnQiJ,SAAOjJ,MAAP,GAAgBA,MAAhB;;AAGA,MAAIyxB,cAAc,SAAdA,WAAc,CAACzkB,MAAD,EAAS3M,KAAT,EAAmB;;AAEnC,QAAI4P,UAAUjF,UAAUiF,OAAV,GACXrX,KADW,CACL,qCAAsCyH,MAAMzI,IAA5C,GAAmD,GAD9C,EAEX85B,WAFW,CAEC,uDAAuDrxB,MAAMzI,IAA7D,GAAoE,0FAFrE,EAGXwY,SAHW,CAGD,eAHC,EAIXnD,WAJW,CAICD,MAJD,EAKXqD,EALW,CAKR,cALQ,EAMX9E,MANW,CAMJ,QANI,CAAd;;AAQAP,cAAUpC,IAAV,CAAeqH,OAAf,EAAwBzc,IAAxB,CACE,YAAM;AACJ,UAAIm+B,YAAYjgC,QAAQ0C,IAAR,CAAaiM,KAAb,CAAhB;AACA;AACAxJ,YAAMwJ,KAAN,CAAY1F,MAAZ,CAAmB0F,KAAnB,EAA0B7M,IAA1B,CACE,UAACk9B,GAAD,EAAS;AACPznB,eAAOjJ,MAAP,GAAgBrN,EAAEL,MAAF,CAAS2W,OAAOjJ,MAAhB,EAAwB,UAACG,CAAD,EAAO;AAAC,iBAAQA,EAAEtM,KAAF,KAAY89B,UAAU99B,KAA9B;AAAqC,SAArE,CAAhB;AACA4U,iBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,4BAAhB,CAAd;AACD,OAJH,EAKE,UAAC5W,GAAD,EAAS;AACPwU,iBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,2DAAhB,CAAd;AACD,OAPH;AASD,KAbH;AAgBD,GA1BD;;AA4BA;AACA,MAAI+mB,aAAa,SAAbA,UAAa,GAAM;;AAErB5mB,cAAU5B,IAAV,GAFqB,CAEH;AAClB,WAAOqoB,WAAP;AACD,GAJD;;AAMAxoB,SAAO4oB,SAAP,GAAmB,UAAC7kB,MAAD,EAASikB,SAAT,EAAuC;AAAA,QAAnBC,QAAmB,uEAAV,KAAU;;;AAExDlmB,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,sCAFA;AAGbqE,uBAAiB,KAHJ;AAIbpE,cAAQ;AACNmoB,mBAAWv/B,QAAQ0C,IAAR,CAAa68B,SAAb,CADL;AAENC,kBAAUA,QAFJ;AAGNC,qBAAaS;AAHP,OAJK;AASb5oB,kBAAY;AATC,KAAf,EAUGxV,IAVH,CAWE,UAACqF,IAAD,EAAU;AACR4P,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BjS,KAAKzG,OAAnC,CAAd;AACAO,QAAE0H,OAAF,CAAU4O,OAAOjJ,MAAjB,EAAyB,UAACG,CAAD,EAAG+H,CAAH,EAAO;AAC9B,YAAG/H,EAAEtM,KAAF,KAAYgF,KAAKnF,IAAL,CAAUG,KAAzB,EAAgCoV,OAAOjJ,MAAP,CAAckI,CAAd,IAAmBrP,KAAKnF,IAAxB;AACjC,OAFD;;AAIA,UAAGw9B,QAAH,EAAa;AACXjoB,eAAOjJ,MAAP,CAAcpE,IAAd,CAAmB/C,KAAKnF,IAAxB;AACAuV,eAAOjJ,MAAP,GAAgBA,SAASrN,EAAE0c,MAAF,CAASpG,OAAOjJ,MAAhB,EAAwB,MAAxB,CAAzB;AACD;AACF,KArBH,EAsBE,UAAC/L,GAAD,EAAS;AACPwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,iCAA9B,CAAd;AACD,KAxBH;AA2BD,GA7BD;AA+BD,CAvEyD,CAA1D;;;ACAArZ,IAAIuX,UAAJ,CAAe,gCAAf,EAAiD,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,WAAtB,EAAkC,UAAlC,EAA8C,UAA9C,EAA0D,SAA1D,EAAqE,YAArE,EAAmF,UAACnW,EAAD,EAAKF,CAAL,EAAQkX,KAAR,EAAemB,SAAf,EAA0BnU,KAA1B,EAAiCi7B,QAAjC,EAA2CC,OAA3C,EAAoDC,UAApD,EAAmE;;AAErM;AACAnoB,QAAMnN,IAAN,GAAao1B,QAAb;AACAjoB,QAAMkoB,OAAN,GAAgBA,OAAhB;AACAloB,QAAMmoB,UAAN,GAAmBA,UAAnB;;AAEA;AACA,MAAGD,OAAH,EAAY;AACVloB,UAAMnN,IAAN,GAAa;AACX1D,gBAAU,EADC;AAEXzD,YAAM,OAFK;AAGX2a,iBAAW,EAHA;AAIXC,gBAAU;AAJC,KAAb;AAMD;;AAED;AACAtG,QAAMooB,KAAN,GAAc;AACZC,aAAS,EADG;AAEZC,oBAAiB;AAFL,GAAd;;AAKAtoB,QAAM0B,MAAN,GAAe,YAAM;AACnBP,cAAUO,MAAV,CAAiB,EAAC9S,QAAQ,KAAT,EAAgBrG,SAAS,6BAAzB,EAAjB;AACD,GAFD;;AAIA;AACAyX,QAAM3V,MAAN,GAAe,UAAC0X,CAAD,EAAO;AACpB;AACA,QAAGA,EAAE2T,QAAL,EAAe;AACb3T,QAAE4T,SAAF;AACA9tB,cAAQ2I,OAAR,CAAgBuR,EAAE6T,MAAlB,EAA0B,UAACtkB,KAAD,EAAW;AACnCzJ,gBAAQ2I,OAAR,CAAgBc,KAAhB,EAAuB,UAACukB,UAAD,EAAgB;AACrCA,qBAAWC,WAAX;AACD,SAFD;AAGD,OAJD;AAKA;AACD;;AAED;AACA,QAAG9V,MAAMnN,IAAN,CAAWnH,IAAX,KAAoB,OAApB,IAA+BsU,MAAMooB,KAAN,CAAYC,OAAZ,CAAoB9xB,MAApB,GAA6B,CAA/D,EAAkE;;AAEhE;AACA,UAAGyJ,MAAMooB,KAAN,CAAYC,OAAZ,KAAwBroB,MAAMooB,KAAN,CAAYE,cAAvC,EAAuD;AACrDvmB,UAAEwmB,cAAF,CAAiB3S,MAAjB,CAAwB4S,OAAxB,GAAkC,IAAlC;AACAzmB,UAAEgiB,MAAF,GAAW,KAAX;AACAhiB,UAAE2T,QAAF,GAAa,IAAb;AACA3T,UAAEwmB,cAAF,CAAiB7S,QAAjB,GAA4B,IAA5B;AACA3T,UAAEwmB,cAAF,CAAiBxE,MAAjB,GAA0B,KAA1B;AACA;AACD;;AAED/jB,YAAMnN,IAAN,CAAWzD,QAAX,GAAsB4Q,MAAMooB,KAAN,CAAYC,OAAlC;AACD,KAbD,MAaO;AACLroB,YAAMnN,IAAN,CAAWzD,QAAX,GAAsB,EAAtB;AACD;;AAED;AACA,QAAG,CAAC84B,OAAJ,EAAa;AACXl7B,YAAM3C,MAAN,CAAa2V,MAAMnN,IAAnB,EAAyBlJ,IAAzB,CACE,UAACkJ,IAAD,EAAU;AACR;AACAsO,kBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,IAAT,EAAe/E,MAAMgJ,IAArB,EAA2BtK,SAAS,wBAApC,EAAf;AACD,OAJH,EAKE,UAAC6B,GAAD,EAAS;AACP+W,kBAAUO,MAAV,CAAiB,EAAC9S,QAAQ,KAAT,EAAgBrG,SAAS,6BAAzB,EAAjB;AACD,OAPH;AASD;AACD;AACA,QAAG2/B,OAAH,EAAY;AACVl7B,YAAMK,MAAN,CAAa2S,MAAMnN,IAAnB,EAAyBlJ,IAAzB,CACE,UAACkJ,IAAD,EAAU;AACR;AACAsO,kBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,IAAT,EAAe/E,MAAMgJ,IAArB,EAA2BtK,SAAS,sBAApC,EAA4DkgC,SAAS,IAArE,EAAf;AACD,OAJH,EAKE,UAACr+B,GAAD,EAAS;AACP+W,kBAAUO,MAAV,CAAiB,EAAC9S,QAAQ,KAAT,EAAgBrG,SAAS,6BAAzB,EAAjB;AACD,OAPH;AASD;AAEF,GAvDD;AAyDD,CArFgD,CAAjD;;;ACAAX,IAAIuX,UAAJ,CAAe,2CAAf,EAA4D,CAAC,GAAD,EAAM,QAAN,EAAgB,YAAhB,EAA8B,QAA9B,EAAwC,WAAxC,EAAqD,UAArD,EAAiE,aAAjE,EAAgF,UAAhF,EAA4F,SAA5F,EAAuG,OAAvG,EAAgH,UAACrW,CAAD,EAAIsW,MAAJ,EAAY0nB,UAAZ,EAAwB1sB,MAAxB,EAAgC+G,SAAhC,EAA2CvC,QAA3C,EAAqDzR,QAArD,EAA+DH,KAA/D,EAAsEoJ,OAAtE,EAA+EkS,KAA/E,EAAyF;;AAEnQlJ,SAAOkJ,KAAP,GAAeA,KAAf;;AAEA,MAAIogB,aAAa,SAAbA,UAAa,CAACvlB,MAAD,EAAStQ,IAAT,EAAkB;;AAEjC,QAAIuT,UAAUjF,UAAUiF,OAAV,GACXrX,KADW,CACL,qCAAsC8D,KAAKwT,SAA3C,GAAuD,GAAvD,GAA6DxT,KAAKyT,QAAlE,GAA6E,GADxE,EAEXuhB,WAFW,CAEC,6CAA6Ch1B,KAAKwT,SAAlD,GAA8D,GAA9D,GAAoExT,KAAKyT,QAAzE,GAAoF,oHAFrF,EAGXC,SAHW,CAGD,cAHC,EAIXnD,WAJW,CAICD,MAJD,EAKXqD,EALW,CAKR,aALQ,EAMX9E,MANW,CAMJ,QANI,CAAd;;AAQAP,cAAUpC,IAAV,CAAeqH,OAAf,EAAwBzc,IAAxB,CACE,YAAM;AACJ,UAAIg/B,WAAW9gC,QAAQ0C,IAAR,CAAasI,IAAb,CAAf;AACA;AACA7F,YAAM+D,MAAN,CAAa8B,IAAb,EAAmBlJ,IAAnB,CACE,UAACk9B,GAAD,EAAS;AACPznB,eAAOkJ,KAAP,GAAexf,EAAEL,MAAF,CAAS2W,OAAOkJ,KAAhB,EAAuB,UAAC9L,CAAD,EAAO;AAAC,iBAAQA,EAAExS,KAAF,KAAY2+B,SAAS3+B,KAA7B;AAAoC,SAAnE,CAAf;AACA4U,iBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,2BAAhB,CAAd;AACD,OAJH,EAKE,UAAC5W,GAAD,EAAS;AACPwU,iBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,0DAAhB,CAAd;AACD,OAPH;AASD,KAbH;AAgBD,GA1BD;;AA4BA;AACA,MAAI+mB,aAAa,SAAbA,UAAa,GAAM;;AAErB5mB,cAAU5B,IAAV,GAFqB,CAEH;AAClB,WAAOmpB,UAAP;AACD,GAJD;;AAMAtpB,SAAOwpB,QAAP,GAAkB,UAACzlB,MAAD,EAAS8kB,QAAT,EAAqC;AAAA,QAAlBC,OAAkB,uEAAV,KAAU;;AACrD/mB,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,qCAFA;AAGbqE,uBAAiB,KAHJ;AAIbpE,cAAQ;AACNgpB,kBAAUpgC,QAAQ0C,IAAR,CAAa09B,QAAb,CADJ;AAENC,iBAASA,OAFH;AAGNC,oBAAYJ;AAHN,OAJK;AASb5oB,kBAAY;AATC,KAAf,EAUGxV,IAVH,CAWE,UAACqF,IAAD,EAAU;AACR4P,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BjS,KAAKzG,OAAnC,CAAd;AACAO,QAAE0H,OAAF,CAAU4O,OAAOkJ,KAAjB,EAAwB,UAAC9L,CAAD,EAAG6B,CAAH,EAAO;AAC7B,YAAG7B,EAAExS,KAAF,IAAWgF,KAAKnF,IAAL,CAAUG,KAAxB,EAA+BoV,OAAOkJ,KAAP,CAAajK,CAAb,IAAkBrP,KAAKnF,IAAvB;AAChC,OAFD;;AAIA,UAAGq+B,OAAH,EAAY;AACV9oB,eAAOkJ,KAAP,CAAavW,IAAb,CAAkB/C,KAAKnF,IAAvB;AACAuV,eAAOkJ,KAAP,GAAexf,EAAE0c,MAAF,CAASpG,OAAOkJ,KAAhB,EAAuB,UAAvB,CAAf;AACD;AACF,KArBH,EAsBE,UAACle,GAAD,EAAS;AACPwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,gCAA9B,CAAd;AACD,KAxBH;AA2BD,GA5BD;AA8BD,CArE2D,CAA5D;;;ACAArZ,IAAIuX,UAAJ,CAAe,kCAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,YAAhB,EAA8B,QAA9B,EAAwC,WAAxC,EAAqD,UAArD,EAAiE,aAAjE,EAAgF,UAAhF,EAA4F,SAA5F,EAAuG,QAAvG,EAAiH,OAAjH,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAY0nB,UAAZ,EAAwB1sB,MAAxB,EAAgC+G,SAAhC,EAA2CvC,QAA3C,EAAqDzR,QAArD,EAA+DH,KAA/D,EAAsEoJ,OAAtE,EAA+ED,MAA/E,EAAuFmS,KAAvF,EAAiG;;AAE/F,MAAIyf,aAAa,SAAbA,UAAa,GAAM;AAAE,WAAO,YAAM,CAAE,CAAf;AAAgB,GAAzC;;AAEA3oB,SAAOjJ,MAAP,GAAgBA,MAAhB;;AAEAiJ,SAAOwpB,QAAP,GAAkB,UAACzlB,MAAD,EAAS8kB,QAAT,EAAqC;AAAA,QAAlBC,OAAkB,uEAAV,KAAU;;AACrD/mB,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,qCAFA;AAGbqE,uBAAiB,KAHJ;AAIbpE,cAAQ;AACNgpB,kBAAUpgC,QAAQ0C,IAAR,CAAa09B,QAAb,CADJ;AAENC,iBAASA,OAFH;AAGNC,oBAAYJ;AAHN,OAJK;AASb5oB,kBAAY;AATC,KAAf,EAUGxV,IAVH,CAWE,UAACqF,IAAD,EAAU;AACR4P,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8BjS,KAAKzG,OAAnC,CAAd;AACAO,QAAE0H,OAAF,CAAU4O,OAAOkJ,KAAjB,EAAwB,UAAC9L,CAAD,EAAG6B,CAAH,EAAO;AAC7B,YAAG7B,EAAExS,KAAF,IAAWgF,KAAKnF,IAAL,CAAUG,KAAxB,EAA+BoV,OAAOkJ,KAAP,CAAajK,CAAb,IAAkBrP,KAAKnF,IAAvB;AAChC,OAFD;;AAIA,UAAGq+B,OAAH,EAAY;AACV5f,cAAMvW,IAAN,CAAW/C,KAAKnF,IAAhB;AACD;AACF,KApBH,EAqBE,UAACO,GAAD,EAAS;AACPwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,gCAA9B,CAAd;AACD,KAvBH;AA0BD,GA3BD;;AA6BA7B,SAAO4oB,SAAP,GAAmB,UAAC7kB,MAAD,EAASikB,SAAT,EAAuC;AAAA,QAAnBC,QAAmB,uEAAV,KAAU;;;AAExDlmB,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,sCAFA;AAGbqE,uBAAiB,KAHJ;AAIbpE,cAAQ;AACNmoB,mBAAWv/B,QAAQ0C,IAAR,CAAa68B,SAAb,CADL;AAENC,kBAAUA,QAFJ;AAGNC,qBAAaS;AAHP,OAJK;AASb5oB,kBAAY;AATC,KAAf,EAUGxV,IAVH,CAWE,UAACqF,IAAD,EAAU;AACR4P,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,0BAA9B,CAAd;;AAEA,UAAGomB,QAAH,EAAa;AACXjoB,eAAOjJ,MAAP,CAAcpE,IAAd,CAAmB/C,KAAKnF,IAAxB;AACAuV,eAAOjJ,MAAP,GAAgBrN,EAAE0c,MAAF,CAASpG,OAAOjJ,MAAhB,EAAwB,MAAxB,CAAhB;AACD;AACF,KAlBH,EAmBE,UAAC/L,GAAD,EAAS;AACPwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,iCAA9B,CAAd;AACD,KArBH;AAwBD,GA1BD;AA4BD,CAhED,CADA;;;;;ACAArZ,IAAIuX,UAAJ,CAAe,uCAAf,EACA,CAAC,QAAD,EAAW,GAAX,EAAgB,IAAhB,EAAsB,UAAtB,EAAkC,aAAlC,EAAiD,cAAjD,EAAiE,SAAjE,EAA4E,WAA5E,EAAyF,UAAzF,EACA,UAACC,MAAD,EAAStW,CAAT,EAAYE,EAAZ,EAAgBgI,KAAhB,EAAuBjG,QAAvB,EAAiC1B,SAAjC,EAA4CwI,IAA5C,EAAkDsP,SAAlD,EAA6DvC,QAA7D,EAA0E;;AAExEQ,SAAOqH,MAAP,GAAgB,CACd,EAAC1X,OAAO,SAAR,EAAmBvB,aAAa,6BAAhC,EAA+DwE,IAAI,SAAnE,EAA8E62B,SAAS,CAAvF,EADc,EAEd,EAAC95B,OAAO,SAAR,EAAmBvB,aAAa,iCAAhC,EAAmEwE,IAAI,SAAvE,EAAkF62B,SAAS,CAA3F,EAFc,CAAhB;AAIA,MAAI7F,cAAc5jB,OAAO4jB,WAAP,GAAqB,CAAvC;;AAEA5jB,SAAO1H,OAAP,GAAiB,EAAEzF,OAAO,IAAT,EAAe62B,iBAAiB,WAAhC,EAA6ChsB,UAAU,IAAvD,EAA6DlS,aAAa,KAA1E,EAAiF+G,WAAW,EAA5F,EAAjB;AACAyN,SAAO/L,MAAP,GAAgB,EAAhB;AACA+L,SAAO2pB,cAAP,GAAwB,KAAxB;AACA3pB,SAAO4pB,YAAP,GAAsB,KAAtB;AACA5pB,SAAO6pB,cAAP,GAAwB,IAAxB;;AAEA7pB,SAAO8pB,cAAP,GAAwB,KAAxB;AACA9pB,SAAO+pB,eAAP,GAAyB,EAAzB;AACA/pB,SAAOgqB,iBAAP,GAA2B,KAA3B;AACAhqB,SAAOiqB,UAAP,GAAoB,CAAC,CAAD,CAApB;;AAEAjqB,SAAOkqB,YAAP,GAAsB,YAAM;AAAElqB,WAAOiqB,UAAP,CAAkBt3B,IAAlB,CAAuBqN,OAAOiqB,UAAP,CAAkB9yB,MAAzC,EAAkDjL,QAAQC,GAAR,CAAY,SAAZ,EAAuB6T,OAAOiqB,UAA9B;AAA4C,GAA5H;AACAjqB,SAAOmqB,eAAP,GAAyB,UAAClrB,CAAD,EAAO;AAAEe,WAAOiqB,UAAP,CAAkB9hB,MAAlB,CAAyBlJ,CAAzB,EAA2B,CAA3B;AAAgC,GAAlE;;AAEAe,SAAOzP,MAAP,GAAgB;AACd0zB,WAAO,KADO;AAEdC,WAAO,IAFO;AAGdC,cAAU;AAHI,GAAhB;;AAMA,MAAIiG,mBAAmB,CACrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,QAA/B,EADqB,EAErB,EAAC,QAAQ,KAAT,EAAgB,eAAe,wBAA/B,EAFqB,EAGrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,kBAA/B,EAHqB,EAIrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,eAA/B,EAJqB,EAKrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,eAA/B,EALqB,EAMrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,eAA/B,EANqB,EAOrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,eAA/B,EAPqB,EAQrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,cAA/B,EARqB,EASrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,YAA/B,EATqB,EAUrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,UAA/B,EAVqB,EAWrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,iBAA/B,EAXqB,EAYrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,SAA/B,EAZqB,EAarB,EAAC,QAAQ,KAAT,EAAgB,eAAe,MAA/B,EAbqB,EAcrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,UAA/B,EAdqB,CAAvB;;AAiBApqB,SAAOe,MAAP,CAAc,kBAAd,EAAkC,UAAC2F,MAAD,EAASC,MAAT,EAAoB;;AAEpD,QAAGD,WAAW,KAAX,IAAoBC,WAAW,IAAlC,EAAwC;AACtC3G,aAAO1H,OAAP,CAAe+xB,eAAf,GAAiC,MAAjC;AACD,KAFD,MAEO;AACLrqB,aAAO1H,OAAP,CAAe+xB,eAAf,GAAiC,IAAjC;AACD;AACF,GAPD;;AASA;AACArqB,SAAOsC,MAAP,GAAgB,YAAM;AAAEP,cAAUO,MAAV;AAAqB,GAA7C;;AAEA;AACAtC,SAAOsqB,WAAP,GAAqB,YAAM;AAAEtqB,WAAOqoB,WAAP,GAAqBroB,OAAOqoB,WAAP,CAAmBiC,WAAnB,EAArB;AAAwD,GAArF;;AAEA;AACAtqB,SAAOuqB,UAAP,GAAoB,UAACtgB,UAAD,EAAgB;;AAElC,WAAOrgB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAG4f,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5B1E,WAAKvI,GAAL,CAAS,EAACgD,OAAO+c,UAAR,EAAoB/f,KAAK,IAAzB,EAAT,EAAyCK,IAAzC,CACE,UAACqF,IAAD,EAAU;AAAExF,gBAAQwF,IAAR;AAAgB,OAD9B,EAEE,UAAC5E,GAAD,EAAS;AAAEkB,gBAAQC,GAAR,CAAYnB,GAAZ,EAAkBX;AAAW,OAF1C;AAID,KAPM,CAAP;AAQD,GAVD;;AAYA;AACA2V,SAAOwqB,aAAP,GAAuB,UAACvgB,UAAD,EAAgB;AACrC,WAAOrgB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAG4f,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5BvF,YAAMhB,eAAN,CAAsBqZ,UAAtB,EAAkC1f,IAAlC,CACE,UAACqF,IAAD,EAAU;AAAExF,gBAAQwF,KAAKoI,OAAb;AAAwB,OADtC,EAEE,UAAChN,GAAD,EAAS;AAAEkB,gBAAQC,GAAR,CAAYnB,GAAZ,EAAkBX;AAAW,OAF1C;AAID,KAPM,CAAP;AAQD,GATD;;AAWA;AACA2V,SAAOyqB,YAAP,GAAsB,UAACxgB,UAAD,EAAgB;AACpC,WAAOvgB,EAAEL,MAAF,CAAS+gC,gBAAT,EAA2B,UAAC3+B,CAAD,EAAO;AACvC,UAAGA,EAAEi/B,IAAF,CAAOnhC,OAAP,CAAe0gB,WAAWqgB,WAAX,EAAf,IAA2C,CAAC,CAA/C,EAAkD,OAAO7+B,CAAP;AACnD,KAFM,CAAP;AAGD,GAJD;;AAMA;AACAuU,SAAO2qB,WAAP,GAAqB,YAAM;;AAEzB;AACA,QAAG3qB,OAAO6pB,cAAP,KAA0B7pB,OAAOqoB,WAAjC,IAAgDroB,OAAOqoB,WAAP,CAAmBlxB,MAAnB,KAA8B,CAAjF,EAAoF,OAH3D,CAGmE;;AAE5FjL,YAAQC,GAAR,CAAY,WAAZ,EAAyB6T,OAAOqoB,WAAhC;;AAEAroB,WAAO2pB,cAAP,GAAwB,IAAxB;AACA3pB,WAAO4pB,YAAP,GAAsB,IAAtB;AACA5pB,WAAO4qB,WAAP,GAAqB,EAArB;;AAEA;AACAh5B,UAAMO,MAAN,CAAa6N,OAAOqoB,WAApB,EACG99B,IADH,CACQ,UAACC,MAAD,EAAY;AAChB,UAAIqgC,UAAU,EAAd;;AAEAnhC,QAAE0H,OAAF,CAAU5G,OAAOwN,OAAjB,EAA0B,UAACoN,CAAD,EAAO;AAC/BylB,gBAAQzlB,EAAE0lB,oBAAV,IAAkC1lB,CAAlC;AACD,OAFD;;AAIApF,aAAO2pB,cAAP,GAAwB,KAAxB;AACA3pB,aAAO4qB,WAAP,GAAqBlhC,EAAE8Z,MAAF,CAASqnB,OAAT,CAArB;AACA7qB,aAAO6pB,cAAP,GAAwB7pB,OAAOqoB,WAA/B;AACD,KAXH,EAYGt9B,KAZH,CAYS,UAACC,GAAD,EAAS;AACdkB,cAAQC,GAAR,CAAY,8BAAZ;AACD,KAdH;AAeD,GA3BD;;AA6BA;AACA6T,SAAOokB,SAAP,GAAmB,YAAM;AACvBpkB,WAAO4jB,WAAP;AACD,GAFD;;AAIA;AACA5jB,SAAOqkB,SAAP,GAAmB,YAAM;AACvB,QAAIC,aAAJ;AACA;AACA,YAAQtkB,OAAO4jB,WAAf;AACE,WAAK,CAAL;AACEU,eAAOtkB,OAAOwkB,aAAd;AACA;AACF,WAAK,CAAL;AACEF,eAAOtkB,OAAO+qB,QAAd;AACA;AANJ;;AASAzG,SAAKI,aAAL;AACA,QAAIJ,KAAKK,MAAT,EAAiB;AACf3kB,aAAO4jB,WAAP;AACD;AACF,GAhBD;;AAkBA;AACA5jB,SAAOgrB,YAAP,GAAsB,YAAM;;AAE1BhrB,WAAO8pB,cAAP,GAAwB,IAAxB;AACA9pB,WAAOgqB,iBAAP,GAA2B,IAA3B;;AAEA,QAAIiB,mBAAmB,EAAvB;AACA,QAAIl5B,OAAO,EAAX;;AAEA,QAAIm5B,QAASlrB,OAAO1H,OAAP,CAAezF,KAAhB,GAAyBmN,OAAO1H,OAAP,CAAezF,KAAf,CAAqBA,KAA9C,GAAsDmN,OAAOqoB,WAAzE;;AAEAz2B,UAAME,MAAN,CAAa,CAACo5B,KAAD,CAAb,EACG3gC,IADH,CACQ,UAACC,MAAD,EAAY;AAChB,aAAOZ,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7BX,UAAE0H,OAAF,CAAU5G,OAAOwN,OAAjB,EAA0B,UAAClG,MAAD,EAAY;;AAEpC,cAAIo5B,QAAQp5B,OAAOq5B,oBAAnB;AACA,cAAIC,YAAYt5B,OAAOu5B,sBAAP,CAA8Bte,SAA9B,CAAwC,CAAxC,EAA0C,EAA1C,CAAhB;;AAEA,cAAI3a,UAAU;AACZzD,kBAAMmD,OAAOM,OADD;AAEZ9F,kBAAOwF,OAAOw5B,cAAP,KAA0B,QAA3B,GAAuC,QAAvC,GAAkD,IAF5C;AAGZn5B,oBAAQL,OAAOg5B,oBAHH;AAIZr+B,qBAASqF,OAAOrF,OAJJ;AAKZ4+B,oCAAwBv5B,OAAOu5B;AALnB,WAAd;;AAQA,cAAGv5B,OAAOw5B,cAAP,KAA0B,UAA1B,IAAwCL,iBAAiB1hC,OAAjB,CAAyBuI,OAAOM,OAAhC,MAA6C,CAAC,CAAzF,EAA4F;AAC1F64B,6BAAiBt4B,IAAjB,CAAsBb,OAAOM,OAA7B;AACD;;AAED;AACA,cAAG,CAACL,KAAKm5B,KAAL,CAAJ,EAAiBn5B,KAAKm5B,KAAL,IAAc,EAAd;;AAEjB;AACA,cAAG,CAACn5B,KAAKm5B,KAAL,EAAYE,SAAZ,CAAJ,EAA4Br5B,KAAKm5B,KAAL,EAAYE,SAAZ,IAAyB,EAAzB;;AAE5B;AACA,cAAG,CAAC1hC,EAAE6U,IAAF,CAAOxM,KAAKm5B,KAAL,EAAYE,SAAZ,CAAP,EAA+B,EAACz8B,MAAMyD,QAAQzD,IAAf,EAA/B,CAAJ,EAA0D;AACxDoD,iBAAKm5B,KAAL,EAAYE,SAAZ,EAAuBz4B,IAAvB,CAA4BP,OAA5B;AACD;AAEF,SA5BD;AA6BAhI,gBAAQ6gC,gBAAR;AACD,OA/BM,CAAP;AAgCD,KAlCH,EAmCG1gC,IAnCH,CAmCQqH,MAAMQ,OAnCd,EAoCG7H,IApCH,CAoCQ,UAACC,MAAD,EAAY;AAChB,aAAOZ,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B;AACAX,UAAE0H,OAAF,CAAU5G,OAAOwN,OAAjB,EAA0B,UAAC5F,OAAD,EAAa;;AAErC;AACA,cAAI0G,MAAM/G,KAAKK,QAAQm5B,SAAR,CAAkBxsB,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAL,CAAV;;AAEA;AACArV,YAAE0H,OAAF,CAAU0H,GAAV,EAAe,UAACvG,SAAD,EAAYi5B,WAAZ,EAA4B;;AAEzC;AACA,gBAAIvsB,IAAIvV,EAAEy8B,OAAF,CAAU5zB,SAAV,EAAqB,EAAC5D,MAAMyD,QAAQzD,IAAf,EAArB,CAAR;;AAEA;AACA,gBAAGsQ,CAAH,EAAM;AACJ;AACA,kBAAG7M,QAAQq5B,gBAAR,KAA6B,KAAhC,EAAuC15B,KAAKK,QAAQm5B,SAAR,CAAkBxsB,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAL,EAAsCysB,WAAtC,EAAmDvsB,CAAnD,EAAsD3S,IAAtD,GAA6D,QAA7D;AACvC,kBAAG8F,QAAQq5B,gBAAR,CAAyBliC,OAAzB,CAAiC,KAAjC,IAA0C,CAAC,CAA9C,EAAiDwI,KAAKK,QAAQm5B,SAAR,CAAkBxsB,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAL,EAAsCysB,WAAtC,EAAmDvsB,CAAnD,EAAsD3S,IAAtD,GAA6D,eAA7D;AAClD;AAEF,WAZD;AAcD,SApBD;;AAsBAlC;AAED,OA3BM,CAAP;AA4BD,KAjEH,EAkEGG,IAlEH,CAkEQ,YAAM;;AAEV;AACA,UAAG,CAACwH,KAAKm5B,KAAL,CAAJ,EAAiB;AACjB,UAAIQ,WAAW35B,KAAKm5B,KAAL,CAAf;;AAEA;AACAxhC,QAAE0H,OAAF,CAAUs6B,QAAV,EAAoB,UAACC,IAAD,EAAO1Z,IAAP,EAAgB;;AAElC,YAAI2Z,SAASliC,EAAE6U,IAAF,CAAOotB,IAAP,EAAa,EAACr/B,MAAM,QAAP,EAAb,CAAb;AACA,YAAIu/B,SAASniC,EAAE6U,IAAF,CAAOotB,IAAP,EAAa,EAACr/B,MAAM,QAAP,EAAb,CAAb;AACA,YAAIw/B,gBAAgBpiC,EAAE6U,IAAF,CAAOotB,IAAP,EAAa,EAACr/B,MAAM,eAAP,EAAb,CAApB;;AAEA0T,eAAO+pB,eAAP,CAAuBp3B,IAAvB,CAA4B,EAACo5B,iBAAiB9Z,IAAlB,EAAwB2Z,QAAQA,MAAhC,EAAwCC,QAAQA,MAAhD,EAAwDC,eAAeA,aAAvE,EAA5B;AAED,OARD;;AAUA9rB,aAAOgqB,iBAAP,GAA2B,KAA3B;AAED,KArFH,EAsFGj/B,KAtFH,CAsFS,UAACC,GAAD,EAAS;AACdkB,cAAQC,GAAR,CAAY,gCAAZ,EAA8CnB,GAA9C;;AAEAgV,aAAOgqB,iBAAP,GAA2B,KAA3B;AACD,KA1FH;AA4FD,GAtGD;;AAwGA;;;;;AAKAhqB,SAAOgsB,gBAAP,GAA0B,UAACrS,UAAD,EAAgB;;AAExCztB,YAAQC,GAAR,CAAY,YAAZ,EAA0BwtB,UAA1B;;AAEA3Z,WAAO1H,OAAP,CAAe/F,SAAf,CAAyBq5B,MAAzB,GAAkCjS,WAAWiS,MAAX,CAAkBj9B,IAApD;AACAqR,WAAO1H,OAAP,CAAe/F,SAAf,CAAyBs5B,MAAzB,GAAkClS,WAAWkS,MAAX,CAAkBl9B,IAApD;AACAqR,WAAO1H,OAAP,CAAe/F,SAAf,CAAyBu5B,aAAzB,GAAyCnS,WAAWmS,aAAX,CAAyBn9B,IAAlE;AACD,GAPD;;AASA;AACAqR,SAAO4kB,MAAP,GAAgB,UAACjiB,CAAD,EAAO;;AAErB3C,WAAOisB,OAAP,GAAiB,IAAjB;;AAEA;AACA,QAAI7gC,WAAW;AACbyH,aAAQmN,OAAO1H,OAAP,CAAezF,KAAhB,GAAyBmN,OAAO1H,OAAP,CAAezF,KAAf,CAAqBA,KAA9C,GAAsDmN,OAAOqoB,WADvD;AAEbn6B,eAAS,KAFI;AAGbw7B,uBAAiB1pB,OAAO1H,OAAP,CAAeoxB,eAHnB;AAIbj9B,eAAW,QAAOuT,OAAO1H,OAAP,CAAe7L,OAAtB,MAAkC,QAAnC,GAA+CuT,OAAO1H,OAAP,CAAe7L,OAAf,CAAuBgV,IAAtE,GAA6EzB,OAAO1H,OAAP,CAAe7L,OAJzF;AAKby/B,uBAAkB,QAAOlsB,OAAO1H,OAAP,CAAe4zB,eAAtB,MAA0C,QAA3C,GAAuDlsB,OAAO1H,OAAP,CAAe4zB,eAAf,CAA+BxB,IAAtF,GAA6F1qB,OAAO1H,OAAP,CAAe4zB,eALhH;AAMbC,oBAAcnsB,OAAO1H,OAAP,CAAe6zB,YANhB;AAObX,mBAAaxrB,OAAO1H,OAAP,CAAekzB,WAPf;AAQb9tB,gBAAUsC,OAAO1H,OAAP,CAAeoF,QARZ;AASb0iB,aAAOpgB,OAAO1H,OAAP,CAAe8nB,KATT;AAUbgM,oBAAcpsB,OAAO1H,OAAP,CAAe8zB,YAVhB;AAWbC,iBAAW,EAXE;AAYb95B,iBAAW;AAZE,KAAf;;AAeA7I,MAAE0H,OAAF,CAAU4O,OAAO1H,OAAP,CAAe+zB,SAAzB,EAAoC,UAAC3F,CAAD,EAAO;AAAEt7B,eAASihC,SAAT,CAAmB15B,IAAnB,CAAwB+zB,CAAxB;AAA4B,KAAzE;;AAEA;AACA,QAAG,CAAC1mB,OAAO1H,OAAP,CAAeoF,QAAnB,EAA6B;AAC3BtS,eAASmH,SAAT,GAAqByN,OAAO1H,OAAP,CAAe/F,SAApC;AACAnH,eAASi/B,eAAT,GAA2BrqB,OAAO1H,OAAP,CAAe+xB,eAA1C;AACD;;AAEDpgC,cAAUY,GAAV,CAAcO,QAAd,EACGb,IADH,CACQ,UAACC,MAAD,EAAY;AAChB;;;;;;;AAOAuX,gBAAU5B,IAAV,CAAe,EAAC3V,QAAQA,MAAT,EAAf;AACD,KAVH,EAWGO,KAXH,CAWS,UAACC,GAAD,EAAS;AACdwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,yDAA9B,CAAd;AACD,KAbH;AAeD,GA3CD;AA6CD,CAxTD,CADA;;;;;ACAArZ,IAAIuX,UAAJ,CAAe,wCAAf,EACA,CAAC,QAAD,EAAW,GAAX,EAAgB,IAAhB,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,UAA/C,EAA2D,aAA3D,EAA0E,cAA1E,EAA0F,SAA1F,EAAqG,UAArG,EACA,UAACC,MAAD,EAAStW,CAAT,EAAYE,EAAZ,EAAgBmY,SAAhB,EAA2BvC,QAA3B,EAAqC5N,KAArC,EAA4CjG,QAA5C,EAAsD1B,SAAtD,EAAiEwI,IAAjE,EAAuErH,QAAvE,EAAoF;;AAElF4U,SAAO1H,OAAP,GAAiBlN,QAAjB;;AAEAc,UAAQC,GAAR,CAAY,UAAZ,EAAwBf,QAAxB;;AAEA4U,SAAOzP,MAAP,GAAgB;AACd0zB,WAAO,KADO;AAEdC,WAAO,IAFO;AAGdC,cAAU;AAHI,GAAhB;;AAMA,MAAIiG,mBAAmB,CACrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,QAA/B,EADqB,EAErB,EAAC,QAAQ,KAAT,EAAgB,eAAe,wBAA/B,EAFqB,EAGrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,kBAA/B,EAHqB,EAIrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,eAA/B,EAJqB,EAKrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,eAA/B,EALqB,EAMrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,eAA/B,EANqB,EAOrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,eAA/B,EAPqB,EAQrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,cAA/B,EARqB,EASrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,YAA/B,EATqB,EAUrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,UAA/B,EAVqB,EAWrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,iBAA/B,EAXqB,EAYrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,SAA/B,EAZqB,EAarB,EAAC,QAAQ,KAAT,EAAgB,eAAe,MAA/B,EAbqB,EAcrB,EAAC,QAAQ,KAAT,EAAgB,eAAe,UAA/B,EAdqB,CAAvB;;AAiBA;AACApqB,SAAOsC,MAAP,GAAgB,YAAM;AAAEP,cAAUO,MAAV;AAAqB,GAA7C;;AAEA;AACAtC,SAAOwqB,aAAP,GAAuB,UAACvgB,UAAD,EAAgB;AACrC,WAAOrgB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAG4f,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5BvF,YAAMhB,eAAN,CAAsBqZ,UAAtB,EAAkC1f,IAAlC,CACE,UAACqF,IAAD,EAAU;AAAExF,gBAAQwF,KAAKoI,OAAb;AAAwB,OADtC,EAEE,UAAChN,GAAD,EAAS;AAAEkB,gBAAQC,GAAR,CAAYnB,GAAZ,EAAkBX;AAAW,OAF1C;AAID,KAPM,CAAP;AAQD,GATD;;AAWA;AACA2V,SAAOyqB,YAAP,GAAsB,UAACxgB,UAAD,EAAgB;AACpC,WAAOvgB,EAAEL,MAAF,CAAS+gC,gBAAT,EAA2B,UAAC3+B,CAAD,EAAO;AACvC,UAAGA,EAAEi/B,IAAF,CAAOnhC,OAAP,CAAe0gB,WAAWqgB,WAAX,EAAf,IAA2C,CAAC,CAA/C,EAAkD,OAAO7+B,CAAP;AACnD,KAFM,CAAP;AAGD,GAJD;;AAMA;;;;;AAKAuU,SAAOgsB,gBAAP,GAA0B,UAACrS,UAAD,EAAgB;;AAExCztB,YAAQC,GAAR,CAAY,YAAZ,EAA0BwtB,UAA1B;;AAEA3Z,WAAO1H,OAAP,CAAe/F,SAAf,CAAyBq5B,MAAzB,GAAkCjS,WAAWiS,MAAX,CAAkBj9B,IAApD;AACAqR,WAAO1H,OAAP,CAAe/F,SAAf,CAAyBs5B,MAAzB,GAAkClS,WAAWkS,MAAX,CAAkBl9B,IAApD;AACAqR,WAAO1H,OAAP,CAAe/F,SAAf,CAAyBu5B,aAAzB,GAAyCnS,WAAWmS,aAAX,CAAyBn9B,IAAlE;AACD,GAPD;;AASA;AACAqR,SAAOQ,IAAP,GAAc,UAACmC,CAAD,EAAO;;AAEnB;AACAvX,aAASyD,QAAT,GAAoBmR,OAAO1H,OAAP,CAAezJ,QAAnC;AACAzD,aAASs+B,eAAT,GAA2B1pB,OAAO1H,OAAP,CAAeoxB,eAA1C;AACAt+B,aAASi/B,eAAT,GAA2BrqB,OAAO1H,OAAP,CAAe+xB,eAA1C;AACAj/B,aAASqB,OAAT,GAAoB,QAAOuT,OAAO1H,OAAP,CAAe7L,OAAtB,MAAkC,QAAnC,GAA+CuT,OAAO1H,OAAP,CAAe7L,OAAf,CAAuBgV,IAAtE,GAA6EzB,OAAO1H,OAAP,CAAe7L,OAA/G;AACArB,aAAS+gC,YAAT,GAAwBnsB,OAAO1H,OAAP,CAAe6zB,YAAvC;AACA/gC,aAASogC,WAAT,GAAuBxrB,OAAO1H,OAAP,CAAekzB,WAAtC;AACApgC,aAASg1B,KAAT,GAAiBpgB,OAAO1H,OAAP,CAAe8nB,KAAhC;AACAh1B,aAASmH,SAAT,CAAmBq5B,MAAnB,GAA4B5rB,OAAO1H,OAAP,CAAe/F,SAAf,CAAyBq5B,MAArD;AACAxgC,aAASmH,SAAT,CAAmBs5B,MAAnB,GAA4B7rB,OAAO1H,OAAP,CAAe/F,SAAf,CAAyBs5B,MAArD;AACAzgC,aAASmH,SAAT,CAAmBu5B,aAAnB,GAAmC9rB,OAAO1H,OAAP,CAAe/F,SAAf,CAAyBu5B,aAA5D;AACA1gC,aAAS8gC,eAAT,GAA4B,QAAOlsB,OAAO1H,OAAP,CAAe4zB,eAAtB,MAA0C,QAA3C,GAAuDlsB,OAAO1H,OAAP,CAAe4zB,eAAf,CAA+BxB,IAAtF,GAA6F1qB,OAAO1H,OAAP,CAAe4zB,eAAvI;AACA9gC,aAASkhC,iBAAT,GAA6BtsB,OAAO1H,OAAP,CAAeg0B,iBAA5C;AACAlhC,aAASmhC,oBAAT,GAAgCvsB,OAAO1H,OAAP,CAAei0B,oBAA/C;AACAnhC,aAASohC,aAAT,GAAyBxsB,OAAO1H,OAAP,CAAek0B,aAAxC;;AAEA;AACA,QAAG,CAACxsB,OAAO1H,OAAP,CAAeoF,QAAnB,EAA6B;AAC3BtS,eAASmH,SAAT,GAAqByN,OAAO1H,OAAP,CAAe/F,SAApC;AACAnH,eAASi/B,eAAT,GAA2BrqB,OAAO1H,OAAP,CAAe+xB,eAA1C;AACD;;AAEDpgC,cAAUgB,MAAV,CAAiBG,QAAjB,EACGb,IADH,CACQ,UAACC,MAAD,EAAY;AAChBuX,gBAAU5B,IAAV,CAAe,EAAC/U,UAAUZ,MAAX,EAAf;AACD,KAHH,EAIGO,KAJH,CAIS,UAACC,GAAD,EAAS;AACdwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,yDAA9B,CAAd;AACD,KANH;AAQD,GAhCD;AAkCD,CArGD,CADA;;;;;ACAArZ,IAAIuX,UAAJ,CAAe,mDAAf,EACA,CAAC,QAAD,EAAW,GAAX,EAAgB,IAAhB,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,cAA/C,EAA+D,SAA/D,EAA0E,UAA1E,EAAsF,aAAtF,EACA,UAACC,MAAD,EAAStW,CAAT,EAAYE,EAAZ,EAAgBmY,SAAhB,EAA2BvC,QAA3B,EAAqCvV,SAArC,EAAgDwI,IAAhD,EAAsDrH,QAAtD,EAAgEI,WAAhE,EAAgF;;AAE9EwU,SAAO1H,OAAP,GAAiBlN,QAAjB;AACA4U,SAAOxU,WAAP,GAAqBA,WAArB;;AAEAwU,SAAOysB,mBAAP,GAA8B,QAAOrhC,SAASshC,kBAAT,CAA4BxiC,GAAnC,MAA2C,QAA5C,GAAwDkB,SAASshC,kBAAT,CAA4BxiC,GAApF,GAA0F,EAAvH;;AAEA8V,SAAO2sB,iBAAP,GAA2B;AACzBC,oBAAiB5sB,OAAO1H,OAAP,CAAeu0B,iBAAf,CAAiCD,cAAlC,GAAoD5sB,OAAO1H,OAAP,CAAeu0B,iBAAf,CAAiCD,cAAjC,CAAgD,CAAhD,CAApD,GAAyG,IADhG;AAEzBE,mBAAgB9sB,OAAO1H,OAAP,CAAeu0B,iBAAf,CAAiCC,aAAlC,GAAmD9sB,OAAO1H,OAAP,CAAeu0B,iBAAf,CAAiCC,aAAjC,CAA+C,CAA/C,CAAnD,GAAuG,IAF7F;AAGzBC,kBAAe/sB,OAAO1H,OAAP,CAAeu0B,iBAAf,CAAiCE,YAAlC,GAAkD/sB,OAAO1H,OAAP,CAAeu0B,iBAAf,CAAiCE,YAAjC,CAA8C,CAA9C,CAAlD,GAAqG,IAH1F;AAIzBC,iBAAchtB,OAAO1H,OAAP,CAAeu0B,iBAAf,CAAiCG,WAAlC,GAAiDhtB,OAAO1H,OAAP,CAAeu0B,iBAAf,CAAiCG,WAAjC,CAA6C,CAA7C,CAAjD,GAAmG;AAJvF,GAA3B;;AAOA;AACAhtB,SAAOsC,MAAP,GAAgB,YAAM;AAAEP,cAAUO,MAAV;AAAqB,GAA7C;;AAEA;AACAtC,SAAOitB,iBAAP,GAA2B,UAAChjB,UAAD,EAAgB;AACzC,WAAOrgB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAG4f,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5B/M,cAAQV,EAAEL,MAAF,CAASmC,YAAY0hC,EAAZ,CAAezgC,OAAf,CAAuB2P,IAAhC,EAAsC,UAACghB,CAAD,EAAO;AACnD,YAAGA,EAAEsN,IAAF,CAAOnhC,OAAP,CAAe0gB,UAAf,IAA6B,CAAC,CAAjC,EAAoC,OAAOmT,CAAP;AACrC,OAFO,CAAR;AAGD,KANM,CAAP;AAOD,GARD;;AAUA;AACApd,SAAOmtB,uBAAP,GAAiC,UAACljB,UAAD,EAAgB;AAC/C,WAAOrgB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAG4f,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5B/M,cAAQV,EAAEL,MAAF,CAASmC,YAAY0hC,EAAZ,CAAetB,MAAf,CAAsBwB,QAA/B,EAAyC,UAAChQ,CAAD,EAAO;AACtD,YAAGA,EAAE7zB,OAAF,CAAU0gB,UAAV,IAAwB,CAAC,CAA5B,EAA+B,OAAOmT,CAAP;AAChC,OAFO,CAAR;AAID,KAPM,CAAP;AAQD,GATD;;AAWA;AACApd,SAAOqtB,qBAAP,GAA+B,UAACpjB,UAAD,EAAgB;AAC7C,WAAOrgB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAG4f,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5B/M,cAAQV,EAAEL,MAAF,CAASmC,YAAY0hC,EAAZ,CAAetB,MAAf,CAAsB0B,IAA/B,EAAqC,UAAClQ,CAAD,EAAO;AAClD,YAAGA,EAAEsN,IAAF,CAAOnhC,OAAP,CAAe0gB,UAAf,IAA6B,CAAC,CAAjC,EAAoC,OAAOmT,CAAP;AACrC,OAFO,CAAR;AAGD,KANM,CAAP;AAOD,GARD;;AAUA;AACApd,SAAOutB,mBAAP,GAA6B,UAACnQ,CAAD,EAAO;AAClCpd,WAAO1H,OAAP,CAAeo0B,kBAAf,CAAkCthC,QAAlC,GAA6CgyB,CAA7C;AACD,GAFD;;AAIA;AACApd,SAAOwtB,cAAP,GAAwB,YAAM;AAC5B;AACA,QAAGxtB,OAAOysB,mBAAP,CAA2BljC,OAA3B,CAAmCyW,OAAO2sB,iBAAP,CAAyB77B,KAAzB,CAA+B45B,IAAlE,IAA0E,CAAC,CAA9E,EAAiF,OAAO1qB,OAAO2sB,iBAAP,CAAyB77B,KAAzB,GAAiC,IAAxC;;AAEjF;AACA,QAAGkP,OAAOysB,mBAAP,CAA2Bt1B,MAA3B,KAAsC,CAAzC,EAA4C6I,OAAO1H,OAAP,CAAeo0B,kBAAf,CAAkCthC,QAAlC,GAA6C4U,OAAO2sB,iBAAP,CAAyB77B,KAAzB,CAA+B45B,IAA5E;;AAE5C;AACA1qB,WAAOysB,mBAAP,CAA2B95B,IAA3B,CAAgCqN,OAAO2sB,iBAAP,CAAyB77B,KAAzB,CAA+B45B,IAA/D;AACA1qB,WAAO2sB,iBAAP,CAAyB77B,KAAzB,GAAiC,IAAjC;AACD,GAVD;;AAYA;AACAkP,SAAOytB,WAAP,GAAqB,UAACrQ,CAAD,EAAO;AAC1Bpd,WAAOysB,mBAAP,CAA2BtkB,MAA3B,CAAkCnI,OAAOysB,mBAAP,CAA2BljC,OAA3B,CAAmC6zB,CAAnC,CAAlC,EAAwE,CAAxE;AACD,GAFD;;AAIA;AACApd,SAAOQ,IAAP,GAAc,UAACmC,CAAD,EAAO;;AAEnB,QAAIrK,UAAU7P,QAAQ0C,IAAR,CAAa6U,OAAO1H,OAApB,CAAd;;AAEApM,YAAQC,GAAR,CAAY,gBAAZ,EAA8B6T,OAAO1H,OAArC,EAA8C0H,OAAO2sB,iBAArD;;AAEA;AACAvhC,aAASshC,kBAAT,GAA8B;AAC5BthC,gBAAUkN,QAAQo0B,kBAAR,CAA2BthC,QADT;AAE5BlB,WAAK8V,OAAOysB,mBAFgB;AAG5BiB,0BAAoBp1B,QAAQo0B,kBAAR,CAA2BgB,kBAHnB;AAI5BC,sBAAgBr1B,QAAQo0B,kBAAR,CAA2BiB;AAJf,KAA9B;AAMAviC,aAASyhC,iBAAT,GAA6B;AAC3BD,sBAAgB,CAAC5sB,OAAO2sB,iBAAP,CAAyBC,cAA1B,CADW;AAE3BE,qBAAe,CAAC9sB,OAAO2sB,iBAAP,CAAyBG,aAA1B,CAFY;AAG3BC,oBAAc,CAAE,QAAO/sB,OAAO2sB,iBAAP,CAAyBI,YAAhC,MAAiD,QAAlD,GAA8D/sB,OAAO2sB,iBAAP,CAAyBI,YAAzB,CAAsCrC,IAApG,GAA2G1qB,OAAO2sB,iBAAP,CAAyBI,YAArI,CAHa;AAI3BC,mBAAa,CAAE,QAAOhtB,OAAO2sB,iBAAP,CAAyBK,WAAhC,MAAgD,QAAjD,GAA6DhtB,OAAO2sB,iBAAP,CAAyBK,WAAzB,CAAqCtC,IAAlG,GAAyG1qB,OAAO2sB,iBAAP,CAAyBK,WAAnI;AAJc,KAA7B;;AAOA/iC,cAAUgB,MAAV,CAAiBG,QAAjB,EACGb,IADH,CACQ,UAACC,MAAD,EAAY;AAChBuX,gBAAU5B,IAAV,CAAe,EAAC/U,UAAUZ,MAAX,EAAf;AACD,KAHH,EAIGO,KAJH,CAIS,UAACC,GAAD,EAAS;AACdwU,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,yDAA9B,CAAd;AACD,KANH;AAQD,GA5BD;AA8BD,CA1GD,CADA;;;ACAArZ,IAAIuX,UAAJ,CAAe,mCAAf,EACA,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,UAAtB,EAAkC,aAAlC,EAAiD,cAAjD,EAAiE,SAAjE,EAA4E,WAA5E,EAAyF,UAAzF,EAAqG,UAArG,EAAiH,aAAjH,EACA,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAgBpO,KAAhB,EAAuBjG,QAAvB,EAAiC1B,SAAjC,EAA4CwI,IAA5C,EAAkDsP,SAAlD,EAA6DvC,QAA7D,EAAuE/B,QAAvE,EAAiFjS,WAAjF,EAAiG;;AAE/FwU,SAAOjO,IAAP,GAAc,EAAd;AACAiO,SAAO4tB,SAAP,GAAmB,KAAnB;AACA5tB,SAAOvC,QAAP,GAAkBA,SAASrS,QAA3B;AACA4U,SAAO6C,OAAP,GAAiB,KAAjB;AACA7C,SAAO0J,UAAP,GAAoB,KAApB;AACA1J,SAAO2J,WAAP,GAAqB,KAArB;AACA3J,SAAO6tB,YAAP,GAAsB,QAAtB;;AAEA,MAAIC,iBAAiB;AACnBx5B,YAAQrI,SADW;AAEnB+d,eAAW,IAFQ;AAGnB9b,aAAS;AAHU,GAArB;;AAMA8R,SAAOsJ,QAAP,GAAkB;AAChBrY,YAAQ,CADQ;AAEhBD,WAAO,EAFS;AAGhBwV,WAAO/I,SAAS+I;AAHA,GAAlB;;AAMAxG,SAAO+tB,eAAP,GAAyB,YAAM;;AAE7B/tB,WAAO6C,OAAP,GAAiB,IAAjB;;AAEAirB,mBAAe98B,KAAf,GAAuBgP,OAAOsJ,QAAP,CAAgBtY,KAAvC;AACA88B,mBAAe78B,MAAf,GAAwB+O,OAAOsJ,QAAP,CAAgBrY,MAAxC;;AAEAhH,cAAUC,GAAV,CAAc4jC,cAAd,EACGvjC,IADH,CACQ,UAACyN,OAAD,EAAa;AACjBgI,aAAO6C,OAAP,GAAiB,KAAjB;AACA7C,aAAOvC,QAAP,GAAkBzF,QAAQ5M,QAA1B;AACA4U,aAAOsJ,QAAP,CAAgB9C,KAAhB,GAAwBxO,QAAQwO,KAAhC;AACD,KALH,EAMGzb,KANH,CAMS,UAACC,GAAD,EAAS;AACdgV,aAAO6C,OAAP,GAAiB,KAAjB;AACArD,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,wCAA9B,CAAd;AACD,KATH;AAWD,GAlBD;;AAoBA7B,SAAOyJ,WAAP,GAAqB,YAAM;AACzBzJ,WAAO0J,UAAP,GAAoB,KAApB;AACA1J,WAAO2J,WAAP,GAAqB,KAArB;;AAEA,QAAIC,cAAc5J,OAAO3W,MAAP,CAAciL,MAAhC;;AAEA0L,WAAO3W,MAAP,CAAciL,MAAd,GAAuB,IAAvB;AACAw5B,mBAAex5B,MAAf,GAAwBrI,SAAxB;AACA,QAAG2d,gBAAgB3d,SAAnB,EAA8B+T,OAAO+tB,eAAP;AAC/B,GATD;;AAWA/tB,SAAO8J,aAAP,GAAuB,YAAM;AAC3B9J,WAAO0J,UAAP,GAAoB,IAApB;AACA1J,WAAO2J,WAAP,GAAqB,IAArB;AACD,GAHD;;AAMA;;;AAGA3J,SAAO1L,MAAP,GAAgB,YAAM;AACpBw5B,mBAAex5B,MAAf,GAAwB0L,OAAO3W,MAAP,CAAciL,MAAtC;AACA0L,WAAOsJ,QAAP,CAAgBrY,MAAhB,GAAyB,CAAzB,CAFoB,CAEQ;AAC5B+O,WAAO+tB,eAAP;AACD,GAJD;;AAMA;;;;;AAKA/tB,SAAOguB,OAAP,GAAiB,UAACC,GAAD,EAAS;AACxB,WAAOjY,OAAO1oB,IAAP,CAAY2gC,GAAZ,EAAiB92B,MAAxB;AACD,GAFD;;AAKA;;;AAGA6I,SAAOkuB,YAAP,GAAsB,YAAM;;AAE1BluB,WAAO4tB,SAAP,GAAmB,IAAnB;AACA5tB,WAAOjO,IAAP,GAAc,EAAd;;AAGAH,UAAME,MAAN,CAAa,CAACkO,OAAO3H,MAAP,CAAc/D,MAAf,CAAb,EAAqC/J,IAArC,CACE,UAACC,MAAD,EAAY;AACV;AACAwV,aAAOjO,IAAP,GAAc,EAAd;;AAEArI,QAAE0H,OAAF,CAAU5G,OAAOwN,OAAjB,EAA0B,UAAC8F,CAAD,EAAO;;AAE/B,YAAG,CAACkC,OAAOjO,IAAP,CAAY+L,EAAEgtB,oBAAd,CAAJ,EAAyC;;AAEvC9qB,iBAAOjO,IAAP,CAAY+L,EAAEgtB,oBAAd,IAAsC;AACpCI,mBAAOptB,EAAEqtB,oBAD2B;AAEpCgD,yBAAarwB,EAAEgtB,oBAFqB;AAGpC7Y,kBAAMnU,EAAEutB,sBAH4B;AAIpC+C,2BAAetwB,EAAEswB,aAJmB;AAKpC3hC,qBAASqR,EAAErR,OALyB;AAMpC8F,uBAAW,CAACuL,EAAE1L,OAAH;AANyB,WAAtC;AAQD;;AAED,YAAG4N,OAAOjO,IAAP,CAAY+L,EAAEgtB,oBAAd,KAAuC9qB,OAAOjO,IAAP,CAAY+L,EAAEgtB,oBAAd,EAAoCv4B,SAApC,CAA8ChJ,OAA9C,CAAsDuU,EAAE1L,OAAxD,MAAqE,CAAC,CAAhH,EAAmH;AACjH4N,iBAAOjO,IAAP,CAAY+L,EAAEgtB,oBAAd,EAAoCv4B,SAApC,CAA8CI,IAA9C,CAAmDmL,EAAE1L,OAArD;AACD;AAEF,OAlBD;;AAoBA4N,aAAO4tB,SAAP,GAAmB,KAAnB;;AAEA1hC,cAAQC,GAAR,CAAY,MAAZ,EAAoB6T,OAAOjO,IAA3B;AACD,KA5BH,EA6BE,UAAC/G,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,OAAZ,EAAqBnB,GAArB;AACD,KA/BH;AAkCD,GAxCD;;AA0CAgV,SAAOquB,WAAP,GAAqB,UAACC,GAAD,EAAS;;AAE5BvsB,cAAUpC,IAAV,CAAe;AACbC,mBAAa,2CADA;AAEbG,kBAAY,CAAC,QAAD,EAAW,UAACa,KAAD,EAAW;;AAEhCA,cAAMiC,OAAN,GAAgB,EAACzQ,SAAS,IAAV,EAAgBg7B,UAAU,IAA1B,EAAhB;AACAxsB,cAAMxO,OAAN,GAAgB,EAACzD,MAAM2/B,GAAP,EAAhB;AACA1tB,cAAMwsB,QAAN,GAAiB,EAAjB;;AAEAxsB,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV;AACD,SAFD;;AAIA1B,cAAM2tB,WAAN,GAAoB,YAAM;AACxB,cAAIC,OAAO,IAAX;;AAEA9kC,YAAE0H,OAAF,CAAUwP,MAAMwsB,QAAhB,EAA0B,UAACtvB,CAAD,EAAO;AAC/B,gBAAGA,EAAE1L,OAAF,CAAU7I,OAAV,CAAkB,IAAlB,IAA0B,CAAC,CAA9B,EAAiCilC,OAAO1wB,EAAE1L,OAAT;AAClC,WAFD;;AAIA,cAAG,CAACo8B,IAAJ,EAAU,OAAO,KAAP;;AAEV,iBAAOA,IAAP;AACD,SAVD;;AAYA58B,cAAMQ,OAAN,CAAck8B,GAAd,EAAmB/jC,IAAnB,CACE,UAACC,MAAD,EAAY;;AAEV,cAAGA,OAAOikC,IAAP,KAAgB,CAAnB,EAAsB;AACpBjvB,qBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,qDAA9B,CAAd;AACD;;AAEDjB,gBAAMiC,OAAN,CAAczQ,OAAd,GAAwB,KAAxB;AACAwO,gBAAMxO,OAAN,GAAgB5H,OAAOwN,OAAP,CAAe,CAAf,CAAhB;AACD,SATH,EAUGjN,KAVH,CAUS,UAACC,GAAD,EAAS;AACdkB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCnB,GAApC;AACD,SAZH;;AAcA4G,cAAMU,YAAN,CAAmB,CAACg8B,GAAD,CAAnB,EACG/jC,IADH,CACQ,UAACC,MAAD,EAAY;AAChB,cAAGA,OAAOikC,IAAP,KAAgB,CAAnB,EAAsB;AACpBjvB,qBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,qCAA9B,CAAd;AACD;AACDjB,gBAAMiC,OAAN,CAAcuqB,QAAd,GAAyB,KAAzB;AACAxsB,gBAAMwsB,QAAN,GAAiB5iC,OAAOwN,OAAxB;AACD,SAPH,EAQGjN,KARH,CAQS,UAACC,GAAD,EAAS;AACdkB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCnB,GAApC;AACD,SAVH;AAYD,OAhDW;AAFC,KAAf;AAqDD,GAvDD;;AA0DA;AACAgV,SAAO0uB,YAAP,GAAsB,UAACtjC,QAAD,EAAc;;AAElC2W,cAAUpC,IAAV,CAAe;AACbC,mBAAa,0CADA;AAEbG,kBAAY,CAAC,QAAD,EAAW,UAACa,KAAD,EAAW;;AAEhCA,cAAMiC,OAAN,GAAgB,IAAhB;AACAjC,cAAMxV,QAAN,GAAiBA,QAAjB;AACAwV,cAAMiqB,OAAN,GAAgB,EAAhB;;AAEAjqB,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV;AACD,SAFD;;AAIA1Q,cAAMO,MAAN,CAAa/G,SAAS0N,GAAT,CAAajG,KAA1B,EAAiCtI,IAAjC,CACE,UAACC,MAAD,EAAY;;AAEV,cAAIqgC,UAAU,EAAd;;AAEA,cAAGrgC,OAAOikC,IAAP,KAAgB,CAAnB,EAAsB;AACpBjvB,qBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,wCAA9B,CAAd;AACAE,sBAAUO,MAAV;AACD;;AAED5Y,YAAE0H,OAAF,CAAU5G,OAAOwN,OAAjB,EAA0B,UAACoN,CAAD,EAAO;AAC/BylB,oBAAQzlB,EAAE0lB,oBAAV,IAAkC1lB,CAAlC;AACD,WAFD;;AAIAxE,gBAAMiqB,OAAN,GAAgBnhC,EAAE8Z,MAAF,CAASqnB,OAAT,CAAhB;;AAEAjqB,gBAAMiC,OAAN,GAAgB,KAAhB;AACD,SAjBH,EAkBG9X,KAlBH,CAkBS,UAACC,GAAD,EAAS;AACdkB,kBAAQC,GAAR,CAAY,sBAAZ,EAAoCnB,GAApC;AACD,SApBH;AAsBD,OAhCW;AAFC,KAAf;AAqCD,GAvCD;;AAyCA;AACAgV,SAAO2uB,YAAP,GAAsB,UAACvjC,QAAD,EAAc;;AAElC2W,cAAUpC,IAAV,CAAe;AACbC,mBAAa,wCADA;AAEbG,kBAAY,wCAFC;AAGbF,cAAQ;AACNzU,kBAAUA;AADJ;AAHK,KAAf,EAOGb,IAPH,CAOQ,UAACC,MAAD,EAAY;AAChB;AACA,UAAIyU,IAAIvV,EAAE8e,SAAF,CAAY/K,QAAZ,EAAsB,EAAC7S,OAAOJ,OAAOI,KAAf,EAAtB,CAAR;AACA,UAAGqU,CAAH,EAAMxB,SAASwB,CAAT,IAAczU,MAAd;AAEP,KAZH;AAcD,GAhBD;;AAkBA;AACAwV,SAAO4uB,eAAP,GAAyB,UAACxjC,QAAD,EAAc;;AAErC2W,cAAUpC,IAAV,CAAe;AACbC,mBAAa,mDADA;AAEbG,kBAAY,mDAFC;AAGbF,cAAQ;AACNzU,kBAAUA,QADJ;AAENI,qBAAaA;AAFP;AAHK,KAAf,EAQGjB,IARH,CAQQ,UAACC,MAAD,EAAY;AAChB;AACA,UAAIyU,IAAIvV,EAAE8e,SAAF,CAAY/K,QAAZ,EAAsB,EAAC7S,OAAOJ,OAAOI,KAAf,EAAtB,CAAR;AACA,UAAGqU,CAAH,EAAMxB,SAASwB,CAAT,IAAczU,MAAd;AAEP,KAbH;AAeD,GAjBD;;AAoBA;AACAwV,SAAO6uB,SAAP,GAAmB,YAAM;;AAEvB9sB,cAAUpC,IAAV,CAAe;AACbC,mBAAa,uCADA;AAEbG,kBAAY;AAFC,KAAf,EAIGxV,IAJH,CAIQ,UAACC,MAAD,EAAY;AAChB,UAAGA,OAAOA,MAAV,EAAkBwV,OAAOvC,QAAP,CAAgBgc,OAAhB,CAAwBjvB,OAAOA,MAA/B;AACnB,KANH;AAQD,GAVD;AAaD,CAtRD,CADA;;;ACAAhC,IAAIuX,UAAJ,CAAe,qCAAf,EACA,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,SAAtB,EAAiC,UAAjC,EAA6C,qBAA7C,EAAoE,WAApE,EAAiF,UAAjF,EAA6F,SAA7F,EACA,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAgBX,OAAhB,EAAyBqB,QAAzB,EAAmCtI,OAAnC,EAA4C2J,SAA5C,EAAuDvC,QAAvD,EAAiEjH,OAAjE,EAA6E;;AAE3EyH,SAAOzH,OAAP,GAAiBA,QAAQA,OAAzB;;AAEAyH,SAAO6C,OAAP,GAAiB,KAAjB;AACA7C,SAAO0J,UAAP,GAAoB,IAApB;AACA1J,SAAO2J,WAAP,GAAqB,KAArB;AACA3J,SAAO3W,MAAP,GAAgB;AACdiL,YAAQ,IADM;AAEdpG,aAAS;AAFK,GAAhB;;AAKA8R,SAAOsJ,QAAP,GAAkB;AAChB9C,WAAOjO,QAAQiO,KADC;AAEhBvV,YAAQ,CAFQ;AAGhBD,WAAO;AAHS,GAAlB;;AAMAgP,SAAOyJ,WAAP,GAAqB,YAAM;AACzB;AACAzJ,WAAO2J,WAAP,GAAqB,KAArB;;AAEA,QAAIC,cAAc5J,OAAO3W,MAAP,CAAciL,MAAhC;;AAEA0L,WAAO3W,MAAP,CAAciL,MAAd,GAAuB,IAAvB;AACA,QAAGsV,gBAAgB3d,SAAnB,EAA8B+T,OAAO6J,cAAP;AAC/B,GARD;;AAUA7J,SAAO8J,aAAP,GAAuB,YAAM;AAC3B9J,WAAO0J,UAAP,GAAoB,IAApB;AACA1J,WAAO2J,WAAP,GAAqB,IAArB;AACD,GAHD;;AAKA3J,SAAO8uB,SAAP,GAAmB,UAAC96B,MAAD,EAAS1H,IAAT,EAAkB;AACnC,WAAQ5C,EAAE6U,IAAF,CAAOvK,OAAO+6B,OAAd,EAAuB,EAACziC,MAAMA,IAAP,EAAvB,MAAyCL,SAA1C,GAAuD,IAAvD,GAA8D,KAArE;AACD,GAFD;;AAIA+T,SAAOgvB,aAAP,GAAuB,UAACh7B,MAAD,EAAY;AACjC,QAAGA,OAAOi7B,QAAP,KAAoB,KAAvB,EAA8B;;AAE9Bj7B,WAAOi7B,QAAP,GAAkB,KAAlB;;AAEA,QAAIC,eAAezmC,QAAQ0C,IAAR,CAAa6I,MAAb,CAAnB;AACAk7B,iBAAaC,cAAb,GAA8Bn7B,OAAOm7B,cAAP,CAAsBvkC,KAApD;;AAEAwN,YAAQnN,MAAR,CAAeikC,aAAa9jC,QAAb,CAAsB0N,GAAtB,CAA0BjG,KAAzC,EAAgDq8B,aAAa9jC,QAAb,CAAsBi/B,eAAtE,EAAuF6E,aAAatkC,KAApG,EAA2GskC,YAA3G,EACG3kC,IADH,CACQ,UAACC,MAAD,EAAY;AAChB,UAAIyU,IAAIvV,EAAEy8B,OAAF,CAAUnmB,OAAOzH,OAAjB,EAA0B,EAAC3N,OAAOskC,aAAatkC,KAArB,EAA1B,CAAR;;AAEAoV,aAAOzH,OAAP,CAAe0G,CAAf,IAAoBzU,MAApB;AAED,KANH,EAOGO,KAPH,CAOS,UAACU,CAAD,EAAO;AACZuI,aAAOi7B,QAAP,GAAkB,IAAlB;AACAzvB,eAASoD,UAAT,CAAoB,0CAApB;AACA1W,cAAQC,GAAR,CAAYV,CAAZ;AACD,KAXH;AAaD,GArBD;;AAwBA;;;AAGAuU,SAAO1L,MAAP,GAAgB,YAAM;AACpB0L,WAAO6J,cAAP;AACD,GAFD;;AAIA;;;;AAIA7J,SAAO6J,cAAP,GAAwB,YAAM;;AAE5B;AACA,QAAI7J,OAAO3W,MAAP,CAAciL,MAAlB,EAA0B0L,OAAOsJ,QAAP,CAAgBrY,MAAhB,GAAyB,CAAzB;;AAE1B,QAAIK,OAAO;AACT;AACA;AACApD,eAAS,KAHA;AAIToG,cAAQ0L,OAAO3W,MAAP,CAAciL;AAJb,KAAX;;AAOA8D,YAAQlO,GAAR,CAAYoH,IAAZ,EAAkB/G,IAAlB,CACE,UAACgO,OAAD,EAAa;AACXyH,aAAOsJ,QAAP,CAAgB9C,KAAhB,GAAwBjO,QAAQiO,KAAhC;AACA;AACA,UAAI4oB,QAAQpvB,OAAOsJ,QAAP,CAAgBrY,MAA5B;AAAA,UACIo+B,SAASrvB,OAAOsJ,QAAP,CAAgBrY,MAAhB,GAAyB+O,OAAOsJ,QAAP,CAAgBtY,KADtD;AAEAgP,aAAOzH,OAAP,GAAiBA,QAAQA,OAAR,CAAgB+2B,KAAhB,CAAsBF,KAAtB,EAA6BC,MAA7B,CAAjB;AACD,KAPH,EAQE,UAACrkC,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,mCAAZ,EAAiDnB,GAAjD;AACD,KAVH;AAaD,GAzBD;;AA2BA;AACAgV,SAAOuvB,SAAP,GAAmB,YAAM;AACvBn3B,YAAQI,WAAR,GACGjO,IADH,CACQ,UAACmB,KAAD,EAAW;AACf;AACA2T,cAAQ/L,IAAR,CAAgBxJ,OAAOC,SAAP,CAAiBC,GAAjC,0FAAyH0B,MAAMA,KAA/H,EAAwI,QAAxI;;AAEAgV,eAAS,YAAM;AACbV,eAAO6J,cAAP;AACD,OAFD,EAEG,GAFH;AAGD,KARH,EASG9e,KATH,CASS,UAACU,CAAD,EAAO;AACZ+T,eAASoD,UAAT,CAAoB,4CAApB;AACA1W,cAAQC,GAAR,CAAYV,CAAZ;AACD,KAZH;AAaD,GAdD;AAiBD,CAtHD,CADA;;;ACAAjD,IAAIuX,UAAJ,CAAe,sCAAf,EACA,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,qBAAhC,EAAuD,qBAAvD,EAA8E,sBAA9E,EAAsG,WAAtG,EAAmH,UAAnH,EAA+H,QAA/H,EAAyI,MAAzI,EACA,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAgBhF,MAAhB,EAAwB5C,OAAxB,EAAiCK,OAAjC,EAA0CE,QAA1C,EAAoDoJ,SAApD,EAA+DvC,QAA/D,EAAyExL,MAAzE,EAAiFP,IAAjF,EAA0F;;AAExFuM,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOvM,IAAP,GAAcA,IAAd;AACAuM,SAAOwvB,SAAP,GAAmB,KAAnB;;AAEAxvB,SAAO8uB,SAAP,GAAmB,UAAC96B,MAAD,EAAS1H,IAAT,EAAkB;AACnC,WAAQ5C,EAAE6U,IAAF,CAAOvK,OAAO+6B,OAAd,EAAuB,EAACziC,MAAMA,IAAP,EAAvB,MAAyCL,SAA1C,GAAuD,IAAvD,GAA8D,KAArE;AACD,GAFD;;AAIA+T,SAAOyvB,aAAP,GAAuB,KAAvB;;AAEAzvB,SAAO0vB,OAAP,GAAiB;AACfC,aAAS;AACPhhC,YAAM,SADC;AAEPihC,aAAO,GAFA;AAGPC,mBAAa,IAHN;AAIP9wB,aAAO;AAJA,KADM;AAOf+wB,aAAS;AACPnhC,YAAM,SADC;AAEPihC,aAAO;AAFA,KAPM;AAWfG,kBAAc;AACZphC,YAAM,cADM;AAEZihC,aAAO,GAFK;AAGZC,mBAAa;AAHD,KAXC;AAgBfG,UAAM;AACJrhC,YAAM,MADF;AAEJihC,aAAO,GAFH;AAGJC,mBAAa;AAHT,KAhBS;AAqBfI,gBAAY;AACVthC,YAAM,WADI;AAEVihC,aAAO,GAFG;AAGVC,mBAAa;AAHH,KArBG;AA0Bf72B,UAAM;AACJrK,YAAM,MADF;AAEJihC,aAAO,GAFH;AAGJC,mBAAa;AAHT,KA1BS;AA+BftjC,aAAS;AACPoC,YAAM,SADC;AAEPihC,aAAO,GAFA;AAGPC,mBAAa;AAHN,KA/BM;AAoCfK,YAAQ;AACNvhC,YAAM,QADA;AAENihC,aAAO,GAFD;AAGNC,mBAAa;AAHP,KApCO;AAyCfn4B,gBAAY;AACV/I,YAAM,KADI;AAEVihC,aAAO,EAFG;AAGVC,mBAAa;AAHH,KAzCG;AA8Cfl4B,cAAU;AACRhJ,YAAM,KADE;AAERihC,aAAO,GAFC;AAGRC,mBAAa;AAHL,KA9CK;AAmDfM,WAAO;AACLxhC,YAAM,OADD;AAELihC,aAAO,GAFF;AAGLC,mBAAa;AAHR,KAnDQ;AAwDfr+B,eAAW;AACT7C,YAAM,KADG;AAETihC,aAAO,EAFE;AAGTC,mBAAa;AAHJ,KAxDI;AA6DftiC,gBAAY;AACVoB,YAAM,KADI;AAEVihC,aAAO,EAFG;AAGVC,mBAAa;AAHH,KA7DG;AAkEfO,WAAO;AACLzhC,YAAM,OADD;AAELihC,aAAO,EAFF;AAGLC,mBAAa;AAHR,KAlEQ;AAuEfQ,uBAAmB;AACjB1hC,YAAM,sBADW;AAEjBihC,aAAO,GAFU;AAGjBC,mBAAa;AAHI,KAvEJ;AA4EfS,0BAAsB;AACpB3hC,YAAM,sBADc;AAEpBihC,aAAO,GAFa;AAGpBC,mBAAa;AAHO,KA5EP;AAiFfU,eAAW;AACT5hC,YAAM,WADG;AAETihC,aAAO,GAFE;AAGTC,mBAAa;AAHJ,KAjFI;AAsFfW,kBAAc;AACZ7hC,YAAM,cADM;AAEZihC,aAAO,GAFK;AAGZC,mBAAa;AAHD,KAtFC;AA2FfY,qBAAiB;AACf9hC,YAAM,oBADS;AAEfihC,aAAO,GAFQ;AAGfC,mBAAa;AAHE,KA3FF;AAgGfa,2BAAuB;AACrB/hC,YAAM,wBADe;AAErBgiC,eAAS,aAFY;AAGrBf,aAAO,GAHc;AAIrBC,mBAAa;AAJQ,KAhGR;AAsGfe,uBAAmB;AACjBjiC,YAAM,mBADW;AAEjBgiC,eAAS,aAFQ;AAGjBf,aAAO,GAHU;AAIjBC,mBAAa;AAJI,KAtGJ;AA4GfgB,6BAAyB;AACvBliC,YAAM,0BADiB;AAEvBihC,aAAO,GAFgB;AAGvBC,mBAAa;AAHU,KA5GV;AAiHfzP,WAAO;AACLzxB,YAAM,OADD;AAELihC,aAAO,GAFF;AAGLC,mBAAa;AAHR,KAjHQ;AAsHfvjC,UAAM;AACJqC,YAAM,MADF;AAEJihC,aAAO,GAFH;AAGJC,mBAAa;AAHT,KAtHS;AA2HfiB,qBAAiB;AACfniC,YAAM,iBADS;AAEfihC,aAAO,GAFQ;AAGfC,mBAAa;AAHE,KA3HF;AAgIfkB,oBAAgB;AACdpiC,YAAM,gBADQ;AAEdihC,aAAO,GAFO;AAGdC,mBAAa;AAHC,KAhID;AAqIfmB,+BAA2B;AACzBriC,uCADyB;AAEzBihC,aAAO,GAFkB;AAGzBC,mBAAa;AAHY,KArIZ;AA0IfoB,0BAAsB;AACpBtiC,kCADoB;AAEpBihC,aAAO,GAFa;AAGpBC,mBAAa;AAHO,KA1IP;AA+IfqB,0BAAsB;AACpBviC,0CADoB;AAEpBihC,aAAO,GAFa;AAGpBC,mBAAa;AAHO,KA/IP;AAoJfsB,gBAAY;AACVxiC,wBADU;AAEVihC,aAAO,GAFG;AAGVC,mBAAa;AAHH,KApJG;AAyJfuB,0BAAsB;AACpBziC,YAAM,sBADc;AAEpBihC,aAAO,GAFa;AAGpBC,mBAAa;AAHO,KAzJP;AA8JfwB,qBAAiB;AACf1iC,YAAM,iBADS;AAEfihC,aAAO,GAFQ;AAGfC,mBAAa;AAHE;AA9JF,GAAjB;;AAqKA7vB,SAAOsxB,UAAP,GAAoB,UAACC,GAAD,EAAMhtB,IAAN,EAAYlC,CAAZ,EAAkB;;AAEpC,QAAI7R,QAAQ;AACV9C,aAAO2U,CADG;AAEVkC,YAAMA;AAFI,KAAZ;;AAKA,QAAGA,SAAS,SAAZ,EAAuB/T,MAAM7B,IAAN,GAAa6B,MAAMghC,WAAN,GAAoB,iBAAjC;AACvB,QAAGjtB,SAAS,QAAZ,EAAsB/T,MAAM7B,IAAN,GAAa6B,MAAMghC,WAAN,GAAoB,gBAAjC;;AAEtBzvB,cAAUpC,IAAV,CAAe;AACbC,mBAAa,oDADA;AAEboE,mBAAautB,GAFA;AAGbrvB,2BAAqB,IAHR;AAIbnC,kBAAY,CAAC,OAAD,EAAU,UAACa,KAAD,EAAW;;AAE/BA,cAAMpQ,KAAN,GAAcA,KAAd;;AAEAoQ,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV;AACD,SAFD;;AAIA1B,cAAMgkB,MAAN,GAAe,YAAM;AACnB7iB,oBAAU5B,IAAV,CAAe3P,KAAf;AACD,SAFD;AAID,OAZW;AAJC,KAAf,EAkBGjG,IAlBH,CAkBQ,UAACk9B,GAAD,EAAS;;AAEb,UAAGljB,SAAS,SAAZ,EAAuB;AACrB7a,UAAE0H,OAAF,CAAU4O,OAAOhM,MAAP,CAAcmrB,QAAxB,EAAkC,UAAC9c,CAAD,EAAIpD,CAAJ,EAAU;AAC1Ce,iBAAOhM,MAAP,CAAcmrB,QAAd,CAAuBlgB,CAAvB,EAA0B6xB,eAA1B,GAA4CrJ,IAAI/5B,KAAhD;AACD,SAFD;AAGD;AACD,UAAG6W,SAAS,QAAZ,EAAsB;AACpB7a,UAAE0H,OAAF,CAAU4O,OAAOhM,MAAP,CAAcmrB,QAAxB,EAAkC,UAAC9c,CAAD,EAAIpD,CAAJ,EAAU;AAC1Ce,iBAAOhM,MAAP,CAAcmrB,QAAd,CAAuBlgB,CAAvB,EAA0B8xB,cAA1B,GAA2CtJ,IAAI/5B,KAA/C;AACD,SAFD;AAGD;;AAED9D,SAAGM,GAAH,CAAOR,EAAE8D,GAAF,CAAMwS,OAAOhM,MAAP,CAAcmrB,QAApB,EAA8B,UAAC9c,CAAD,EAAO;AACxC,eAAO1J,SAAS1N,MAAT,CAAgB+U,OAAOhM,MAAP,CAAc5I,QAAd,CAAuB0N,GAAvB,CAA2BjG,KAA3C,EAAkDmN,OAAOhM,MAAP,CAAc5I,QAAd,CAAuBi/B,eAAzE,EAA0FrqB,OAAOhM,MAAP,CAAcpJ,KAAxG,EAA+GyX,EAAEzX,KAAjH,EAAwHyX,CAAxH,CAAP;AACD,OAFI,CAAP,EAGG9X,IAHH,CAGQ,UAACC,MAAD,EAAY;AAChB0B,gBAAQC,GAAR,CAAY,wBAAZ,EAAsC3B,MAAtC;AACAgV,iBAASoD,UAAT,CAAoB,0BAApB;AACD,OANH;AASD,KAxCH,EAyCG7X,KAzCH,CAyCS,UAACC,GAAD,EAAS,CAEf,CA3CH;AA8CD,GAxDD;;AA2DAgV,SAAOtH,MAAP,GAAgB,YAAM;;AAEpB,QAAIjO,OAAO;AACT6B,YAAM0T,OAAO2X,GAAP,CAAWrrB,IADR;AAET6H,eAAS6L,OAAO2X,GAAP,CAAWxjB;AAFX,KAAX;;AAKAsE,YAAQ5N,GAAR,CAAYmV,OAAOhM,MAAP,CAAc5I,QAAd,CAAuB0N,GAAvB,CAA2BjG,KAAvC,EAA8CmN,OAAOhM,MAAP,CAAc5I,QAAd,CAAuBi/B,eAArE,EAAsFrqB,OAAOhM,MAAP,CAAcpJ,KAApG,EAA2GH,IAA3G,EACGF,IADH,CACQ,UAACmO,MAAD,EAAY;AAChBsH,aAAOhM,MAAP,CAAc+6B,OAAd,CAAsBp8B,IAAtB,CAA2B+F,OAAO,CAAP,CAA3B;AACA8G,eAASoD,UAAT,CAAoB,4BAApB;AACA5C,aAAOwvB,SAAP,GAAmB,KAAnB;AACD,KALH,EAMGzkC,KANH,CAMS,UAACC,GAAD,EAAS;AACdwU,eAASoD,UAAT,CAAoB,uCAApB;AACD,KARH;AAUD,GAjBD;;AAmBA5C,SAAOyxB,mBAAP,GAA6B,UAACllC,OAAD,EAAa;;AAExCA,YAAQyV,MAAR,GAAiB,CAACzV,QAAQyV,MAA1B;;AAEArJ,aAAS1N,MAAT,CAAgB+U,OAAOhM,MAAP,CAAc5I,QAAd,CAAuB0N,GAAvB,CAA2BjG,KAA3C,EAAkDmN,OAAOhM,MAAP,CAAc5I,QAAd,CAAuBi/B,eAAzE,EAA0FrqB,OAAOhM,MAAP,CAAcpJ,KAAxG,EAA+G2B,QAAQ3B,KAAvH,EAA8H2B,OAA9H,EACGhC,IADH,CACQ,UAACC,MAAD,EAAY;AAChB;AACA,UAAIyU,IAAIvV,EAAE6U,IAAF,CAAOyB,OAAOhM,MAAP,CAAcmrB,QAArB,EAA+B,EAACv0B,OAAOJ,OAAOI,KAAf,EAA/B,CAAR;AACAoV,aAAOhM,MAAP,CAAcmrB,QAAd,CAAuBlgB,CAAvB,IAA4BzU,MAA5B;AACD,KALH,EAMGO,KANH,CAMS,UAACU,CAAD,EAAO;AACZS,cAAQC,GAAR,CAAY,YAAZ,EAA0BV,CAA1B;AACA+T,eAASoD,UAAT,CAAoB,iDAApB;AACD,KATH;AAWD,GAfD;;AAkBA5C,SAAO0xB,YAAP,GAAsB,UAACh5B,MAAD,EAAY;;AAEhCD,YAAQ/G,MAAR,CAAesO,OAAOhM,MAAP,CAAc5I,QAAd,CAAuB0N,GAAvB,CAA2BjG,KAA1C,EAAiDmN,OAAOhM,MAAP,CAAc5I,QAAd,CAAuBi/B,eAAxE,EAAyFrqB,OAAOhM,MAAP,CAAcpJ,KAAvG,EAA8G8N,OAAO9N,KAArH,EACGL,IADH,CACQ,UAACk9B,GAAD,EAAQ;AACZznB,aAAOhM,MAAP,CAAc+6B,OAAd,CAAsB5mB,MAAtB,CAA6Bze,EAAEy8B,OAAF,CAAUnmB,OAAOhM,MAAP,CAAc+6B,OAAxB,EAAiC,EAACnkC,OAAO8N,OAAO9N,KAAf,EAAjC,EAAwD,CAAxD,CAA7B;AACD,KAHH,EAIGG,KAJH,CAIS,UAACU,CAAD,EAAO;AACZS,cAAQC,GAAR,CAAY,YAAZ,EAA0BV,CAA1B;AACA+T,eAASoD,UAAT,CAAoB,uCAApB;AACD,KAPH;AAQD,GAVD;;AAYA5C,SAAO2xB,YAAP,GAAsB,YAAM;;AAE1B,QAAI3qB,UAAUjF,UAAUiF,OAAV,CAAkB;AAC9BrX,aAAO,gBADuB;AAE9BkS,mBAAa,uDAFiB;AAG9BuF,UAAI,QAH0B;AAI9B9E,cAAQ;AAJsB,KAAlB,CAAd;;AAOAP,cAAUpC,IAAV,CAAeqH,OAAf,EACGzc,IADH,CACQ,UAACgF,QAAD,EAAc;AAChBrD,cAAQC,GAAR,CAAY,WAAZ,EAAyBoD,QAAzB;AACA6I,cAAQzG,MAAR,CAAeqO,OAAOhM,MAAP,CAAc5I,QAAd,CAAuB0N,GAAvB,CAA2BjG,KAA1C,EAAiDmN,OAAOhM,MAAP,CAAc5I,QAAd,CAAuBi/B,eAAxE,EAAyFrqB,OAAOhM,MAAP,CAAcpJ,KAAvG,EACGL,IADH,CACQ,YAAM;AACVyQ,eAAOqN,EAAP,CAAU,0BAAV;AACD,OAHH,EAIGtd,KAJH,CAIS,UAACU,CAAD,EAAO;AACZ+T,iBAASoD,UAAT,CAAoB,2DAApB;AACD,OANH;AAOH,KAVH,EAWG7X,KAXH,CAWS,UAACU,CAAD,EAAO;AACZS,cAAQC,GAAR,CAAY,OAAZ,EAAqBV,CAArB;AACA+T,eAASoD,UAAT,CAAoB,uBAApB;AACD,KAdH;AAgBD,GAzBD;AA2BD,CAzTD,CADA;ACAA;ACAA;;;ACAApa,IAAIuX,UAAJ,CAAe,yBAAf,EAA0C,CAAC,IAAD,EAAO,QAAP,EAAiB,UAAjB,EAA6B,QAA7B,EAAuC,SAAvC,EAAkD,UAACnW,EAAD,EAAKoW,MAAL,EAAaU,QAAb,EAAuB1F,MAAvB,EAA+BrK,OAA/B,EAA2C;;AAErIqP,SAAOrP,OAAP,GAAiBA,OAAjB;;AAEAqP,SAAO1L,MAAP,GAAgB;AACd2rB,YAAQ,YADM;AAEd/yB,WAAO,IAFO;AAGdmb,QAAI;AAHU,GAAhB;;AAMArI,SAAO4xB,MAAP,GAAgB;AACdh6B,SAAK/C,SAASlE,QAAQkhC,QAAjB,EAA2BC,cAA3B,EADS;AAEdC,QAAIl9B,SAASlE,QAAQqhC,OAAjB,EAA0BF,cAA1B;AAFU,GAAhB;;AAKA9xB,SAAOiyB,QAAP,GAAkB,EAAlB;AACAjyB,SAAOiyB,QAAP,CAAgB1hC,MAAhB,GAAyB;AACvB9F,UAAM,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CADiB;AAEvBwE,YAAQ,CACN,UADM,EACM,KADN,EACa,mBADb,EACkC,iBADlC,CAFe;AAKvBijC,YAAQ,CACN,SADM,EAEN,SAFM,EAGN,SAHM,EAIN,SAJM,CALe;AAYvB7jC,aAAS;AACPsuB,cAAQ;AACNwV,iBAAS,IADH;AAENx6B,kBAAU;AAFJ;AADD;AAZc,GAAzB;;AAoBAqI,SAAOiyB,QAAP,CAAgBlhC,UAAhB,GAA6B;AAC3BtG,UAAM,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CADqB;AAE3BwE,YAAQ,CACN,UADM,EACM,KADN,EACa,mBADb,EACkC,iBADlC,EACqD,SADrD,CAFmB;AAK3BijC,YAAQ,CACN,SADM,EAEN,SAFM,EAGN,SAHM,EAIN,SAJM,EAKN,SALM,CALmB;AAa3B7jC,aAAS;AACPsuB,cAAQ;AACNwV,iBAAS,IADH;AAENx6B,kBAAU;AAFJ;AADD;AAbkB,GAA7B;;AAqBA+I,WAAS,YAAM;AACbV,WAAOiyB,QAAP,CAAgB1hC,MAAhB,CAAuB9F,IAAvB,GAA8B,CAC5BkG,QAAQyhC,UADoB,EAE5BzhC,QAAQ0hC,KAFoB,EAG5B1hC,QAAQ2hC,kBAHoB,EAI5B3hC,QAAQ4hC,gBAJoB,CAA9B;AAMD,GAPD,EAOG,GAPH;;AASA7xB,WAAS,YAAM;AACbV,WAAOiyB,QAAP,CAAgBlhC,UAAhB,CAA2BtG,IAA3B,GAAkC,CAChCkG,QAAQ6hC,WADwB,EAEhC7hC,QAAQ8hC,MAFwB,EAGhC9hC,QAAQ+hC,mBAHwB,EAIhC/hC,QAAQgiC,iBAJwB,EAKhChiC,QAAQiiC,UALwB,CAAlC;AAOD,GARD,EAQE,GARF;;AAWA5yB,SAAO1L,MAAP,CAAc+T,EAAd,GAAmB,YAAM;;AAEvB;AACA,QAAGrI,OAAO1L,MAAP,CAAc2rB,MAAd,KAAyB,YAA5B,EAA0CjlB,OAAOqN,EAAP,CAAU,oCAAV,EAAgD,EAACnX,SAAS,EAACoD,QAAQ0L,OAAO1L,MAAP,CAAcpH,KAAvB,EAAV,EAAhD;AAC1C,QAAG8S,OAAO1L,MAAP,CAAc2rB,MAAd,KAAyB,QAA5B,EAAsCjlB,OAAOqN,EAAP,CAAU,gCAAV,EAA4C,EAACnX,SAAS,EAACoD,QAAQ0L,OAAO1L,MAAP,CAAcpH,KAAvB,EAAV,EAA5C;AAEvC,GAND;AAQD,CArFyC,CAA1C;;;ACAA1E,IAAIuX,UAAJ,CAAe,2BAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,cAA/C,EAA+D,YAA/D,EAA6E,qBAA7E,EAAoG,mBAApG,EAAyH,UAAzH,EAAqI,QAArI,EAA+I,OAA/I,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQgX,KAAR,EAAemB,SAAf,EAA0BvC,QAA1B,EAAoCugB,SAApC,EAA+CvrB,OAA/C,EAAwDiI,QAAxD,EAAkErM,GAAlE,EAAuExC,KAAvE,EAA8EwQ,MAA9E,EAAsFpV,KAAtF,EAAgG;;AAE9F4X,QAAM6S,YAAN,GAAqBsM,UAAUz1B,GAAV,CAAc,aAAd,CAArB;AACAsW,QAAM8iB,eAAN,GAAwB,KAAxB;AACA9iB,QAAM5X,KAAN,GAAcP,QAAQ0C,IAAR,CAAanC,KAAb,CAAd;AACA4X,QAAM6iB,UAAN,GAAoBrlB,WAAW,KAAZ,GAAqB,QAArB,GAAgC,QAAnD;AACAwC,QAAMnN,IAAN,GAAa7F,MAAM6H,GAAnB;AACAmL,QAAMxC,MAAN,GAAeA,MAAf;;AAEAwC,QAAMrQ,MAAN,GAAe;AACb0zB,WAAO,KADM;AAEbC,WAAO,IAFM;AAGbC,cAAU;AAHG,GAAf;;AAQAvjB,QAAMgkB,MAAN,GAAe,YAAM;AACnBhkB,UAAMmqB,QAAN,CAAerG,aAAf;;AAEA,QAAG,CAAC9jB,MAAMmqB,QAAN,CAAepG,MAAnB,EAA2BnlB,SAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAY,wCAAb,EAAhB,CAAd;;AAE3B;AACA,QAAGjB,MAAMmqB,QAAN,CAAepG,MAAlB,EAA0B;;AAExB/jB,YAAMpP,SAAN,CAAgB2N,YAAhB,GAA+BzV,EAAE2H,IAAF,CAAOuP,MAAMnU,OAAN,CAAcvC,GAArB,EAA0B,GAA1B,CAA/B;;AAEA;AACA,UAAGkU,WAAW,KAAd,EAAqB;AACnB;AACAhO,YAAIW,UAAJ,CAAe9C,MAAf,CAAsB2S,MAAMpP,SAA5B,EAAuCjH,IAAvC,CACE,UAACmtB,QAAD,EAAc;AACZ3V,oBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,KAAT,EAAgB/E,MAAMitB,QAAtB,EAAf;AACD,SAHH,EAIE,UAAC1sB,GAAD,EAAS;AACPkB,kBAAQC,GAAR,CAAY,wBAAZ,EAAsCnB,GAAtC;AACAwU,mBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,8FAAd,EAAhB,CAAd;AACD,SAPH;AASD,OAXD,MAWO;AACL;AACAzR,YAAIW,UAAJ,CAAe9F,MAAf,CAAsB2V,MAAMpP,SAA5B,EAAuCjH,IAAvC,CACE,UAACsoC,WAAD,EAAiB;AACf3mC,kBAAQC,GAAR,CAAY,aAAZ,EAA2B0mC,WAA3B;AACA9wB,oBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,QAAT,EAAmB/E,MAAMooC,WAAzB,EAAf;AACD,SAJH,EAKE,UAAC7nC,GAAD,EAAS;AACPkB,kBAAQC,GAAR,CAAY,wBAAZ,EAAsCnB,GAAtC;AACAwU,mBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,iGAAd,EAAhB,CAAd;AACD,SARH;AAUD;AAEF;AACF,GArCD;;AAuCA;AACAjB,QAAM0B,MAAN,GAAe,YAAM;AACnBP,cAAUO,MAAV,CAAiB,4BAAjB;AACD,GAFD;;AAKA;AACA1B,QAAMG,MAAN,CAAa,cAAb,EAA6B,UAAC8kB,MAAD,EAASC,MAAT,EAAoB;;AAE/C;AACA,QAAG,CAACA,WAAW75B,SAAX,IAAwB65B,WAAW,IAApC,KAA8CD,WAAW55B,SAAX,IAAwB45B,WAAW,IAApF,EAA2F;AACzFjlB,YAAMmlB,gBAAN;AACD,KAFD,MAEO;AACL;AACA,UAAGnlB,MAAMrQ,MAAN,CAAa4zB,QAAhB,EAA0BvjB,MAAMmlB,gBAAN;AAC3B;;AAED;AACA,QAAGF,WAAW,IAAX,IAAmBA,WAAW55B,SAAjC,EAA4C2U,MAAMrQ,MAAN,CAAa4zB,QAAb,GAAwB,KAAxB;AAC7C,GAZD;;AAeA;AACAvjB,QAAMmlB,gBAAN,GAAyB,YAAM;AAC7BnlB,UAAMrQ,MAAN,CAAa2zB,KAAb,GAAqB,IAArB;AACAtjB,UAAMrQ,MAAN,CAAa0zB,KAAb,GAAqB,KAArB;;AAEA,QAAGrjB,MAAM5X,KAAN,CAAYyF,GAAZ,KAAoB,EAApB,IAA0BmS,MAAM5X,KAAN,CAAYyF,GAAZ,KAAoBxC,SAA9C,IAA2D2U,MAAM5X,KAAN,CAAYyF,GAAZ,KAAoB,IAAlF,EAAwF;AACtFmS,YAAMrQ,MAAN,CAAa2zB,KAAb,GAAqB,KAArB;AACAtjB,YAAMrQ,MAAN,CAAa0zB,KAAb,GAAqB,KAArB;AACA;AACD;;AAED;AACA7zB,QAAIE,QAAJ,CAAaC,MAAb,CAAoBqQ,MAAM5X,KAAN,CAAYyF,GAAhC,EAAqClE,IAArC,CACE,UAACC,MAAD,EAAY;AACVoW,YAAMrQ,MAAN,CAAa2zB,KAAb,GAAqB,KAArB;AACAtjB,YAAMrQ,MAAN,CAAa0zB,KAAb,GAAqB,IAArB;;AAEA;AACArjB,YAAM5X,KAAN,CAAYsD,IAAZ,GAAmBsU,MAAM5X,KAAN,CAAYyF,GAAZ,CAAgBsQ,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAnB;AACA6B,YAAM5X,KAAN,CAAY2F,IAAZ,GAAmBiS,MAAM5X,KAAN,CAAYyF,GAAZ,CAAgBsQ,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAnB;AACA6B,YAAM5X,KAAN,CAAY8pC,aAAZ,GAA4BlyB,MAAM5X,KAAN,CAAYyF,GAAZ,CAAgBsQ,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAA5B;AAED,KAVH,EAWE,UAAC/T,GAAD,EAAS;AACP4V,YAAMrQ,MAAN,CAAa2zB,KAAb,GAAqB,KAArB;AACAtjB,YAAMrQ,MAAN,CAAa0zB,KAAb,GAAqB,KAArB;AACD,KAdH;AAgBD,GA3BD;AA6BD,CA7GD,CADA,E,CA8GK;;;AC9GLz7B,IAAIuX,UAAJ,CAAe,6BAAf,EACE,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,mBAAnC,EAAwD,SAAxD,EACE,UAACnW,EAAD,EAAKF,CAAL,EAAQkX,KAAR,EAAemB,SAAf,EAA0B3R,GAA1B,EAA+Bc,OAA/B,EAA2C;;AAEzC0P,QAAM0B,MAAN,GAAe,YAAM;AACnBP,cAAU5B,IAAV;AACD,GAFD;;AAIA;AACAS,QAAMvX,MAAN,GAAe6H,OAAf;AACA,MAAG,CAAC0P,MAAMvX,MAAN,CAAaoF,GAAjB,EAAsBmS,MAAMvX,MAAN,CAAaoF,GAAb,GAAmB,EAAnB;AACtB,MAAG,CAACmS,MAAMvX,MAAN,CAAasF,IAAjB,EAAuBiS,MAAMvX,MAAN,CAAasF,IAAb,GAAoB,EAApB;AACvB,MAAG,CAACiS,MAAMvX,MAAN,CAAaypC,aAAjB,EAAgClyB,MAAMvX,MAAN,CAAaypC,aAAb,GAA6B,EAA7B;AAChC,MAAG,CAAClyB,MAAMvX,MAAN,CAAa0pC,QAAjB,EAA2BnyB,MAAMvX,MAAN,CAAa0pC,QAAb,GAAwB,EAAxB;AAC3B,MAAG,CAACnyB,MAAMvX,MAAN,CAAa2pC,cAAjB,EAAiCpyB,MAAMvX,MAAN,CAAa2pC,cAAb,GAA8B,EAA9B;;AAEjC;AACApyB,QAAM+W,GAAN,GAAY;AACVnU,YAAQ;AACN/U,WAAK,IADC;AAENE,YAAM,IAFA;AAGNmkC,qBAAe,IAHT;AAINC,gBAAU,IAJJ;AAKNC,sBAAgB;AALV;AADE,GAAZ;;AAUA;AACApyB,QAAMgY,aAAN,GAAsB,UAACnsB,OAAD,EAAa;AACjC;AACA,QAAIhE,QAAQowB,QAAR,CAAiBpsB,OAAjB,CAAJ,EAA+B,OAAOA,OAAP;;AAE/B;AACA,WAAO,EAAEA,SAASA,OAAX,EAAoBH,MAAM,KAA1B,EAAP;AACD,GAND;;AASA;AACAsU,QAAMnU,OAAN,GAAgB,EAAC6H,QAAQ,EAAT,EAAhB;AACAsM,QAAMnU,OAAN,CAAcpD,MAAd,GAAuB,UAAC6D,KAAD,EAAW;AAChC,QAAIoB,WAAW1E,GAAG2E,KAAH,EAAf;AACA,QAAGrB,MAAMiK,MAAN,GAAe,CAAlB,EAAqB7I,SAASlE,OAAT,CAAiB,EAAjB;;AAErB,QAAG8C,MAAMiK,MAAN,IAAgB,CAAnB,EAAsB;AACpB/G,UAAIQ,eAAJ,CAAoB1D,KAApB,EAA2B3C,IAA3B,CACE,UAACy2B,OAAD,EAAa;AACX1yB,iBAASlE,OAAT,CAAiB42B,OAAjB;AACD,OAHH,EAIE,UAACh2B,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,+CAAZ,EAA6DnB,GAA7D;AACD,OANH;AAQD;AACD,WAAOsD,SAASoB,OAAhB;AACD,GAfD;;AAiBA;AACAkR,QAAM+W,GAAN,CAAUvZ,MAAV,GAAmB,UAAC9R,IAAD,EAAU;AAC3B,QAAGsU,MAAM+W,GAAN,CAAUnU,MAAV,CAAiBlX,IAAjB,MAA2B,IAA3B,IAAmCsU,MAAM+W,GAAN,CAAUnU,MAAV,CAAiBlX,IAAjB,MAA2BL,SAAjE,EAA4E,OAAO,IAAP;;AAE5E;AACA2U,UAAMvX,MAAN,CAAaiD,IAAb,EAAmBqG,IAAnB,CAAwBiO,MAAM+W,GAAN,CAAUnU,MAAV,CAAiBlX,IAAjB,CAAxB;AACAsU,UAAMnU,OAAN,CAAc6H,MAAd,CAAqBsM,MAAMnU,OAAN,CAAc6H,MAAd,CAAqB6C,MAA1C,IAAoDyJ,MAAM+W,GAAN,CAAUnU,MAAV,CAAiBlX,IAAjB,CAApD;AACAsU,UAAM+W,GAAN,CAAUnU,MAAV,CAAiBlX,IAAjB,IAAyB,IAAzB;AACD,GAPD;;AASA;AACAsU,QAAMqyB,iBAAN,GAA0B,UAAC3mC,IAAD,EAAOic,KAAP,EAAiB;AACzC3H,UAAMvX,MAAN,CAAaiD,IAAb,EAAmB6b,MAAnB,CAA0BI,KAA1B,EAAiC,CAAjC;AACD,GAFD;;AAIA3H,QAAMJ,IAAN,GAAa,YAAM;AACjBuB,cAAU5B,IAAV,CAAeS,MAAMvX,MAArB;AACD,GAFD;AAID,CA1EH,CADF;;;ACAAb,IAAIuX,UAAJ,CAAe,sBAAf,EACA,CAAC,YAAD,EAAe,IAAf,EAAqB,GAArB,EAA0B,QAA1B,EAAoC,WAApC,EAAiD,WAAjD,EAA8D,UAA9D,EAA0E,UAA1E,EAAsF,mBAAtF,EAA2G,QAA3G,EAAqH,cAArH,EACA,UAAClX,UAAD,EAAae,EAAb,EAAiBF,CAAjB,EAAoBsW,MAApB,EAA4BkzB,SAA5B,EAAuCnxB,SAAvC,EAAkDvC,QAAlD,EAA4D2zB,QAA5D,EAAsE/iC,GAAtE,EAA2EG,MAA3E,EAAmF0kB,YAAnF,EAAoG;;AAElGjV,SAAOzP,MAAP,GAAgBA,MAAhB;;AAEA;AACAyP,SAAOozB,WAAP,GAAqB,UAACrvB,MAAD,EAAY;AAC/BhC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,mDAFA;AAGbC,cAAQ;AACN3O,iBAASmiC,UAAUniC;AADb,OAHK;AAMb+S,uBAAiB,KANJ;AAOblE,kBAAY;AAPC,KAAf,EAQGxV,IARH;AASE;AACA,cAAC2G,OAAD,EAAa;AACXmiC,gBAAUC,UAAV,CAAqBpiC,OAArB,EADW,CACoB;AAC/BmiC,gBAAUE,aAAV,GAFW,CAEgB;AAC5B,KAbH;AAcE;AACA,gBAAM,CAEL,CAjBH;AAmBD,GApBD;;AAsBA,MAAIF,YAAY;AACdpjC,aAAS,CADK,EACM;AACpBe,WAAO,GAFO,EAEM;AACpBC,YAAQ,CAHM,EAGM;AACpBuiC,WAAO,CAJO,EAIM;AACpBC,aAASxe,aAAa1kB,MALR,EAKgB;AAC9BW,aAAS,EANK,EAMM;;AAEpB;;;AAGAwiC,eAAW,qBAAM;AACfL,gBAAUG,KAAV,GAAkB9pC,EAAEiqC,IAAF,CAAO9+B,SAASw+B,UAAUI,OAAnB,IAA4BJ,UAAUriC,KAA7C,CAAlB;AACD,KAba;;AAed;;;;;AAKA4iC,kBAAc,wBAAM;AAClB,UAAIC,MAAOR,UAAUpjC,OAAV,GAAoB,CAApB,GAAwB,CAAzB,GAA8B,CAA9B,GAAmCojC,UAAUpjC,OAAV,GAAoB,CAAjE;AACA,UAAI6jC,WAAYD,MAAM,CAAP,GAAa,IAAEA,GAAf,GAAsB,CAArC;AACA,UAAIE,MAAOV,UAAUpjC,OAAV,IAAqB,IAAE6jC,QAAvB,IAAmCT,UAAUG,KAA9C,GAAuDH,UAAUG,KAAjE,GAA0EH,UAAUpjC,OAAV,IAAqB,IAAI6jC,QAAzB,CAApF;AACA,UAAIN,QAAQ,EAAZ;;AAEA,WAAI,IAAIv0B,IAAE40B,GAAV,EAAe50B,IAAI80B,GAAnB,EAAwB90B,GAAxB,EAA6B;AAC3Bu0B,cAAM7gC,IAAN,CAAWsM,CAAX;AACD;;AAED,aAAOu0B,KAAP;AACD,KA/Ba;;AAiCd;;;AAGAQ,iBAAa,uBAAM;AACjB5jC,UAAIG,MAAJ,CAAWgB,KAAX,CAAiB8hC,UAAUniC,OAA3B,EAAoC3G,IAApC,CACE,UAACgH,KAAD,EAAW;AACT8hC,kBAAUI,OAAV,GAAoBliC,MAAMhB,MAA1B;AACA8iC,kBAAUK,SAAV,GAFS,CAEc;AACxB,OAJH,EAKE,UAAC1oC,GAAD,EAAS,CAER,CAPH;AASD,KA9Ca;;AAgDd;;;;;AAKAsoC,gBAAY,oBAACpiC,OAAD,EAAa;AACvB,UAAI+iC,aAAa,EAAjB;AACAvqC,QAAE0H,OAAF,CAAUF,OAAV,EAAmB,UAACxD,KAAD,EAAQrE,MAAR,EAAmB;AACpC,YAAGqE,MAAMyJ,MAAN,GAAe,CAAlB,EAAqB88B,WAAW5qC,MAAX,IAAqBqE,KAArB;AACtB,OAFD;;AAIA;AACA,UAAGhE,EAAEwqC,IAAF,CAAOD,UAAP,MAAuB,CAA1B,EAA6B,OAAOZ,UAAUniC,OAAV,GAAoB,EAA3B;;AAE7BmiC,gBAAUniC,OAAV,GAAoB+iC,UAApB;AAED,KAhEa;;AAkEd;;;AAGAV,mBAAe,yBAAM;AACnBF,gBAAUW,WAAV;AACAX,gBAAUc,UAAV,CAAqB,CAArB;AACD,KAxEa;;AA0Ed;;;AAGA1tB,aAAS,mBAAM;AACb4sB,gBAAUc,UAAV,CAAqBd,UAAUpjC,OAA/B,EADa,CAC4B;AAC1C,KA/Ea;;AAiFd;;;;;;AAMAmkC,kBAAc,sBAAC/qC,MAAD,EAAS4V,CAAT,EAAe;AAC3Bo0B,gBAAUniC,OAAV,CAAkB7H,MAAlB,EAA0B8e,MAA1B,CAAiClJ,CAAjC,EAAmC,CAAnC;AACA;AACA,UAAGo0B,UAAUniC,OAAV,CAAkB7H,MAAlB,EAA0B8N,MAA1B,KAAqC,CAAxC,EAA2C,OAAOk8B,UAAUniC,OAAV,CAAkB7H,MAAlB,CAAP;AAC3CgqC,gBAAUE,aAAV,GAJ2B,CAIA;AAC5B,KA5Fa;;AA8Fd;;;AAGAY,gBAAY,oBAAClU,MAAD,EAAY;;AAEtBp3B,iBAAWgpB,UAAX,GAAwB,IAAxB;;AAEA;AACA,UAAIwiB,cAAchB,UAAUriC,KAAV,IAAmBivB,SAAO,CAA1B,CAAlB,CALsB,CAK0B;;AAEhD7vB,UAAIG,MAAJ,CAAWrG,GAAX,CAAempC,UAAUriC,KAAzB,EAAgCqjC,WAAhC,EAA6ChB,UAAUniC,OAAvD,EAAgE3G,IAAhE,CACE,UAACyN,OAAD,EAAa;;AAEX,YAAIs8B,aAAa7oB,SAASC,cAAT,CAAwB,gBAAxB,CAAjB;AACA4oB,mBAAWxnB,SAAX,GAAuB,CAAvB;;AAEA;AACA9M,eAAOzP,MAAP,GAAgByH,OAAhB;;AAEAq7B,kBAAUpjC,OAAV,GAAoBgwB,MAApB;AACAp3B,mBAAWgpB,UAAX,GAAwB,KAAxB;AACD,OAXH,EAYE,UAAC7mB,GAAD,EAAS,CAER,CAdH;AAgBD;AAxHa,GAAhB;;AA2HA;;;;;AAKAgV,SAAOu0B,YAAP,GAAsB,UAACxwB,MAAD,EAAY;AAChChC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,iDAFA;AAGbC,cAAQ;AACNzB,gBAAQ,KADF;AAENpV,eAAO;AAFD,OAHK;AAObwrC,gBAAU,IAPG;AAQbvwB,uBAAiB,KARJ;AASblE,kBAAY;AATC,KAAf,EAUGxV,IAVH;AAWE;AACA,cAACC,MAAD,EAAY;;AAEV,UAAGA,OAAOgF,MAAP,KAAkB,KAArB,EAA4B;AAC1B;AACA6jC,kBAAU5sB,OAAV;AACAjH,iBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,8BAAd,EAAhB,CAAd;AACD;AAEF,KApBH;AAqBE;AACA,gBAAM,CAEL,CAxBH;AA0BD,GA3BD;;AA6BAwxB,YAAUK,SAAV;AACA1zB,SAAOsJ,QAAP,GAAkB+pB,SAAlB;AAED,CA5LD,CADA;;;ACAA7qC,IAAIuX,UAAJ,CAAe,+BAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,cAA/C,EAA+D,YAA/D,EAA6E,qBAA7E,EAAoG,mBAApG,EAAyH,UAAzH,EAAqI,QAArI,EAA+I,WAA/I,EAA4J,YAA5J,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQgX,KAAR,EAAemB,SAAf,EAA0BvC,QAA1B,EAAoCugB,SAApC,EAA+CvrB,OAA/C,EAAwDiI,QAAxD,EAAkErM,GAAlE,EAAuExC,KAAvE,EAA8EwQ,MAA9E,EAAsF5M,SAAtF,EAAiGnB,UAAjG,EAAgH;;AAE9GuQ,QAAM6S,YAAN,GAAqBsM,UAAUz1B,GAAV,CAAc,aAAd,CAArB;AACAsW,QAAM8iB,eAAN,GAAwB,KAAxB;AACA9iB,QAAMpP,SAAN,GAAkB/I,QAAQ0C,IAAR,CAAaqG,SAAb,CAAlB;AACAoP,QAAMpP,SAAN,CAAgB4N,OAAhB,GAA0B1V,EAAE2H,IAAF,CAAOuP,MAAMpP,SAAN,CAAgB4N,OAAvB,EAAgC,GAAhC,CAA1B;AACAwB,QAAMpP,SAAN,CAAgB2N,YAAhB,GAA+BzV,EAAE2H,IAAF,CAAOuP,MAAMpP,SAAN,CAAgB2N,YAAvB,EAAqC,GAArC,CAA/B;AACAyB,QAAM6iB,UAAN,GAAoBrlB,WAAW,KAAZ,GAAqB,QAArB,GAAgC,QAAnD;AACAwC,QAAMvQ,UAAN,GAAmBA,UAAnB;AACAuQ,QAAMnN,IAAN,GAAa7F,MAAM6H,GAAnB;AACAmL,QAAMxC,MAAN,GAAeA,MAAf;;AAEAwC,QAAMnU,OAAN,GAAgB,EAAhB;AACAmU,QAAMnU,OAAN,CAAcvC,GAAd,GAAoB,EAApB;AACA0W,QAAMnU,OAAN,CAAckrB,GAAd,GAAoB,EAApB;AACA/W,QAAMnU,OAAN,CAAcvC,GAAd,GAAoBsH,UAAU2N,YAA9B;;AAEAyB,QAAMxB,OAAN,GAAgB,EAAhB;AACAwB,QAAMxB,OAAN,CAAclV,GAAd,GAAoB,EAApB;AACA0W,QAAMxB,OAAN,CAAcuY,GAAd,GAAoB,EAApB;AACA/W,QAAMxB,OAAN,CAAclV,GAAd,GAAoBsH,UAAU4N,OAA9B;;AAEAlT,UAAQC,GAAR,CAAYyU,MAAMxB,OAAlB,EAA2B5N,SAA3B;;AAEAtF,UAAQC,GAAR,CAAYyU,MAAMpP,SAAlB;AACAtF,UAAQC,GAAR,CAAY,MAAZ,EAAoByB,KAApB;;AAEAgT,QAAMyG,MAAN,GAAe,CACb,EAAC1X,OAAO,iBAAR,EAA2BvB,aAAa,0BAAxC,EAAoEwE,IAAI,UAAxE,EAAoF62B,SAAS,CAA7F,EADa,EAEb,EAAC95B,OAAO,mBAAR,EAA6BvB,aAAa,4BAA1C,EAAwEwE,IAAI,WAA5E,EAAyF62B,SAAS,CAAlG,EAFa,CAAf;AAIA,MAAI7F,cAAchjB,MAAMgjB,WAAN,GAAoB,CAAtC;;AAEAhjB,QAAMijB,cAAN,GAAuB9D,UAAUz1B,GAAV,CAAc,eAAd,CAAvB;;AAEAsW,QAAMrQ,MAAN,GAAe;AACb0zB,WAAO,KADM;AAEbC,WAAO,IAFM;AAGbC,cAAU;AAHG,GAAf;;AAMAvjB,QAAMwjB,SAAN,GAAkB,YAAM;AACtBxjB,UAAMgjB,WAAN;AACD,GAFD;AAGAhjB,QAAMyjB,SAAN,GAAkB,YAAM;AACtB,QAAIC,aAAJ;AACA;AACA,YAAO1jB,MAAMgjB,WAAb;AACE,WAAK,CAAL;AACEU,eAAO1jB,MAAM4jB,aAAb;AACA;AACF,WAAK,CAAL;AACEF,eAAO1jB,MAAMmqB,QAAb;AACA;AANJ;;AASAzG,SAAKI,aAAL;AACA,QAAGJ,KAAKK,MAAR,EAAgB;AACd/jB,YAAMgjB,WAAN;AACD;;AAED13B,YAAQC,GAAR,CAAY,iBAAZ,EAA+Bm4B,KAAKK,MAApC,EAA4CL,IAA5C;;AAEA,QAAG,CAACA,KAAKK,MAAT,EAAiBnlB,SAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAY,wCAAb,EAAhB,CAAd;AAClB,GApBD;;AAsBAjB,QAAMgkB,MAAN,GAAe,YAAM;AACnBhkB,UAAMmqB,QAAN,CAAerG,aAAf;;AAEA,QAAG,CAAC9jB,MAAMmqB,QAAN,CAAepG,MAAnB,EAA2BnlB,SAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAY,wCAAb,EAAhB,CAAd;;AAE3B;AACA,QAAGjB,MAAMmqB,QAAN,CAAepG,MAAlB,EAA0B;;AAExB/jB,YAAMpP,SAAN,CAAgB2N,YAAhB,GAA+BzV,EAAE2H,IAAF,CAAOuP,MAAMnU,OAAN,CAAcvC,GAArB,EAA0B,GAA1B,CAA/B;AACA0W,YAAMpP,SAAN,CAAgB4N,OAAhB,GAA0B1V,EAAE2H,IAAF,CAAOuP,MAAMxB,OAAN,CAAclV,GAArB,EAA0B,GAA1B,CAA1B;;AAEA;AACA,UAAGkU,WAAW,KAAd,EAAqB;AACnB;AACAhO,YAAIW,UAAJ,CAAe9C,MAAf,CAAsB2S,MAAMpP,SAA5B,EAAuCjH,IAAvC,CACE,UAACmtB,QAAD,EAAc;AACZ3V,oBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,KAAT,EAAgB/E,MAAMitB,QAAtB,EAAf;AACD,SAHH,EAIE,UAAC1sB,GAAD,EAAS;AACPkB,kBAAQC,GAAR,CAAY,wBAAZ,EAAsCnB,GAAtC;AACAwU,mBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,8FAAd,EAAhB,CAAd;AACD,SAPH;AASD,OAXD,MAWO;AACL;AACAzR,YAAIW,UAAJ,CAAe9F,MAAf,CAAsB2V,MAAMpP,SAA5B,EAAuCjH,IAAvC,CACE,UAACsoC,WAAD,EAAiB;AACf3mC,kBAAQC,GAAR,CAAY,aAAZ,EAA2B0mC,WAA3B;AACA9wB,oBAAU5B,IAAV,CAAe,EAAC3Q,QAAQ,QAAT,EAAmB/E,MAAMooC,WAAzB,EAAf;AACD,SAJH,EAKE,UAAC7nC,GAAD,EAAS;AACPkB,kBAAQC,GAAR,CAAY,wBAAZ,EAAsCnB,GAAtC;AACAwU,mBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,iGAAd,EAAhB,CAAd;AACD,SARH;AAUD;AAEF;AACF,GAtCD;;AAwCA;AACAjB,QAAM0B,MAAN,GAAe,YAAM;AACnBP,cAAUO,MAAV,CAAiB,4BAAjB;AACD,GAFD;;AAIA;AACA1B,QAAMwkB,aAAN,GAAsB,UAACnb,UAAD,EAAgB;AACpC,WAAOA,aAAarJ,MAAM6S,YAAN,CAAmB/mB,WAAnB,CAA+BrD,MAA/B,CAAuCg8B,eAAepb,UAAf,CAAvC,CAAb,GAAmFrJ,MAAM6S,YAAN,CAAmB/mB,WAA7G;AACD,GAFD;;AAKA;AACAkU,QAAM0kB,WAAN,GAAoB,UAACrb,UAAD,EAAgB;AAClC,WAAOA,aAAarJ,MAAM6S,YAAN,CAAmBhnB,OAAnB,CAA2BpD,MAA3B,CAAmCg8B,eAAepb,UAAf,CAAnC,CAAb,GAA+ErJ,MAAM6S,YAAN,CAAmBhnB,OAAzG;AACD,GAFD;;AAIA;AACA,MAAI44B,iBAAiB,SAAjBA,cAAiB,CAACn4B,KAAD,EAAW;;AAE9B,QAAIq4B,iBAAiB98B,QAAQ+8B,SAAR,CAAkBt4B,KAAlB,CAArB,CAF8B,CAEiB;;AAE/C;AACA,WAAO,UAAC4D,KAAD,EAAW;AAChB,aAAQA,MAAMvH,OAAN,CAAcg8B,cAAd,IAAgC,CAAC,CAAzC;AACD,KAFD;AAGD,GARD;;AAUA;AACA3kB,QAAM+kB,SAAN,GAAkB,YAAM;;AAEtB;AACA/kB,UAAMglB,UAAN,GAAmB,KAAnB;;AAEA,QAAGhlB,MAAMpP,SAAN,CAAgBszB,OAAhB,KAA4B,QAA/B,EAAyC;AACzC,QAAGlkB,MAAMpP,SAAN,CAAgBijC,MAAhB,KAA2B,IAA3B,IAAmC7zB,MAAMpP,SAAN,CAAgBijC,MAAhB,KAA2B,EAAjE,EAAqE;;AAErE;AACA,QAAI//B,aAAJ;;AAEAA,WAAOkM,MAAMpP,SAAN,CAAgBijC,MAAhB,CAAuBjzB,KAAvB,CAA6B,aAA7B,EAA4C,CAA5C,CAAP;;AAEA;AACAZ,UAAMglB,UAAN,GAAmB,IAAnB;;AAEA;AACApxB,YAAQC,OAAR,CAAgBC,IAAhB,EAAsBnK,IAAtB,CACE,UAACkK,OAAD,EAAa;AACXmM,YAAM8iB,eAAN,GAAwB,IAAxB;AACA9iB,YAAMpP,SAAN,CAAgBuzB,QAAhB,GAA2BtwB,QAAQ9E,KAAnC;AACAiR,YAAMpP,SAAN,CAAgBszB,OAAhB,GAA0B,QAA1B;AACAlkB,YAAMglB,UAAN,GAAmB,KAAnB;AACD,KANH,EAOE,UAAC56B,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,qCAAZ,EAAmDnB,GAAnD;AACD,KATH;AAWD,GA5BD;;AA8BA;AACA4V,QAAMG,MAAN,CAAa,4BAAb,EAA2C,UAAC8kB,MAAD,EAASC,MAAT,EAAoB;;AAE7D;AACA,QAAG,CAACA,WAAW75B,SAAX,IAAwB65B,WAAW,IAApC,KAA8CD,WAAW55B,SAAX,IAAwB45B,WAAW,IAApF,EAA2F;AACzFjlB,YAAMmlB,gBAAN;AACD,KAFD,MAEO;AACL;AACA,UAAGnlB,MAAMrQ,MAAN,CAAa4zB,QAAhB,EAA0BvjB,MAAMmlB,gBAAN;AAC3B;;AAED;AACA,QAAGF,WAAW,IAAX,IAAmBA,WAAW55B,SAAjC,EAA4C2U,MAAMrQ,MAAN,CAAa4zB,QAAb,GAAwB,KAAxB;AAC7C,GAZD;;AAcA;AACAvjB,QAAMnU,OAAN,CAAc5B,GAAd,GAAoB,UAACiG,KAAD,EAAW;AAC7B,QAAG8P,MAAMnU,OAAN,CAAcvC,GAAd,KAAsB+B,SAAzB,EAAoC2U,MAAMnU,OAAN,CAAcvC,GAAd,GAAoB,EAApB;AACpC,QAAG4G,UAAU,IAAV,IAAkBA,UAAU,EAA/B,EAAmC;AACnC8P,UAAMnU,OAAN,CAAcvC,GAAd,CAAkByI,IAAlB,CAAuB7B,KAAvB;AACA8P,UAAMnU,OAAN,CAAckrB,GAAd,GAAoB,IAApB;AACD,GALD;AAMA/W,QAAMnU,OAAN,CAAciF,MAAd,GAAuB,UAACuN,CAAD,EAAO;AAC5B2B,UAAMnU,OAAN,CAAcvC,GAAd,CAAkBie,MAAlB,CAAyBlJ,CAAzB,EAA2B,CAA3B;AACD,GAFD;;AAIA;AACA2B,QAAMxB,OAAN,CAAcvU,GAAd,GAAoB,UAACiG,KAAD,EAAW;AAC7B,QAAG8P,MAAMxB,OAAN,CAAclV,GAAd,KAAsB+B,SAAzB,EAAoC2U,MAAMxB,OAAN,CAAclV,GAAd,GAAoB,EAApB;AACpC,QAAG4G,UAAU,IAAV,IAAkBA,UAAU,EAA/B,EAAmC;AACnC8P,UAAMxB,OAAN,CAAclV,GAAd,CAAkByI,IAAlB,CAAuB7B,KAAvB;AACA8P,UAAMxB,OAAN,CAAcuY,GAAd,GAAoB,IAApB;AACD,GALD;AAMA/W,QAAMxB,OAAN,CAAc1N,MAAd,GAAuB,UAACuN,CAAD,EAAO;AAC5B2B,UAAMxB,OAAN,CAAclV,GAAd,CAAkBie,MAAlB,CAAyBlJ,CAAzB,EAA2B,CAA3B;AACD,GAFD;;AAIA2B,QAAMnU,OAAN,CAAcpD,MAAd,GAAuB,UAAC6D,KAAD,EAAW;AAChC,QAAIoB,WAAW1E,GAAG2E,KAAH,EAAf;AACA,QAAGrB,MAAMiK,MAAN,GAAe,CAAlB,EAAqB7I,SAASlE,OAAT,CAAiB,EAAjB;;AAErB,QAAG8C,MAAMiK,MAAN,IAAgB,CAAnB,EAAsB;AACpB/G,UAAIQ,eAAJ,CAAoB1D,KAApB,EAA2B3C,IAA3B,CACE,UAACy2B,OAAD,EAAa;AACX1yB,iBAASlE,OAAT,CAAiB42B,OAAjB;AACD,OAHH,EAIE,UAACh2B,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,+CAAZ,EAA6DnB,GAA7D;AACD,OANH;AAQD;AACD,WAAOsD,SAASoB,OAAhB;AACD,GAfD;;AAiBA;AACAkR,QAAMmlB,gBAAN,GAAyB,YAAM;AAC7BnlB,UAAMrQ,MAAN,CAAa2zB,KAAb,GAAqB,IAArB;AACAtjB,UAAMrQ,MAAN,CAAa0zB,KAAb,GAAqB,KAArB;;AAEA,QAAGrjB,MAAMpP,SAAN,CAAgBf,iBAAhB,KAAsC,EAAtC,IAA4CmQ,MAAMpP,SAAN,CAAgBf,iBAAhB,KAAsCxE,SAAlF,IAA+F2U,MAAMpP,SAAN,CAAgBf,iBAAhB,KAAsC,IAAxI,EAA8I;AAC5ImQ,YAAMrQ,MAAN,CAAa2zB,KAAb,GAAqB,KAArB;AACAtjB,YAAMrQ,MAAN,CAAa0zB,KAAb,GAAqB,KAArB;AACA;AACD;;AAED;AACA7zB,QAAIE,QAAJ,CAAaC,MAAb,CAAoBqQ,MAAMpP,SAAN,CAAgBf,iBAApC,EAAuDlG,IAAvD,CACE,UAACC,MAAD,EAAY;AACVoW,YAAMrQ,MAAN,CAAa2zB,KAAb,GAAqB,KAArB;AACAtjB,YAAMrQ,MAAN,CAAa0zB,KAAb,GAAqB,IAArB;AACD,KAJH,EAKE,UAACj5B,GAAD,EAAS;AACP4V,YAAMrQ,MAAN,CAAa2zB,KAAb,GAAqB,KAArB;AACAtjB,YAAMrQ,MAAN,CAAa0zB,KAAb,GAAqB,KAArB;AACD,KARH;AAUD,GArBD;AAuBD,CAnPD,CADA,E,CAoPK;;;ACpPLz7B,IAAIuX,UAAJ,CAAe,iCAAf,EACA,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,mBAAnC,EAAwD,YAAxD,EAAsE,SAAtE,EACA,UAACnW,EAAD,EAAKF,CAAL,EAAQkX,KAAR,EAAemB,SAAf,EAA0B3R,GAA1B,EAA+BC,UAA/B,EAA2Ca,OAA3C,EAAuD;;AAErD0P,QAAM0B,MAAN,GAAe,YAAM;AACnBP,cAAU5B,IAAV;AACD,GAFD;;AAIA;AACAS,QAAMvX,MAAN,GAAe6H,OAAf;AACA,MAAG,CAAC0P,MAAMvX,MAAN,CAAa8V,YAAjB,EAA+ByB,MAAMvX,MAAN,CAAa8V,YAAb,GAA4B,EAA5B;AAC/B,MAAG,CAACyB,MAAMvX,MAAN,CAAa+V,OAAjB,EAA0BwB,MAAMvX,MAAN,CAAa+V,OAAb,GAAuB,EAAvB;AAC1B,MAAG,CAACwB,MAAMvX,MAAN,CAAamD,QAAjB,EAA2BoU,MAAMvX,MAAN,CAAamD,QAAb,GAAwB,EAAxB;AAC3B,MAAG,CAACoU,MAAMvX,MAAN,CAAaoH,iBAAjB,EAAoCmQ,MAAMvX,MAAN,CAAaoH,iBAAb,GAAiC,EAAjC;;AAEpC;AACAmQ,QAAMvQ,UAAN,GAAmBA,UAAnB;AACAuQ,QAAM+W,GAAN,GAAY;AACVnU,YAAQ;AACNrE,oBAAc,IADR;AAENC,eAAS,IAFH;AAGN5S,gBAAU,IAHJ;AAINiE,yBAAmB;AAJb;AADE,GAAZ;;AASA;AACAmQ,QAAMgY,aAAN,GAAsB,UAACnsB,OAAD,EAAa;AACjC;AACA,QAAIhE,QAAQowB,QAAR,CAAiBpsB,OAAjB,CAAJ,EAA+B,OAAOA,OAAP;;AAE/B;AACA,WAAO,EAAEA,SAASA,OAAX,EAAoBH,MAAM,KAA1B,EAAP;AACD,GAND;;AASA;AACAsU,QAAMnU,OAAN,GAAgB,EAAC6H,QAAQ,EAAT,EAAhB;AACAsM,QAAMnU,OAAN,CAAcpD,MAAd,GAAuB,UAAC6D,KAAD,EAAW;AAChC,QAAIoB,WAAW1E,GAAG2E,KAAH,EAAf;AACA,QAAGrB,MAAMiK,MAAN,GAAe,CAAlB,EAAqB7I,SAASlE,OAAT,CAAiB,EAAjB;;AAErB,QAAG8C,MAAMiK,MAAN,IAAgB,CAAnB,EAAsB;AACpB/G,UAAIQ,eAAJ,CAAoB1D,KAApB,EAA2B3C,IAA3B,CACE,UAACy2B,OAAD,EAAa;AACX1yB,iBAASlE,OAAT,CAAiB42B,OAAjB;AACD,OAHH,EAIE,UAACh2B,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,+CAAZ,EAA6DnB,GAA7D;AACD,OANH;AAQD;AACD,WAAOsD,SAASoB,OAAhB;AACD,GAfD;;AAiBA;AACAkR,QAAM+W,GAAN,CAAUvZ,MAAV,GAAmB,UAAC9R,IAAD,EAAU;AAC3B,QAAGsU,MAAM+W,GAAN,CAAUnU,MAAV,CAAiBlX,IAAjB,MAA2B,IAA3B,IAAmCsU,MAAM+W,GAAN,CAAUnU,MAAV,CAAiBlX,IAAjB,MAA2BL,SAAjE,EAA4E,OAAO,IAAP;;AAE5E;AACA2U,UAAMvX,MAAN,CAAaiD,IAAb,EAAmBqG,IAAnB,CAAwBiO,MAAM+W,GAAN,CAAUnU,MAAV,CAAiBlX,IAAjB,CAAxB;AACAsU,UAAMnU,OAAN,CAAc6H,MAAd,CAAqBsM,MAAMnU,OAAN,CAAc6H,MAAd,CAAqB6C,MAA1C,IAAoDyJ,MAAM+W,GAAN,CAAUnU,MAAV,CAAiBlX,IAAjB,CAApD;AACAsU,UAAM+W,GAAN,CAAUnU,MAAV,CAAiBlX,IAAjB,IAAyB,IAAzB;AACD,GAPD;;AASA;AACAsU,QAAMqyB,iBAAN,GAA0B,UAAC3mC,IAAD,EAAOic,KAAP,EAAiB;AACzC3H,UAAMvX,MAAN,CAAaiD,IAAb,EAAmB6b,MAAnB,CAA0BI,KAA1B,EAAiC,CAAjC;AACD,GAFD;;AAIA3H,QAAMJ,IAAN,GAAa,YAAM;AACjBuB,cAAU5B,IAAV,CAAeS,MAAMvX,MAArB;AACD,GAFD;AAID,CAzED,CADA;;;ACAAb,IAAIuX,UAAJ,CAAe,0BAAf,EACA,CAAC,YAAD,EAAe,IAAf,EAAqB,GAArB,EAA0B,QAA1B,EAAoC,WAApC,EAAiD,WAAjD,EAA8D,UAA9D,EAA0E,UAA1E,EAAsF,mBAAtF,EAA2G,YAA3G,EAAyH,WAAzH,EAAsI,YAAtI,EACA,UAAClX,UAAD,EAAae,EAAb,EAAiBF,CAAjB,EAAoBsW,MAApB,EAA4BkzB,SAA5B,EAAuCnxB,SAAvC,EAAkDvC,QAAlD,EAA4D2zB,QAA5D,EAAsE/iC,GAAtE,EAA2EW,UAA3E,EAAuFikB,SAAvF,EAAkG3kB,UAAlG,EAAiH;;AAE/G2P,SAAOjP,UAAP,GAAoB,EAApB;;AAEA;AACAiP,SAAO00B,eAAP,GAAyB,UAAC98B,GAAD,EAAS;AAChC,QAAGA,IAAIsH,0BAAJ,CAA+BL,GAA/B,CAAmC1H,MAAnC,GAA4C,CAA5C,IAAiDS,IAAIsH,0BAAJ,CAA+BJ,IAA/B,CAAoC3H,MAApC,GAA6C,CAAjG,EAAoGS,IAAI+8B,OAAJ,GAAc,CAAC/8B,IAAI+8B,OAAnB;AACrG,GAFD;;AAIA;AACA30B,SAAO40B,WAAP,GAAqB,UAACC,GAAD,EAAM1N,MAAN,EAAc2N,EAAd,EAAqB;AACxC,QAAGD,IAAI19B,MAAJ,GAAa,CAAhB,EAAmBgwB,OAAO2N,EAAP,IAAa,CAAC3N,OAAO2N,EAAP,CAAd;AACpB,GAFD;;AAIA;AACA90B,SAAO+0B,WAAP,GAAqB,UAACn9B,GAAD,EAAS;AAC5B,WAAQA,IAAIsH,0BAAJ,CAA+BL,GAA/B,CAAmC1H,MAAnC,GAA4C,CAA5C,IAAiDS,IAAIsH,0BAAJ,CAA+BJ,IAA/B,CAAoC3H,MAApC,GAA6C,CAAtG;AACD,GAFD;;AAIA6I,SAAOg1B,WAAP,GAAqB,UAACC,GAAD,EAAS;AAC5B,WAAOA,IAAIloB,SAAJ,CAAc,CAAd,EAAgB,CAAhB,CAAP;AACD,GAFD;;AAIA;AACA/M,SAAOozB,WAAP,GAAqB,UAACrvB,MAAD,EAAY;AAC/BhC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,2DAFA;AAGbC,cAAQ;AACN3O,iBAASmiC,UAAUniC,OADb;AAENb,oBAAYA;AAFN,OAHK;AAOb4T,uBAAiB,KAPJ;AAQblE,kBAAY;AARC,KAAf,EASGxV,IATH;AAUE;AACA,cAAC2G,OAAD,EAAa;AACXmiC,gBAAUC,UAAV,CAAqBpiC,OAArB,EADW,CACoB;AAC/BmiC,gBAAUE,aAAV,GAFW,CAEgB;AAC5B,KAdH;AAeE;AACA,gBAAM,CAEL,CAlBH;AAoBD,GArBD;;AAuBAvzB,SAAO1L,MAAP,GAAgB,EAAhB;AACA0L,SAAO1L,MAAP,CAAc+T,EAAd,GAAmB,YAAM;AACvBgrB,cAAUniC,OAAV,CAAkBoD,MAAlB,GAA2B0L,OAAO1L,MAAP,CAAcpH,KAAzC;AACAmmC,cAAU5sB,OAAV;AACD,GAHD;;AAKA;AACAzG,SAAOk1B,QAAP,GAAkB,UAACnxB,MAAD,EAASvS,SAAT,EAAuB;AACvCuQ,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,yDAFA;AAGbC,cAAQ;AACNrO,mBAAWA,SADL;AAENnB,oBAAYA;AAFN,OAHK;AAObjG,eAAS;AACPyG,iBAAS,CAAC,IAAD,EAAO,mBAAP,EAA4B,UAACjH,EAAD,EAAKwG,GAAL,EAAa;AAChD,iBAAOA,IAAIS,OAAJ,CAAY,WAAZ,EAAyBW,UAAU5G,KAAnC,CAAP;AACD,SAFQ;AADF,OAPI;AAYbqZ,uBAAiB,KAZJ;AAablE,kBAAY;AAbC,KAAf,EAcGxV,IAdH;AAeE;AACA,gBAAM,CACL,CAjBH;AAkBE;AACA,gBAAM,CAEL,CArBH;AAwBD,GAzBD;;AA2BA,MAAI8oC,YAAY;AACdpjC,aAAS,CADK,EACM;AACpBe,WAAO,GAFO,EAEM;AACpBC,YAAQ,CAHM,EAGM;AACpBuiC,WAAO,CAJO,EAIM;AACpBC,aAASze,UAAUjkB,UALL,EAKiB;AAC/BG,aAAS,EANK,EAMM;;AAEpB;;;AAGAwiC,eAAW,qBAAM;AACfL,gBAAUG,KAAV,GAAkB9pC,EAAEiqC,IAAF,CAAO9+B,SAASw+B,UAAUI,OAAnB,IAA4BJ,UAAUriC,KAA7C,CAAlB;AACD,KAba;;AAed;;;;;AAKA4iC,kBAAc,wBAAM;AAClB,UAAIC,MAAOR,UAAUpjC,OAAV,GAAoB,CAApB,GAAwB,CAAzB,GAA8B,CAA9B,GAAmCojC,UAAUpjC,OAAV,GAAoB,CAAjE;AACA,UAAI6jC,WAAYD,MAAM,CAAP,GAAa,IAAEA,GAAf,GAAsB,CAArC;AACA,UAAIE,MAAOV,UAAUpjC,OAAV,IAAqB,IAAE6jC,QAAvB,IAAmCT,UAAUG,KAA9C,GAAuDH,UAAUG,KAAjE,GAA0EH,UAAUpjC,OAAV,IAAqB,IAAI6jC,QAAzB,CAApF;AACA,UAAIN,QAAQ,EAAZ;;AAEA,WAAI,IAAIv0B,IAAE40B,GAAV,EAAe50B,IAAI80B,GAAnB,EAAwB90B,GAAxB,EAA6B;AAC3Bu0B,cAAM7gC,IAAN,CAAWsM,CAAX;AACD;;AAED,aAAOu0B,KAAP;AACD,KA/Ba;;AAiCd;;;AAGAQ,iBAAa,uBAAM;AACjB5jC,UAAIW,UAAJ,CAAeQ,KAAf,CAAqB8hC,UAAUniC,OAA/B,EAAwC3G,IAAxC,CACE,UAACgH,KAAD,EAAW;AACT8hC,kBAAUI,OAAV,GAAoBliC,MAAMR,UAA1B;AACAsiC,kBAAUK,SAAV,GAFS,CAEc;AACxB,OAJH,EAKE,UAAC1oC,GAAD,EAAS,CAER,CAPH;AASD,KA9Ca;;AAgDd;;;;;AAKAsoC,gBAAY,oBAACpiC,OAAD,EAAa;AACvB,UAAI+iC,aAAa,EAAjB;AACAvqC,QAAE0H,OAAF,CAAUF,OAAV,EAAmB,UAACxD,KAAD,EAAQrE,MAAR,EAAmB;AACpC,YAAGqE,MAAMyJ,MAAN,GAAe,CAAlB,EAAqB88B,WAAW5qC,MAAX,IAAqBqE,KAArB;AACtB,OAFD;;AAIA;AACA,UAAGhE,EAAEwqC,IAAF,CAAOD,UAAP,MAAuB,CAA1B,EAA6B,OAAOZ,UAAUniC,OAAV,GAAoB,EAA3B;;AAE7BmiC,gBAAUniC,OAAV,GAAoB+iC,UAApB;AAED,KAhEa;;AAkEd;;;AAGAV,mBAAe,yBAAM;AACnBF,gBAAUW,WAAV;AACAX,gBAAUc,UAAV,CAAqB,CAArB;AACD,KAxEa;;AA0Ed;;;AAGA1tB,aAAS,mBAAM;AACb4sB,gBAAUc,UAAV,CAAqBd,UAAUpjC,OAA/B,EADa,CAC4B;AAC1C,KA/Ea;;AAiFd;;;;;;AAMAmkC,kBAAc,sBAAC/qC,MAAD,EAAS4V,CAAT,EAAe;AAC3Bo0B,gBAAUniC,OAAV,CAAkB7H,MAAlB,EAA0B8e,MAA1B,CAAiClJ,CAAjC,EAAmC,CAAnC;AACA;AACA,UAAGo0B,UAAUniC,OAAV,CAAkB7H,MAAlB,EAA0B8N,MAA1B,KAAqC,CAAxC,EAA2C,OAAOk8B,UAAUniC,OAAV,CAAkB7H,MAAlB,CAAP;AAC3CgqC,gBAAUE,aAAV,GAJ2B,CAIA;AAC5B,KA5Fa;;AA8Fd;;;AAGAY,gBAAY,oBAAClU,MAAD,EAAY;;AAEtBp3B,iBAAWgpB,UAAX,GAAwB,IAAxB;;AAEA;AACA,UAAIwiB,cAAchB,UAAUriC,KAAV,IAAmBivB,SAAO,CAA1B,CAAlB,CALsB,CAK0B;;AAEhD7vB,UAAIW,UAAJ,CAAe7G,GAAf,CAAmBmpC,UAAUriC,KAA7B,EAAoCqjC,WAApC,EAAiDhB,UAAUniC,OAA3D,EAAoE3G,IAApE,CACE,UAACyN,OAAD,EAAa;;AAEX,YAAIs8B,aAAa7oB,SAASC,cAAT,CAAwB,gBAAxB,CAAjB;AACA4oB,mBAAWxnB,SAAX,GAAuB,CAAvB;;AAEA;AACA9M,eAAOjP,UAAP,GAAoBoiC,SAAS10B,iBAAT,CAA2BzG,OAA3B,CAApB;;AAEAq7B,kBAAUpjC,OAAV,GAAoBgwB,MAApB;AACAp3B,mBAAWgpB,UAAX,GAAwB,KAAxB;AACD,OAXH,EAYE,UAAC7mB,GAAD,EAAS,CAER,CAdH;AAgBD;AAxHa,GAAhB;;AA2HA;;;;;AAKAgV,SAAOu0B,YAAP,GAAsB,UAACxwB,MAAD,EAAY;AAChChC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,yDAFA;AAGbC,cAAQ;AACNzB,gBAAQ,KADF;AAEN/N,oBAAYA,UAFN;AAGNmB,mBAAW;AAHL,OAHK;AAQbgjC,gBAAU,IARG;AASbvwB,uBAAiB,KATJ;AAUblE,kBAAY;AAVC,KAAf,EAWGxV,IAXH;AAYE;AACA,cAACC,MAAD,EAAY;;AAEV,UAAGA,OAAOgF,MAAP,KAAkB,KAArB,EAA4B;AAC1B;AACA6jC,kBAAU5sB,OAAV;AACAjH,iBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,8BAAd,EAAhB,CAAd;AACD;AAEF,KArBH;AAsBE;AACA,gBAAM,CAEL,CAzBH;AA2BD,GA5BD;;AA8BA;AACA7B,SAAOjP,UAAP,GAAoBoiC,SAAS10B,iBAAT,CAA2B1N,UAA3B,CAApB;;AAEAsiC,YAAUK,SAAV;AACA1zB,SAAOsJ,QAAP,GAAkB+pB,SAAlB;AAED,CAtPD,CADA;;;ACAA7qC,IAAIuX,UAAJ,CAAe,+BAAf,EACA,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,UAA/C,EAA2D,mBAA3D,EAAgF,WAAhF,EAA6F,SAA7F,EAAuG,YAAvG,EACA,UAACnW,EAAD,EAAKF,CAAL,EAAQkX,KAAR,EAAemB,SAAf,EAA0BvC,QAA1B,EAAoC2zB,QAApC,EAA8C/iC,GAA9C,EAAmDoB,SAAnD,EAA8DX,OAA9D,EAAuER,UAAvE,EAAsF;;AAEpFuQ,QAAMpP,SAAN,GAAkBA,SAAlB;AACAoP,QAAM/P,OAAN,GAAgBA,OAAhB;AACA+P,QAAMvQ,UAAN,GAAmBA,UAAnB;;AAEAuQ,QAAM0B,MAAN,GAAe,YAAM;AACnBP,cAAU5B,IAAV;AACD,GAFD;;AAIAS,QAAMu0B,aAAN,GAAsB,KAAtB;AACAv0B,QAAMw0B,UAAN,GAAmB,YAAM;AACvBlpC,YAAQC,GAAR,CAAY,YAAZ;AACAyU,UAAMu0B,aAAN,GAAsB,CAACv0B,MAAMu0B,aAA7B;AACD,GAHD;;AAKAv0B,QAAMpD,IAAN,GAAa,UAACuG,MAAD,EAAY;;AAEvBhC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,yDAFA;AAGbC,cAAQ;AACNrO,mBAAWA,SADL;AAEN4M,gBAAQ,MAFF;AAGN/N,oBAAYA;AAHN,OAHK;AAQbmkC,gBAAU,IARG;AASbvwB,uBAAiB,KATJ;AAUblE,kBAAY;AAVC,KAAf,EAWGxV,IAXH;AAYE;AACA,cAACC,MAAD,EAAY;AACV,UAAGA,OAAOgF,MAAP,KAAkB,QAArB,EAA+B;;AAE7BtD,gBAAQC,GAAR,CAAY,mBAAZ,EAAiC3B,MAAjC;;AAEAoW,cAAMpP,SAAN,GAAkB2hC,SAAS10B,iBAAT,CAA2BjU,OAAOC,IAAlC,CAAlB;AACAmW,cAAMpP,SAAN,GAAkBhH,OAAOC,IAAzB;AACA+G,oBAAYoP,MAAMpP,SAAlB;;AAEApB,YAAIS,OAAJ,CAAY,WAAZ,EAAyB+P,MAAMpP,SAAN,CAAgB5G,KAAzC,EAAgDL,IAAhD,CACE,UAACsG,OAAD,EAAa;AACX+P,gBAAM/P,OAAN,GAAgBA,OAAhB;AACD,SAHH,EAIE,UAAC7F,GAAD,EAAS;AACPkB,kBAAQC,GAAR,CAAY,qCAAZ;AACD,SANH;;AASAqT,iBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,4BAAd,EAAhB,CAAd;AACD;AACF,KAjCH;AAkCE;AACA,gBAAM;AACJrC,eAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,uBAAd,EAAhB,CAAd;AACD,KArCH;AAuCD,GAzCD;;AA2CA;AACAjB,QAAM2N,YAAN,GAAqB,YAAM;;AAEzB;AACAne,QAAIW,UAAJ,CAAevB,MAAf,CAAsBoR,MAAMpP,SAA5B,EAAuCoP,MAAMpP,SAAN,CAAgBhC,MAAvD,EAA+DoR,MAAM3V,MAAN,CAAawG,QAA5E,EAAsFlH,IAAtF,CACE,UAACC,MAAD,EAAY;AACV;AACAoW,YAAMpP,SAAN,GAAkB2hC,SAAS10B,iBAAT,CAA2BjU,MAA3B,EAAmC,CAAnC,CAAlB;;AAEA;AACA4F,UAAIS,OAAJ,CAAY,WAAZ,EAAyB+P,MAAMpP,SAAN,CAAgB5G,KAAzC,EAAgDL,IAAhD,CACE,UAACsG,OAAD,EAAa;AACX+P,cAAM/P,OAAN,GAAgBA,OAAhB;AACD,OAHH,EAIE,UAAC7F,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,qCAAZ;AACD,OANH;;AASAyU,YAAMu0B,aAAN,GAAsB,KAAtB;AACA31B,eAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,EAACC,aAAa,4BAAd,EAAhB,CAAd;AACD,KAjBH,EAkBE,UAAC7W,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,mCAAZ;AACD,KApBH;AAuBD,GA1BD;AA4BD,CAzFD,CADA;;;ACAA3D,IAAIuX,UAAJ,CAAe,qCAAf,EACE,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,UAAhC,EAA4C,SAA5C,EAAuD,SAAvD,EAAkE,KAAlE,EAAyE,QAAzE,EAAmF,WAAnF,EAAgG,UAAhG,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB0F,QAAxB,EAAkCrB,OAAlC,EAA2C5M,IAA3C,EAAiDqG,GAAjD,EAAsD9E,MAAtD,EAA8D+N,SAA9D,EAAyEvC,QAAzE,EAAsF;;AAEtFQ,SAAOlH,GAAP,GAAaA,GAAb;AACAkH,SAAOhM,MAAP,GAAgBA,MAAhB;;AAEAgM,SAAOq1B,SAAP,GAAmB,YAAM;AACvB;AACAh2B,YAAQ/L,IAAR,CAAa0H,OAAOs6B,IAAP,CAAY,0BAAZ,EAAuC,EAAChtB,KAAKxP,IAAIjG,KAAV,EAAiBqV,iBAAiBlU,OAAOpJ,KAAzC,EAAvC,CAAb,EAAsG,QAAtG;AACD,GAHD;;AAKAoV,SAAOu1B,QAAP,GAAkB,CAChB;AACE5mC,UAAM,kBADR;AAEEwJ,WAAO,iBAFT;AAGEwS,UAAM,KAHR;AAIE6qB,kBAAc,KAJhB;AAKEpsB,eAAW,IALb;AAME7F,cAAU;AANZ,GADgB,EAShB;AACE5U,UAAM,kBADR;AAEEwJ,WAAO,iBAFT;AAGEwS,UAAM,KAHR;AAIE6qB,kBAAc,KAJhB;AAKEpsB,eAAW,IALb;AAME7F,cAAU;AANZ,GATgB,EAiBhB;AACE5U,UAAM,+BADR;AAEEwJ,WAAO,aAFT;AAGEwS,UAAM,KAHR;AAIE6qB,kBAAc,KAJhB;AAKEpsB,eAAW,IALb;AAME7F,cAAU;AANZ,GAjBgB,EAyBhB;AACE5U,UAAM,cADR;AAEEwJ,WAAO,cAFT;AAGEwS,UAAM,KAHR;AAIE6qB,kBAAc,KAJhB;AAKEpsB,eAAW,IALb;AAME7F,cAAU,CACR,EAAC5U,MAAM,wBAAP,EAAiCwJ,OAAO,OAAxC,EADQ,EAER,EAACxJ,MAAM,kBAAP,EAA2BwJ,OAAO,YAAlC,EAFQ;AANZ,GAzBgB,EAoChB;AACExJ,UAAM,2BADR;AAEEwJ,WAAO,IAFT;AAGEwS,UAAM,KAHR;AAIE6qB,kBAAc,KAJhB;AAKEpsB,eAAW,IALb;AAMEqsB,cAAU,IANZ;AAOElyB,cAAU,CACR,EAAE5U,MAAM,uBAAR,EAAiCwJ,OAAO,eAAxC,EADQ,EAER,EAAExJ,MAAM,YAAR,EAAsBwJ,OAAO,IAA7B,EAAmCu9B,UAAU,IAA7C,EAFQ,EAGR,EAAE/mC,MAAM,WAAR,EAAqBwJ,OAAO,WAA5B,EAHQ,EAIR,EAAExJ,MAAM,UAAR,EAAoBwJ,OAAO,UAA3B,EAJQ,EAKR,EAAExJ,MAAM,KAAR,EAAewJ,OAAO,KAAtB,EAA6Bu9B,UAAU,IAAvC,EALQ,EAMR,EAAE/mC,MAAM,kBAAR,EAA4BwJ,OAAO,yBAAnC,EANQ;AAPZ,GApCgB,EAoDhB;AACExJ,UAAM,SADR;AAEEwJ,WAAO,IAFT;AAGEwS,UAAM,KAHR;AAIE6qB,kBAAc,KAJhB;AAKEpsB,eAAW,IALb;AAMEqsB,cAAU,IANZ;AAOElyB,cAAU,CACR,EAAE5U,MAAM,iBAAR,EAA2BwJ,OAAO,gBAAlC,EADQ,EAER,EAAExJ,MAAM,sBAAR,EAAgCwJ,OAAO,oBAAvC,EAFQ,EAGR,EAAExJ,MAAM,qBAAR,EAA+BwJ,OAAO,qBAAtC,EAHQ;AAPZ,GApDgB,EAiEhB;AACExJ,UAAM,YADR;AAEEwJ,WAAO,oBAFT;AAGEwS,UAAM,KAHR;AAIE6qB,kBAAc,KAJhB;AAKEpsB,eAAW,IALb;AAME7F,cAAU;AANZ,GAjEgB,EAyEhB;AACE5U,UAAM,YADR;AAEEwJ,WAAO,YAFT;AAGEwS,UAAM,KAHR;AAIE6qB,kBAAc,KAJhB;AAKEpsB,eAAW,IALb;AAME7F,cAAU;AANZ,GAzEgB,EAiFhB;AACE5U,UAAM,SADR;AAEEwJ,WAAO,SAFT;AAGEwS,UAAM,IAHR;AAIE6qB,kBAAc,KAJhB;AAKEpsB,eAAW,KALb;AAME7F,cAAU;AANZ,GAjFgB,EAyFhB;AACE5U,UAAM,iBADR;AAEEwJ,WAAO,MAFT;AAGEwS,UAAM,IAHR;AAIE6qB,kBAAc,KAJhB;AAKEpsB,eAAW,KALb;AAME7F,cAAU;AANZ,GAzFgB,CAAlB;;AAmGA;;;;;;AAMAvD,SAAO21B,aAAP,GAAuB,UAACx9B,KAAD,EAAW;AAChC,QAAG6C,OAAO/K,OAAP,CAAetB,IAAf,CAAoBpF,OAApB,CAA4B4O,KAA5B,IAAqC,CAAC,CAAzC,EAA4C;AAC1C,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD,GALD;;AAOA6H,SAAO41B,iBAAP,GAA2B,UAACC,IAAD,EAAU;;AAEnC76B,WAAOqN,EAAP,CAAU,0CAA0CwtB,IAApD;AACD,GAHD;;AAMA;;;;AAIA71B,SAAO81B,UAAP,GAAoB,UAAC/xB,MAAD,EAAY;AAC9BhC,cAAUpC,IAAV,CAAe;AACbI,kBAAY,oDADC;AAEbH,mBAAa,sDAFA;AAGboE,mBAAaD,MAHA;AAIblE,cAAQ,EAAC/G,KAAKA,GAAN,EAJK;AAKboJ,2BAAqB;AALR,KAAf,EAMG3X,IANH,CAOE,UAACC,MAAD,EAAY;AACV;AACD,KATH,EAUE,YAAM;AACJ;AACD,KAZH;AAcD,GAfD;AAiBD,CAtJC,CADF;;;ACAAhC,IAAIuX,UAAJ,CAAe,yCAAf,EACE,CAAC,GAAD,EAAM,QAAN,EAAgB,QAAhB,EAA0B,SAA1B,EAAqC,WAArC,EAAkD,eAAlD,EAAmE,MAAnE,EAA2E,SAA3E,EAAsF,KAAtF,EACE,UAACrW,CAAD,EAAIsW,MAAJ,EAAYhF,MAAZ,EAAoBvI,IAApB,EAA0B6G,MAA1B,EAAkCyZ,aAAlC,EAAiDtf,IAAjD,EAAuD8E,OAAvD,EAAgEO,GAAhE,EAAwE;;AAEtEkH,SAAOvM,IAAP,GAAcA,IAAd;AACAuM,SAAOhF,MAAP,GAAgBA,MAAhB;AACAgF,SAAOzH,OAAP,GAAiB7O,EAAE0c,MAAF,CAAS7N,OAAT,EAAkB,CAAC,WAAD,CAAlB,EAAiC8N,OAAjC,EAAjB;AACArG,SAAOlH,GAAP,GAAaA,GAAb;AAED,CARH,CADF;;;ACAAtQ,IAAIuX,UAAJ,CAAe,mCAAf,EACA,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,UAAhC,EAA4C,SAA5C,EAAuD,SAAvD,EAAkE,KAAlE,EAAyE,QAAzE,EACA,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgBhF,MAAhB,EAAwB0F,QAAxB,EAAkCrB,OAAlC,EAA2C5M,IAA3C,EAAiDqG,GAAjD,EAAsD9E,MAAtD,EAAiE;;AAE/DgM,SAAOlH,GAAP,GAAaA,GAAb;;AAEAkH,SAAOq1B,SAAP,GAAmB,YAAM;AACvB;AACAh2B,YAAQ/L,IAAR,CAAa0H,OAAOs6B,IAAP,CAAY,wBAAZ,EAAqC,EAAChtB,KAAKxP,IAAIjG,KAAV,EAAiBqV,iBAAiBlU,OAAOpJ,KAAzC,EAArC,CAAb,EAAoG,QAApG;AACD,GAHD;;AAKA;;;;;;AAMAoV,SAAO21B,aAAP,GAAuB,UAACI,OAAD,EAAa;AAClC,QAAG/6B,OAAO/K,OAAP,CAAetB,IAAf,CAAoBpF,OAApB,CAA4BwsC,QAAQ59B,KAApC,IAA6C,CAAC,CAAjD,EAAoD;AAClD,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD,GALD;;AAQA6H,SAAO41B,iBAAP,GAA2B,UAACC,IAAD,EAAU;;AAEnC76B,WAAOqN,EAAP,CAAU,OAAOwtB,IAAjB;AACD,GAHD;AAKD,CA7BD,CADA;;;ACAArtC,IAAIuX,UAAJ,CAAe,wCAAf,EAAyD,CAAC,GAAD,EAAM,IAAN,EAAY,YAAZ,EAA0B,QAA1B,EAAoC,QAApC,EAA8C,SAA9C,EAAyD,UAACrW,CAAD,EAAIE,EAAJ,EAAQf,UAAR,EAAoBmX,MAApB,EAA4BhF,MAA5B,EAAoCzC,OAApC,EAAgD;;AAEhKyH,SAAOzH,OAAP,GAAiB7O,EAAEssC,OAAF,CAAUz9B,QAAQA,OAAlB,EAA2B,CAAC,WAAD,EAAc,WAAd,CAA3B,EAAuD,CAAC,MAAD,EAAS,MAAT,CAAvD,CAAjB;;AAEAyH,SAAOqJ,UAAP,GAAoB;AAClBpY,YAAQ,CADU;AAElBD,WAAO,EAFW;AAGlBwV,WAAOjO,QAAQiO;AAHG,GAApB;AAMD,CAVwD,CAAzD;;;ACAAhe,IAAIuX,UAAJ,CAAe,wCAAf,EAAyD,CAAC,GAAD,EAAM,IAAN,EAAY,YAAZ,EAA0B,QAA1B,EAAoC,QAApC,EAA8C,SAA9C,EAAyD,UAACrW,CAAD,EAAIE,EAAJ,EAAQf,UAAR,EAAoBmX,MAApB,EAA4BhF,MAA5B,EAAoCzC,OAApC,EAAgD;;AAEhKA,YAAU7O,EAAEssC,OAAF,CAAUz9B,OAAV,EAAmB,CAAC,OAAD,EAAU,6BAAV,EAAyC,oBAAzC,CAAnB,EAAmF,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,CAAnF,CAAV;;AAEAyH,SAAOi2B,YAAP,GAAsB19B,OAAtB;AACAyH,SAAOk2B,aAAP,GAAuB,EAAvB;;AAEArtC,aAAWkY,MAAX,CAAkB,gBAAlB,EAAoC,UAAC2F,MAAD,EAASC,MAAT,EAAoB;AACtD,QAAGD,MAAH,EAAW1L,OAAOqN,EAAP,CAAU,2BAAV;AACZ,GAFD;AAID,CAXwD,CAAzD;;;ACAA7f,IAAIuX,UAAJ,CAAe,sCAAf,EAAuD,CAAC,GAAD,EAAM,IAAN,EAAY,YAAZ,EAA0B,QAA1B,EAAoC,yBAApC,EAA+D,SAA/D,EAA0E,WAA1E,EAAuF,MAAvF,EAA+F,eAA/F,EAAgH,UAAhH,EAA6H,UAACrW,CAAD,EAAIE,EAAJ,EAAQf,UAAR,EAAoBmX,MAApB,EAA4B5H,OAA5B,EAAqCG,OAArC,EAA8CwJ,SAA9C,EAAyDtO,IAAzD,EAA+Dsf,aAA/D,EAA8E7iB,QAA9E,EAA2F;;AAE7Q8P,SAAOzH,OAAP,GAAiBA,UAAU7O,EAAEssC,OAAF,CAAUz9B,OAAV,EAAmB,CAAC,oBAAD,EAAsB,WAAtB,CAAnB,EAAuD,CAAC,KAAD,EAAO,MAAP,CAAvD,CAA3B;AACAyH,SAAOm2B,QAAP,GAAkB,KAAlB;AACAn2B,SAAOo2B,aAAP,GAAuB,KAAvB;AACAp2B,SAAO6C,OAAP,GAAiB,KAAjB;AACA7C,SAAOq2B,eAAP,GAA0BtjB,cAAczoB,GAAd,CAAkB,iBAAlB,MAAyC2B,SAA1C,GAAuD,IAAvD,GAA8D8mB,cAAczoB,GAAd,CAAkB,iBAAlB,CAAvF;;AAEA0V,SAAO4Z,KAAP,GAAe,CACb,kBADa,EAEb,SAFa,EAGb,UAHa,EAIb,OAJa,EAKb,WALa,CAAf;;AAQA5Z,SAAO9P,QAAP,GAAkBA,QAAlB;;AAEA8P,SAAOwJ,MAAP,GAAgB;AACdjT,WAAO,IADO;AAEd+Q,YAAQ,IAFM;AAGdgvB,eAAW,IAHG;AAIdH,cAAU,KAJI;AAKdC,mBAAe;AALD,GAAhB;;AAQA;AACA,MAAGvtC,WAAW6sB,cAAd,EAA8B;AAC5B1V,WAAOq2B,eAAP,GAAyB,KAAzB;AACA,QAAGtjB,cAAczoB,GAAd,CAAkB,iBAAlB,MAAyC2B,SAA5C,EAAuD8mB,cAAcvS,IAAd,CAAmB,iBAAnB,EAAsC,KAAtC;AACvDR,WAAOwJ,MAAP,GAAgB;AACdjT,aAAO,KADO;AAEd+Q,cAAQ,KAFM;AAGdgvB,iBAAW,IAHG;AAIdH,gBAAU,IAJI;AAKdC,qBAAe;AALD,KAAhB;AAOD;;AAEDp2B,SAAO3W,MAAP,GAAe;AACb4pB,iBAAcF,cAAczoB,GAAd,CAAkB,8BAAlB,MAAsD2B,SAAvD,GAAoE,IAApE,GAA2E8mB,cAAczoB,GAAd,CAAkB,8BAAlB,CAD3E;AAEb4C,WAAO;AAFM,GAAf;;AAKA,MAAG6lB,cAAczoB,GAAd,CAAkB,8BAAlB,MAAsD2B,SAAzD,EAAoE8mB,cAAcvS,IAAd,CAAmB,8BAAnB,EAAmD,IAAnD;;AAEpER,SAAOu2B,UAAP,GAAoB,UAACp+B,KAAD,EAAW;AAC7B,WAAOzO,EAAEL,MAAF,CAASkP,OAAT,EAAkB,EAACJ,OAAOA,KAAR,EAAlB,EAAkChB,MAAzC;AACD,GAFD;;AAIA6I,SAAOe,MAAP,CAAc,oBAAd,EAAoC,UAAC2F,MAAD,EAASC,MAAT,EAAoB;AACtD;AACA,QAAGhS,KAAK2lB,SAAL,CAAe5T,MAAf,MAA2B/R,KAAK2lB,SAAL,CAAe3T,MAAf,CAA9B,EAAsD;AACtDoM,kBAAcvS,IAAd,CAAmB,8BAAnB,EAAmDkG,MAAnD;AACD,GAJD;;AAMA1G,SAAOe,MAAP,CAAc,iBAAd,EAAiC,UAAC2F,MAAD,EAASC,MAAT,EAAoB;AACnD,QAAGhS,KAAK2lB,SAAL,CAAe5T,MAAf,MAA2B/R,KAAK2lB,SAAL,CAAe3T,MAAf,CAA9B,EAAsD;AACtDoM,kBAAcvS,IAAd,CAAmB,iBAAnB,EAAsCkG,MAAtC;AACD,GAHD;;AAKA1G,SAAOw2B,WAAP,GAAqB,YAAM;AACzB,QAAIhtB,SAAS,EAAb;AACA9f,MAAE+sC,IAAF,CAAOz2B,OAAOwJ,MAAd,EAAsB,UAACnH,CAAD,EAAG1D,CAAH,EAAS;AAC7B,UAAG0D,CAAH,EAAMmH,OAAO7W,IAAP,CAAYgM,CAAZ;AACP,KAFD;AAGAqB,WAAO6C,OAAP,GAAiB,IAAjB;AACAzK,YAAQlO,GAAR,CAAY,EAACA,KAAK,CAAC8V,OAAO3W,MAAP,CAAc4pB,WAArB,EAAkC/lB,OAAO8S,OAAO3W,MAAP,CAAc6D,KAAvD,EAA8DyG,MAAMqM,OAAO3W,MAAP,CAAcsK,IAAlF,EAAwF6V,QAAQ9f,EAAE2H,IAAF,CAAOmY,MAAP,EAAe,GAAf,CAAhG,EAAqHld,MAAM,SAA3H,EAAsI4B,SAAS8R,OAAOq2B,eAAtJ,EAAZ,EAAqL9rC,IAArL,CACE,UAACC,MAAD,EAAY;AACVwV,aAAO6C,OAAP,GAAiB,KAAjB;AACA7C,aAAOzH,OAAP,GAAiBA,UAAU/N,MAA3B;AACAwV,aAAOzH,OAAP,GAAiBA,UAAU7O,EAAEssC,OAAF,CAAUxrC,MAAV,EAAkB,CAAC,oBAAD,EAAsB,WAAtB,CAAlB,EAAsD,CAAC,KAAD,EAAO,MAAP,CAAtD,CAA3B;AACAksC;AACD,KANH,EAOE,UAAC1rC,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,uBAAZ,EAAqCnB,GAArC;AACD,KATH;AAWD,GAjBD;;AAmBA,MAAI0rC,iBAAiB,SAAjBA,cAAiB,GAAM;AACzB;AACAhtC,MAAE0H,OAAF,CAAU4O,OAAOzH,OAAjB,EAA0B,UAACuF,CAAD,EAAImB,CAAJ,EAAU;AAClC;AACAe,aAAOzH,OAAP,CAAe0G,CAAf,EAAkBmU,OAAlB,GAA4B1pB,EAAEL,MAAF,CAASyU,EAAEoL,KAAX,EAAkB,EAACzV,MAAM,EAAC7I,OAAO6I,KAAK7I,KAAb,EAAP,EAAlB,CAA5B;AACD,KAHD;AAID,GAND;;AAQA8rC;;AAEA12B,SAAO22B,UAAP,GAAoB,UAACx+B,KAAD,EAAQjL,KAAR,EAAkB;;AAEpC,WAAO,UAAC8G,MAAD,EAAY;;AAEjB,UAAG,CAAC9G,KAAJ,EAAWA,QAAQ,EAAR;;AAEX;AACA,UAAI1C,SAAS,KAAb;;AAEA;AACAd,QAAE0H,OAAF,CAAUlE,MAAM6R,KAAN,CAAY,GAAZ,CAAV,EAA4B,UAAC63B,CAAD,EAAO;;AAEjC,YAAG5iC,OAAOmE,KAAP,KAAiBA,KAApB,EAA2B,OAAO,KAAP;;AAG3B,YAAGy+B,EAAEz/B,MAAF,KAAa,CAAhB,EAAmB,OAAO3M,SAAS,IAAhB;;AAEnB;AACA,YAAGwJ,OAAO5I,QAAP,CAAgB0N,GAAhB,CAAoBjG,KAApB,CAA0B1F,WAA1B,GAAwC5D,OAAxC,CAAgDqtC,EAAEzpC,WAAF,EAAhD,MAAqE,CAAC,CAAzE,EAA4E3C,SAAS,IAAT;;AAE5E;AACA,YAAGwJ,OAAOsqB,kBAAP,KAA8B,IAA9B,IAAsCtqB,OAAOsqB,kBAAP,CAA0BuY,UAAhE,IAA8E7iC,OAAOsqB,kBAAP,CAA0BuY,UAA1B,CAAqC1pC,WAArC,GAAmD5D,OAAnD,CAA2DqtC,EAAEzpC,WAAF,EAA3D,MAAgF,CAAC,CAAlK,EAAqK3C,SAAS,IAAT;;AAErK;AACA;AACA,YAAG,CAACwJ,OAAO4U,cAAX,EAA2B;;AAE3B,YAAG5U,OAAO4U,cAAP,IAAyB5U,OAAO4U,cAAP,CAAsBG,MAA/C,IAAyD/U,OAAO4U,cAAP,CAAsBG,MAAtB,CAA6B5b,WAA7B,GAA2C5D,OAA3C,CAAmDqtC,EAAEzpC,WAAF,EAAnD,MAAwE,CAAC,CAArI,EAAwI3C,SAAS,IAAT;;AAExI;AACA,YAAGwJ,OAAO4U,cAAP,IAAyB5U,OAAO4U,cAAP,CAAsBwT,2BAA/C,IAA8EpoB,OAAO4U,cAAP,CAAsBwT,2BAAtB,CAAkDjvB,WAAlD,GAAgE5D,OAAhE,CAAwEqtC,EAAEzpC,WAAF,EAAxE,MAA6F,CAAC,CAA/K,EAAkL3C,SAAS,IAAT,CApBjJ,CAoBgK;AACjM,YAAGwJ,OAAO4U,cAAP,IAAyB5U,OAAO4U,cAAP,CAAsBkuB,0BAA/C,IAA6E9iC,OAAO4U,cAAP,CAAsBkuB,0BAAtB,CAAiD3pC,WAAjD,GAA+D5D,OAA/D,CAAuEqtC,EAAEzpC,WAAF,EAAvE,MAA4F,CAAC,CAA7K,EAAgL3C,SAAS,IAAT,CArB/I,CAqB8J;;AAE/L;AACA,YAAGosC,EAAEzpC,WAAF,GAAgB5D,OAAhB,CAAwB,KAAxB,MAAmC,CAAC,CAAvC,EAA2CyK,OAAO4U,cAAP,CAAsBC,aAAtB,GAAsChU,SAASnL,EAAEqtC,IAAF,CAAOH,EAAE73B,KAAF,CAAQ,GAAR,CAAP,CAAT,CAAvC,GAAyEvU,SAAS,IAAlF,GAAyF,IAAzF;AAC1C,YAAGosC,EAAEzpC,WAAF,GAAgB5D,OAAhB,CAAwB,KAAxB,MAAmC,CAAC,CAAvC,EAA2CyK,OAAO4U,cAAP,CAAsBC,aAAtB,GAAsChU,SAASnL,EAAEqtC,IAAF,CAAOH,EAAE73B,KAAF,CAAQ,GAAR,CAAP,CAAT,CAAvC,GAAyEvU,SAAS,IAAlF,GAAyF,IAAzF;AAC1C,YAAGosC,EAAEzpC,WAAF,GAAgB5D,OAAhB,CAAwB,KAAxB,MAAmC,CAAC,CAAvC,EAA2CyK,OAAO4U,cAAP,CAAsBC,aAAtB,KAAwChU,SAASnL,EAAEqtC,IAAF,CAAOH,EAAE73B,KAAF,CAAQ,GAAR,CAAP,CAAT,CAAzC,GAA2EvU,SAAS,IAApF,GAA2F,IAA3F;;AAE1C;AACAd,UAAE0H,OAAF,CAAU4C,OAAOkV,KAAjB,EAAwB,UAACwd,CAAD,EAAO;AAC7B,cAAGA,EAAEjzB,IAAF,CAAOwT,SAAP,CAAiB1d,OAAjB,CAAyBqtC,CAAzB,IAA8B,CAAC,CAAlC,EAAqCpsC,SAAS,IAAT;AACrC,cAAGk8B,EAAEjzB,IAAF,CAAOyT,QAAP,CAAgB3d,OAAhB,CAAwBqtC,CAAxB,IAA6B,CAAC,CAAjC,EAAoCpsC,SAAS,IAAT;AACpC,cAAGk8B,EAAEjzB,IAAF,CAAO1D,QAAP,CAAgBxG,OAAhB,CAAwBqtC,CAAxB,IAA6B,CAAC,CAAjC,EAAoCpsC,SAAS,IAAT;AACrC,SAJD;AAOD,OApCD;;AAsCA,aAAOA,MAAP;AAED,KAhDD;AAkDD,GApDD;;AAsDAwV,SAAOg3B,QAAP,GAAkB,UAACC,QAAD,EAAc;AAC9B/qC,YAAQC,GAAR,CAAY8qC,QAAZ;AACA,WAAO,IAAP;AACD,GAHD;;AAKA;AACAj3B,SAAOk3B,cAAP,GAAwB,UAACnzB,MAAD,EAAY;;AAElC,QAAI6S,QAAQ7U,UAAUpC,IAAV,CACVoC,UAAU6U,KAAV,GACG1U,mBADH,CACuB,IADvB,EAEGvS,KAFH,CAES,oBAFT,EAGG84B,WAHH,CAGe,8ZAHf,EAIGrhB,EAJH,CAIM,SAJN,EAKGpD,WALH,CAKeD,MALf,CADU,CAAZ;AASD,GAXD;AAcD,CApKsD,CAAvD;;;ACAAvb,IAAIuX,UAAJ,CAAe,oCAAf,EAAqD,CAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,EAAsB,yBAAtB,EAAiD,SAAjD,EAA4D,WAA5D,EAAyE,MAAzE,EAAiF,eAAjF,EAAmG,UAACrW,CAAD,EAAIE,EAAJ,EAAQoW,MAAR,EAAgB5H,OAAhB,EAAyBG,OAAzB,EAAkCwJ,SAAlC,EAA6CtO,IAA7C,EAAmDsf,aAAnD,EAAqE;;AAE3N/S,SAAOzH,OAAP,GAAiBA,OAAjB;AACAyH,SAAOm2B,QAAP,GAAkB,KAAlB;AACAn2B,SAAOo2B,aAAP,GAAuB,KAAvB;AACAp2B,SAAO6C,OAAP,GAAiB,KAAjB;;AAEA7C,SAAO4Z,KAAP,GAAe,CACb,kBADa,EAEb,SAFa,EAGb,UAHa,EAIb,OAJa,EAKb,WALa,CAAf;;AAQA5Z,SAAOwJ,MAAP,GAAgB;AACd2tB,cAAU,IADI;AAEdC,eAAW,IAFG;AAGdC,cAAU,KAHI;AAIdjB,mBAAe;AAJD,GAAhB;;AAOAp2B,SAAO3W,MAAP,GAAe;AACb4pB,iBAAcF,cAAczoB,GAAd,CAAkB,4BAAlB,MAAoD2B,SAArD,GAAkE,IAAlE,GAAyE8mB,cAAczoB,GAAd,CAAkB,4BAAlB,CADzE;AAEb4C,WAAO;AAFM,GAAf;;AAKA,MAAG6lB,cAAczoB,GAAd,CAAkB,4BAAlB,MAAoD2B,SAAvD,EAAkE8mB,cAAcvS,IAAd,CAAmB,4BAAnB,EAAiD,IAAjD;;AAElER,SAAOu2B,UAAP,GAAoB,UAACp+B,KAAD,EAAW;AAC7B,WAAOzO,EAAEL,MAAF,CAASkP,OAAT,EAAkB,EAACJ,OAAOA,KAAR,EAAlB,EAAkChB,MAAzC;AACD,GAFD;;AAIA6I,SAAOe,MAAP,CAAc,oBAAd,EAAoC,UAAC2F,MAAD,EAASC,MAAT,EAAoB;AACtD;AACA,QAAGhS,KAAK2lB,SAAL,CAAe5T,MAAf,MAA2B/R,KAAK2lB,SAAL,CAAe3T,MAAf,CAA9B,EAAsD;AACtDoM,kBAAcvS,IAAd,CAAmB,4BAAnB,EAAiDkG,MAAjD;AAED,GALD;;AAOA1G,SAAOw2B,WAAP,GAAqB,YAAM;;AAEzB,QAAIhtB,SAAS,EAAb;AACA9f,MAAE+sC,IAAF,CAAOz2B,OAAOwJ,MAAd,EAAsB,UAACnH,CAAD,EAAG1D,CAAH,EAAS;AAC7B,UAAG0D,CAAH,EAAMmH,OAAO7W,IAAP,CAAYgM,CAAZ;AACP,KAFD;;AAIAqB,WAAO6C,OAAP,GAAiB,IAAjB;AACAzK,YAAQlO,GAAR,CAAY,EAACA,KAAK,CAAC8V,OAAO3W,MAAP,CAAc4pB,WAArB,EAAkC/lB,OAAO8S,OAAO3W,MAAP,CAAc6D,KAAvD,EAA8DyG,MAAMqM,OAAO3W,MAAP,CAAcsK,IAAlF,EAAwF6V,QAAQ9f,EAAE2H,IAAF,CAAOmY,MAAP,EAAe,GAAf,CAAhG,EAAqHld,MAAM,OAA3H,EAAZ,EAAiJ/B,IAAjJ,CACE,UAACC,MAAD,EAAY;AACVwV,aAAO6C,OAAP,GAAiB,KAAjB;AACA7C,aAAOzH,OAAP,GAAiBA,UAAU/N,MAA3B;AACAksC;AACD,KALH,EAME,UAAC1rC,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,oBAAZ,EAAkCnB,GAAlC;AACD,KARH;AAUD,GAlBD;;AAoBA,MAAI0rC,iBAAiB,SAAjBA,cAAiB,GAAM;AACzB;AACAhtC,MAAE0H,OAAF,CAAU4O,OAAOzH,OAAjB,EAA0B,UAACuF,CAAD,EAAImB,CAAJ,EAAU;AAClC;AACAe,aAAOzH,OAAP,CAAe0G,CAAf,EAAkBmU,OAAlB,GAA4B1pB,EAAEL,MAAF,CAASyU,EAAEoL,KAAX,EAAkB,EAACzV,MAAM,EAAC7I,OAAO6I,KAAK7I,KAAb,EAAP,EAAlB,CAA5B;AACD,KAHD;AAID,GAND;;AAQA8rC;;AAEA12B,SAAO22B,UAAP,GAAoB,UAACx+B,KAAD,EAAQjL,KAAR,EAAkB;;AAEpC,WAAO,UAAC8G,MAAD,EAAY;AACjB,UAAG,CAAC9G,KAAJ,EAAWA,QAAQ,EAAR;;AAEX;AACA,UAAI1C,SAAS,KAAb;;AAEA;AACAd,QAAE0H,OAAF,CAAUlE,MAAM6R,KAAN,CAAY,GAAZ,CAAV,EAA4B,UAAC63B,CAAD,EAAO;;AAEjC,YAAG5iC,OAAOmE,KAAP,KAAiBA,KAApB,EAA2B,OAAO,KAAP;;AAG3B,YAAGy+B,EAAEz/B,MAAF,KAAa,CAAhB,EAAmB,OAAO3M,SAAS,IAAhB;;AAEnB;AACA,YAAGwJ,OAAO5I,QAAP,CAAgB0N,GAAhB,CAAoBjG,KAApB,CAA0B1F,WAA1B,GAAwC5D,OAAxC,CAAgDqtC,EAAEzpC,WAAF,EAAhD,MAAqE,CAAC,CAAzE,EAA4E3C,SAAS,IAAT;;AAE5E,YAAGwJ,OAAOsqB,kBAAP,KAA8B,IAA9B,IAAsCtqB,OAAOsqB,kBAAP,CAA0BuY,UAAhE,IAA8E7iC,OAAOsqB,kBAAP,CAA0BuY,UAA1B,CAAqC1pC,WAArC,GAAmD5D,OAAnD,CAA2DqtC,EAAEzpC,WAAF,EAA3D,MAAgF,CAAC,CAAlK,EAAqK3C,SAAS,IAAT;;AAErK;AACA;AACA,YAAG,CAACwJ,OAAO4U,cAAX,EAA2B;AAC3B,YAAG5U,OAAO4U,cAAP,IAAyB5U,OAAO4U,cAAP,CAAsBG,MAA/C,IAAyD/U,OAAO4U,cAAP,CAAsBG,MAAtB,CAA6B5b,WAA7B,GAA2C5D,OAA3C,CAAmDqtC,EAAEzpC,WAAF,EAAnD,MAAwE,CAAC,CAArI,EAAwI3C,SAAS,IAAT;;AAExI;AACA,YAAGosC,EAAEzpC,WAAF,GAAgB5D,OAAhB,CAAwB,KAAxB,MAAmC,CAAC,CAAvC,EAA2CyK,OAAO4U,cAAP,CAAsBC,aAAtB,GAAsChU,SAASnL,EAAEqtC,IAAF,CAAOH,EAAE73B,KAAF,CAAQ,GAAR,CAAP,CAAT,CAAvC,GAAyEvU,SAAS,IAAlF,GAAyF,IAAzF;AAC1C,YAAGosC,EAAEzpC,WAAF,GAAgB5D,OAAhB,CAAwB,KAAxB,MAAmC,CAAC,CAAvC,EAA2CyK,OAAO4U,cAAP,CAAsBC,aAAtB,GAAsChU,SAASnL,EAAEqtC,IAAF,CAAOH,EAAE73B,KAAF,CAAQ,GAAR,CAAP,CAAT,CAAvC,GAAyEvU,SAAS,IAAlF,GAAyF,IAAzF;AAC1C,YAAGosC,EAAEzpC,WAAF,GAAgB5D,OAAhB,CAAwB,KAAxB,MAAmC,CAAC,CAAvC,EAA2CyK,OAAO4U,cAAP,CAAsBC,aAAtB,KAAwChU,SAASnL,EAAEqtC,IAAF,CAAOH,EAAE73B,KAAF,CAAQ,GAAR,CAAP,CAAT,CAAzC,GAA2EvU,SAAS,IAApF,GAA2F,IAA3F;;AAE1C;AACAd,UAAE0H,OAAF,CAAU4C,OAAOkV,KAAjB,EAAwB,UAACwd,CAAD,EAAO;AAC7B,cAAGA,EAAEjzB,IAAF,CAAOwT,SAAP,CAAiB1d,OAAjB,CAAyBqtC,CAAzB,IAA8B,CAAC,CAAlC,EAAqCpsC,SAAS,IAAT;AACrC,cAAGk8B,EAAEjzB,IAAF,CAAOyT,QAAP,CAAgB3d,OAAhB,CAAwBqtC,CAAxB,IAA6B,CAAC,CAAjC,EAAoCpsC,SAAS,IAAT;AACpC,cAAGk8B,EAAEjzB,IAAF,CAAO1D,QAAP,CAAgBxG,OAAhB,CAAwBqtC,CAAxB,IAA6B,CAAC,CAAjC,EAAoCpsC,SAAS,IAAT;AACrC,SAJD;AAOD,OA9BD;;AAgCA,aAAOA,MAAP;AAED,KAzCD;AA2CD,GA7CD;;AA+CAwV,SAAOg3B,QAAP,GAAkB,UAACC,QAAD,EAAc;AAC9B/qC,YAAQC,GAAR,CAAY8qC,QAAZ;AACA,WAAO,IAAP;AACD,GAHD;;AAKA;AACAj3B,SAAOk3B,cAAP,GAAwB,UAACnzB,MAAD,EAAY;;AAElC,QAAI6S,QAAQ7U,UAAUpC,IAAV,CACVoC,UAAU6U,KAAV,GACG1U,mBADH,CACuB,IADvB,EAEGvS,KAFH,CAES,oBAFT,EAGG84B,WAHH,CAGe,yYAHf,EAIGrhB,EAJH,CAIM,SAJN,EAKGpD,WALH,CAKeD,MALf,CADU,CAAZ;AASD,GAXD;AAcD,CAzIoD,CAArD;;;ACAAvb,IAAIuX,UAAJ,CAAe,mCAAf,EAAoD,CAAC,GAAD,EAAM,QAAN,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,UAACrW,CAAD,EAAIsW,MAAJ,EAAYlH,GAAZ,EAAiB9E,MAAjB,EAA4B;;AAE/GgM,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AAED,CALmD,CAApD;;;ACAAtQ,IAAIuX,UAAJ,CAAe,qCAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,UAAhB,EAA4B,MAA5B,EAAoC,KAApC,EAA2C,QAA3C,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYU,QAAZ,EAAsBuV,IAAtB,EAA4Bnd,GAA5B,EAAiC9E,MAAjC,EAA4C;;AAG1C;AACAgM,SAAO8C,OAAP,GAAiB,EAAjB;AACA9C,SAAOhM,MAAP,GAAgBA,MAAhB;AACAgM,SAAOlH,GAAP,GAAaA,GAAb;AAED,CATD,CADA;;;;;ACAAtQ,IAAIuX,UAAJ,CAAe,qCAAf,EACA,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,yBAAtB,EAAiD,oBAAjD,EAAuE,mBAAvE,EAA4F,WAA5F,EAAyG,WAAzG,EAAsH,UAAtH,EAAkI,eAAlI,EAAmJ,QAAnJ,EAA6J,aAA7J,EAA4K,eAA5K,EAA6L,YAA7L,EACA,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAgBrF,WAAhB,EAA6BK,MAA7B,EAAqCG,KAArC,EAA4CyM,SAA5C,EAAuD7F,SAAvD,EAAkEvC,QAAlE,EAA4EuT,aAA5E,EAA2FvJ,MAA3F,EAAmG0L,WAAnG,EAAgHC,aAAhH,EAA+Hlf,MAA/H,EAA0I;;AAExI+J,SAAOs3B,cAAP,GAAwBpiB,WAAxB,CAFwI,CAEnG;AACrClV,SAAOkV,WAAP,GAAqBC,aAArB,CAHwI,CAGpG;AACpCnV,SAAOu3B,YAAP,GAAsB,EAAtB;AACAv3B,SAAO3W,MAAP,GAAgB;AACd2Y,YAAQ,KADM;AAEd7J,WAAQ4a,cAAczoB,GAAd,CAAkB,gBAAlB,CAAD,GAAwCyoB,cAAczoB,GAAd,CAAkB,gBAAlB,CAAxC,GAA8E,EAACkF,QAAQ,CAAC,QAAD,EAAW,SAAX,EAAsB,MAAtB,EAA8B,QAA9B,CAAT,EAFvE;AAGdoL,gBAAamY,cAAczoB,GAAd,CAAkB,qBAAlB,CAAD,GAA6CyoB,cAAczoB,GAAd,CAAkB,qBAAlB,CAA7C,GAAwF,EAAC8qB,MAAM,CAAC,UAAD,EAAa,YAAb,EAA2B,SAA3B,CAAP,EAA8CpT,QAAQ,KAAtD;AAHtF,GAAhB;AAKAhC,SAAOw3B,UAAP,GAAoB,KAApB;AACAx3B,SAAOy3B,gBAAP,GAA0B,KAA1B;;AAEAxhC,SAAOE,EAAP,CAAU,kBAAV,EAA8B,UAACmF,IAAD,EAAU;;AAEtC,QAAI8J,IAAI1b,EAAEy8B,OAAF,CAAUnmB,OAAOu3B,YAAP,CAAoBj8B,KAAKnD,KAAL,CAAWid,IAA/B,CAAV,EAAgD,UAAChQ,CAAD,EAAO;AAC7D,aAAQA,EAAExa,KAAF,KAAY0Q,KAAKnD,KAAL,CAAWvN,KAA/B;AACD,KAFO,CAAR;;AAIA,QAAIkjB,IAAIpkB,EAAEy8B,OAAF,CAAUnmB,OAAOu3B,YAAP,CAAoBj8B,KAAKnD,KAAL,CAAWid,IAA/B,EAAqChQ,CAArC,EAAwC8H,KAAlD,EAAyD,UAACY,CAAD,EAAO;AACtE,aAAQA,EAAEljB,KAAF,KAAY0Q,KAAK1Q,KAAzB;AACD,KAFO,CAAR;;AAIAoV,WAAOu3B,YAAP,CAAoBj8B,KAAKnD,KAAL,CAAWid,IAA/B,EAAqChQ,CAArC,EAAwC8H,KAAxC,CAA8CY,CAA9C,IAAmDxS,IAAnD;AAED,GAZD;;AAcA;AACA,MAAIo8B,aAAa,SAAbA,UAAa,CAACC,WAAD,EAAiB;;AAEhC33B,WAAOu3B,YAAP,GAAsB,EAAtB;;AAEA7tC,MAAE0H,OAAF,CAAUumC,WAAV,EAAuB,UAACvyB,CAAD,EAAO;AAC5B,UAAG,CAACpF,OAAOu3B,YAAP,CAAoBnyB,EAAEgQ,IAAtB,CAAJ,EAAiCpV,OAAOu3B,YAAP,CAAoBnyB,EAAEgQ,IAAtB,IAA8B,EAA9B;AACjCpV,aAAOu3B,YAAP,CAAoBnyB,EAAEgQ,IAAtB,EAA4BziB,IAA5B,CAAiCyS,CAAjC;AACD,KAHD;AAKD,GATD;;AAWApF,SAAO43B,eAAP,GAAyB,UAACC,GAAD,EAAS;AAChC,QAAG73B,OAAO3W,MAAP,CAAcuR,UAAd,CAAyBwa,IAAzB,CAA8B7rB,OAA9B,CAAsCsuC,IAAIziB,IAA1C,IAAkD,CAAC,CAAtD,EAAyD;AACvDpV,aAAO3W,MAAP,CAAcuR,UAAd,CAAyBwa,IAAzB,CAA8BjN,MAA9B,CAAqCnI,OAAO3W,MAAP,CAAcuR,UAAd,CAAyBwa,IAAzB,CAA8B7rB,OAA9B,CAAsCsuC,IAAIziB,IAA1C,CAArC,EAAsF,CAAtF;AACD,KAFD,MAEM;AACJpV,aAAO3W,MAAP,CAAcuR,UAAd,CAAyBwa,IAAzB,CAA8BziB,IAA9B,CAAmCklC,IAAIziB,IAAvC;AACD;AACF,GAND;;AAQApV,SAAO22B,UAAP,GAAoB,UAAC/7B,UAAD,EAAa1N,KAAb,EAAuB;;AAEzC,WAAO,UAACiL,KAAD,EAAW;AAChB,UAAI,CAACjL,KAAL,EAAYA,QAAQ,EAAR;;AAEZ;AACA,UAAI1C,SAAS,KAAb;;AAEA;AACAd,QAAE0H,OAAF,CAAUlE,MAAM6R,KAAN,CAAY,GAAZ,CAAV,EAA4B,UAAC63B,CAAD,EAAO;;AAEjC,YAAIA,EAAEz/B,MAAF,KAAa,CAAjB,EAAoB,OAAO3M,SAAS,IAAhB;;AAEpB;AACA,YAAI2N,MAAM/M,QAAN,CAAe0N,GAAf,CAAmBjG,KAAnB,CAAyB1F,WAAzB,GAAuC5D,OAAvC,CAA+CqtC,EAAEzpC,WAAF,EAA/C,MAAoE,CAAC,CAAzE,EAA4E3C,SAAS,IAAT;AAE7E,OAPD;;AASA,aAAOA,MAAP;AAED,KAlBD;AAmBD,GArBD;;AAuBA;AACAwV,SAAOe,MAAP,CAAc,aAAd,EAA6B,UAAC2F,MAAD,EAASC,MAAT,EAAoB;AAC/C,QAAGA,WAAW,IAAX,IAAmBD,WAAW,KAAjC,EAAwC1G,OAAOw2B,WAAP;AACzC,GAFD;;AAKA;;;;;AAKAx2B,SAAOw2B,WAAP,GAAqB,YAAiB;AAAA,QAAhBsB,KAAgB,uEAAV,KAAU;;AACpC,QAAIxmC,OAAO;AACT0Q,cAAQhC,OAAO3W,MAAP,CAAc2Y,MADb;AAEToT,YAAM1rB,EAAE2H,IAAF,CAAO2O,OAAO3W,MAAP,CAAcuR,UAAd,CAAyBwa,IAAhC,EAAsC,GAAtC;AAFG,KAAX;;AAKA,QAAG,CAAC0iB,KAAJ,EAAW93B,OAAOw3B,UAAP,GAAoB,IAApB;AACXx3B,WAAOy3B,gBAAP,GAA0B,IAA1B;;AAEA98B,gBAAYzQ,GAAZ,CAAgBoH,IAAhB,EAAsB/G,IAAtB,CACE,UAACC,MAAD,EAAY;AACVwV,aAAOkV,WAAP,GAAqB1qB,MAArB;;AAEA,UAAG,CAACstC,KAAJ,EAAW/kB,cAAcvS,IAAd,CAAmB,qBAAnB,EAA0CR,OAAO3W,MAAP,CAAcuR,UAAxD;;AAEXI,aAAO9Q,GAAP,CAAW,EAACsF,QAAQ9F,EAAE2H,IAAF,CAAO2O,OAAO3W,MAAP,CAAc8O,KAAd,CAAoB3I,MAA3B,EAAmC,GAAnC,CAAT,EAAkD4lB,MAAM1rB,EAAE2H,IAAF,CAAO2O,OAAO3W,MAAP,CAAcuR,UAAd,CAAyBwa,IAAhC,EAAsC,GAAtC,CAAxD,EAAX,EACG7qB,IADH,CACQ,UAACC,MAAD,EAAY;AAChBktC,mBAAWltC,MAAX;AACAwV,eAAOw3B,UAAP,GAAoB,KAApB;AACAx3B,eAAOy3B,gBAAP,GAA0B,KAA1B;;AAEA,YAAG,CAACK,KAAJ,EAAW/kB,cAAcvS,IAAd,CAAmB,gBAAnB,EAAqCR,OAAO3W,MAAP,CAAc8O,KAAnD;AAEZ,OARH,EASGpN,KATH,CASS,UAACC,GAAD,EAAS;AACdkB,gBAAQC,GAAR,CAAY,uCAAZ,EAAqDnB,GAArD;AACAwU,iBAASoD,UAAT,CAAoB,oCAApB;AACD,OAZH;AAcD,KApBH,EAqBE,UAAC5X,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,mCAAZ,EAAiDnB,GAAjD;AACD,KAvBH;AA0BD,GAnCD;;AAqCA;AACAgV,SAAO+3B,WAAP,GAAqB,UAACh0B,MAAD,EAAY;;AAE/BhC,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,yCAFA;AAGbG,kBAAY,CAAC,IAAD,EAAO,OAAP,EAAgB,UAAhB,EAA4B,SAA5B,EAAuC,cAAvC,EAAuD,UAACnW,EAAD,EAAKgX,KAAL,EAAYhP,KAAZ,EAAmBa,IAAnB,EAAyBwJ,SAAzB,EAAuC;;AAGxG2E,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV;AACD,SAFD;;AAIA1B,cAAMgkB,MAAN,GAAe,UAACjiB,CAAD,EAAO;AACpB;AACAzW,kBAAQC,GAAR,CAAY,0BAAZ,EAAwCwW,CAAxC;;AAEA,cAAG/B,MAAM1E,KAAN,CAAYrJ,KAAZ,KAAsB5G,SAAtB,IAAmC2U,MAAM1E,KAAN,CAAYrJ,KAAZ,KAAsB,IAA5D,EAAkE+N,MAAM1E,KAAN,CAAYrJ,KAAZ,GAAoB+N,MAAMynB,WAA1B;AAClE,cAAG,QAAOznB,MAAM1E,KAAN,CAAYrJ,KAAnB,MAA6B,QAAhC,EAA0C+N,MAAM1E,KAAN,CAAYrJ,KAAZ,GAAoB+N,MAAM1E,KAAN,CAAYrJ,KAAZ,CAAkBA,KAAtC;;AAE1C,cAAG,QAAO+N,MAAM1E,KAAN,CAAYzP,OAAnB,MAA+B,QAAlC,EAA4CmU,MAAM1E,KAAN,CAAYzP,OAAZ,GAAsBmU,MAAM1E,KAAN,CAAYzP,OAAZ,CAAoBgV,IAA1C;;AAE5C;AACAxF,oBAAUzG,IAAV,CAAeoL,MAAM1E,KAArB,EAA4B3R,IAA5B,CACE,UAACC,MAAD,EAAY;;AAEV;AACAuX,sBAAU5B,IAAV,CAAe,EAACqJ,QAAQhf,MAAT,EAAf;AAED,WANH,EAOE,UAACQ,GAAD,EAAS;AACPkB,oBAAQC,GAAR,CAAY,yBAAZ,EAAuCnB,GAAvC;AACD,WATH;AAYD,SAtBD;;AAwBA;AACA4V,cAAM4pB,aAAN,GAAsB,UAACvgB,UAAD,EAAgB;;AAEpC,iBAAOrgB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B,gBAAG4f,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5BvF,kBAAMhB,eAAN,CAAsBqZ,UAAtB,EAAkC1f,IAAlC,CACE,UAACqF,IAAD,EAAU;;AAERxF,sBAAQwF,KAAKoI,OAAb;AACD,aAJH,EAKE,UAAChN,GAAD,EAAS;AACPkB,sBAAQC,GAAR,CAAYnB,GAAZ;AACAX;AACD,aARH;AAUD,WAbM,CAAP;AAcD,SAhBD;;AAkBA;AACAuW,cAAM2pB,UAAN,GAAmB,UAACtgB,UAAD,EAAgB;;AAEjC,iBAAOrgB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B,gBAAG4f,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5B1E,iBAAKvI,GAAL,CAAS,EAACgD,OAAO+c,UAAR,EAAoB/f,KAAK,IAAzB,EAAT,EAAyCK,IAAzC,CACE,UAACqF,IAAD,EAAU;;AAERxF,sBAAQwF,IAAR;AACD,aAJH,EAKE,UAAC5E,GAAD,EAAS;AACPkB,sBAAQC,GAAR,CAAYnB,GAAZ;AACAX;AACD,aARH;AAUD,WAbM,CAAP;AAcD,SAhBD;AAmBD,OAtEW;AAHC,KAAf;AA2EE;AA3EF,KA4EGE,IA5EH;AA6EI;AACA,cAACC,MAAD,EAAY;;AAEV;AACAgf,eAASA,OAAO0P,MAAP,CAAc1uB,OAAOgf,MAArB,CAAT;AACAkuB,iBAAWluB,MAAX;;AAEAhK,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,oCAA9B,CAAd;AACD,KArFL;AAsFI;AACA,gBAAM;AACJrC,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,0BAA9B,CAAd;AACD,KAzFL;AA4FD,GA9FD;;AAgGA61B,aAAWhuC,EAAEssC,OAAF,CAAUxsB,MAAV,EAAkB,CAAC,QAAD,EAAW,oBAAX,CAAlB,EAAoD,CAAC,KAAD,EAAO,MAAP,CAApD,CAAX;;AAEA;AACA;;;AAID,CA/ND,CADA;;;ACAAhhB,IAAIuX,UAAJ,CAAe,4CAAf,EACA,CAAC,GAAD,EAAM,QAAN,EAAgB,IAAhB,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,QAA/C,EAAyD,oBAAzD,EAA+E,mBAA/E,EAAoG,UAApG,EAAgH,UAAhH,EAA4H,OAA5H,EAAqI,MAArI,EACA,UAACrW,CAAD,EAAIsW,MAAJ,EAAYpW,EAAZ,EAAgBmY,SAAhB,EAA2BvC,QAA3B,EAAqCw4B,OAArC,EAA8Ch9B,MAA9C,EAAsDG,KAAtD,EAA6DvN,KAA7D,EAAoEE,KAApE,EAA2EqK,KAA3E,EAAkFmD,IAAlF,EAA2F;;AAEzF0E,SAAO7H,KAAP,GAAeA,KAAf;AACA6H,SAAO1E,IAAP,GAAcA,IAAd;AACA0E,SAAOpE,OAAP,GAAiB,EAACJ,SAAS,IAAV,EAAjB;AACAwE,SAAOwJ,MAAP,GAAgB,CACd,SADc,EAEd,QAFc,EAGd,UAHc,EAId,MAJc,EAKd,QALc,EAMd,WANc,CAAhB;;AASAxJ,SAAOiS,IAAP,GAAchD,SAASE,WAAT,EAAd;;AAEA;;;;AAIAnP,SAAOuO,YAAP,GAAsB,UAAC/e,MAAD,EAAY;;AAEhC;AACA,QAAIuf,aAAatmB,QAAQ0C,IAAR,CAAa6U,OAAO1E,IAApB,CAAjB;;AAEAyT,eAAWvf,MAAX,GAAoBA,MAApB;;AAEA2L,UAAMlQ,MAAN,CAAa8jB,UAAb,EAAyBxkB,IAAzB,CACE,UAACC,MAAD,EAAY;AACVwV,aAAO1E,IAAP,GAAcA,OAAO9Q,MAArB;;AAEA;AACAytC,sBAAgB38B,IAAhB;AACD,KANH,EAOE,UAACtQ,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,uBAAZ,EAAqCnB,GAArC;AACD,KATH;AAYD,GAnBD;;AAqBAgV,SAAOsC,MAAP,GAAgB,YAAM;AACpBP,cAAUO,MAAV,CAAiB,EAACnK,OAAO6H,OAAO7H,KAAf,EAAjB;AACD,GAFD;;AAIA6H,SAAOwnB,KAAP,GAAe,YAAM;AACnBzlB,cAAU5B,IAAV,CAAe,EAAChI,OAAO6H,OAAO7H,KAAf,EAAf;AACD,GAFD;;AAIA;;;;AAIA,MAAI8/B,kBAAkB,SAAlBA,eAAkB,CAAC38B,IAAD,EAAU;AAC9B;AACA,QAAI2D,IAAIvV,EAAE8e,SAAF,CAAYrQ,MAAM+U,KAAlB,EAAyB,EAACtiB,OAAO0Q,KAAK1Q,KAAb,EAAzB,CAAR;AACAoV,WAAO7H,KAAP,CAAa+U,KAAb,CAAmBjO,CAAnB,IAAwB9G,MAAM+U,KAAN,CAAYjO,CAAZ,IAAiBe,OAAO1E,IAAhD;AACD,GAJD;;AAMA;;;;;AAKA0E,SAAOrE,aAAP,GAAuB,UAACC,OAAD,EAAa;AAClCT,UAAMQ,aAAN,CAAoBL,KAAK1Q,KAAzB,EAAgCgR,QAAQhR,KAAxC,EACGL,IADH,CACQ,UAACC,MAAD,EAAY;AAChB,UAAIyU,IAAIvV,EAAE8e,SAAF,CAAYxI,OAAO1E,IAAP,CAAY48B,QAAxB,EAAkC,EAACttC,OAAOgR,QAAQhR,KAAhB,EAAlC,CAAR;;AAEA0Q,WAAK48B,QAAL,CAAc/vB,MAAd,CAAqBlJ,CAArB,EAAwB,CAAxB;AACAe,aAAO1E,IAAP,GAAcA,IAAd;;AAEA;AACA28B,sBAAgB38B,IAAhB;;AAEAkE,eAASoD,UAAT,CAAoB,iCAApB;AACD,KAXH,EAYG7X,KAZH,CAYS,UAACC,GAAD,EAAS;AACdwU,eAASoD,UAAT,CAAoB,qCAApB;AACD,KAdH;AAeD,GAhBD;;AAkBA;;;;AAIA5C,SAAOpE,OAAP,GAAiB,YAAM;;AAErB;AACA,QAAGN,KAAK4T,WAAL,KAAqB,MAAxB,EAAgC;AAC9BlP,aAAOpE,OAAP,CAAeJ,OAAf,GAAyByT,OAAOjP,OAAOpE,OAAP,CAAeJ,OAAtB,EAA+B2T,WAA/B,EAAzB;AACD;;AAED;AACAhU,UAAMO,gBAAN,CAAuBJ,KAAK1Q,KAA5B,EAAmCoV,OAAOpE,OAAP,CAAeJ,OAAlD,EAA2DjR,IAA3D,CACE,UAACC,MAAD,EAAY;AACVwV,aAAO1E,IAAP,GAAcA,OAAO9Q,MAArB;;AAEA;AACAytC,sBAAgB38B,IAAhB;AAED,KAPH,EAQE,UAACtQ,GAAD,EAAS;;AAEP,UAAI7B,UAAU,EAAd;AACAA,iBAAW,4BAAX;;AAEA,UAAG6B,IAAIP,IAAJ,CAASC,KAAT,IAAkBM,IAAIP,IAAJ,CAASC,KAAT,CAAe0kB,KAAjC,IAA0CpkB,IAAIP,IAAJ,CAASC,KAAT,CAAe0kB,KAAf,CAAqB1kB,KAA/D,IAAwEM,IAAIP,IAAJ,CAASC,KAAT,CAAe0kB,KAAf,CAAqB1kB,KAArB,CAA2BvB,OAAtG,EAA+G;AAC7GA,mBAAW,cAAc6B,IAAIP,IAAJ,CAASC,KAAT,CAAe0kB,KAAf,CAAqB1kB,KAArB,CAA2BvB,OAApD;AACD;;AAEDqW,eAASoD,UAAT,CAAoBzZ,OAApB;AACD,KAlBH;AAqBD,GA7BD;AA+BD,CAtHD,CADA;;;ACAAX,IAAIuX,UAAJ,CAAe,oCAAf,EACA,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,yBAAtB,EAAiD,oBAAjD,EAAuE,mBAAvE,EAA4F,YAA5F,EAA0G,WAA1G,EAAuH,UAAvH,EAAmI,MAAnI,EAA2I,QAA3I,EACA,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAgBrF,WAAhB,EAA6BK,MAA7B,EAAqCG,KAArC,EAA4Cg9B,OAA5C,EAAqDp2B,SAArD,EAAgEvC,QAAhE,EAA0E6V,IAA1E,EAAgF7L,MAAhF,EAA2F;;AAEzFxJ,SAAOqV,IAAP,GAAcA,IAAd;AACArV,SAAOwJ,MAAP,GAAgB9f,EAAEssC,OAAF,CAAUxsB,MAAV,EAAkB,CAAC,QAAD,EAAW,oBAAX,CAAlB,EAAoD,CAAC,KAAD,EAAO,MAAP,CAApD,CAAhB;AACAxJ,SAAOo4B,IAAP,GAAc,EAAd;AACAp4B,SAAOq4B,UAAP,GAAoB,KAApB;AACAr4B,SAAOs4B,WAAP,GAAqB,KAArB;;AAEAt4B,SAAOu4B,aAAP,GAAuB,YAAM;AAC3Bv4B,WAAOq4B,UAAP,GAAoB,IAApB;AACAr4B,WAAOs4B,WAAP,GAAqB,IAArB;AACD,GAHD;;AAKA;AACA5uC,IAAE0H,OAAF,CAAUoY,MAAV,EAAkB,UAACpE,CAAD,EAAO;AACvB1b,MAAE0H,OAAF,CAAUgU,EAAE8H,KAAZ,EAAmB,UAACY,CAAD,EAAO;AACxB,UAAG,CAACpkB,EAAE6U,IAAF,CAAOyB,OAAOo4B,IAAd,EAAoB,EAAChjB,MAAMtH,EAAEsH,IAAT,EAApB,CAAJ,EAAyC;AACvCpV,eAAOo4B,IAAP,CAAYzlC,IAAZ,CAAiBmb,CAAjB;AACD;AACF,KAJD;AAKD,GAND;;AAQA9N,SAAOo4B,IAAP,GAAc1uC,EAAEssC,OAAF,CAAUh2B,OAAOo4B,IAAjB,EAAuB,SAAvB,CAAd;AACAp4B,SAAOw4B,YAAP,GAAsB,UAACrgC,KAAD,EAAQuM,GAAR,EAAgB;;AAEpC,QAAIpQ,SAAS5K,EAAE6U,IAAF,CAAOpG,MAAM+U,KAAb,EAAoB,EAACkI,MAAM1Q,IAAI0Q,IAAX,EAApB,CAAb;;AAEA,QAAG,CAAC9gB,MAAJ,EAAY,OAAO,IAAP;;AAEZ,WAAOA,MAAP;AAED,GARD;;AAUA;;;;;;AAMA0L,SAAOy4B,SAAP,GAAmB,UAACtgC,KAAD,EAAQmD,IAAR,EAAiB;;AAElCyG,cAAUpC,IAAV,CAAe;AACbI,kBAAY,4CADC;AAEbH,mBAAa,kDAFA;AAGbC,cAAQ;AACNvE,cAAMA,IADA;AAENnD,eAAOA;AAFD;AAHK,KAAf,EAQG5N,IARH,CAQQ,UAACC,MAAD,EAAY;AAChB,UAAGA,OAAO2N,KAAV,EAAiB;AACf,YAAI8G,IAAIvV,EAAE8e,SAAF,CAAYgB,MAAZ,EAAoB,EAAC5e,OAAOJ,OAAO2N,KAAP,CAAavN,KAArB,EAApB,CAAR;AACA,YAAGqU,CAAH,EAAMe,OAAOwJ,MAAP,CAAcvK,CAAd,IAAmBuK,OAAOvK,CAAP,IAAYzU,OAAO2N,KAAtC;AACP;AACF,KAbH,EAcGpN,KAdH,CAcS,UAACC,GAAD,EAAS;AACdwU,eAASoD,UAAT,CAAoB,yBAApB;AACD,KAhBH;AAkBD,GApBD;AAsBD,CA9DD,CADA;;;ACAApa,IAAIuX,UAAJ,CAAe,0CAAf,EACA,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,yBAAtB,EAAiD,oBAAjD,EAAuE,mBAAvE,EAA4F,cAA5F,EAA4G,UAA5G,EAAwH,cAAxH,EAAwI,WAAxI,EAAqJ,UAArJ,EAAiK,YAAjK,EAA+K,QAA/K,EAAyL,OAAzL,EAAkM,UAAlM,EAA8M,kBAA9M,EACA,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAgBrF,WAAhB,EAA6BK,MAA7B,EAAqCG,KAArC,EAA4ClR,SAA5C,EAAuD6D,KAAvD,EAA8D0hB,YAA9D,EAA4EzN,SAA5E,EAAuFvC,QAAvF,EAAiG5E,UAAjG,EAA6G4O,MAA7G,EAAqHpS,KAArH,EAA4HyD,QAA5H,EAAsI0a,gBAAtI,EAA2J;;AAEzJvV,SAAOpF,UAAP,GAAoBA,UAApB;AACAoF,SAAOyO,MAAP,GAAgB,EAAhB;AACAzO,SAAO5I,KAAP,GAAeA,KAAf;AACA4I,SAAOwJ,MAAP,GAAgB9f,EAAEssC,OAAF,CAAUxsB,MAAV,EAAkB,CAAC,QAAD,EAAW,oBAAX,CAAlB,EAAoD,CAAC,KAAD,EAAO,MAAP,CAApD,CAAhB;AACAxJ,SAAOnF,QAAP,GAAkBA,QAAlB;AACAmF,SAAOuV,gBAAP,GAA0BA,gBAA1B;AACAvV,SAAOhS,MAAP,GAAgB;AACdC,YAAQ,IADM;AAEd+N,cAAWuZ,iBAAiBpe,MAAjB,GAA0B,CAA3B,GAAgCoe,iBAAiB,CAAjB,EAAoB3qB,KAApD,GAA4D;AAFxD,GAAhB;;AAKA;AACAoV,SAAO04B,WAAP,GAAqB,UAACvgC,KAAD,EAAW;AAC9B6H,WAAOyO,MAAP,GAAgBtW,KAAhB;AACA,QAAGA,MAAMwgC,IAAT,EAAe34B,OAAOhS,MAAP,CAAcC,MAAd,GAAuB,KAAvB;AAChB,GAHD;;AAKA;AACA+R,SAAO44B,cAAP,GAAuB,YAAM;AAC3B54B,WAAOyO,MAAP,GAAgB,EAAhB;AACAjP,aAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,6BAA9B,CAAd;AACD,GAHD;;AAKA;AACA7B,SAAO64B,gBAAP,GAA0B,YAAM;AAC9BnvC,MAAE0H,OAAF,CAAU4O,OAAOyO,MAAP,CAAcqqB,aAAxB,EAAuC,UAACz2B,CAAD,EAAIpD,CAAJ,EAAU;AAC/Ce,aAAOyO,MAAP,CAAcqqB,aAAd,CAA4B75B,CAA5B,IAAiCe,OAAO+4B,SAAxC;AACD,KAFD;AAGD,GAJD;;AAMA;AACA/4B,SAAOg5B,WAAP,GAAqB,UAACtrC,KAAD,EAAW;AAC9B,WAAOA,QAAQ,CAACA,KAAhB;AACD,GAFD;;AAIA;AACAsS,SAAOi5B,QAAP,GAAkB,UAACvrC,KAAD,EAAW;AAC3B,WAAOuY,KAAKizB,KAAL,CAAWxrC,KAAX,CAAP;AACD,GAFD;;AAIA;AACAsS,SAAOm5B,WAAP,GAAqB,UAAC79B,IAAD,EAAU;;AAE7B;AACA0E,WAAOyO,MAAP,CAAc6Y,UAAd,GAA2B,IAA3B;;AAEA,QAAI8R,WAAW,EAAf;;AAEA,QAAIC,eAAe3vC,EAAE6U,IAAF,CAAOnH,MAAM8R,KAAb,EAAoB,EAACte,OAAOoV,OAAOyO,MAAP,CAAchb,IAAtB,EAApB,EAAiD1D,QAApE;;AAEArG,MAAE0H,OAAF,CAAU4O,OAAOyO,MAAP,CAAcqqB,aAAxB,EAAuC,UAACQ,GAAD,EAAMh+B,IAAN,EAAe;AACpD,UAAGg+B,GAAH,EAAQF,SAASzmC,IAAT,CAAcwI,MAAMU,UAAN,CAAiBP,IAAjB,EAAuB0E,OAAOyO,MAAP,CAAchb,IAArC,CAAd;AACT,KAFD;;AAKA7J,OAAGM,GAAH,CAAOkvC,QAAP,EAAiB7uC,IAAjB,CACE,UAACC,MAAD,EAAY;;AAEV;AACAmQ,kBAAYE,QAAZ,CAAqBD,WAAWhQ,KAAhC,EAAuCL,IAAvC,CACE,UAACgvC,EAAD,EAAQ;AACNv5B,eAAOnF,QAAP,GAAkBA,WAAW0+B,EAA7B;;AAEA;AACA,YAAGv5B,OAAOhS,MAAP,CAAcC,MAAjB,EAAyB;AACvBurC,yBAAex5B,OAAOyO,MAAP,CAAcrjB,QAA7B,EAAuC4U,OAAOyO,MAAP,CAAcvB,KAArD,EACG3iB,IADH,CACQ,UAACC,MAAD,EAAY;;AAEhBA,mBAAO6D,OAAP,CAAeS,QAAf,GAA0BuqC,YAA1B;;AAEAvrC,kBAAME,MAAN,CAAaC,MAAb,CAAoBzD,OAAO0D,OAA3B,EAAoC1D,OAAO8B,IAA3C,EAAiD9B,OAAO2D,OAAxD,EAAiE3D,OAAO4D,WAAxE,EAAqF5D,OAAO6D,OAA5F,EACG9D,IADH,CACQ,UAACC,MAAD,EAAY;AAChBwV,qBAAOhS,MAAP,CAAcyrC,OAAd,GAAwBjvC,MAAxB;AACAwV,qBAAOyO,MAAP,CAAc6Y,UAAd,GAA2B,KAA3B;AACAtnB,qBAAOyO,MAAP,CAAckqB,IAAd,GAAqB,EAAC3qC,QAAQxD,OAAOiE,GAAhB,EAArB;;AAEAuM,qBAAO/P,MAAP,CAAc+U,OAAOyO,MAAP,CAAc7jB,KAA5B,EAAmCoV,OAAOyO,MAA1C,EACGlkB,IADH,CACQ,UAACC,MAAD,EAAY;AAChB0B,wBAAQC,GAAR,CAAY,gBAAZ,EAA8B3B,MAA9B;AACD,eAHH,EAIGO,KAJH,CAIS,UAACC,GAAD,EAAS;AACdkB,wBAAQC,GAAR,CAAY,gCAAZ,EAA8CnB,GAA9C;AACD,eANH;AAQD,aAdH,EAeGD,KAfH,CAeS,UAACC,GAAD,EAAS;AACdwU,uBAASoD,UAAT,CAAoB,+BAApB;AACA1W,sBAAQC,GAAR,CAAY,8BAAZ;AACAD,sBAAQC,GAAR,CAAYnB,GAAZ;AACD,aAnBH;AAqBD,WA1BH;AA2BD;;AAED;AACA,YAAG,CAACgV,OAAOhS,MAAP,CAAcC,MAAlB,EAA0B;AACxB+R,iBAAOyO,MAAP,CAAc6Y,UAAd,GAA2B,KAA3B;AACD;;AAGD9nB,iBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,kCAA9B,CAAd;AACA7B,eAAO05B,cAAP,CAAsBC,YAAtB;;AAEAjwC,UAAE0H,OAAF,CAAU5G,MAAV,EAAkB,UAACsjB,CAAD,EAAO;;AAEvBpkB,YAAE0H,OAAF,CAAU4O,OAAOyO,MAAP,CAAcvB,KAAxB,EAA+B,UAAC0sB,EAAD,EAAK36B,CAAL,EAAW;;AAExC,gBAAG6O,EAAEljB,KAAF,KAAYgvC,GAAGhvC,KAAlB,EAAyBoV,OAAOyO,MAAP,CAAcvB,KAAd,CAAoBjO,CAApB,IAAyB6O,CAAzB;AAE1B,WAJD;AAMD,SARD;;AAWA;AACApkB,UAAE0H,OAAF,CAAU4O,OAAOyO,MAAP,CAAcqqB,aAAxB,EAAuC,UAACe,EAAD,EAAKl7B,CAAL,EAAW;AAChDqB,iBAAOyO,MAAP,CAAcqqB,aAAd,CAA4Bn6B,CAA5B,IAAiC,KAAjC;AACD,SAFD;AAGA;AACAqB,eAAO+4B,SAAP,GAAmB,KAAnB;AAED,OA9DH,EA+DE,UAAC/tC,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,iCAAZ;AACD,OAjEH;;AAoEA;AACA,UAAG6T,OAAOyO,MAAP,CAAckqB,IAAd,KAAuB,IAA1B,EAAgC,CAI/B;AAGF,KAhFH,EAiFE,UAAC3tC,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,yBAAZ,EAAuCnB,GAAvC;AACD,KAnFH;AAsFD,GApGD;;AAsGA,MAAIwuC,iBAAiB,SAAjBA,cAAiB,CAACpuC,QAAD,EAAW8hB,KAAX,EAAqB;AACxC,WAAOtjB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;;AAE7B,UAAIkF,WAAW,EAACnB,aAAa,IAAd,EAAoBD,SAAS,IAA7B,EAAf;AACA,UAAI6N,WAAWtS,EAAE6U,IAAF,CAAOgX,gBAAP,EAAyB,EAAC3qB,OAAOoV,OAAOhS,MAAP,CAAcgO,QAAtB,EAAzB,CAAf;;AAEAzM,eAASrB,OAAT,GAAmB8N,SAAS9N,OAA5B;AACAqB,eAASjD,IAAT,GAAgB0P,SAAS89B,SAAzB;AACAvqC,eAASlB,OAAT,GAAmB;AACjBY,gBAAQ+M,SAAS8Y,IADA;AAEjB/lB,oBAAYrF,EAAE8D,GAAF,CAAMwO,SAASjN,UAAf,EAA2B,UAACquB,CAAD,EAAO;AAAE,iBAAO,EAACzuB,MAAMyuB,CAAP,EAAP;AAAiB,SAArD;AAFK,OAAnB;;AAKA,UAAIphB,SAAS5M,QAAb,EAAuBG,SAASH,QAAT,GAAoB,IAApB;;AAEvB;AACAnF,gBAAUU,QAAV,CAAmBS,SAASR,KAA5B,EACGL,IADH,CACQ,UAACC,MAAD,EAAY;;AAEhB+E,iBAASpB,OAAT,GAAmBqhB,aAAaxT,SAAS7N,OAAtB,EAA+B3D,MAA/B,CAAnB;AACA;;AAEA+E,iBAASnB,WAAT,GAAuB,EAAvB;AACAmB,iBAASnB,WAAT,IAAwB,8GAAxB;AACAmB,iBAASnB,WAAT,IAAwB,oBAAxB;AACAmB,iBAASnB,WAAT,IAAwB,4CAAxB;AACAmB,iBAASnB,WAAT,IAAwB,kBAAkB2rC,cAAc3uC,SAASyD,QAAvB,CAAlB,GAAqD,MAA7E;AACAU,iBAASnB,WAAT,IAAwB,6BAAxB;AACAmB,iBAASnB,WAAT,IAAwB,yCAAxB;AACAmB,iBAASnB,WAAT,IAAwB,qBAAxB;AACAmB,iBAASnB,WAAT,IAAwB,qBAAxB;AACAmB,iBAASnB,WAAT,IAAwB,yBAAxB;AACAmB,iBAASnB,WAAT,IAAwB,uCAAxB;AACAmB,iBAASnB,WAAT,IAAwB,yDAAxB;AACAmB,iBAASnB,WAAT,IAAwB,gDAAxB;;AAEAmB,iBAASnB,WAAT,IAAwB,SAAxB;;AAEAmB,iBAASnB,WAAT,IAAwB,kBAAkBwM,WAAWjM,IAA7B,GAAoC,8EAA5D;AACAY,iBAASnB,WAAT,IAAwB4N,SAASvM,IAAT,GAAgB,IAAxC;AACAF,iBAASnB,WAAT,IAAwB,aAAxB;;AAEAmB,iBAASnB,WAAT,IAAwB,gBAAxB;AACAmB,iBAASnB,WAAT,IAAwB,kCAAxB;;AAEA1E,UAAE0H,OAAF,CAAU8b,KAAV,EAAiB,UAACY,CAAD,EAAO;AACtBve,mBAASnB,WAAT,IAAwB,OAAO0f,EAAEnf,IAAT,GAAgB,IAAhB,GAAuBqrC,YAAYlsB,EAAEte,MAAd,EAAsByqC,MAA7C,GAAsD,IAAtD,IAA+DnsB,EAAEoqB,QAAF,CAAW/gC,MAAX,GAAoB,CAArB,GAA0B2W,EAAEoqB,QAAF,CAAW,CAAX,EAAc18B,OAAxC,GAAkD,GAAhH,IAAuH,KAA/I;AACD,SAFD;;AAIAjM,iBAASnB,WAAT,IAAwB,MAAxB;;AAEAmB,iBAASnB,WAAT,WAA6B4rC,YAAY,SAAZ,EAAuBC,MAApD,mBAAwED,YAAY,QAAZ,EAAsBC,MAA9F,kBAAiHD,YAAY,UAAZ,EAAwBC,MAAzI,oBAA8JD,YAAY,QAAZ,EAAsBC,MAApL,kBAAuMD,YAAY,MAAZ,EAAoBC,MAA3N;;AAEA1qC,iBAASnB,WAAT,IAAwB,oGAAxB;AACAmB,iBAASnB,WAAT,IAAwB,SAAxB;AACAmB,iBAASnB,WAAT,IAAwB,eAAxB;;AAEAmB,iBAASnB,WAAT,GAAuBohB,aAAajgB,SAASnB,WAAtB,EAAmC5D,MAAnC,CAAvB;;AAEAJ,gBAAQmF,QAAR;AACD,OA5CH,EA6CGxE,KA7CH,CA6CS,UAACC,GAAD,EAAS;AACdwU,iBAASoD,UAAT,8DAA+E5X,IAAIP,IAAJ,CAAStB,OAAxF;AACA+C,gBAAQC,GAAR,CAAY,2CAAZ;AACAD,gBAAQC,GAAR,CAAYnB,GAAZ;AACD,OAjDH;AAmDD,KAlEM,CAAP;AAmED,GApED;;AAsEAgV,SAAOk6B,cAAP,GAAwB,UAAC9uC,QAAD,EAAW8hB,KAAX,EAAqB;;AAE3CnL,cAAUpC,IAAV,CAAe;AACbC,mBAAa,8DADA;AAEbG,kBAAY,CAAC,QAAD,EAAW,UAACa,KAAD,EAAW;;AAEhC,YAAI5E,WAAWtS,EAAE6U,IAAF,CAAOgX,gBAAP,EAAyB,EAAC3qB,OAAOoV,OAAOhS,MAAP,CAAcgO,QAAtB,EAAzB,CAAf;;AAIA4E,cAAMxV,QAAN,GAAiBA,QAAjB;AACAwV,cAAMhG,UAAN,GAAmBA,UAAnB;AACAgG,cAAMiC,OAAN,GAAgB,IAAhB;AACAjC,cAAMjW,QAAN,GAAiB,IAAjB;AACAiW,cAAMsM,KAAN,GAAcA,KAAd;AACAtM,cAAMzS,OAAN,GAAgB,IAAhB;AACAyS,cAAMnR,IAAN,GAAa,IAAb;;AAEA;AACAxF,kBAAUU,QAAV,CAAmBS,SAASR,KAA5B,EACGL,IADH,CACQ,UAACC,MAAD,EAAY;;AAEhB;AACAoW,gBAAMzS,OAAN,GAAgBqhB,aAAaxT,SAAS7N,OAAtB,EAA+B3D,MAA/B,CAAhB;AACAoW,gBAAMnR,IAAN,GAAa+f,aAAaxT,SAASvM,IAAtB,EAA4BjF,MAA5B,CAAb;;AAEAoW,gBAAMiC,OAAN,GAAgB,KAAhB;AACAjC,gBAAMjW,QAAN,GAAiBH,MAAjB;AACD,SATH,EAUGO,KAVH,CAUS,UAACC,GAAD,EAAS;AACdwU,mBAASoD,UAAT,8DAA+E5X,IAAIP,IAAJ,CAAStB,OAAxF;AACA4Y,oBAAUO,MAAV;AACApW,kBAAQC,GAAR,CAAY,yCAAZ,EAAuDnB,GAAvD;AACD,SAdH;;AAgBA;AACA4V,cAAM4mB,KAAN,GAAc,YAAM;AAClBzlB,oBAAU5B,IAAV;AACD,SAFD;;AAIA;AACAS,cAAMo5B,WAAN,GAAoBA,WAApB;;AAEA;AACAp5B,cAAMm5B,aAAN,GAAsBA,aAAtB;AAED,OA1CW;AAFC,KAAf;AA+CD,GAjDD;;AAmDA,MAAIC,cAAc,SAAdA,WAAc,CAACxqC,MAAD,EAAY;;AAE5B,QAAID,iBAAJ;;AAEA,YAAOC,MAAP;AACE,WAAK,SAAL;AACED,mBAAW,EAAC0qC,QAAQ,OAAT,EAAkBE,OAAO,4DAAzB,EAAX;AACA;AACF,WAAK,QAAL;AACE5qC,mBAAW,EAAC0qC,QAAQ,MAAT,EAAiBE,OAAO,+DAAxB,EAAX;AACA;AACF,WAAK,UAAL;AACE5qC,mBAAW,EAAC0qC,QAAQ,KAAT,EAAgBE,OAAO,wDAAvB,EAAX;AACA;AACF,WAAK,MAAL;AACE5qC,mBAAW,EAAC0qC,QAAQ,KAAT,EAAgBE,OAAO,0DAAvB,EAAX;AACA;AACF,WAAK,QAAL;AACA,WAAK,WAAL;AACE5qC,mBAAW,EAAC0qC,QAAQ,KAAT,EAAgBE,OAAO,wDAAvB,EAAX;AACA;AAhBJ;;AAmBA,WAAO5qC,QAAP;AACD,GAxBD;;AA0BA,MAAIwqC,gBAAgB,SAAhBA,aAAgB,CAAClrC,QAAD,EAAc;AAChC,QAAGA,aAAa,CAAhB,EAAmB,OAAO,KAAP;AACnB,QAAGA,aAAa,CAAhB,EAAmB,OAAO,QAAP;AACnB,QAAGA,aAAa,CAAhB,EAAmB,OAAO,MAAP;AACpB,GAJD;AAOD,CA5SD,CADA;;;;;ACAArG,IAAIuX,UAAJ,CAAe,+CAAf,EACA,CAAC,YAAD,EAAe,QAAf,EAAyB,IAAzB,EAA+B,GAA/B,EAAoC,UAApC,EAAgD,8BAAhD,EAAgF,UAAhF,EAA4F,YAA5F,EAA0G,WAA1G,EACA,UAAClX,UAAD,EAAamX,MAAb,EAAqBpW,EAArB,EAAyBF,CAAzB,EAA4B8V,QAA5B,EAAsC1D,SAAtC,EAAiDhO,KAAjD,EAAwD8M,UAAxD,EAAoE6a,SAApE,EAAkF;;AAEhFzV,SAAOpF,UAAP,GAAoBA,UAApB;AACAoF,SAAOyV,SAAP,GAAmBA,SAAnB;AACAzV,SAAOuC,OAAP,GAAiB,EAAjB;;AAEAvC,SAAOo6B,SAAP,GAAmB,CACjB,EAAEzrC,MAAM,YAAR,EAAsB0F,KAAK,SAA3B,EADiB,EAEjB,EAAE1F,MAAM,aAAR,EAAuB0F,KAAK,KAA5B,EAFiB,EAGjB,EAAE1F,MAAM,aAAR,EAAuB0F,KAAK,KAA5B,EAHiB,EAIjB,EAAE1F,MAAM,gBAAR,EAA0B0F,KAAK,YAA/B,EAJiB,EAKjB,EAAE1F,MAAM,gBAAR,EAA0B0F,KAAK,YAA/B,EALiB,EAMjB,EAAE1F,MAAM,aAAR,EAAuB0F,KAAK,aAA5B,EANiB,EAOjB,EAAE1F,MAAM,aAAR,EAAuB0F,KAAK,SAA5B,EAPiB,EAQjB,EAAE1F,MAAM,UAAR,EAAoB0F,KAAK,UAAzB,EARiB,EASjB,EAAE1F,MAAM,SAAR,EAAmB0F,KAAK,SAAxB,EATiB,EAUjB,EAAE1F,MAAM,cAAR,EAAwB0F,KAAK,cAA7B,EAViB,EAWjB,EAAE1F,MAAM,eAAR,EAAyB0F,KAAK,MAA9B,EAXiB,EAYjB,EAAE1F,MAAM,sBAAR,EAAgC0F,KAAK,eAArC,EAZiB,EAajB,EAAE1F,MAAM,yBAAR,EAAmC0F,KAAK,kBAAxC,EAbiB,EAcjB,EAAE1F,MAAM,eAAR,EAAyB0F,KAAK,eAA9B,EAdiB,EAejB,EAAE1F,MAAM,kBAAR,EAA4B0F,KAAK,kBAAjC,EAfiB,EAgBjB,EAAE1F,MAAM,UAAR,EAAoB0F,KAAK,UAAzB,EAhBiB,EAiBjB,EAAE1F,MAAM,WAAR,EAAqB0F,KAAK,WAA1B,EAjBiB,EAkBjB,EAAE1F,MAAM,YAAR,EAAsB0F,KAAK,YAA3B,EAlBiB,EAmBjB,EAAE1F,MAAM,cAAR,EAAwB0F,KAAK,cAA7B,EAnBiB,CAAnB;;AAuBA2L,SAAOq6B,SAAP,GAAmB,UAACh4B,CAAD,EAAO;AACxBxZ,eAAW+oB,UAAX,CAAsB,YAAtB,EAAoC,OAAKvP,CAAL,GAAO,IAA3C;AACD,GAFD;;AAIA;;;;;AAKArC,SAAOs6B,cAAP,GAAwB,UAACt+B,QAAD,EAAc;AACpCgE,WAAOuC,OAAP,GAAiBvG,QAAjB;AACAgE,WAAOuC,OAAP,CAAeoV,GAAf,GAAqB,KAArB;;AAEA,QAAG3b,SAAS5M,QAAT,KAAsB,KAAzB,EAAgC4Q,OAAOuC,OAAP,CAAeg4B,cAAf,GAAgC,IAAhC;;AAEhCv6B,WAAOw6B,UAAP,CAAkBx+B,SAAS9N,OAA3B;AACD,GAPD;;AASA;;;;AAIA8R,SAAOy6B,WAAP,GAAqB,YAAM;AACzBz6B,WAAOuC,OAAP,GAAiB,EAAE5T,MAAM,IAAR,EAAcgpB,KAAI,IAAlB,EAAwBloB,MAAM,EAA9B,EAAkCqlB,MAAM,EAAxC,EAAjB;AACD,GAFD;;AAIA;;;;AAIA9U,SAAO06B,aAAP,GAAuB,YAAM;AAC3B16B,WAAOuC,OAAP,GAAiB,EAAjB;AACA/C,aAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,6BAA9B,CAAd;AACD,GAHD;;AAKA;;;;;;AAMA7B,SAAO26B,cAAP,GAAwB,UAAC1wB,UAAD,EAAgB;AACtC,WAAOrgB,GAAG,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAG4f,WAAW9S,MAAX,KAAsB,CAAzB,EAA4B,OAAO,EAAP;;AAE5BrJ,YAAMoC,QAAN,CAAehG,GAAf,CAAmB+f,UAAnB,EACG1f,IADH,CACQ,UAACqF,IAAD,EAAU;AACdxF,gBAAQV,EAAEL,MAAF,CAASuG,IAAT,EAAe,UAACkO,CAAD,EAAO;AAAE,cAAGA,EAAErP,GAAF,CAAMtB,WAAN,GAAoB5D,OAApB,CAA4B0gB,WAAW9c,WAAX,EAA5B,IAAwD,CAAC,CAAzD,IAA8D2Q,EAAEnP,IAAF,CAAOxB,WAAP,GAAqB5D,OAArB,CAA6B0gB,WAAW9c,WAAX,EAA7B,IAAyD,CAAC,CAA3H,EAA+H,OAAO2Q,CAAP;AAAW,SAAlK,CAAR;AACD,OAHH,EAIG/S,KAJH,CAIS,UAACC,GAAD,EAAS;AACdkB,gBAAQC,GAAR,CAAYnB,GAAZ;AACAX;AACD,OAPH;AAQD,KAXM,CAAP;AAYD,GAbD;;AAeA;;;;AAIA2V,SAAOw6B,UAAP,GAAoB,YAAM;;AAExB,QAAGx6B,OAAOuC,OAAP,CAAerU,OAAf,KAA2BjC,SAA3B,IAAwC+T,OAAOuC,OAAP,CAAerU,OAAf,KAA2B,IAAtE,EAA4E;AAC1E,aAAO,EAAP;AACD;;AAED,QAAG,CAAC8R,OAAOuC,OAAP,CAAexT,UAAnB,EAA+BiR,OAAOuC,OAAP,CAAexT,UAAf,GAA4B,EAA5B;;AAE/B,QAAI6rC,aAAa,IAAjB;;AAEA,QAAG,QAAO56B,OAAOuC,OAAP,CAAerU,OAAtB,MAAkC,QAArC,EAA+C0sC,aAAa56B,OAAOuC,OAAP,CAAerU,OAAf,CAAuBO,GAApC;AAC/C,QAAG,OAAOuR,OAAOuC,OAAP,CAAerU,OAAtB,KAAkC,QAArC,EAA+C0sC,aAAa56B,OAAOuC,OAAP,CAAerU,OAA5B;;AAE/CJ,UAAMoC,QAAN,CAAe5F,GAAf,CAAmBswC,UAAnB,EACGrwC,IADH,CACQ,UAAC2D,OAAD,EAAa;AACjB8R,aAAOjR,UAAP,GAAoBb,QAAQa,UAA5B;AACAiR,aAAO66B,UAAP,GAAoB3sC,QAAQ2sC,UAA5B;AACD,KAJH,EAKG9vC,KALH,CAKS,UAACC,GAAD,EAAS;AACdkB,cAAQC,GAAR,CAAY,+BAAZ,EAA6CnB,GAA7C;AACD,KAPH;;AASA8C,UAAMe,QAAN,GACGtE,IADH,CACQ,UAACuwC,UAAD,EAAgB;AACpB96B,aAAO86B,UAAP,GAAoBA,UAApB;AACD,KAHH,EAIG/vC,KAJH,CAIS,UAACC,GAAD,EAAS;AACdkB,cAAQC,GAAR,CAAY,sCAAZ,EAAoDnB,GAApD;AACD,KANH;;AAQA;;;;;;;;;;;;;;;AAeD,GA7CD;;AAgDAgV,SAAO+6B,cAAP,GAAwB,YAAM;;AAE5B;AACA,QAAG/6B,OAAOuC,OAAP,CAAeoV,GAAlB,EAAuB;AACrB3X,aAAOuC,OAAP,GAAiB,EAAjB;AACA;AACD;;AAEDzG,cAAUpK,MAAV,CAAiBkJ,WAAWhQ,KAA5B,EAAmCoV,OAAOuC,OAAP,CAAe3X,KAAlD,EACGL,IADH,CACQ,UAACk9B,GAAD,EAAS;;AAEb;AACA,UAAIxoB,IAAIvV,EAAE8e,SAAF,CAAYxI,OAAOyV,SAAnB,EAA8B,EAAC7qB,OAAOoV,OAAOuC,OAAP,CAAe3X,KAAvB,EAA9B,CAAR;AACA,aAAOoV,OAAOyV,SAAP,CAAiBxW,CAAjB,CAAP;AACAwW,kBAAYzV,OAAOyV,SAAnB;;AAEA;AACAzV,aAAOuC,OAAP,GAAiB,EAAjB;AAED,KAXH,EAYGxX,KAZH,CAYS,UAACC,GAAD,EAAS,CAEf,CAdH;AAgBD,GAxBD;;AA2BAgV,SAAOQ,IAAP,GAAc,UAACmC,CAAD,EAAO;AACnBzW,YAAQC,GAAR,CAAY,gBAAZ,EAA8BwW,CAA9B,EAAiC3C,OAAOuC,OAAxC;;AAEA;AACA,QAAG,QAAOvC,OAAOuC,OAAP,CAAerU,OAAtB,MAAkC,QAAlC,IAA8C8R,OAAOuC,OAAP,CAAerU,OAAf,CAAuBO,GAAxE,EAA6EuR,OAAOuC,OAAP,CAAerU,OAAf,GAAyB8R,OAAOuC,OAAP,CAAerU,OAAf,CAAuBO,GAAhD;AAC7E,QAAG,OAAOuR,OAAOuC,OAAP,CAAerU,OAAtB,KAAkC,QAArC,EAA+C,OAAOsR,SAASoD,UAAT,CAAoB,4CAApB,CAAP;;AAE/C,QAAG5C,OAAOuC,OAAP,CAAeg4B,cAAlB,EAAkCv6B,OAAOuC,OAAP,CAAenT,QAAf,GAA0B,KAA1B;;AAElC,QAAG4Q,OAAOuC,OAAP,CAAeoV,GAAlB,EAAuB;;AAErB7b,gBAAU7N,MAAV,CAAiB2M,WAAWhQ,KAA5B,EAAmCoV,OAAOuC,OAA1C,EACGhY,IADH,CACQ,UAACyR,QAAD,EAAc;AAClBgE,eAAOyV,SAAP,CAAiB9iB,IAAjB,CAAsBqJ,QAAtB;AACAgE,eAAOuC,OAAP,GAAiB,EAAjB;AACA/C,iBAASoD,UAAT,CAAoB,qCAApB;AACD,OALH,EAMG7X,KANH,CAMS,UAACC,GAAD,EAAS;AACdwU,iBAASoD,UAAT,CAAoB,qCAApB;AACD,OARH;AASD;;AAED,QAAG,CAAC5C,OAAOuC,OAAP,CAAeoV,GAAnB,EAAwB;;AAEtB7b,gBAAU7Q,MAAV,CAAiB2P,WAAWhQ,KAA5B,EAAmCoV,OAAOuC,OAA1C,EACGhY,IADH,CACQ,UAACyR,QAAD,EAAc;AAClB;AACA,YAAIiD,IAAIvV,EAAE8e,SAAF,CAAYxI,OAAOyV,SAAnB,EAA8B,EAAC7qB,OAAOoR,SAASpR,KAAjB,EAA9B,CAAR;;AAEAoV,eAAOyV,SAAP,CAAiBxW,CAAjB,IAAsBjD,QAAtB;AACAyZ,oBAAYzV,OAAOyV,SAAnB;;AAEAjW,iBAASoD,UAAT,CAAoB,qCAApB;AACD,OATH,EAUG7X,KAVH,CAUS,UAACC,GAAD,EAAS;AACdwU,iBAASoD,UAAT,CAAoB,qCAApB;AACD,OAZH;AAcD;AACF,GAvCD;AAyCD,CA9MD,CADA;;;ACAApa,IAAIuX,UAAJ,CAAe,+CAAf,EACA,CAAC,QAAD,EAAW,GAAX,EAAgB,cAAhB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,mBAAzD,EAA8E,OAA9E,EAAuF,MAAvF,EAA+F,YAA/F,EACA,UAACC,MAAD,EAAStW,CAAT,EAAY8lB,YAAZ,EAA0BzN,SAA1B,EAAqCvC,QAArC,EAA+C1E,KAA/C,EAAsDoS,KAAtD,EAA6DnS,IAA7D,EAAmEH,UAAnE,EAAkF;;AAEhFoF,SAAOjF,IAAP,GAAcA,IAAd;AACAiF,SAAOkN,KAAP,GAAeA,KAAf;AACAlN,SAAOg7B,iBAAP,GAA2B,KAA3B,CAJgF,CAI9C;AAClCh7B,SAAO2X,GAAP,GAAa,CAAE5c,KAAKnQ,KAApB;;AAEAoV,SAAOjF,IAAP,CAAYkgC,aAAZ,GAA4BvxC,EAAE2H,IAAF,CAAO0J,KAAKklB,MAAZ,EAAoB,IAApB,CAA5B;;AAEAjgB,SAAOsC,MAAP,GAAgB,YAAM;AACpBP,cAAUO,MAAV,CAAiB,EAACtZ,OAAO,QAAR,EAAjB;AACD,GAFD;;AAIAgX,SAAOtO,MAAP,GAAgB,YAAM;;AAEpB,QAAG,CAACsO,OAAOjF,IAAP,CAAYnQ,KAAhB,EAAuBmX,UAAUO,MAAV;;AAEvBxH,UAAMpJ,MAAN,CAAasO,OAAOjF,IAAP,CAAYnQ,KAAzB,EACGL,IADH,CACQ,YAAM;AACVwX,gBAAUO,MAAV,CAAiB,EAACtZ,OAAO,QAAR,EAAkB+R,MAAMiF,OAAOjF,IAA/B,EAAqCnQ,OAAOoV,OAAOjF,IAAP,CAAYnQ,KAAxD,EAAjB;AACD,KAHH,EAIGG,KAJH,CAIS,UAACU,CAAD,EAAO;AACZ+T,eAASoD,UAAT,CAAoB,wBAApB;AACD,KANH;AAQD,GAZD;;AAcA5C,SAAO4kB,MAAP,GAAgB,UAACjiB,CAAD,EAAO;;AAErB;AACA3C,WAAOjF,IAAP,CAAYklB,MAAZ,GAAqBjgB,OAAOjF,IAAP,CAAYkgC,aAAZ,CAA0Bl8B,KAA1B,CAAgC,GAAhC,EAAqCvR,GAArC,CAAyC,UAACyR,CAAD,EAAO;AAAE/S,cAAQC,GAAR,CAAY8S,EAAEi8B,IAAF,EAAZ,EAAuB,OAAOj8B,EAAEi8B,IAAF,EAAP;AAAiB,KAA1F,CAArB;;AAGA;AACA,QAAGngC,KAAKnQ,KAAL,IAAcmQ,KAAKnQ,KAAL,CAAWuM,MAAX,GAAoB,CAArC,EAAwC;AACtC;;AAEA2D,YAAM7P,MAAN,CAAa8P,KAAKnQ,KAAlB,EAAyBmQ,IAAzB,EACGxQ,IADH,CACQ,UAACqF,IAAD,EAAU;AACdmS,kBAAU5B,IAAV,CAAevQ,IAAf;AACD,OAHH,EAIG7E,KAJH,CAIS,UAACU,CAAD,EAAO;AACZ+T,iBAASoD,UAAT,CAAoB,gCAAgCnX,EAAEhB,IAAF,CAAOtB,OAA3D;AACD,OANH;AAQD,KAXD,MAWO;;AAEL6W,aAAOjF,IAAP,CAAYogC,UAAZ,GAAyBvgC,WAAWwa,IAApC;AACA;AACAta,YAAM7M,MAAN,CAAa8M,IAAb,EACGxQ,IADH,CACQ,UAACqF,IAAD,EAAU;AACdmS,kBAAU5B,IAAV,CAAevQ,IAAf;AACD,OAHH,EAIG7E,KAJH,CAIS,UAACU,CAAD,EAAO;AACZ+T,iBAASoD,UAAT,CAAoB,gCAAgCnX,EAAEhB,IAAF,CAAOtB,OAA3D;AACD,OANH;AAOD;AAEF,GA/BD;AAiCD,CA7DD,CADA;;;;;ACAAX,IAAIuX,UAAJ,CAAe,0CAAf,EACA,CAAC,IAAD,EAAO,GAAP,EAAY,QAAZ,EAAsB,yBAAtB,EAAiD,oBAAjD,EAAuE,mBAAvE,EAA4F,WAA5F,EAAyG,UAAzG,EAAqH,aAArH,EAAoI,QAApI,EAA8I,OAA9I,EACA,UAACnW,EAAD,EAAKF,CAAL,EAAQsW,MAAR,EAAgBrF,WAAhB,EAA6BK,MAA7B,EAAqCG,KAArC,EAA4C4G,SAA5C,EAAuDvC,QAAvD,EAAiE0V,WAAjE,EAA8Ene,MAA9E,EAAsFue,KAAtF,EAAgG;;AAE9FtV,SAAOkV,WAAP,GAAqBxrB,EAAE0c,MAAF,CAAS8O,WAAT,EAAsB,SAAtB,CAArB;;AAEAlV,SAAOuC,OAAP,GAAiB,EAAjB;AACAvC,SAAOjJ,MAAP,GAAgBA,MAAhB;AACAiJ,SAAOsV,KAAP,GAAeA,KAAf;;AAEAtV,SAAOo7B,gBAAP,GAA0B,UAACxgC,UAAD,EAAgB;AACxCoF,WAAOuC,OAAP,GAAiB3H,UAAjB;AACAoF,WAAOuC,OAAP,CAAeoV,GAAf,GAAqB,KAArB;AACD,GAHD;;AAKA3X,SAAOq7B,aAAP,GAAuB,YAAM;AAC3Br7B,WAAOuC,OAAP,GAAiB,EAAE5T,MAAM,IAAR,EAAcgpB,KAAI,IAAlB,EAAwBzK,OAAO,EAA/B,EAAjB;AACD,GAFD;;AAIAlN,SAAO06B,aAAP,GAAuB,YAAM;AAC3B16B,WAAOuC,OAAP,GAAiB,EAAjB;AACA/C,aAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,6BAA9B,CAAd;AACD,GAHD;;AAKA7B,SAAOs7B,eAAP,GAAyB,UAACnjC,KAAD,EAAW;AAClC,WAAOzO,EAAEL,MAAF,CAAS2W,OAAOsV,KAAhB,EAAuB,EAAC6lB,YAAYhjC,KAAb,EAAvB,CAAP;AACD,GAFD;;AAIA6H,SAAOu7B,QAAP,GAAkB,UAACxgC,IAAD,EAAU;;AAE1BgH,cAAUpC,IAAV,CAAe;AACbC,mBAAa,oDADA;AAEbG,kBAAY,+CAFC;AAGbF,cAAQ;AACN9E,cAAMA,IADA;AAENmS,eAAOlN,OAAOuC,OAAP,CAAe2K,KAFhB;AAGNtS,oBAAYoF,OAAOuC;AAHb;AAHK,KAAf,EASGhY,IATH,CASQ,UAAC4uB,CAAD,EAAO;AACX,UAAG,CAACzvB,EAAE6U,IAAF,CAAOyB,OAAOsV,KAAd,EAAqB,EAAC1qB,OAAOuuB,EAAEvuB,KAAV,EAArB,CAAJ,EAA4CoV,OAAOsV,KAAP,CAAa3iB,IAAb,CAAkBwmB,CAAlB;AAC7C,KAXH,EAYGpuB,KAZH,CAYS,UAACU,CAAD,EAAO;AACZ,UAAG,CAACA,CAAJ,EAAOA,IAAI,EAACzC,OAAO,QAAR,EAAJ;;AAEP,cAAOyC,EAAEzC,KAAT;AACE,aAAK,QAAL;AACE,cAAIiW,IAAIvV,EAAEy8B,OAAF,CAAUnmB,OAAOsV,KAAjB,EAAwB,EAAC1qB,OAAOa,EAAEb,KAAV,EAAxB,CAAR;AACAoV,iBAAOsV,KAAP,CAAanN,MAAb,CAAoBlJ,CAApB,EAAsB,CAAtB;AACA;AAJJ;AAMD,KArBH;AAuBD,GAzBD;;AA2BA;AACAe,SAAOQ,IAAP,GAAc,YAAM;;AAElB;;AAEA;AACAR,WAAOlP,KAAP,GAAerI,QAAQ0C,IAAR,CAAa6U,OAAOuC,OAApB,CAAf;AACAvC,WAAOlP,KAAP,CAAasG,KAAb,GAAqB4I,OAAOuC,OAAP,CAAenL,KAApC;;AAEA;AACA,QAAG4I,OAAOuC,OAAP,CAAeoV,GAAlB,EAAuB;;AAErB3X,aAAOuC,OAAP,CAAeknB,OAAf,GAAyBzpB,OAAOkV,WAAP,CAAmB/d,MAAnB,GAA4B,CAArD;;AAEAwD,kBAAY1M,MAAZ,CAAmB+R,OAAOlP,KAA1B,EAAiCvG,IAAjC,CACE,UAACC,MAAD,EAAY;AACVwV,eAAOkV,WAAP,CAAmBviB,IAAnB,CAAwBnI,MAAxB;AACAwV,eAAOuC,OAAP,GAAiB,EAAjB;AACD,OAJH,EAKE,UAACvX,GAAD,EAAS;AACPkB,gBAAQC,GAAR,CAAY,6BAAZ;AACAqT,iBAASG,IAAT,CAAcH,SAASoC,MAAT,CAAgB,iCAAhB,CAAd;AACD,OARH;AAWD,KAfD,MAeO;;AAEL;AACAjH,kBAAY1P,MAAZ,CAAmB+U,OAAOuC,OAAP,CAAe3X,KAAlC,EAAyCoV,OAAOlP,KAAhD,EAAuDvG,IAAvD,CACE,UAACC,MAAD,EAAY;;AAEV;AACA,YAAIyU,IAAIvV,EAAE8e,SAAF,CAAYxI,OAAOkV,WAAnB,EAAgC,EAACtqB,OAAOJ,OAAOI,KAAf,EAAhC,CAAR;;AAEAoV,eAAOkV,WAAP,CAAmBjW,CAAnB,IAAwBzU,MAAxB;AACA0qB,sBAAclV,OAAOkV,WAArB;;AAEA1V,iBAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,+BAA9B,CAAd;AAED,OAXH,EAYE,UAAC7W,GAAD,EAAS,CAER,CAdH;AAgBD;AAEF,GA7CD;;AA+CA;AACAgV,SAAOw7B,UAAP,GAAoB,UAACz3B,MAAD,EAAgC;AAAA,QAAvBzI,IAAuB,uEAAlB,KAAkB;AAAA,QAAX2D,CAAW,uEAAT,IAAS;;;AAElD8C,cAAUpC,IAAV,CAAe;AACbqE,mBAAaD,MADA;AAEbnE,mBAAa,oDAFA;AAGbG,kBAAY,CAAC,IAAD,EAAO,OAAP,EAAgB,UAACnW,EAAD,EAAKgX,KAAL,EAAe;;AAEzC,YAAI66B,WAAWhzC,QAAQ0C,IAAR,CAAamQ,IAAb,CAAf;;AAEAsF,cAAM+W,GAAN,GAAa,QAAOrc,IAAP,yCAAOA,IAAP,OAAgB,QAA7B;AACAsF,cAAMtF,IAAN,GAAc,QAAOA,IAAP,yCAAOA,IAAP,OAAgB,QAAjB,GAA6B,EAAC9L,QAAQ,SAAT,EAAoBksC,gBAAgB,CAApC,EAA7B,GAAwEpgC,IAArF;AACAsF,cAAM+6B,SAAN,GAAkB18B,CAAlB;;AAEA2B,cAAM0B,MAAN,GAAe,YAAM;AACnBP,oBAAUO,MAAV;AACAhH,iBAAOmgC,QAAP;AACD,SAHD;;AAKA76B,cAAMgkB,MAAN,GAAe,UAACjiB,CAAD,EAAO;AACpB;;AAEA,cAAG/B,MAAM+W,GAAT,EAAc3X,OAAOuC,OAAP,CAAe2K,KAAf,CAAqBva,IAArB,CAA0BiO,MAAMtF,IAAhC;;AAEdyG,oBAAU5B,IAAV;AACD,SAND;;AAQA;AACAS,cAAMlP,MAAN,GAAe,YAAM;;AAEnBsO,iBAAOuC,OAAP,CAAe2K,KAAf,CAAqB/E,MAArB,CAA4BlJ,CAA5B,EAA8B,CAA9B;AACA8C,oBAAU5B,IAAV;AACD,SAJD;AAMD,OA5BW;AAHC,KAAf;AAkCD,GApCD;;AAsCA;AACAH,SAAO47B,aAAP,GAAuB,YAAM;;AAE3B;AACA,QAAIxC,WAAW,EAAf;;AAEA;AACA1vC,MAAE0H,OAAF,CAAU4O,OAAOkV,WAAjB,EAA8B,UAAC2iB,GAAD,EAAM54B,CAAN,EAAY;;AAExCe,aAAOkV,WAAP,CAAmBjW,CAAnB,EAAsBwqB,OAAtB,GAAgCxqB,IAAE,CAAlC;;AAEA;AACAm6B,eAASzmC,IAAT,CAAcgI,YAAY1P,MAAZ,CAAmB4sC,IAAIjtC,KAAvB,EAA8BitC,GAA9B,CAAd;AAED,KAPD;;AASAjuC,OAAGM,GAAH,CAAOkvC,QAAP,EAAiB7uC,IAAjB,CACE,UAACC,MAAD,EAAY;AACVgV,eAASG,IAAT,CAAcH,SAASoC,MAAT,GAAkBC,WAAlB,CAA8B,8BAA9B,CAAd;AACD,KAHH,EAIE,UAAC7W,GAAD,EAAS;AACPkB,cAAQC,GAAR,CAAY,sCAAZ,EAAoDnB,GAApD;AACD,KANH;AAWD,GA1BD;AA8BD,CA5KD,CADA;;;ACAAxC,IAAIuX,UAAJ,CAAe,iDAAf,EACA,CAAC,QAAD,EAAW,GAAX,EAAgB,cAAhB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,UAAzD,EAAqE,YAArE,EACA,UAACC,MAAD,EAAStW,CAAT,EAAY8lB,YAAZ,EAA0BzN,SAA1B,EAAqCvC,QAArC,EAA+C1R,KAA/C,EAAsD8M,UAAtD,EAAqE,CAIpE,CALD,CADA","file":"app.js","sourcesContent":["const app = angular.module('bcgscIPR', [\n//\t'env',\n  'templates',\n\t'ngMaterial',\n\t'ngResource',\n\t'ngSanitize',\n\t'ui.router',\n\t'angularMoment',\n\t'ngStorage',\n\t'angularFileUpload',\n\t'ngclipboard',\n\t'angular-sortable-view',\n\t'ngQuill',\n\t'chart.js',\n\t'btford.socket-io',\n\t'ngMessages',\n]);\n\n// Register HTTP Error Handler\napp.run(httpErrorHandler);\n\n\nfunction httpErrorHandler($rootScope, toastService) {\n  $rootScope.$on( 'httpError', (event, eventData) => {\n    toastService.serverError(eventData.message);\n  });\n}\n\nhttpErrorHandler.$inject = ['$rootScope', 'toastService'];","app.filter('indefiniteArticle', () => {\n  return (noun) => {\n    return (['a','e','i','o','u'].indexOf(noun.charAt(0)) > -1) ? 'an' : 'a';\n  }\n});","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.analysis', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/analysis';\n  \n  let $analysis = {};\n  \n  /**\n   * Get All Analyses\n   *\n   * Retrieve paginated analyses\n   *\n   * @param {object} params - URL parameters to append\n   * @returns {promise} - Resolves with array of Analyses\n   */\n  $analysis.all = (params={}) => {\n    return $q((resolve, reject) => {\n      \n      // Retrieve from API\n      $http.get(api, {params: params}).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  };\n  \n  /**\n   * Get Extended Analysis data for the provided ident\n   *\n   * @param {object} ident - UUID string to get extended analysis for\n   * @returns {promise} - Resolves with object\n   */\n  $analysis.extended = (ident) => {\n    return $q((resolve, reject) => {\n      \n      // Retrieve from API\n      $http.get(`${api}/extended/${ident}`).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  };\n  \n  \n  /**\n   * Add a new biopsy entry to API\n   *\n   * @param {object} data - New analysis object\n   * @returns {*}\n   */\n  $analysis.add = (data) => {\n    \n    return $q((resolve, reject) => {\n      \n      $http.post(api, data)\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      \n    });\n    \n  };\n  \n  \n  /**\n   * Update biopsy analysis entry\n   *\n   * @param {object} data - Updated object payload\n   * @returns {Promise/object} - Resolves with updated entry\n   */\n  $analysis.update = (data) => {\n    return $q((resolve, reject) => {\n      \n      let payload = angular.copy(data);\n      if(payload.analysis && Array.isArray(payload.analysis)) delete payload.analysis;\n      \n      $http.put(api + '/' + data.ident, payload)\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      \n    });\n  };\n  \n  /**\n   * Retrieve comparators list from API\n   *\n   * @returns {object} - Resolves with hashmap of comparators\n   */\n  $analysis.comparators = () => {\n    return $q((resolve, reject) => {\n      \n      $http.get(`${api}/comparators`)\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  };\n  \n  return $analysis;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.bioapps', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = 'http://bioappsdev01:8104';\n  const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJncm91cHMiOlsiZ3NjX2VtcGxveWVlIiwiUE9HIiwic2VxZGV2IiwiamlyYS11c2VycyIsImJpb2Z4Z3JwIiwidHVtb3VyX2NoYXJhY3Rlcml6YXRpb24iLCJTb2NpYWwgQ29tbWl0dGVlIiwiMXN0Zmxvb3IiLCJHU0NfQ09JX0FsbCIsIkdTQ19DT0lfUmVzZWFyY2hlciIsIlBPR2FuYWx5c2lzIiwiR1NDX1dlbGxuZXNzIiwiYmFtYm9vLWFkbWluIiwiZGV2X3N1cHBvcnQiXSwic3ViIjoiYnBpZXJjZSIsImlhdCI6MTUwNTc1NTA0OCwiZXhwIjoxNTA1ODQxNDQ4fQ.cuwFPEdkk3URFFDSTY2sbi5VbjUSsGM5gt4rEPAAVRuwl-t828BwtPb8IuLNjnSfj5dFwL8eX6b8kBzdX-UcMA';\n  \n  let $bioapps = {};\n  \n  \n  /**\n   * Get sample information from LIMS\n   *\n   * @param pogs\n   * @returns {*}\n   */\n  $bioapps.cancer_goup = () => {\n    return $q((resolve, reject) => {\n      \n      \n      $http({\n        method: 'GET',\n        url: api + '/cancer_group',\n        headers: {\n          'x-token': token,\n          Authorization: undefined,\n          'Content-Type': 'application/json'\n        },\n      })\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          console.log('Failed to get BioApps Cancer Group result', err);\n          reject(err);\n        });\n      /*\n      $http.get(api + '/cancer_group', {headers: {\"X-Token\": token, Authorization: undefined}}).then(\n        (result) => { \n          resolve(result.data);\n        })\n        .catch((err) => {\n          console.log('Failed to get BioApps Cancer Group result', err);\n          reject(err);\n        });\n      */\n      \n    });\n  };\n  \n  return $bioapps;\n  \n}]);\n","app.factory('api.complete', ['_', function (_) {\n  \n  // Dictionaries\n  let dicts = {\n  \n    // Alterations\n    alterations: {\n      // Types\n      type: {\n        \"biological\": \"Biological\",\n        \"diagnostic\": \"Diagnostic\",\n        \"prognostic\": \"Prognostic\",\n        \"therapeutic\": \"Therapeutic\",\n        \"unknown\": \"Uncharacterized\"\n      },\n      variant: [\n        \"CNV\",\n        \"ELV-RNA\",\n        \"ELV-PROT\",\n        \"FANN\",\n        \"MUT\",\n        \"SV\"\n      ],\n      evidence: {\n        \"case report\": \"Case Report\",\n        \"case series\": \"Case Series\",\n        \"clinical\": \"Clinical\",\n        \"clinical trials\": \"Clinical Trials\",\n        \"clinical-test\": \"Clinical-Test\",\n        \"FDA-approved\": \"FDA-Approved\",\n        \"inferred\": \"Inferred\",\n        \"literature-review\": \"Literature-Review\",\n        \"NCCN guidelines\": \"NCCN Guidelines\",\n        \"not specified\": \"Not Specified\",\n        \"pre-clinical\": \"Pre-Clinical\",\n        \"reported\": \"Reported\",\n        \"retrospective-clinical\": \"Retrospective-Clinical\",\n        \"curated\": \"Curated\"\n      },\n      disease: [\n        \"acute lymphocytic leukemia\",\n        \"acute myeloid leukemia\",\n        \"acute promyelocytic leukemia\",\n        \"acute undifferentiated leukemia\",\n        \"adenocarcinoma\",\n        \"adrenocortical carcinoma\",\n        \"adult sporadic papillary thyroid carcinoma\",\n        \"aggressive systemic mastocytosis\",\n        \"alveolar rhabdomyosarcoma\",\n        \"anaplastic large cell lymphoma\",\n        \"anaplastic oligodendroglioma\",\n        \"anaplastic thyroid carcinoma\",\n        \"aneurysmal bone cyst\",\n        \"angiomatoid fibrous histiocytoma\",\n        \"angiosarcoma\",\n        \"B- and T-cell mixed leukemia\",\n        \"B-cell acute lymphoblastic leukemia\",\n        \"B-cell lymphoma\",\n        \"basal cell carcinoma\",\n        \"benign epithelial tumour\",\n        \"benign melanocytic nevus\",\n        \"biliary tract cancer\",\n        \"bladder transitional cell carcinoma\",\n        \"blue cell tumour\",\n        \"bone Ewing's sarcoma\",\n        \"brain cancer\",\n        \"brain glioma\",\n        \"breast cancer\",\n        \"breast ductal carcinoma\",\n        \"breast secretory carcinoma\",\n        \"bronchiolo-alveolar adenocarcinoma\",\n        \"Burkitt lymphoma\",\n        \"carcinoma\",\n        \"cellular schwannoma\",\n        \"cervical cancer\",\n        \"cholangiocarcinoma\",\n        \"cholesteryl ester storage disease\",\n        \"chondroid lipoma\",\n        \"chondrosarcoma\",\n        \"chronic eosinophilic leukemia\",\n        \"chronic leukemia\",\n        \"chronic lymphocytic leukemia\",\n        \"chronic myeloid leukemia\",\n        \"chronic myelomonocytic leukemia\",\n        \"chronic myeloproliferative disease\",\n        \"clear cell sarcoma\",\n        \"collecting duct carcinoma\",\n        \"colon cancer\",\n        \"colorectal cancer\",\n        \"congenital fibrosarcoma\",\n        \"congenital mesoblastic nephroma\",\n        \"cutaneous mastocytosis\",\n        \"dermatofibrosarcoma protuberans\",\n        \"desmoplastic small round cell tumour\",\n        \"diffuse large B-cell lymphoma\",\n        \"endometrial adenocarcinoma\",\n        \"endometrial cancer\",\n        \"endometrial stromal sarcoma\",\n        \"epithelioid sarcoma-like hemangioendothelioma\",\n        \"esophageal cancer\",\n        \"esophagus squamous cell carcinoma\",\n        \"estrogen-receptor positive breast cancer\",\n        \"extraosseous Ewing's sarcoma\",\n        \"extraskeletal myxoid chondrosarcoma\",\n        \"familial adenomatous polyposis\",\n        \"familial melanoma\",\n        \"fibrosarcoma\",\n        \"follicular lymphoma\",\n        \"gallbladder adenocarcinoma\",\n        \"gastric adenocarcinoma\",\n        \"gastrointestinal stromal tumor\",\n        \"germ cell cancer\",\n        \"giant cell fibroblastoma\",\n        \"glioblastoma multiforme\",\n        \"haemangioma of the bone\",\n        \"hairy cell leukemia\",\n        \"head and neck cancer\",\n        \"head and neck carcinoma\",\n        \"head and neck squamous cell carcinoma\",\n        \"hemangiopericytoma\",\n        \"hemorrhagic thrombocythemia\",\n        \"hepatocellular carcinoma\",\n        \"hepatocellular fibrolamellar carcinoma\",\n        \"Her2-receptor positive breast cancer\",\n        \"high-grade ovarian serous carcinoma\",\n        \"Hodgkin's lymphoma\",\n        \"hypercalcemic type ovarian small cell carcinoma\",\n        \"hypereosinophilic syndrome\",\n        \"immunoblastic lymphoma\",\n        \"indolent systemic mastocytosis\",\n        \"inflammatory myofibroblastic tumor\",\n        \"intrahepatic cholangiocarcinoma\",\n        \"laryngeal carcinoma\",\n        \"LEOPARD syndrome\",\n        \"Li-Fraumeni syndrome\",\n        \"lipoblastoma\",\n        \"lipoma\",\n        \"liposarcoma\",\n        \"liposarcoma (with wildtype rb1 expression)\",\n        \"low-grade fibromyxoid sarcoma\",\n        \"low-grade glioma\",\n        \"low-grade ovarian serous carcinoma\",\n        \"lung adenocarcinoma\",\n        \"lung adenoid cystic carcinoma\",\n        \"lung cancer\",\n        \"lung carcinoma\",\n        \"lung large cell carcinoma\",\n        \"lung small cell carcinoma\",\n        \"lung squamous cell carcinoma\",\n        \"lymphoma\",\n        \"malignant pleural mesothelioma\",\n        \"malignant spindle cell melanoma\",\n        \"mammary analogue secretory carcinoma\",\n        \"mantle cell lymphoma\",\n        \"mast-cell leukemia\",\n        \"mastocytosis\",\n        \"medulloblastoma\",\n        \"megakaryocytic leukemia\",\n        \"melanoma\",\n        \"mesenchymal chondrosarcoma\",\n        \"mucinous adenocarcinoma\",\n        \"mucoepidermoid carcinoma\",\n        \"mucosal melanoma\",\n        \"multiple myeloma\",\n        \"myelodysplastic myeloproliferative cancer\",\n        \"myelofibrosis\",\n        \"myeloma\",\n        \"myoepithelial tumour of soft tissue and bone\",\n        \"myxoid chondrosarcoma\",\n        \"nasopharyngeal angiofibroma\",\n        \"nasopharynx carcinoma\",\n        \"neuroblastoma\",\n        \"neuroendocrine tumor\",\n        \"nodular fasciitis\",\n        \"non-small cell lung carcinoma\",\n        \"Noonan syndrome\",\n        \"not specified\",\n        \"NUT midline carcinoma\",\n        \"osteosarcoma\",\n        \"ovarian cancer\",\n        \"ovarian carcinoma\",\n        \"ovarian clear cell carcinoma\",\n        \"ovarian serous carcinoma\",\n        \"ovary adenocarcinoma\",\n        \"ovary epithelial cancer\",\n        \"ovary serous adenocarcinoma\",\n        \"pancreas adenocarcinoma\",\n        \"pancreatic cancer\",\n        \"pancreatic ductal adenocarcinoma\",\n        \"pancreatic neuroendocrine tumor\",\n        \"papillary renal cell carcinoma\",\n        \"papillary thyroid carcinoma\",\n        \"papillary transitional carcinoma\",\n        \"pediatric acute myeloid leukemia\",\n        \"pediatric fibrosarcoma\",\n        \"pediatric primitive round cell sarcoma\",\n        \"peripheral T-cell lymphoma\",\n        \"peritoneal mesothelioma\",\n        \"pilocytic astrocytoma\",\n        \"pleomorphic salivary gland adenocarcinoma\",\n        \"plexiform neurofibroma\",\n        \"primary unknown\",\n        \"progesterone-receptor positive breast cancer\",\n        \"prostate cancer\",\n        \"pulmonary myxoid sarcoma\",\n        \"pulmonary sarcomatoid carcinoma\",\n        \"rectosigmoid cancer\",\n        \"renal cell carcinoma\",\n        \"renal clear cell carcinoma\",\n        \"retinoblastoma\",\n        \"rhabdoid cancer\",\n        \"rhabdomyosarcoma\",\n        \"salivary gland adenoma\",\n        \"salivary gland cancer\",\n        \"salivary gland carcinoma\",\n        \"salivary gland pleomorphic adenoma\",\n        \"sarcoma\",\n        \"sideroblastic anemia with ringed sideroblasts\",\n        \"signet ring cell adenocarcinoma\",\n        \"skin squamous cell carcinoma\",\n        \"small round cell sarcoma\",\n        \"spindle cell rhabdomyosarcoma\",\n        \"squamous cell carcinoma\",\n        \"stomach cancer\",\n        \"synovial sarcoma\",\n        \"systemic type anaplastic large cell lymphoma\",\n        \"T-cell adult acute lymphocytic leukemia\",\n        \"T-cell leukemia\",\n        \"therapy-related myeloid neoplasia\",\n        \"thymic carcinoma\",\n        \"thyroid adenoma\",\n        \"thyroid cancer\",\n        \"transitional cell carcinoma\",\n        \"urinary bladder cancer\",\n        \"uterine corpus endometrial carcinoma\",\n        \"uterine leiomyoma\",\n        \"uveal melanoma\",\n        \"vulva adenocarcinoma\",\n        \"waldenstrom macroglobulinemia\"\n      ],\n      association: [\n        \"acquired resistance\",\n        \"activates-pathway\",\n        \"associated-pathway\",\n        \"associated-with\",\n        \"cancer associated gene\",\n        \"characteristic-of\",\n        \"conditional loss-of-function\",\n        \"cooperative-events\",\n        \"diagnostic\",\n        \"disruptive fusion\",\n        \"dominant gain-of-function\",\n        \"dominant negative\",\n        \"eligibility\",\n        \"equally-as-effective-as\",\n        \"favourable\",\n        \"gain-of-function\",\n        \"haploinsufficient\",\n        \"increased-function\",\n        \"inferred FDA-approved\",\n        \"inferred gain-of-function\",\n        \"inferred loss-of-function\",\n        \"inferred resistance\",\n        \"inferred sensitivity\",\n        \"inhibits-pathway\",\n        \"less-effective-than\",\n        \"likely gain-of-function\",\n        \"likely oncogenic\",\n        \"loss-of-function\",\n        \"minimal resistance\",\n        \"minimal sensitivity\",\n        \"more-effective-than\",\n        \"mutation hotspot\",\n        \"no dominant negative\",\n        \"no functional effect\",\n        \"no gain-of-function\",\n        \"no loss-of-function\",\n        \"no resistance\",\n        \"no response\",\n        \"no sensitivity\",\n        \"not determined\",\n        \"not specified\",\n        \"observed\",\n        \"oncogene\",\n        \"oncogenic fusion\",\n        \"pathogenic\",\n        \"putative disease-driver\",\n        \"putative oncogene\",\n        \"putative tumour suppressor\",\n        \"recurrent\",\n        \"reduced-function\",\n        \"reduced-sensitivity\",\n        \"resistance\",\n        \"response\",\n        \"sensitivity\",\n        \"switch-of-function\",\n        \"targetable\",\n        \"test target\",\n        \"tumour suppressor\",\n        \"unfavourable\",\n        \"weakly-increased-function\",\n        \"weakly-reduced-function\"\n      ],\n      zygosity: [\n        \"any\",\n        \"ns\",\n        \"homozygous\",\n        \"heterozygous\",\n        \"na\"\n      ],\n      referenceTypes: [\n        \"ClinicalTrials.gov id\",\n        \"curated database\",\n        \"database\",\n        \"doi\",\n        \"other\",\n        \"pmcid\",\n        \"pubmed\",\n        \"url\"\n      ]\n    },\n    knowledgebase: {\n\n      sampleType: [\n        \"caenorhabditis elegans\",\n        \"chicken\",\n        \"drosophila melanogaster\",\n        \"hamster\",\n        \"human cell-line\",\n        \"human patient\",\n        \"human patient-cells\",\n        \"human patient-xenograft\",\n        \"mouse\",\n        \"rat\",\n        \"saccharomyces cerevisiae\",\n        \"saccharomyces pombe\"\n      ],\n      preClinicalModel: [\n        \"dominant negative\",\n        \"inhibitor\",\n        \"knockout\",\n        \"mutant\",\n        \"RNAi\"\n      ]\n\n    }\n  };\n\n  return {\n    // Create Searchable\n    Alterations: {\n      // For Alterations Type\n      Type: function (query) {\n        query = query && query.toLowerCase();\n        return _.chain(_alterations.type)\n          \n          .keys()\n          .filter(function (alteration) {\n          if (!query) {\n            return true;\n          }\n          return alteration.toLowerCase().indexOf(query) !== -1;\n        })\n        .map(function (alteration) {\n          return _.startCase(alteration);\n          })\n        .value();\n      }\n    },\n    \n    get: (getter) => {\n      return dicts[getter];\n    }\n  }\n\n}]);\n","/*\n * BCGSC - IPR-Client BCGSC JIRA API\n *\n * This API factory implements the IPR-API. Calls to and from the BCGSC JIRA API are\n * managed through this factory.\n *\n */\napp.factory('api.jira', ['_', '$http', '$q', 'api.user', (_, $http, $q, $user) => {\n\n  const api = 'https://www.bcgsc.ca/jira/rest/api/2';\n  const apiProxy = CONFIG.ENDPOINTS.API + '/jira';\n  let $jira = {};\n  let $session = null;\n\n  /**\n   * JIRA Ticket Namespace\n   *\n   */\n  $jira.ticket = {\n\n    /**\n     * Create a BCGSC JIRA Ticket\n     *\n     * @param {string} project - project key (DEVSU, TC, UGNE, SVIA, etc.)\n     * @param {string} type - Ticket type (Task, Sub-task, Bug, etc.)\n     * @param {string} summary - Ticket Title\n     * @param {string} description - Body/text of ticket\n     * @param {object} options - Key-value paired hashmap of other options: parent, assignee, labels, priority\n     *\n     * @returns promise\n     */\n    create: (project, type, summary, description, options={}) => {\n\n      let deferred = $q.defer();\n\n      let ticket = {\n        fields: {\n          project: {\n            key: project\n          },\n          summary: summary,\n          issuetype: {\n            name: type,\n            subtask: (options.subtask) ? options.subtask : false\n          },\n          description: description,\n          priority: {\n            name: (options.priority) ? options.priority : \"Medium\" // Default priority is medium\n          }\n        }\n      };\n\n      // Are we adding asignee?\n      if(options.assignee) ticket.fields.assignee = {key: options.assignee, name: options.assignee};\n      if(options.components) ticket.fields.components = options.components;\n      if(options.parent) ticket.fields.parent = {key: options.parent};\n      if(options.labels) ticket.fields.labels = _.map(options.labels, (l) => {return l.replace(/\\s+/g, '-')});\n      if(options.security) ticket.fields.security = {\"name\": \"POG Restricted\"};\n\n      // Send POST to JIRA\n      $http.post(api + '/issue', ticket, {headers: { authorization: undefined}, withCredentials: true}).then(\n        (response) => {\n          // Resolve response\n          deferred.resolve(response.data);\n        },\n        (error) => {\n          // Reject\n          deferred.reject({status: error.status, body: error.data});\n        }\n      );\n\n      return deferred.promise;\n    },\n\n    /**\n     * Add subtask to existing ticket\n     *\n     *\n     * @param {string} ticket\n     * @param {string} title\n     * @param {string} description\n     * @returns {{resolve, reject, promise}|*|Deferred}\n     */\n    subtask: (ticket, title, description) => {\n\n      let deferred = $q.defer();\n\n      // Try to create ticket\n      $http.post(apiProxy + '/subtask', {title: title, ticket: ticket, description: description}).then(\n        (resp) => {\n          deferred.resolve(resp.data);\n        },\n        (err) => {\n          // After testing, we'll check response header to see if user needs to login to JIRA first.\n          console.log('JIRA Sub-task create error', err);\n          deferred.reject(err);\n        }\n      );\n\n\n      return deferred.promise;\n    },\n\n    /**\n     * Get a ticket from JIRA\n     *\n     * @param {string} auth - a Base64 string of username:password\n     * @param {string} ticket - JIRA ticket ID\n     *\n     * @returns promise\n     */\n    get: (ticket) => {\n\n      let deferred = $q.defer();\n\n      // Send POST to JIRA\n      $http.get(api + '/issue/' + ticket).then(\n        (response) => {\n          // Resolve response\n          deferred.resolve(response.data);\n        },\n        (error) => {\n          // Reject\n          deferred.reject({status: error.status, body: error.data});\n        }\n      );\n\n      return deferred.promise;\n    }\n\n  };\n  \n  /**\n   * Get JIRA ticket priorities available\n   *\n   * @returns {Promise} - Resolves with array of priorities\n   */\n  $jira.priority = () => {\n    return $q((resolve, reject) => {\n  \n      $http.get(api + '/priority', {headers: { authorization: undefined}, withCredentials: true})\n        .then((response) => {\n          resolve(response.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      \n    });\n  };\n  \n  /**\n   * JIRA Session Management\n   *\n   */\n  $jira.session = {\n    /**\n     * Attempt a login session on the BCGSC JIRA server\n     *\n     * @param {string} username - JIRA Username\n     * @param {string} password - JIRA Password\n     * @returns {*|promise|Promise}\n     */\n    login: (username, password) => {\n\n      let deferred = $q.defer();\n\n      $http.post(api + '/session', {username: username, password: password}).then(\n        (response) => {\n          // TODO: Store the cookie on user table\n          deferred.resolve(response.data);\n        },\n        (error) => {\n          deferred.reject({status: error.status, body: error.data});\n        }\n      );\n\n      return deferred.promise;\n    },\n    \n    current: () => {\n      $q((resolve, reject) => {\n        $http.get('https://www.bcgsc.ca/jira/rest/auth/' + '1/session', {headers: { authorization: undefined}, withCredentials: true}).then(\n          (response) => {\n            console.log('Current Authentication status', response);\n            resolve(response);\n          },\n          (err) => {\n            console.log('Failed to retrieve authentication status from JIRA', err);\n            reject();\n          }\n        )\n      });\n    }\n  };\n\n  /**\n   * JIRA Projects Namespace\n   *\n   */\n  $jira.projects = {\n  \n    /**\n     * Get All Projects available on JIRA\n     *\n     * @returns {Promise} - Resolves with array of projects\n     */\n    all: () => {\n      return $q((resolve, reject) => {\n        $http.get(api + '/project', {headers: { authorization: undefined}, withCredentials: true})\n          .then((result) => {\n            resolve(result.data);\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    },\n  \n    /**\n     * Get JIRA Project Details\n     *\n     * @returns {Promise} - Resolves with array of projects\n     */\n    get: (project) => {\n      return $q((resolve, reject) => {\n        $http.get(api + '/project/' + project, {headers: { authorization: undefined}, withCredentials: true})\n          .then((result) => {\n            resolve(result.data);\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    },\n  \n    /**\n     * Get Project Security Levels available\n     *\n     * @param {string} project - Project key name\n     * @returns {*}\n     */\n    getSecurityLevels: (project) => {\n      return $q((resolve, reject) => {\n        $http.get(api + '/project/' + project + '/securitylevel', {headers: { authorization: undefined}, withCredentials: true})\n          .then((response) => {\n            resolve(response.data);\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    }\n    \n  };\n\n\n  return $jira;\n\n}]);\n","\"use strict\";\n\napp.factory('api.knowledgebase', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/knowledgebase';\n\n  let $kb = {};\n\n  /**\n   * Get controlled vocabulary JSON arrays\n   *\n   * @returns {Promise}\n   */\n  $kb.vocabulary = () => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/controlled-vocabulary').then(\n      (result) => {\n        deferred.resolve(result.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  $kb.validate = {\n\n    /**\n     * Validate provided KB Events string\n     *\n     * @param {string} input - Input string to be validated against KB Regex\n     * @returns {promise|object} - Resolves with {valid: {input}}\n     */\n    events: (input) => {\n      let deferred = $q.defer();\n\n      $http.post(api + '/validate/events', {events_expression: input}).then(\n        (result) => {\n          deferred.resolve(result.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    }\n\n  };\n\n  /**\n   * Check for a gene or variant in KB & HUGO\n   *\n   * @param {string} query - Input string to search DB against\n   * @returns {Promise|array} - Resolves an array of text values\n   */\n  $kb.genevar = (query) => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/genevar?query=' + query).then(\n      (result) =>{\n        deferred.resolve(result.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  /**\n   * Get KB Metrics\n   *\n   * @returns {Promise|object} - Resolves a key-value pair of metric data\n   */\n  $kb.metrics = () => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/metrics').then(\n      (result) =>{\n        deferred.resolve(result.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  /**\n   * Search the disease ontology list\n   *\n   * @param {string} query - Input string to search DB against\n   * @returns {Promise|array} - Resolves an array of text values\n   */\n  $kb.diseaseOntology = (query) => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/disease-ontology?query=' + query).then(\n      (result) =>{\n        deferred.resolve(result.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  /**\n   * Get history for a data entry\n   *\n   * @param {string} type - The type of entry to lookup history for (entry, reference)\n   * @param {string} ident - The UUIDv4 identification string\n   * @returns {Promise} - Resolves with the history array\n   */\n  $kb.history = (type, ident) => {\n\n    let deferred = $q.defer();\n\n    $http.get(api + '/history', {params: { type:type, entry:ident }}).then(\n      (result) =>{\n        deferred.resolve(result.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n\n  };\n\n  $kb.references = {\n\n    /**\n     * Get KB References\n     *\n     * Paginated interface\n     *\n     * @param {int} limit - Pagination records requested\n     * @param {int} offset - Pagination start point\n     * @param {object} filters - Query string filter arguments\n     *\n     * @returns {promise|collection} - Resolves with a collection\n     */\n    all: (limit=100, offset=0, filters={}) => {\n      let deferred = $q.defer();\n      let processFilters = {};\n\n      // Process Filters\n      _.forEach(filters, (value, filter) => {\n        if(filter === 'search') return processFilters[filter] = value;\n        processFilters[filter] = _.join(value,',');\n      });\n\n\n      let opts = {params: processFilters};\n      opts.params.limit = limit;\n      opts.params.offset = offset;\n\n      $http.get(api + '/references', opts).then(\n        (result) => {\n          deferred.resolve(result.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n    /**\n     * Get the count of references\n     *\n     * Informs pagination\n     *\n     * @returns {promise} - Resolves a key-value pair object with the amount of references\n     */\n    count: (filters={}) => {\n      let deferred = $q.defer();\n      let processFilters = {};\n\n      // Process Filters\n      _.forEach(filters, (value, filter) => {\n        if(filter === 'search') return processFilters[filter] = value;\n        processFilters[filter] = _.join(value,',');\n      });\n\n\n      let params = {params: processFilters};\n\n      $http.get(api + '/references/count', params).then(\n        (result) => {\n          deferred.resolve(result.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n\n    /**\n     * Update an existing reference entry\n     *\n     * @param {object} reference - The updated reference object\n     * @returns {Promise} - Resolves with the updated entry\n     */\n    update: (reference) => {\n      let deferred = $q.defer();\n\n      $http.put(api + '/references/' + reference.ident, reference).then(\n        (result) => {\n          deferred.resolve(result.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n\n    /**\n     * Update reference status\n     *\n     * @param {object} reference - Reference object\n     * @param {string} status - Status to update reference to\n     * @param {string} comments - Comment to log update with\n     * @returns {Promise} - Resolves with updated object\n     */\n    status: (reference, status, comments) => {\n      let deferred = $q.defer();\n\n      $http.put(api + '/references/' + reference.ident + '/status/' + status, {comments: comments}).then(\n        (result) => {\n          deferred.resolve(result.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n    /**\n     * Create a new reference entry\n     *\n     * @param {object} reference - The new reference object\n     * @returns {Promise} - Resolves with the created entry\n     */\n    create: (reference) => {\n      let deferred = $q.defer();\n\n      $http.post(api + '/references', reference).then(\n        (result) => {\n          deferred.resolve(result.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n    /**\n     * Remove a reference entry\n     *\n     * @param {string} reference - The ident of the entry to be removed\n     * @returns {Promise} - Resolves with success\n     */\n    remove: (reference) => {\n      let deferred = $q.defer();\n\n      $http.delete(api + '/references/' + reference).then(\n        (result) => {\n          deferred.resolve(result.status);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    }\n\n\n  };\n\n  $kb.events = {\n\n    /**\n     * Get KB Events\n     *\n     * Paginated interface\n     *\n     * @param {int} limit - Pagination records requested\n     * @param {int} offset - Pagination start point\n     * @param {object} filters - Query string filter arguments\n     *\n     * @returns {Promise|collection} - Resolves with a collection\n     */\n    all: (limit, offset, filters) => {\n      let deferred = $q.defer();\n      let processFilters = {};\n\n      // Process Filters\n      _.forEach(filters, (value, filter) => {\n        if(filter === 'search') return processFilters[filter] = value;\n        processFilters[filter] = _.join(value,',');\n      });\n\n      let opts = {params: processFilters};\n      opts.params.limit = limit;\n      opts.params.offset = offset;\n\n      $http.get(api + '/events', opts).then(\n        (result) => {\n          deferred.resolve(result.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n    /**\n     * Get the count of events\n     *\n     * Informs pagination\n     *\n     * @returns {promise} - Resolves a key-value pair object with the amount of events\n     */\n    count: (filters={}) => {\n      let deferred = $q.defer();\n      let processFilters = {};\n\n      // Process Filters\n      _.forEach(filters, (value, filter) => {\n        if(filter === 'search') return processFilters[filter] = value;\n        processFilters[filter] = _.join(value,',');\n      });\n\n\n      let params = {params: processFilters};\n\n      $http.get(api + '/events/count', params).then(\n        (result) => {\n          deferred.resolve(result.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n\n    /**\n     * Update an existing event entry\n     *\n     * @param {object} event - The updated event object\n     * @returns {Promise} - Resolves with the updated entry\n     */\n    update: (event) => {\n      let deferred = $q.defer();\n\n      $http.put(api + '/events/' + event.ident, event).then(\n        (result) => {\n          deferred.resolve(result.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n\n    /**\n     * Update event status\n     *\n     * @param {object} event - Event object\n     * @param {string} status - Status to update event to\n     * @param {string} comments - Comment to log update with\n     * @returns {Promise} - Resolves with updated object\n     */\n    status: (event, status, comments) => {\n      let deferred = $q.defer();\n\n      $http.put(api + '/events/' + event.ident + '/status/' + status, {comments: comments}).then(\n        (result) => {\n          deferred.resolve(result.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n    /**\n     * Create a new event entry\n     *\n     * @param {object} event - The new reference object\n     * @returns {Promise} - Resolves with the created entry\n     */\n    create: (event) => {\n      let deferred = $q.defer();\n\n      $http.post(api + '/events', event).then(\n        (result) => {\n          deferred.resolve(result.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n    /**\n     * Remove a event entry\n     *\n     * @param {string} event - The ident of the entry to be removed\n     * @returns {Promise} - Resolves with success\n     */\n    remove: (event) => {\n      let deferred = $q.defer();\n\n      $http.delete(api + '/events/' + event).then(\n        (result) => {\n          deferred.resolve(result.status);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    }\n\n  };\n\n  return $kb;\n}]);","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.lims', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = 'https://lims16.bcgsc.ca';\n\n  let $lims = {};\n\n  $lims.diseaseOntology = (query) => {\n\n    return $q((resolve, reject) => {\n\n      let req = $http({\n        method: 'get',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': undefined\n        },\n        url: api + '/alpha/limsapi/elastic/disease_ontology/' + query,\n      });\n\n      //let = $http.get(api + '/elastic_search', opts)\n\n      req.then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n\n  };\n  \n  \n  /**\n   * Get sample information from LIMS\n   *\n   * @param pogs\n   * @returns {*}\n   */\n  $lims.sample = (pogs) => {\n    return $q((resolve, reject) => {\n  \n      // Convert string pogid to array\n      if(typeof pogs === 'string') {\n        pogs = [pogs];\n      }\n  \n      let body = {\n        filters: {\n          op: \"in\",\n          content: {\n            field: \"participant_study_id\",\n            value: pogs\n          }\n        }\n      };\n      \n      $http.post('https://lims16.bcgsc.ca/alpha/limsapi/sample', body, {headers: {Authorization: 'Basic YnBpZXJjZTprNHRZcDNScnl+'}}).then(\n        (result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          console.log('Failed to get LIMS sample result', err);\n          reject(err);\n        });\n      \n    \n    });\n  };\n  \n  \n  /**\n   * Get source information from LIMS\n   *\n   * @param pogs\n   * @returns {*}\n   */\n  $lims.source = (pogs) => {\n    return $q((resolve, reject) => {\n  \n      // Convert string pogid to array\n      if(typeof pogs === 'string') {\n        pogs = [pogs];\n      }\n  \n      let body = {\n        filters: {\n          op: \"in\",\n          content: {\n            field: \"participant_study_id\",\n            value: pogs\n          }\n        }\n      };\n      \n      $http.post('https://lims16.bcgsc.ca/alpha/limsapi/source', body, {headers: {Authorization: 'Basic YnBpZXJjZTprNHRZcDNScnl+'}}).then(\n        (result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          console.log('Failed to get LIMS sample result', err);\n          reject(err);\n        });\n      \n    \n    });\n  };\n  \n  \n  /**\n   * Get Library information from LIMS\n   *\n   * @param {array} names - Names of libraries to look up\n   * @returns {*}\n   */\n  $lims.library = (names) => {\n    return $q((resolve, reject) => {\n  \n      if(typeof names === 'string') {\n        names = [names];\n      }\n  \n      let body = {\n        filters: {\n          op: \"in\",\n          content: {\n            field: \"name\",\n            value: names\n          }\n        }\n      };\n      \n      $http.post('https://lims16.bcgsc.ca/alpha/limsapi/library', body, {headers: {Authorization: 'Basic YnBpZXJjZTprNHRZcDNScnl+'}}).then(\n        (result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          console.log('Failed to get LIMS library result', err);\n          reject(err);\n        });\n      \n    \n    });\n  };\n  \n  \n  /**\n   * Get Illumina Sequencing Run information from LIMS\n   *\n   * @param {array} libraries - Libraries to look up\n   * @returns {*}\n   */\n  $lims.illumina_run = (libraries) => {\n    return $q((resolve, reject) => {\n  \n      if(typeof names === 'string') {\n        libraries = [libraries];\n      }\n  \n      let body = {\n        filters: {\n          op: \"or\",\n          content: [\n            {\n              op: \"in\",\n              content: {\n                field: \"library\",\n                value: libraries\n              }\n            },\n            {\n              op: \"in\",\n              content: {\n                field: \"multiplex_library\",\n                value: libraries\n              }\n            }\n          ]\n        }\n      };\n      \n      $http.post('https://lims16.bcgsc.ca/alpha/limsapi/illumina_run', body, {headers: {Authorization: 'Basic YnBpZXJjZTprNHRZcDNScnl+'}}).then(\n        (result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          console.log('Failed to get LIMS Illumina run result', err);\n          reject(err);\n        });\n      \n    \n    });\n  };\n\n\n  return $lims;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.pog', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  let _pogs = [] // Local POGS cache by ident\n\n  \n  let $pog = {};\n  \n  \n  /**\n   * Get All POGs\n   *\n   * Retrieve all POGs from API that user can access\n   *\n   * @param {object} opts - Options block\n   * @returns {promise} - Resolves with array of POGs\n   */\n  $pog.all = (opts={}) => {\n    return $q((resolve, reject) => {\n      let url = api;\n\n      /*\n      if(opts.all !== false || opts.query !== null || opts.role) {\n        url += '?';\n        if(opts.all !== false) url += 'all=true&';\n        if(opts.query) url += 'query='+opts.query+'&';\n        if(opts.role) url += 'role='+opts.role+'&';\n      }*/\n\n      // Retrieve from API\n      $http.get(url, {params: opts}).then(\n        (result) => {\n          // Empty Cache\n          _pogs = [];\n\n          // Load into cache\n          _.forEach(result.data, (val) => {\n            _pogs.push(val);\n          });\n          \n          resolve(_pogs);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  }\n  \n  /*\n   * Get one POG\n   *\n   * Retrieve one POG from API.\n   *\n   */\n  $pog.id = (POGID) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Lookup in cache first\n      if(_pogs[POGID] !== undefined) return resolve(_pogs[POGID]);\n      \n      // Get result from API\n      $http.get(api + '/' + POGID).then(\n        (result) => {\n          _pogs[result.data.POGID] = result.data;\n          resolve(_pogs[result.data.POGID]);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  }\n\n\n  /*\n   * Load a new POG\n   *\n   * Load a new POG into the API from sources\n   *\n   * @param string POGID\n   *\n   */\n  $pog.load = (POGID) => {\n\n    let deferred = $q.defer();\n\n\n    // Custom data stream from API for loading\n    let xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = (stateChange) => {\n\n      // On data drip\n      if (xhttp.readyState === 3) {\n        deferred.notify(xhttp.responseText);\n      }\n\n      // Wait until readyState === 4 (request finished)\n      if (xhttp.readyState === 4) {\n\n        if (xhttp.status >= 200 && xhttp.status < 400) {\n\n          deferred.resolve(xhttp.responseText);\n\n        } else {\n          reject(xhttp);\n        }\n\n      }\n    }\n\n    xhttp.open('GET', api + '/' + POGID + '/loadPog', true);\n    xhttp.send();\n\n\n    return deferred;\n  };\n\n  // Empty out cache\n  $pog.destroy = () => {\n\n    _pogs = {};\n\n  };\n\n  $pog.user = (POGID) => {\n    return {\n      bind: (ident, role) => {\n\n        let deferred = $q.defer();\n\n        $http.post(api + '/' + POGID + '/user', {user: ident, role: role}).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (err) => {\n            deferred.reject(err);\n          }\n        );\n\n        return deferred.promise;\n      },\n\n      unbind: (ident, role) => {\n        let deferred = $q.defer();\n\n        $http({\n          url: api + '/' + POGID + '/user',\n          method: 'DELETE',\n          data: {\n            user: ident,\n            role: role\n          },\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (err) => {\n            deferred.reject(err);\n          }\n        );\n\n        return deferred.promise;\n      }\n    }\n  };\n\n  $pog.export = (POGID) => {\n    return {\n\n      /**\n       * Run export\n       * @returns {promise} - Resolves the export return\n       */\n      csv: () => {\n        let deferred = $q.defer();\n\n        // Send request\n        $http.get(api + '/' + POGID + '/export/csv').then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (err) => {\n            deferred.reject(err);\n          }\n        );\n\n        return deferred.promise;\n      },\n\n      /**\n       * Get all pog export entries\n       *\n       * @returns {promise} - Resolves with array of pog export events\n       */\n      all: () => {\n\n        let deferred = $q.defer();\n\n        // Send request\n        $http.get(api + '/' + POGID + '/export/all').then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (err) => {\n            deferred.reject(err);\n          }\n        );\n\n        return deferred.promise;\n\n      }\n    }\n  };\n\n  return $pog;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.pogDataHistory', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n\n  let $history = {};\n\n  /**\n   * Setup History Object for Querying\n   *\n   * @params {string} POGID - PogID to be queried against (eg. POG123)\n   */\n  $history = (POGID, report) => {\n\n    const API = api + '/' + POGID + '/report/' + report;\n\n    return {\n\n      /**\n       * Get list of all history events for a POG\n       *\n       * @returns {promise|array} - Returns a list of all history events for a POG\n       */\n      all: () => {\n        let deferred = $q.defer();\n\n        $http.get(API + '/history').then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (err) => {\n            deferred.reject(err);\n          }\n        );\n\n        return deferred.promise;\n      },\n\n      /**\n       * Get a detailed entry of a history event\n       *\n       * @param {string} ident - UUID of history event\n       * @returns {promise|object} - Resolves with hashmap of detailed version data. Rejects with $http error response\n       */\n      detail: (ident) => {\n        let deferred = $q.defer();\n\n        $http.get(API + '/history/detail/' +ident).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (err) => {\n            deferred.reject(err);\n          }\n        );\n\n        return deferred.promise;\n      },\n\n      /**\n       * Reverts a change history event from new to previous\n       *\n       * @param {string} ident - UUID of history event\n       * @returns {promise|object} - Returns new history object that defines the change\n       */\n      revert: (ident, comment) => {\n        let deferred = $q.defer();\n\n        $http.put(API + '/history/revert/' +ident, {comment: comment}).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (err) => {\n            deferred.reject(err);\n          }\n        );\n\n        return deferred.promise;\n      },\n\n      /**\n       * Restores a remove history event\n       *\n       * @param {string} ident - UUID of history event\n       * @returns {promise|boolean} - Returns boolean\n       */\n      restore: (ident, comment) => {\n        let deferred = $q.defer();\n\n        $http.put(API + '/history/restore/' +ident, {comment: comment}).then(\n          (resp) => {\n            deferred.resolve(true);\n          },\n          (err) => {\n            deferred.reject(err);\n          }\n        );\n\n        return deferred.promise;\n      },\n\n      /**\n       * All Tag entries\n       *\n       */\n      tag: {\n\n        /**\n         * Get all history tags\n         *\n         * @returns {promise|array} - Resolves with an array of tags associated to any history objects in the POG\n         */\n        all: () => {\n          let deferred = $q.defer();\n\n          $http.get(API + '/history/tag').then(\n            (resp) => {\n              deferred.resolve(resp.data);\n            },\n            (err) => {\n              deferred.reject(err);\n            }\n          );\n\n          return deferred.promise;\n        },\n\n        /**\n         * Create a new tag\n         *\n         * If no history ident string is provided, the API will make one on the HEAD of the history log\n         *\n         * @param {object} tag - Text/name of the tag\n         * @param {string} ident? - Optional history UUID ident string\n         * @returns {promise|object} - Resolves with new tag object\n         */\n        create: (tag, ident=\"\") => {\n          let deferred = $q.defer();\n\n          $http.post(API + '/history/tag/' +ident, tag).then(\n            (resp) => {\n              deferred.resolve(resp.data);\n            },\n            (err) => {\n              deferred.reject(err);\n            }\n          );\n          return deferred.promise;\n        },\n\n        /**\n         * Remove a tag\n         *\n         * If no history ident string is provided, the API will make one on the HEAD of the history log\n         *\n         * @param {string} ident - Tg UUID ident string\n         * @returns {promise|boolean} - Returns boolean\n         */\n        remove: (ident) => {\n          let deferred = $q.defer();\n\n          $http.delete(API + '/history/tag/' +ident).then(\n            (resp) => {\n              deferred.resolve(true);\n            },\n            (err) => {\n              deferred.reject(err);\n            }\n          );\n          return deferred.promise;\n        },\n\n        /**\n         * Search for tags\n         *\n         * @param {string} query - Tg UUID ident string\n         * @returns {promise|array} - Resolves an array of tags\n         */\n        search: (query) => {\n          let deferred = $q.defer();\n\n          $http.get(API + '/history/tag/search/' + query).then(\n            (resp) => {\n              deferred.resolve(resp.data);\n            },\n            (err) => {\n              deferred.reject(err);\n            }\n          );\n\n          return deferred.promise;\n        }\n      }\n    }\n  };\n\n  return $history;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.project', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/projects';\n  \n  \n  let $project = {};\n  \n  \n  /**\n   * Get All Projects\n   *\n   * Retrieve all projects from API that user can access\n   *\n   * @returns {promise} - Resolves with array of projects\n   */\n  $project.all = () => {\n    return $q((resolve, reject) => {\n      \n      // Retrieve from API\n      $http.get(api).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  };\n  \n  return $project;\n  \n}]);\n","/*\n * BCGSC - IPR-Client PUBMED Central API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.pubmed', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  // https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&rettype=abstract&id=25081398\n  const api = 'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&retmode=json&rettype=abstract&id=';\n\n  \n  let $pubmed = {};\n  \n  \n  /*\n   * Get All POGS\n   *\n   * Retrieve all POGs from API that user can access\n   *\n   */\n  $pubmed.article = (pmid) => {\n    return $q((resolve, reject) => {\n\n      var xhttp = new XMLHttpRequest();\n      xhttp.onreadystatechange = (stateChange) => {\n\n        // Wait until readyState === 4 (request finished)\n        if(xhttp.readyState === 4) {\n\n          if(xhttp.status >= 200 && xhttp.status < 400) {\n            resolve(JSON.parse(xhttp.responseText).result[parseInt(pmid, 10)]);\n          } else {\n            reject(xhttp);\n          }\n\n        }\n\n      };\n\n      xhttp.open('GET', api + pmid, true);\n      xhttp.send();\n      \n    });\n    \n  };\n  \n  return $pubmed;\n  \n}]);\n","\n/*\n * User Edit Injector on RootScope\n *\n * Calls user API on run and checks for editing permissions.\n * Current iteration only checks for presence of clinician group. If found, no editing capability will be\n * provided.\n *\n *\n */\n\napp.run(['$rootScope', '$http', '$injector', '$localStorage', 'api.user', '_', ($rootScope, $http, $injector, $localStorage, $user, _) => {\n  \n  // Retrieve token from local storage\n  let token = $localStorage['bcgscIprToken'];\n  \n  // Token exists?\n  if(token) {\n    $http.defaults.headers.common['Authorization'] = token;\n  }\n  \n  let user;\n  \n  $user.me()\n    .then((u) => {\n      \n      // Check for Clinician group\n      // Temporary logic to hide UI elements.\n      $rootScope._clinicianMode = !(!_.find(_.mapValues(u.groups, (r) => { return {name: r.name.toLowerCase()}}), {'name': 'clinician'}));\n      \n      // TODO: Plugin to API permission system\n      \n      user = u;\n      \n      let $acl = $injector.get('$acl');\n  \n      /**\n       * Global Permission Resource Lookup\n       *\n       * @param {string} r - Resource name\n       * @returns {boolean} - User is allowed to see resource\n       * @private\n       */\n      $rootScope.SES_permissionResource = $acl.resource;\n  \n  \n      $rootScope.SES_permissionAction = $acl.action;\n      \n    })\n    .catch((err) => {\n      // Probably not logged in....\n      $rootScope._clinicianMode = false;\n      console.log('run user error', err);\n    });\n  \n}]);","app.factory('socket', ['socketFactory', (socketFactory) => {\n\n  return socketFactory({\n    ioSocket: io(CONFIG.ENDPOINTS.SOCKET)\n  });\n}]);","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.therapeuticOptions', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n\n  let $therapeutic = {};\n\n  /**\n   * Get all POG therapeutic targets\n   *\n   * @params {string} POGID - PogID to be queried against (eg. POG123)\n   */\n  $therapeutic.all = (POGID, report) => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/' + POGID + '/report/' + report + '/genomic/therapeuticTargets').then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  /**\n   * Create a new Therapeutic Target Entry\n   *\n   * @param {string} POGID - POGID this entry will be related to\n   * @param {object} entry - The therapeutic target entry to be created\n   * @returns {Function|promise} - Resolves with the new data entry\n   */\n  $therapeutic.create = (POGID, report, entry) => {\n    let deferred = $q.defer();\n\n    $http.post(api + '/' + POGID + '/report/' + report + '/genomic/therapeuticTargets', entry).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n    return deferred.promise;\n  };\n\n  /**\n   * Get all POG therapeutic targets\n   *\n   * @params {string} POGID - PogID to be queried against (eg. POG123)\n   */\n  $therapeutic.one = (POGID, report) => {\n\n    let API = api + '/' + POGID + '/report/' + report + '/genomic/therapeuticTargets';\n\n    return {\n\n      /**\n       * Retrieve therapeutic target entry\n       *\n       * @param {string} ident - UUID of entry\n       * @returns {Function|promise} - Resolves with object of entry\n       */\n      retrieve: (ident) => {\n        let deferred = $q.defer();\n\n        $http.get(API + '/' + ident ).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (err) => {\n            deferred.reject(err);\n          }\n        );\n        return deferred.promise;\n      },\n\n\n      /**\n       * Update a single therapeutic target entry\n       *\n       * @param {string} ident - UUID of entry\n       * @param {object} entry - Object of entry to be created\n       * @returns {Function|promise} - Resolves with object of entry\n       */\n      update: (ident, entry) => {\n        let deferred = $q.defer();\n\n        $http.put(API + '/' + ident, entry).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (err) => {\n            deferred.reject(err);\n          }\n        );\n        return deferred.promise;\n      },\n\n      /**\n       * Remove therapeutic target entry\n       *\n       * @param {string} ident - UUID of entry\n       * @returns {Function|promise} - Resolves with object of entry\n       */\n      remove: (ident) => {\n        let deferred = $q.defer();\n        $http.delete(API + '/' + ident).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (err) => {\n            deferred.reject(err);\n          }\n        );\n        return deferred.promise;\n      }\n\n    }\n  };\n\n  return $therapeutic;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.service('api.user', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/user';\n  let _token = null; // User API token\n  let _groups = [];\n\n  let $user = {};\n  $user._me = undefined; // Local User Cache\n  \n  \n  /**\n   * Retrieve the authenticated user object\n   *\n   *\n   * @returns {Promise}\n   */\n  $user.me = () => {\n    \n    return new Promise((resolve, reject) => {\n      \n      if($user._me && $user._me.ident) {\n        return resolve($user._me);\n      }\n      \n      // Detect Promise\n      if($user._me && !$user._me.ident) {\n        $user._me\n          .then((self) => {\n            _groups = self.data.groups;\n            $user._me = self.data;\n            resolve($user._me);\n          })\n          .catch((e) => {\n            console.log('Failed to retrieve user', e);\n          });\n      }\n      \n      // Detect not init'd\n      if($user._me === undefined) {\n        $user._me = $http.get(api + '/me');\n  \n        $user._me\n          .then(\n            (self) => {\n              _groups = self.data.groups;\n              $user._me = self.data;\n              resolve($user._me);\n            },\n            (error) => {\n              reject(error);\n            }\n          );\n      }\n      \n    });\n  };\n  \n  \n  /**\n   * Check if user is an admin\n   *\n   * @returns {boolean}\n   */\n  $user.isAdmin =() => {\n    let aGroups = _.filter(_groups, (g) => {\n      if(g.name === 'superUser' || g.name === 'admin') return g;\n    });\n\n    return (aGroups.length > 0)\n  };\n\n  /**\n   * Get all users (admin)\n   *\n   * @returns {promise}\n   */\n  $user.all = () => {\n\n    let deferred = $q.defer();\n\n    $http.get(api).then(\n      (result) => {\n        deferred.resolve(result.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n\n  };\n\n  /**\n   * Update a user entry\n   *\n   * @param user\n   * @returns {Function}\n   */\n  $user.update = (user) => {\n    let deferred = $q.defer();\n\n    $http.put(api + '/' + user.ident,user).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  /**\n   * Create a new user account\n   *\n   * @param user\n   * @returns {promise}\n   */\n  $user.create = (user) => {\n    let deferred = $q.defer();\n\n    $http.post(api + '/', user).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  $user.search = (query) => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/search?query='+query).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  $user.delete = (user) => {\n\n    let deferred = $q.defer();\n\n    // Remove User\n    $http.delete(api + '/' + user.ident).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  /* Group Functions */\n  $user.group = {\n\n    /**\n     * Get all groups\n     * @returns {promise}\n     */\n    all: () => {\n      let deferred = $q.defer();\n\n      $http.get(api + '/group').then(\n        (resp) => {\n          deferred.resolve(resp.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n    /**\n     * Retrieve group\n     *\n     * @param {string} ident - Group Ident to be looked up\n     */\n    retrieve: (ident) => {\n      return $q((resolve, reject) => {\n        $http.get(api + '/group/' + ident).then(\n          (resp) => {\n            resolve(resp.data);\n          },\n          (err) => {\n            reject(err);\n          }\n        );\n      });\n    },\n\n    /**\n     * Create new Group\n     * @param name\n     * @returns {promise}\n     */\n    create: (group) => {\n      let deferred = $q.defer();\n\n      $http.post(api + '/group', group).then(\n        (resp) => {\n          deferred.resolve(resp.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n    /**\n     * Remove a group\n     * @param {string} ident - Group UUID Ident\n     * @returns {promise}\n     */\n    remove: (group) => {\n      let deferred = $q.defer();\n\n      $http.delete(api + '/group/' + group.ident).then(\n        (resp) => {\n          deferred.resolve(resp.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n    /**\n     * Update a group\n     * @param {string} ident - Group UUID Ident\n     * @param {object} group - Group object to be updated\n     * @returns {promise}\n     */\n    update: (ident, group) => {\n      let deferred = $q.defer();\n\n      $http.put(api + '/group/'+ident, group).then(\n        (resp) => {\n          deferred.resolve(resp.data);\n        },\n        (err) => {\n          deferred.reject(err);\n        }\n      );\n\n      return deferred.promise;\n    },\n\n    /**\n     * Group membership functions\n     * @param {string} group - Group UUID Ident\n     * @returns {{add: (function()), remove: (function())}}\n     */\n    member: (group) => {\n      return {\n\n        /**\n         * Add a user to a group\n         * @param {string} user - User UUID ident\n         * @returns {promise}\n         */\n        add: (user) => {\n          let deferred = $q.defer();\n\n          $http.post(api + '/group/'+group+'/member', {user: user}).then(\n            (resp) => {\n              deferred.resolve(resp.data);\n            },\n            (err) => {\n              deferred.reject(err);\n            }\n          );\n\n          return deferred.promise;\n        },\n\n        /**\n         * Remove a user from a group\n         * @param {string} user - User UUID ident\n         * @returns {promise}\n         */\n        remove: (user) => {\n          let deferred = $q.defer();\n\n          $http({\n            url: api + '/group/' + group + '/member',\n            method: 'DELETE',\n            data: {\n              user: user\n            },\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(\n            (resp) => {\n              deferred.resolve(resp.data);\n            },\n            (err) => {\n              deferred.reject(err);\n            }\n          );\n\n          return deferred.promise;\n        }\n      }\n    } // End Member functions\n\n  };\n\n\n  return $user;\n\n}]);\n","/*\n * BCGSC - VariantDB API Interface\n *\n * This API factory implements the VardDB-API. Calls to and from the API are\n * managed through this factory.\n *\n */\napp.factory('api.vardb', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.VARDB;\n  let _token = null; // User API token\n  let authHeader = '4a43e0cb-0d21-446a-bdbc-d3698c3fa1b6'; // TEMPORARY !TODO: Updated auth system for VarDB to store a token\n\n  let $varDB = {};\n\n\n  /**\n   * Get other libraries a variant is found int\n   *\n   *\n   * @params {integer} chromosome\n   * @params {integer} position\n   * @params {string} ref - The expected base\n   * @params {string} alt - The alternate base\n   * @returns {Promise|array} - Resolves with an array of library IDs, the count, and the total scanned\n   */\n  $varDB.variantLibraries = (chromosome, position, ref, alt) => {\n\n    let deferred = $q.defer();\n\n    let opt = {\n      headers: {\n        'Authorization': authHeader,\n        'Content-Type': 'text/plain',\n      },\n      params: {\n        chromosome: chromosome,\n        position: position,\n        ref: ref,\n        alt: alt\n      }\n    };\n\n    $http.get(api + '/variant_libraries', opt).then(\n      (result) => {\n        deferred.resolve(result.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n\n  };\n\n\n  /**\n   * Retrieve library metadata for libraries\n   *\n   * @param libraries\n   * @returns {Promise|collection} - Resolves a collection of library metadata\n   */\n  $varDB.libraryMeta = (libraries) => {\n\n    let deferred = $q.defer();\n\n    // Convert single library into array\n    if(typeof libraries === \"string\") libraries = [libraries];\n\n    let opts = {};\n    opts.params = {libraries: _.join(libraries, ',')};\n    opts.headers = {\"Authorization\": authHeader};\n\n    $http.get(api + '/library_metadata', opts).then(\n      (results) => {\n        deferred.resolve(results.data);\n      },\n      (err) => {\n        deferred.reject(err);\n      }\n    );\n\n    return deferred.promise;\n\n  };\n\n\n  return $varDB;\n\n}]);\n","/**\n * BCGSC - IPR-Client Tracking State Definition API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n * Author: Brandon Pierce <bpierce@bcgsc.ca>\n */\napp.factory('api.recentReports', ['_', '$http', '$q', (_, $http, $q) => {\n  const api = CONFIG.ENDPOINTS.API + '/analysis_reports/recent/report';\n  \n  let $recent = {};\n  \n  /**\n   * Get all recent reports\n   *\n   * @returns {Promise} - Resolves with array of recent report entries\n   */\n  $recent.all = () => {\n    return $q((resolve, reject) => {\n      \n      $http.get(api + '/')\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      \n    });\n  };\n  \n  \n  /**\n   * Add new entry\n   *\n   * @param {string} report - Ident string of analysis report\n   * @param {string} state - The state string to be stored (current page)\n   *\n   * @returns {Promise} - Resolves with recent report entry\n   */\n  $recent.addOrUpdate = (report, state) => {\n    return $q((resolve, reject) => {\n      \n      $http.put(api + '/' + report, {state: state})\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      \n    });\n  };\n  \n  \n  /**\n   * Remove Recent Report entry\n   *\n   * @param {string} report - Ident string of analysis report\n   *\n   * @returns {Promise} - Resolves with nothing\n   */\n  $recent.remove = (report) => {\n    return $q((resolve, reject) => {\n      \n      $http.delete(api + '/' + report)\n        .then(() => {\n          resolve();\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      \n    });\n  };\n  \n  return $recent;\n  \n}]);\n","/**\n * BCGSC - IPR-Client Tracking State Definition API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n * Author: Brandon Pierce <bpierce@bcgsc.ca>\n */\n\napp.factory('api.germline.report', ['_', '$http', '$q', (_, $http, $q) => {\n  const api = CONFIG.ENDPOINTS.API + '/germline_small_mutation';\n  \n  let $report = {};\n  \n  /**\n   * Get all small mutation reports\n   *\n   * @returns {Promise} - Resolves with object of {total: int, reports: [{collection},{},...]}\n   */\n  $report.all = (params={}) => {\n    return $q((resolve, reject) => {\n      \n      $http.get(`${api}`, {params: params})\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      \n    });\n  };\n  \n  /**\n   * Get all reports for a biopsy\n   *\n   * @param {string} patient - Patient ID (POG1234)\n   * @param {string} biopsy - Biopsy name (biop1)\n   * @param {object} params - Parameters to pass\n   *\n   * @returns {Promise/array} - Resolves with array of reports\n   */\n  $report.biopsy = (patient, biopsy, params={}) => {\n    return $q((resolve, reject) => {\n      \n      $http.get(`${api}/patient/${patient}/biopsy/${biopsy}`, {params: params})\n        .then((reports) => {\n          resolve(reports);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      \n    });\n  };\n  \n  \n  /**\n   * Get a single report\n   *\n   * @param {string} patient - Patient ID (POG1234)\n   * @param {string} biopsy - Biopsy name (biop1)\n   * @param {string} report - Report UUID\n   * @param {object} params - Parameters to pass\n   *\n   * @returns {Promise/array} - Resolves with array of reports\n   */\n  $report.one = (patient, biopsy, report, params={}) => {\n    return $q((resolve, reject) => {\n      $http.get(`${api}/patient/${patient}/biopsy/${biopsy}/report/${report}`, {params: params})\n        .then((report) => {\n          resolve(report.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  };\n  \n  \n  /**\n   * Update a single report\n   *\n   * @param {string} patient - Patient ID (POG1234)\n   * @param {string} biopsy - Biopsy name (biop1)\n   * @param {string} report - Report UUID\n   * @param {object} data - Updated report data payload\n   * @param {object} params - Parameters to pass\n   *\n   * @returns {Promise/array} - Resolves with array of reports\n   */\n  $report.update = (patient, biopsy, report, data, params={}) => {\n    return $q((resolve, reject) => {\n      $http.put(`${api}/patient/${patient}/biopsy/${biopsy}/report/${report}`, data, {params: params})\n        .then((report) => {\n          resolve(report.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  };\n  \n  \n  /**\n   * Delete a report\n   *\n   * @param {string} patient - Patient ID (POG1234)\n   * @param {string} biopsy - Biopsy name (biop1)\n   * @param {string} report - Report UUID\n   *\n   * @returns {Promise/array} - Resolves with array of reports\n   */\n  $report.delete = (patient, biopsy, report) => {\n    return $q((resolve, reject) => {\n      $http.delete(`${api}/patient/${patient}/biopsy/${biopsy}/report/${report}`)\n        .then(() => {\n          resolve();\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  };\n  \n  /**\n   * Retrieve a flash token to download a report\n   *\n   * @returns {Promise/object} - Resolves with token object\n   */\n  $report.flash_token = () => {\n    return $q((resolve, reject) => {\n      \n      $http.get(`${api}/export/batch/token`)\n        .then((response) => {\n          resolve(response.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  };\n  \n  return $report;\n  \n}]);\n","/**\n * BCGSC - IPR-Client Tracking State Definition API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n * Author: Brandon Pierce <bpierce@bcgsc.ca>\n */\n\napp.factory('api.germline.review', ['_', '$http', '$q', (_, $http, $q) => {\n  const api = CONFIG.ENDPOINTS.API + '/germline_small_mutation';\n  \n  let $review = {};\n  \n  /**\n   * Add a new review\n   *\n   * @param {string} patient - Patient ID (POG1234)\n   * @param {string} biopsy - Biopsy name (biop1)\n   * @param {string} report - Report UUID\n   * @param {object} data - Review body payload\n   *\n   * @returns {Promise/object} - Resolves with created review object\n   */\n  $review.add = (patient, biopsy, report, data) => {\n    return $q((resolve, reject) => {\n      \n      $http.put(`${api}/patient/${patient}/biopsy/${biopsy}/report/${report}/review`, data)\n        .then((review) => {\n          resolve(review.data);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n      \n    });\n  };\n  \n  /**\n   * Remove a review\n   *\n   * @param {string} patient - Patient ID (POG1234)\n   * @param {string} biopsy - Biopsy name (biop1)\n   * @param {string} report - Report object UUID\n   * @param {string} review - Review object UUID\n   * @param {object} data - Review body payload\n   *\n   * @returns {Promise/object} - Resolves with created review object\n   */\n  $review.remove = (patient, biopsy, report, review, data) => {\n    return $q((resolve, reject) => {\n      \n      $http.delete(`${api}/patient/${patient}/biopsy/${biopsy}/report/${report}/review/${review}`, data)\n        .then(() => {\n          resolve();\n        })\n        .catch((e) => {\n          reject(e);\n        });\n      \n    });\n  };\n  \n  return $review;\n  \n}]);\n","/**\n * BCGSC - IPR-Client Tracking State Definition API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n * Author: Brandon Pierce <bpierce@bcgsc.ca>\n */\n\napp.factory('api.germline.variant', ['_', '$http', '$q', (_, $http, $q) => {\n  const api = CONFIG.ENDPOINTS.API + '/germline_small_mutation';\n  \n  let $variant = {};\n  \n  /**\n   * Get a variant\n   *\n   * @param {string} patient - Patient ID (POG1234)\n   * @param {string} biopsy - Biopsy name (biop1)\n   * @param {string} report - Report UUID\n   * @param {string} variant - Variant UUID\n   *\n   * @returns {Promise/object} - Resolves with variant object\n   */\n  $variant.one = (patient, biopsy, report, variant) => {\n    return $q((resolve, reject) => {\n      \n      $http.get(`${api}/patient/${patient}/biopsy/${biopsy}/report/${report}/variant/${variant}`)\n        .then((variant) => {\n          resolve(variant);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n      \n    });\n  };\n  \n  /**\n   * Update a variant\n   *\n   * @param {string} patient - Patient ID (POG1234)\n   * @param {string} biopsy - Biopsy name (biop1)\n   * @param {string} report - Report object UUID\n   * @param {string} variant - Variant object UUID\n   * @param {object} data - Review body payload\n   *\n   * @returns {Promise/object} - Resolves with created review object\n   */\n  $variant.update = (patient, biopsy, report, variant, data) => {\n    return $q((resolve, reject) => {\n      \n      $http.put(`${api}/patient/${patient}/biopsy/${biopsy}/report/${report}/variant/${variant}`, data)\n        .then((response) => {\n          resolve(response.data);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n      \n    });\n  };\n  \n  return $variant;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.probe.alterations', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $APC = {};\n\n\n  $APC.getAll = (pog, report) => {\n\n    let deferred = $q.defer();\n\n    $http.get(api + '/' + pog + '/report/'+ report +'/probe/alterations').then(\n      (resp) => {\n        // Successful authentication\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve');\n      }\n    );\n\n    return deferred.promise;\n\n  }\n\n  $APC.one = (pog, report, ident) => {\n    return {\n      update: (data) => {\n        let deferred = $q.defer();\n\n        $http.put(api + '/' + pog + '/report/'+ report +'/probe/alterations/' + ident, data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to update APC', error);\n            deferred.reject('Unable to update');\n          }\n        );\n\n        return deferred.promise;\n      },\n\n      /**\n       * Create new Detailed Genomic Alterations Entry\n       *\n       * @param {object} data - Alteration data object\n       * @returns {promise|object} - Promise resolves new entry\n       */\n      create: (data) => {\n        let deferred = $q.defer();\n\n        $http.post(api + '/' + pog + '/report/'+ report +'/probe/alterations/', data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to create APC', error);\n            deferred.reject('Unable to create');\n          }\n        );\n\n        return deferred.promise;\n      }\n    }\n  };\n\n  // Get alterations by specific type\n  $APC.getType = (pog, report, type) => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/'  + pog + '/report/'+ report +'/probe/alterations/' + type).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve requested alterations', error);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  // Update an existing entry\n  $APC.update = (pog, gene) => {\n    let deferred = $q.defer();\n\n    //$http.put\n  };\n\n  // Create a new entry\n  $APC.create = (pog, gene) => {\n\n  };\n\n\n\n  return $APC;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.probe.signature', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $signature = {};\n\n\n  /**\n   * Get Probe Signature Details\n   *\n   * Retrieve probe sign-off details\n   *\n   */\n  $signature.get = (POGID, report) => {\n\n    return $q((resolve, reject) => {\n\n      // Get result from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/probe/signature').then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          reject(error);\n        }\n      );\n    });\n  };\n\n  /**\n   * Sign the probe report\n   *\n   * @param {string} POGID - POGID\n   * @param {string} report - Report Ident string\n   * @param {string} role - Report signing role\n   * @returns {Promise|object}\n   */\n  $signature.sign = (POGID, report, role) => {\n    return $q((resolve, reject) => {\n\n      $http.put(api + '/' + POGID + '/report/' + report + '/probe/signature/' + role, {}).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n  /**\n   * Revoke a probe report signature\n   *\n   * @param {string} POGID - POGID\n   * @param {string} report - Report Ident string\n   * @param {string} role - Report signing role\n   * @returns {Promise|object}\n   */\n  $signature.revoke = (POGID, report, role) => {\n    return $q((resolve, reject) => {\n\n      $http.put(api + '/' + POGID + '/report/' + report + '/probe/signature/revoke/' + role, {}).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n  return $signature;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.probe.testInformation', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $testInformation = {};\n\n\n  /*\n   * Get one Image\n   *\n   * Retrieve one image from API.\n   *\n   */\n  $testInformation.get = (POGID, report) => {\n\n    return $q((resolve, reject) => {\n\n      // Get result from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/probe/testInformation').then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  };\n\n  return $testInformation;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.geneViewer', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $gv = {};\n  \n  $gv.get = (pog, report, gene) => {\n    return $q((resolve, reject) => {\n      // Get result from API\n      $http.get(api + '/' + pog + '/report/' + report + '/geneviewer/' + gene).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  \n  };\n  \n  \n  return $gv;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.image', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $image = {};\n  \n  \n  /*\n   * Get one Image\n   *\n   * Retrieve one image from API.\n   *\n   */\n  $image.get = (POGID, report, key) => {\n    \n    return $q((resolve, reject) => {\n\n      // Get result from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/image/retrieve/' + key).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  };\n\n  /*\n   * Get Density Graphs\n   *\n   *\n   */\n  $image.expDensityGraphs = (POGID, report) => {\n\n    return $q((resolve, reject) => {\n\n      // Get Graphs\n      $http.get(api + '/' + POGID + '/report/' + report + '/image/expressionDensityGraphs').then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          reject(error.status);\n        }\n      )\n\n    });\n\n  };\n  \n  /**\n   * Retrieve Mutation Summary images for this POG\n   *\n   * @param {string} POGID - Patient Identifier\n   * @param {string} report - Analysis Report identifier\n   *\n   * @returns {*}\n   */\n  $image.mutationSummary = (POGID, report) => {\n\n    return $q((resolve, reject) => {\n\n      // Get Graphs\n      $http.get(api + '/' + POGID + '/report/' + report + '/image/mutationSummary').then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          reject(error.status);\n        }\n      )\n\n    });\n\n  };\n\n  /*\n   * Get Subtype Plots\n   *\n   *\n   */\n  $image.subtypePlots = (POGID, report) => {\n\n    return $q((resolve, reject) => {\n\n      // Get Graphs\n      $http.get(api + '/' + POGID + '/report/' + report + '/image/subtypePlots').then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          reject(error.status);\n        }\n      )\n\n    });\n\n  };\n\n  return $image;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.pog_analysis_report', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API;\n\n  let $report = {};\n\n\n  /**\n   * Get All Reports\n   *\n   * Retrieve all report from API that user can access\n   *\n   * @returns {promise} - Resolves with array of reports\n   */\n  $report.all = (params={}) => {\n    return $q((resolve, reject) => {\n\n      let opts = {\n        params: params\n      };\n\n      // Retrieve from API\n      $http.get(api + '/reports', opts).then(\n        (reports) => {\n          resolve(reports.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n\n    });\n\n  };\n\n  /**\n   * Get one Report\n   *\n   * Retrieve one report from API.\n   *\n   * @param {string} report - The report ident string (4 chars)\n   */\n  $report.get = (report) => {\n\n    return $q((resolve, reject) => {\n\n      // Get result from API\n      $http.get(api + '/reports/' + report).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  };\n\n  /**\n   * Update a report entry\n   *\n   * @param {object} report - Report object to be updated\n   * @returns {Promise|object}\n   */\n  $report.update = (report) => {\n\n    return $q((resolve, reject) => {\n\n      $http.put(api + '/reports/' + report.ident, report)\n        .then(\n          (result) => {\n            resolve(result.data);\n          },\n          (err) => {\n            reject(error);\n          }\n        );\n\n    });\n\n  };\n\n  /**\n   * Bind a user to a report\n   *\n   * @param {string} report - Report Ident\n   * @param {string} user - User Ident (or username)\n   * @param {string} role - role name\n   *\n   * @returns {Promise}\n   */\n  $report.bindUser = (report, user, role) => {\n    return $q((resolve, reject) => {\n\n      $http.post(api + '/reports/' + report + '/user', {user: user, role: role})\n        .then(\n          (result) => {\n            resolve(result.data);\n          },\n          (err) => {\n            reject(error);\n          }\n        );\n\n    });\n  };\n\n  /**\n   * Unbind a user from a report\n   *\n   * @param {string} report - Report Ident\n   * @param {string} user - User Ident (or username)\n   * @param {string} role - role name\n   *\n   * @returns {Promise}\n   */\n  $report.unbindUser = (report, user, role) => {\n    return $q((resolve, reject) => {\n\n      $http.delete(api + '/reports/' + report + '/user', {\n        data: {user: user, role: role},\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n      })\n        .then(\n          (result) => {\n            resolve(result.data);\n          },\n          (err) => {\n            reject(err);\n          }\n        );\n\n    });\n  };\n\n\n  /**\n   * POG Nested Reports\n   * @param {string} pog - POGID\n   */\n  $report.pog = (pog) => {\n    return {\n      /**\n       * Get All Reports for this POG\n       *\n       * Retrieve all report from API that user can access\n       *\n       * @returns {promise} - Resolves with array of reports\n       */\n      all: () => {\n        return $q((resolve, reject) => {\n\n          // Retrieve from API\n          $http.get(api + '/POG/'+ pog +'/reports').then(\n            (reports) => {\n              resolve(reports.data);\n            },\n            (error) => {\n              // TODO: Better error handling\n              reject(error);\n            }\n          );\n\n        });\n\n      },\n\n      /**\n       * Get one Report\n       *\n       * Retrieve one report from API.\n       *\n       * @param {string} report - The report ident string (4 chars)\n       */\n      get: (report) => {\n\n        return $q((resolve, reject) => {\n\n          // Get result from API\n          $http.get(api + '/POG/'+ pog +'/reports/' + report).then(\n            (result) => {\n              resolve(result.data);\n            },\n            (error) => {\n              // TODO: Better error handling\n              reject();\n            }\n          );\n        });\n      }\n\n    };\n  };\n\n  return $report;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.summary.analystComments', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $ac = {};\n  \n  \n  /*\n   * Get Analyst comments\n   *\n   * Retrieve anaylist comments for this POG\n   *\n   */\n  $ac.get = (POGID, report) => {\n    return $q((resolve, reject) => {\n      \n      // Retrieve from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/analystComments').then(\n        (result) => {\n          // Return to requestee\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  };\n  \n  \n  /*\n   * Update an Analyst comment\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string summary - Text body of summary\n   *\n   */\n  $ac.update = (POGID, report, summary) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Get result from API\n      $http.put(api + '/' + POGID + '/report/' + report + '/genomic/summary/analystComments', summary).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  };\n\n  /**\n   * Sign Analyst Comments\n   *\n   * @param {string} POGID\n   * @param {string} report - Report unique identifier\n   * @param {string} role - The role to sign for\n   *\n   */\n  $ac.sign = (POGID, report, role) => {\n\n    return $q((resolve, reject) => {\n\n      $http.put(api + '/' + POGID + '/report/' + report + '/genomic/summary/analystComments/sign/' + role, {}).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  };\n\n  /**\n   * Revoke Analyst Comments Signature\n   *\n   * @param {string} POGID\n   * @param {string} report - Report unique identifier\n   * @param {string} role - The role to sign for\n   *\n   */\n  $ac.revokeSign = (POGID, report, role) => {\n\n    return $q((resolve, reject) => {\n\n      $http.put(api + '/' + POGID + '/report/' + report + '/genomic/summary/analystComments/sign/revoke/' + role, {}).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  };\n\n  return $ac;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.summary.genomicAterationsIdentified', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $gai = {};\n  \n  /*\n   * Get All POGS\n   *\n   * Retrieve all POGs from API that user can access\n   *\n   */\n  $gai.all = (POGID, report) => {\n    return $q((resolve, reject) => {\n      \n      // Retrieve from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/genomicAlterationsIdentified').then(\n        (result) => {\n        \n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  };\n  \n  /*\n   * Get an Identified Genomic Alteration\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string ident - UUID4 identity string for entry\n   *\n   */\n  $gai.id = (POGID, report, ident) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Get result from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/genomicAlterationsIdentified/' + ident).then(\n        (result) => {\n\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  };\n  \n  /*\n   * Update an Identified Genomic Alteration\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string ident - UUID4 identity string for entry\n   *\n   */\n  $gai.update = (POGID, report, ident, gai) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Lookup in cache first\n      if(_gai[ident] !== undefined) return resolve(_gai[ident]);\n      \n      // Get result from API\n      $http.put(api + '/' + POGID + '/report/' + report + '/genomic/summary/genomicAlterationsIdentified/' + ident, gai).then(\n        (result) => {\n        \n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  };\n\n  /*\n   * Create an Identified Genomic Alteration\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string ident - UUID4 identity string for entry\n   *\n   */\n  $gai.create = (POGID, report, alteration) => {\n\n    return $q((resolve, reject) => {\n\n      // Get result from API\n      $http.post(api + '/' + POGID + '/report/' + report + '/genomic/summary/genomicAlterationsIdentified/', alteration).then(\n        (result) => {\n\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  };\n  \n  /*\n   * Remove an Identified Genomic Alteration\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string ident - UUID4 identity string for entry\n   *\n   */\n  $gai.remove = (POGID, report, ident, comment, cascade=false) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Get result from API\n      $http.delete(api + '/' + POGID + '/report/' + report + '/genomic/summary/genomicAlterationsIdentified/' + ident + ((cascade) ? '?cascade=true' : ''), {data: {comment: comment}, headers: {'Content-Type': 'application/json'}}).then(\n        (result) => {\n          resolve(true);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  };\n  \n  return $gai;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.summary.genomicEventsTherapeutic', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $get = {};\n  \n  \n  /*\n   * Get Genomic Events with Therapeutic Association\n   *\n   * Retrieve all POGs from API that user can access\n   *\n   */\n  $get.all = (POGID, report) => {\n    return $q((resolve, reject) => {\n      \n      // Retrieve from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/genomicEventsTherapeutic').then(\n        (result) => {\n          // Load into cache\n          \n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  }\n  \n  /*\n   * Get an Genomic Event with Therapeutic Association\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string ident - UUID4 identity string for entry\n   *\n   */\n  $get.id = (POGID, report, ident) => {\n    \n    return $q((resolve, reject) => {\n            \n      // Get result from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/genomicEventsTherapeutic/' + ident).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  }\n  \n  /*\n   * Update an Genomic Event with Therapeutic Association\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string ident - UUID4 identity string for entry\n   *\n   */\n  $get.update = (POGID, report, ident, get) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Get result from API\n      $http.put(api + '/' + POGID + '/report/' + report + '/genomic/summary/genomicEventsTherapeutic/' + ident, get).then(\n        (result) => {\n\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  }\n  \n  /*\n   * Remove an Genomic Event with Therapeutic Association\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string ident - UUID4 identity string for entry\n   *\n   */\n  $get.remove = (POGID, report, ident) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Get result from API\n      $http.delete(api + '/' + POGID + '/report/' + report + '/genomic/summary/genomicEventsTherapeutic/' + ident).then(\n        (result) => {\n          resolve(true);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  }\n  \n  return $get;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.summary.microbial', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $microbial = {};\n\n\n  /**\n   * Get Microbial Content\n   *\n   * @param {string} POGID - PogID of requested resource, eg. POG129\n   * @param {string} report - Report ID\n   *\n   */\n  $microbial.get = (POGID, report) => {\n    return $q((resolve, reject) => {\n\n      // Retrieve from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/microbial').then(\n        (result) => {\n          // Load into cache\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n\n    });\n\n  };\n\n  return $microbial;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.summary.mutationSummary', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $ms = {};\n  \n  \n  /*\n   * Get Genomic Events with Therapeutic Association\n   *\n   * Retrieve all POGs from API that user can access\n   *\n   */\n  $ms.get = (POGID, report) => {\n    return $q((resolve, reject) => {\n      \n      // Retrieve from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/mutationSummary').then(\n        (result) => {\n          // Load into cache\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  };\n  \n  \n  /*\n   * Update an Genomic Event with Therapeutic Association\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string ident - UUID4 identity string for entry\n   *\n   */\n  $ms.update = (POGID, report, summary) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Get result from API\n      $http.put(api + '/' + POGID + '/report/' + report + '/genomic/summary/mutationSummary/', summary).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  };\n  \n  return $ms;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.summary.pathwayAnalysis', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $pa = {};\n\n\n  /*\n   * Get Pathway Analysis\n   *\n   * Retrieve analysis for this POG\n   *\n   */\n  $pa.get = (POGID, report) => {\n    return $q((resolve, reject) => {\n\n      // Retrieve from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/pathwayAnalysis').then(\n        (result) => {\n          // Return to requestee\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n\n    });\n\n  };\n\n\n  /*\n   * Update Pathway Analysis for this POG\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string XMLbody - text string of SVG\n   *\n   */\n  $pa.update = (POGID, report, summary) => {\n\n    return $q((resolve, reject) => {\n\n      // Get result from API\n      $http.put(api + '/' + POGID + '/report/' + report + '/genomic/summary/pathwayAnalysis', summary).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  };\n\n  return $pa;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.summary.patientInformation', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $pi = {};\n  \n  \n  /*\n   * Get Patient Information for POG\n   *\n   */\n  $pi.get = (POGID) => {\n    return $q((resolve, reject) => {\n      \n      // Retrieve from API\n      $http.get(api + '/' + POGID + '/patientInformation').then(\n        (result) => {\n          // Load into cache\n          \n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  };\n\n  $pi.update = (POGID, pi) => {\n\n    return $q((resolve, reject) => {\n\n      $http.put(api + '/' + POGID + '/patientInformation', pi).then(\n        (result) => {\n          // All done!\n          resolve(result.data);\n        },\n        (error) => {\n          reject(error);\n        }\n      );\n\n    });\n\n  };\n  \n  return $pi;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.summary.probeTarget', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $pt = {};\n  \n  /*\n   * Get All Probe Targets\n   *\n   * Retrieve all Probe Targets for this POG\n   *\n   * @param string POGID - POGID associated with these resource\n   *\n   */\n  $pt.all = (POGID, report) => {\n    return $q((resolve, reject) => {\n      \n      // Retrieve from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/probeTarget').then(\n        (result) => {\n        \n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  };\n  \n  /*\n   * Get a Probe Target\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string ident - UUID4 identity string for entry\n   *\n   */\n  $pt.id = (POGID, report, ident) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Get result from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/probeTarget/' + ident).then(\n        (result) => {\n\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  }\n  \n  /*\n   * Update a Probe Target\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string ident - UUID4 identity string for entry\n   *\n   */\n  $pt.update = (POGID, report, ident, gai) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Lookup in cache first\n      if(_gai[ident] !== undefined) return resolve(_gai[ident]);\n      \n      // Get result from API\n      $http.put(api + '/' + POGID + '/report/' + report + '/genomic/summary/probeTarget/' + ident, gai).then(\n        (result) => {\n        \n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  }\n  \n  /*\n   * Remove a Probe Target\n   *\n   * @param string POGID - POGID, eg POG129\n   * @param string ident - UUID4 identity string for entry\n   *\n   */\n  $pt.remove = (POGID, report, ident) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Get result from API\n      $http.delete(api + '/' + POGID + '/report/' + report + '/genomic/summary/probeTarget/' + ident).then(\n        (result) => {\n          resolve(true);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  }\n  \n  return $pt;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.summary.tumourAnalysis', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $ta = {};\n  \n  \n  /*\n   * Get Tumour Analysis\n   *\n   *\n   */\n  $ta.get = (POGID, report) => {\n    return $q((resolve, reject) => {\n      \n      // Retrieve from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/tumourAnalysis').then(\n        (result) => {\n          // Load into cache\n          \n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  }\n  \n  \n  /*\n   * Update Tumour Analysis\n   *\n   * @param string POGID - POGID, eg POG129\n   *\n   */\n  $ta.update = (POGID, report, analysis) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Get result from API\n      $http.put(api + '/' + POGID + '/report/' + report + '/genomic/summary/tumourAnalysis/', analysis).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  }\n  \n  return $ta;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.summary.variantCounts', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $vc = {};\n  \n  \n  /*\n   * Get Variant Counts\n   *\n   * @param string POGID - PogID of requested resource, eg. POG129\n   *\n   */\n  $vc.get = (POGID, report) => {\n    return $q((resolve, reject) => {\n      \n      // Retrieve from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/summary/variantCounts').then(\n        (result) => {\n          // Load into cache\n          \n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject(error);\n        }\n      );\n      \n    });\n    \n  }\n  \n  \n  /*\n   * Update Variant Counts\n   *\n   * @param string POGID - POGID, eg POG129\n   *\n   */\n  $vc.update = (POGID, report, analysis) => {\n    \n    return $q((resolve, reject) => {\n      \n      // Get result from API\n      $http.put(api + '/' + POGID + '/report/' + report + '/genomic/summary/variantCounts/', analysis).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  }\n  \n  return $vc;\n  \n}]);\n","/**\n * BCGSC - IPR-Client Tracking State Definition API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n * Author: Brandon Pierce <bpierce@bcgsc.ca>\n */\napp.factory('api.tracking.definition', ['_', '$http', '$q', (_, $http, $q) => {\n  const api = CONFIG.ENDPOINTS.API + '/tracking';\n\n  let $definition = {};\n\n\n  /**\n   * Get all tracking state definitions\n   *\n   * @returns {Promise} - Resolves with array of definitions\n   */\n  $definition.all = (params=null) => {\n    return $q((resolve, reject) => {\n\n      $http.get(api + '/definition', {params: params}).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n\n  /**\n   * Create new definition\n   *\n   * @param {object} definition - The definition to be created\n   * @returns {Promise} - Resolves with created object\n   */\n  $definition.create = (definition) => {\n    return $q((resolve, reject) => {\n\n      $http.post(api + '/definition', definition).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n  /**\n   * Retrieve a single definition\n   *\n   * @param {string} ident - single UUID\n   *\n   * @returns {Promise} - Resolves with updated entry\n   */\n  $definition.retrieve = (ident) => {\n    return $q((resolve, reject) => {\n\n      $http.get(api + '/definition/' + ident).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n\n  /**\n   * Update an existing definition\n   *\n   * @param {string} ident - single UUID\n   * @param {object} definition - the updated definition entry\n   *\n   * @returns {Promise} - Resolves with updated entry\n   */\n  $definition.update = (ident, definition) => {\n    return $q((resolve, reject) => {\n\n      $http.put(api + '/definition/' + ident, definition).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n  /**\n   * Remove a definition\n   *\n   * @param {string} ident - UUID of definition to be removed\n   *\n   * @returns {Promise} - Resolves with updated entry\n   */\n  $definition.remove = (ident) => {\n    return $q((resolve, reject) => {\n\n      $http.delete(api + '/definition/' + ident).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n    });\n  }\n\n\n\n  /**\n   * User Load Counts\n   *\n   * @param {string} ident - Definition ident\n   */\n  $definition.userLoad = (ident) => {\n    return $q((resolve, reject) => {\n\n      $http.get(api + '/definition/' + ident + '/userload').then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n  return $definition;\n\n}]);\n","/**\n * BCGSC - IPR-Client Tracking State Definition API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n * Author: Brandon Pierce <bpierce@bcgsc.ca>\n */\napp.factory('api.tracking.hook', ['_', '$http', '$q', (_, $http, $q) => {\n  const api = CONFIG.ENDPOINTS.API + '/tracking/hook';\n  \n  let $hook = {};\n  \n  \n  /**\n   * Get all tracking hooks\n   *\n   * @returns {Promise} - Resolves with array of definitions\n   */\n  $hook.all = (params=null) => {\n    return $q((resolve, reject) => {\n      \n      $http.get(api, {params: params})\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  };\n  \n  \n  /**\n   * Create new hook\n   *\n   * @param {object} hook - The hook to be created\n   *\n   * @returns {Promise} - Resolves with created object\n   */\n  $hook.create = (hook) => {\n    return $q((resolve, reject) => {\n      \n      $http.post(api, hook)\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      \n    });\n  };\n  \n  /**\n   * Retrieve a single hook\n   *\n   * @param {string} ident - single UUID\n   *\n   * @returns {Promise} - Resolves with updated entry\n   */\n  $hook.retrieve = (ident) => {\n    return $q((resolve, reject) => {\n      \n      $http.get(`${api}/${ident}`)\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      \n    });\n  };\n  \n  \n  /**\n   * Update an existing hook\n   *\n   * @param {string} ident - single UUID\n   * @param {object} hook - the updated hook entry\n   *\n   * @returns {Promise} - Resolves with updated entry\n   */\n  $hook.update = (ident, hook) => {\n    return $q((resolve, reject) => {\n      \n      $http.put(`${api}/${ident}`, hook)\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      \n    });\n  };\n  \n  /**\n   * Remove a hook\n   *\n   * @param {string} ident - UUID of hook to be removed\n   *\n   * @returns {Promise} - Resolves with updated entry\n   */\n  $hook.remove = (ident) => {\n    return $q((resolve, reject) => {\n      \n      $http.delete(`${api}/${ident}`)\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          reject(err);\n        })\n    });\n  };\n  \n  return $hook;\n  \n}]);\n","/**\n * BCGSC - IPR-Client Tracking State Definition API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n * Author: Brandon Pierce <bpierce@bcgsc.ca>\n */\napp.factory('api.tracking.state', ['_', '$http', '$q', (_, $http, $q) => {\n  const api = CONFIG.ENDPOINTS.API + '/tracking';\n\n  let $state = {};\n\n  /**\n   * Get all tracking state definitions\n   *\n   * @returns {Promise} - Resolves with array of definitions\n   */\n  $state.all = (params={}) => {\n    return $q((resolve, reject) => {\n\n      $http.get(api + '/', {params: params}).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n  /**\n   * Get selected states\n   *\n   * @param {object} params - URL parameters to append\n   *\n   */\n  $state.filtered = (params={}) => {\n    return $q((resolve, reject) => {\n\n      $http.get(api + '/state', {params: params}).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n  /**\n   * Get get single state\n   *\n   * @params {object} ident - Options for querying states\n   *\n   * @returns {Promise} - Resolves with collection of states\n   */\n  $state.getState = (ident) => {\n\n    return $q((resolve, reject) => {\n      $http.get(api + '/state/' + ident).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n    });\n  };\n\n  /**\n   * Update a state's details\n   *\n   * @param ident\n   * @param state\n   *\n   * @returns {Promise} - Resolves with updated state\n   */\n  $state.update = (ident, state) => {\n\n    return $q((resolve, reject) => {\n\n      $http.put(api + '/state/' + ident, state).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n    });\n  };\n\n  return $state;\n\n}]);\n","/**\n * BCGSC - IPR-Client Tracking State Definition API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n * Author: Brandon Pierce <bpierce@bcgsc.ca>\n */\napp.factory('api.tracking.task', ['_', '$http', '$q', (_, $http, $q) => {\n  const api = CONFIG.ENDPOINTS.API + '/tracking/task';\n\n  let $task = {};\n\n  /**\n   * Get all tracking state definitions\n   *\n   * @param {string} ident - Retrieve the task by ident\n   *\n   * @returns {Promise} - Resolves with array of definitions\n   */\n  $task.getByIdent = (ident) => {\n    return $q((resolve, reject) => {\n\n      $http.get(api + '/' + ident).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n  /**\n   * Get task by inheritance\n   *\n   * @param {string} POGID - POGID, eg POG123\n   * @param {string} analysis - Analysis name, eg biopsy_1 or biop1\n   * @param {string} state - State slug, eg bioinformatics\n   * @param {string} task - Task slug, eg, HOMD_review\n   *\n   * @returns {Promise} - Resolves with object\n   */\n  $task.getTaskByState = (POGID, analysis, state, task) => {\n\n    return $q((resolve, reject) => {\n\n      $http.get(api + '/' + POGID + '/' + analysis + '/' + state + '/' + task).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n  /**\n   * Run a check-in for a task\n   *\n   * @param {string} POGID - POGID, eg POG123\n   * @param {string} analysis - Analysis name, eg biopsy_1 or biop1\n   * @param {string} state - State slug, eg bioinformatics\n   * @param {string} task - Task slug, eg, HOMD_review\n   * @param {object|string} outcome - Task output result\n   *\n   * @returns {Promise} - Resolves with object\n   */\n  $task.checkInTask = (POGID, analysis, state, task, outcome) => {\n\n    return $q((resolve, reject) => {\n\n      $http.patch(api + '/checkin/' + POGID + '/' + analysis + '/' + state + '/' + task, {outcome: outcome}).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n    });\n  };\n\n\n  /**\n   * Update a task's details\n   *\n   * @param {object} task - The updated task object to be submitted\n   *\n   * @returns {Promise} - Resolves with updated task\n   */\n  $task.update = (task) => {\n    return $q((resolve, reject) => {\n\n      $http.put(api + '/' + task.ident, task).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n\n  /**\n   * Run a check-in for a task using UUID\n   *\n   * @param {string} task - Task UUID\n   * @param {object|string} outcome - Task output result\n   *\n   * @returns {Promise} - Resolves with object\n   */\n  $task.checkInTaskIdent = (task, outcome) => {\n\n    return $q((resolve, reject) => {\n\n      $http.patch(api + '/checkin/' + task, {outcome: outcome}).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n    });\n  };\n\n\n  /**\n   * Revoke a checkin entry\n   *\n   * @param {string} task - The task ident\n   * @param {string} checkin - Checkin ident string to be removed\n   * @returns {Promise} - Resolves with updated task\n   */\n  $task.revokeCheckin = (task, checkin) => {\n\n    return $q((resolve, reject) => {\n\n      $http.delete(api + '/checkin/' + task + '/' + checkin).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n\n  /**\n   * Change the assigned user of a task\n   *\n   * @param {string} task - Task ident string\n   * @param {string} user - User ident string\n   * @returns {Promise} - Resolves with updated task object\n   */\n  $task.assignUser = (task, user) => {\n\n    return $q((resolve, reject) => {\n      $http.put(api + '/' + task + '/assignTo/' + user).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n    });\n  };\n\n  return $task;\n\n}]);\n","/**\n * BCGSC - IPR-Client Tracking State Definition API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n * Author: Brandon Pierce <bpierce@bcgsc.ca>\n */\n\n\napp.factory('api.tracking.ticket_template', ['_', '$http', '$q', (_, $http, $q) => {\n  const api = CONFIG.ENDPOINTS.API + '/tracking/ticket/template';\n  \n  let $template = {};\n  \n  /**\n   * Get all definition ticket templates\n   *\n   * @param {string} definition - Definition ident string\n   *\n   * @returns {Promise} - Resolves with array of templates\n   */\n  $template.getDefTasks = (definition) => {\n    return $q((resolve, reject) => {\n      \n      $http.get(api + '/definition/' + definition).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n      \n    });\n  };\n  \n  /**\n   * Create new ticket template for a definition\n   *\n   * @param {string} definition - Definition ident string\n   * @param {string} template - Ticket template to pass to API\n   *\n   * @returns {Promise/object} - Resolves with new definition object\n   */\n  $template.create = (definition, template) => {\n    return $q((resolve, reject) => {\n      \n      $http.post(api + '/definition/' + definition, template)\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          console.log('Failed to create new ticket template', err);\n          reject(err);\n        });\n      \n    });\n  };\n  \n  /**\n   * Update the ticket template\n   *\n   * @param {string} definition - The definition ident string\n   * @param {string} template - The Ticket Template object\n   *\n   * @returns {Promise/object} - Resolves with updated object from API\n   */\n  $template.update = (definition, template) => {\n    return $q((resolve, reject) => {\n      \n      $http.put(api + '/definition/' + definition + '/template/' + template.ident, template)\n        .then((result) => {\n          resolve(result.data);\n        })\n        .catch((err) => {\n          console.log('Failed to update ticket template', err);\n          reject(err);\n        });\n      \n    });\n  };\n  \n  /**\n   * Remove a ticket template entry\n   *\n   * @param {string} definition - The definition ident string\n   * @param {string} template - The template ident stirng\n   *\n   * @returns {Promise/boolean}\n   */\n  $template.remove = (definition, template) => {\n    return $q((resolve, reject) => {\n      \n      $http.delete(api + '/definition/' + definition + '/template/' + template)\n        .then((result) => {\n          resolve(true)\n        })\n        .catch((err) => {\n          console.log('Failed to remove the ticket template', err);\n          reject(err);\n        });\n      \n    });\n  };\n  \n  return $template;\n  \n}]);\n","/**\n * BCGSC - IPR-Client Tracking State Definition API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n * Author: Brandon Pierce <bpierce@bcgsc.ca>\n */\napp.factory('api.tracking', ['_', '$http', '$q', (_, $http, $q) => {\n  const api = CONFIG.ENDPOINTS.API + '/tracking';\n\n  let $tracking = {};\n\n  /**\n   * Get all tracking state definitions\n   *\n   * @param {object} track - POST body to initiate tracking\n   *\n   * @returns {Promise} - Resolves with object of new tracking data\n   */\n  $tracking.init = (track) => {\n    return $q((resolve, reject) => {\n\n      $http.post(api + '/', track).then(\n        (result) => {\n          resolve(result.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      )\n\n    });\n  };\n  return $tracking;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.appendices', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $appendices = {};\n\n\n  /*\n   * Get one Image\n   *\n   * Retrieve one image from API.\n   *\n   */\n  $appendices.tcga = (POGID, report) => {\n\n    return $q((resolve, reject) => {\n\n      // Get result from API\n      $http.get(api + '/' + POGID + '/report/' + report + '/genomic/appendices/tcga').then(\n        (result) => {\n          resolve(result.data);\n        },\n        (error) => {\n          // TODO: Better error handling\n          reject();\n        }\n      );\n    });\n  };\n\n  return $appendices;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.copyNumberAnalyses.cnv', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $cnv = {};\n\n\n  $cnv.all = (pog, report) => {\n\n    let deferred = $q.defer();\n\n    $http.get(api + '/' + pog + '/report/'+ report +'/genomic/copyNumberAnalyses/cnv').then(\n      (resp) => {\n        // Successful authentication\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve');\n      }\n    );\n\n    return deferred.promise;\n\n  };\n\n  $cnv.one = (pog, report, ident) => {\n    return {\n      update: (data) => {\n        let deferred = $q.defer();\n\n        $http.put(api + '/' + pog + '/report/'+ report +'/genomic/copyNumberAnalyses/cnv/' + ident, data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to update CNV', error);\n            deferred.reject('Unable to update');\n          }\n        );\n\n        return deferred.promise;\n      }\n    }\n  };\n\n  // Get alterations by specific type\n  $cnv.getType = (pog, report, type) => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/'  + pog + '/report/'+ report +'/genomic/copyNumberAnalyses/cnv/' + type).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve the requested cnv', error);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  return $cnv;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.expressionAnalysis.drugTarget', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $drugTarget = {};\n\n\n  $drugTarget.all = (pog, report) => {\n\n    let deferred = $q.defer();\n\n    $http.get(api + '/' + pog + '/report/'+ report +'/genomic/expressionAnalysis/drugTarget').then(\n      (resp) => {\n        // Successful authentication\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve');\n      }\n    );\n\n    return deferred.promise;\n\n  };\n\n  $drugTarget.one = (pog, report, ident) => {\n    return {\n      update: (data) => {\n        let deferred = $q.defer();\n\n        $http.put(api + '/' + pog + '/report/'+ report +'/genomic/expressionAnalysis/drugTarget/' + ident, data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to update APC', error);\n            deferred.reject('Unable to update');\n          }\n        );\n\n        return deferred.promise;\n      }\n    }\n  };\n\n  // Get alterations by specific type\n  $drugTarget.getType = (pog, report, type) => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/'  + pog + '/report/'+ report +'/genomic/expressionAnalysis/drugTarget/' + type).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve requested alterations', error);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  return $drugTarget;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.expressionAnalysis.outlier', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $outlier = {};\n\n\n  $outlier.all = (pog, report) => {\n\n    let deferred = $q.defer();\n\n    $http.get(api + '/' + pog + '/report/'+ report +'/genomic/expressionAnalysis/outlier').then(\n      (resp) => {\n        // Successful authentication\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve');\n      }\n    );\n\n    return deferred.promise;\n\n  };\n\n  $outlier.one = (pog, report, ident) => {\n    return {\n      update: (data) => {\n        let deferred = $q.defer();\n\n        $http.put(api + '/' + pog + '/report/'+ report +'/genomic/expressionAnalysis/outlier/' + ident, data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to update APC', error);\n            deferred.reject('Unable to update');\n          }\n        );\n\n        return deferred.promise;\n      }\n    }\n  };\n\n  // Get alterations by specific type\n  $outlier.getType = (pog, report, type) => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/'  + pog + '/report/'+ report +'/genomic/expressionAnalysis/outlier/' + type).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve requested alterations', error);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  return $outlier;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.expressionAnalysis.protein', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $protein = {};\n  \n  \n  $protein.all = (pog, report) => {\n    \n    let deferred = $q.defer();\n    \n    $http.get(api + '/' + pog + '/report/'+ report +'/genomic/expressionAnalysis/protein').then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve');\n      }\n    );\n    \n    return deferred.promise;\n    \n  };\n  \n  $protein.one = (pog, report, ident) => {\n    return {\n      update: (data) => {\n        let deferred = $q.defer();\n        \n        $http.put(api + '/' + pog + '/report/'+ report +'/genomic/expressionAnalysis/protein/' + ident, data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to update APC', error);\n            deferred.reject('Unable to update');\n          }\n        );\n        \n        return deferred.promise;\n      }\n    }\n  };\n  \n  // Get alterations by specific type\n  $protein.getType = (pog, report, type) => {\n    let deferred = $q.defer();\n    \n    $http.get(api + '/'  + pog + '/report/'+ report +'/genomic/expressionAnalysis/protein/' + type).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve requested alterations', error);\n      }\n    );\n    \n    return deferred.promise;\n  };\n  \n  return $protein;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.detailedGenomicAnalysis.alterations', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $APC = {};\n  \n  \n  $APC.getAll = (pog, report) => {\n    \n    let deferred = $q.defer();\n    \n    $http.get(api + '/' + pog + '/report/'+ report +'/genomic/detailedGenomicAnalysis/alterations').then(\n      (resp) => {\n        // Successful authentication\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve');\n      }\n    );\n    \n    return deferred.promise;\n    \n  }\n  \n  $APC.one = (pog, report, ident) => {\n    return {\n      update: (data) => {\n        let deferred = $q.defer();\n        \n        $http.put(api + '/' + pog + '/report/'+ report +'/genomic/detailedGenomicAnalysis/alterations/' + ident, data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to update APC', error);\n            deferred.reject('Unable to update');\n          }\n        );\n        \n        return deferred.promise;\n      },\n\n      /**\n       * Create new Detailed Genomic Alterations Entry\n       *\n       * @param {object} data - Alteration data object\n       * @returns {promise|object} - Promise resolves new entry\n       */\n      create: (data) => {\n        let deferred = $q.defer();\n\n        $http.post(api + '/' + pog + '/report/'+ report +'/genomic/detailedGenomicAnalysis/alterations/', data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to create APC', error);\n            deferred.reject('Unable to create');\n          }\n        );\n\n        return deferred.promise;\n      }\n    }\n  };\n  \n  // Get alterations by specific type\n  $APC.getType = (pog, report, type) => {\n    let deferred = $q.defer();\n    \n    $http.get(api + '/'  + pog + '/report/'+ report +'/genomic/detailedGenomicAnalysis/alterations/' + type).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve requested alterations', error);\n      }\n    );\n    \n    return deferred.promise;\n  };\n  \n  // Update an existing entry\n  $APC.update = (pog, gene) => {\n    let deferred = $q.defer();\n    \n    //$http.put\n  };\n  \n  // Create a new entry\n  $APC.create = (pog, gene) => {\n    \n  };\n      \n  \n  \n  return $APC;\n  \n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.kb.associations', ['_', '$http', '$q', (_, $http, $q) => {\n\n  let $kbAssoc = {};\n\n  // Association Map\n  let $map = {\n    \"inferred sensitivity\": \"therapeutic\",\n    \"inferred resistance\": \"therapeutic\",\n    \"sensitivity\": \"therapeutic\",\n    \"resistance\": \"therapeutic\",\n    \"targetable\": \"therapeutic\",\n\n    \"favourable\": \"prognostic\",\n    \"unfavourable\": \"prognostic\",\n    \"progression\": \"prognostic\",\n\n    \"diagnostic\": \"diagnostic\",\n\n    \"cancer associated gene\": \"biological\",\n    \"recurrent\": \"biological\",\n    \"gain-of-function\": \"biological\",\n    \"loss-of-function\": \"biological\",\n    \"switch-of-function\": \"biological\",\n    \"no gain-of-function\": \"biological\",\n    \"no loss-of-function\": \"biological\",\n    \"reduced-function\": \"biological\",\n    \"inferred loss-of-function\": \"biological\",\n    \"weakly-reduced-function\": \"biological\",\n    \"increased-function\": \"biological\",\n    \"weakly-increased-function\": \"biological\",\n    \"putative oncogene\": \"biological\",\n    \"oncogene\": \"biological\",\n    \"putative tumour suppressor\": \"biological\",\n    \"tumour suppressor\": \"biological\",\n    \"oncogenic fusion\": \"biological\",\n    \"disruptive fusion\": \"biological\",\n    \"dominant negative\": \"biological\",\n\n    \"not specified\": \"*\",\n    \"not determined\": \"*\",\n  };\n\n  // Lookup Associagtion\n  $kbAssoc.association = (assoc) => {\n    if(!(assoc in $map)) return false;\n    return $map[assoc];\n  };\n\n  return $kbAssoc;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.detailedGenomicAnalysis.targetedGenes', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $tg = {};\n\n\n  $tg.getAll = (pog, report) => {\n\n    let deferred = $q.defer();\n\n    $http.get(api + '/' + pog + '/report/'+ report +'/genomic/detailedGenomicAnalysis/targetedGenes').then(\n      (resp) => {\n        // Successful authentication\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve');\n      }\n    );\n\n    return deferred.promise;\n\n  };\n\n  $tg.one = (pog, report, ident) => {\n    return {\n\n      get: () => {\n        let deferred = $q.defer();\n\n        $http.put(api + '/' + pog + '/report/'+ report +'/genomic/detailedGenomicAnalysis/targetedGenes/' + ident, data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to retrieve targeted gene record', error);\n            deferred.reject('Unable to retrieve the requested record');\n          }\n        );\n\n        return deferred.promise;\n      },\n\n      update: (data) => {\n        let deferred = $q.defer();\n\n        $http.put(api + '/' + pog + '/report/'+ report +'/genomic/detailedGenomicAnalysis/targetedGenes/' + ident, data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to ', error);\n            deferred.reject('Unable to update');\n          }\n        );\n\n        return deferred.promise;\n      }\n    }\n  };\n\n  return $tg;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.presentation', ['_', '$http', '$q', (_, $http, $q) => {\n  \n  const api = CONFIG.ENDPOINTS.API + '/POG';\n  \n  let $presentation = {};\n  \n  \n  // Discussion Endpoints\n  $presentation.discussion = {\n  \n    /**\n     * Get All Discussion notes\n     *\n     * @param {string} patient - Patient ID\n     * @param {string} report - Report Ident\n     *\n     * @returns {Promise} - Resolves with all entries\n     */\n    all: (patient, report) => {\n      return $q((resolve, reject) => {\n        $http.get(`${api}/${patient}/report/${report}/genomic/presentation/discussion`)\n          .then((result) => {\n            resolve(result.data);\n          })\n          .catch((e) => {\n            reject(e);\n          });\n      });\n    },\n  \n    /**\n     * Create new discussion entry\n     *\n     * @param {string} patient - Patient ID\n     * @param {string} report - Report Ident\n     * @param {object} data - New entry data object\n     *\n     * @returns {Promise} - Resolves with new entry\n     */\n    create: (patient, report, data) => {\n      return $q((resolve, reject) => {\n        \n        $http.post(`${api}/${patient}/report/${report}/genomic/presentation/discussion`, data)\n          .then((result) => {\n            resolve(result.data);\n          })\n          .catch((e) => {\n            reject(e);\n          });\n        \n      });\n    },\n  \n    /**\n     * Get a discussion entry\n     *\n     * @param {string} patient - Patient ID\n     * @param {string} report - Report Ident\n     * @param {string} ident - Report ident string\n     *\n     * @returns {Promise} - Resolves with updated entry\n     */\n    get: (patient, report, ident) => {\n      return $q((resolve, reject) => {\n        \n        $http.get(`${api}/${patient}/report/${report}/genomic/presentation/discussion/${ident}`)\n          .then((result) => {\n            resolve(result.data);\n          })\n          .catch((e) => {\n            reject(e);\n          });\n        \n      });\n    },\n  \n    /**\n     * Update an existing discussion entry\n     *\n     * @param {string} patient - Patient ID\n     * @param {string} report - Report Ident\n     * @param {string} ident - Report ident string\n     * @param {object} data - data object of entry\n     *\n     * @returns {Promise} - Resolves with updated entry\n     */\n    update: (patient, report, ident, data) => {\n      return $q((resolve, reject) => {\n        \n        $http.put(`${api}/${patient}/report/${report}/genomic/presentation/discussion/${ident}`, data)\n          .then((result) => {\n            resolve(result.data);\n          })\n          .catch((e) => {\n            reject(e);\n          });\n        \n      });\n    },\n  \n    /**\n     * Remove an existing discussion entry\n     *\n     * @param {string} patient - Patient ID\n     * @param {string} report - Report Ident\n     * @param {string} ident - Report ident string\n     *\n     * @returns {Promise} - Resolves with updated entry\n     */\n    remove: (patient, report, ident) => {\n      return $q((resolve, reject) => {\n        \n        $http.delete(`${api}/${patient}/report/${report}/genomic/presentation/discussion/${ident}`)\n          .then((result) => {\n            resolve();\n          })\n          .catch((e) => {\n            reject(e);\n          });\n        \n      });\n    }\n    \n  };\n  \n  // Slides endpoints\n  $presentation.slide = {\n  \n    /**\n     * Get all presentation slides for this report\n     *\n     * @param {string} patient - Patient ID\n     * @param {string} report - Report Ident\n     *\n     * @returns {Promise} - resolves with all slides\n     */\n    all: (patient, report) => {\n      return $q((resolve, reject) => {\n        $http.get(`${api}/${patient}/report/${report}/genomic/presentation/slide`)\n          .then((result) => {\n            resolve(result.data);\n          })\n          .catch((e) => {\n            reject(e);\n          });\n  \n      });\n    },\n    \n    /**\n     * Get a presentation slide\n     *\n     * @param {string} patient - Patient ID\n     * @param {string} report - Report Ident\n     * @param {string} ident - Slide ident string\n     *\n     * @returns {Promise} - resolves with all slides\n     */\n    get: (patient, report, ident) => {\n      return $q((resolve, reject) => {\n        $http.get(`${api}/${patient}/report/${report}/genomic/presentation/slide`)\n          .then((result) => {\n            resolve(reuslt.data);\n          })\n          .catch((e) => {\n            reject(e);\n          });\n  \n      });\n    },\n    \n    /**\n     * Remove presentation slide\n     *\n     * @param {string} patient - Patient ID\n     * @param {string} report - Report Ident\n     * @param {string} ident - Slide ident string\n     *\n     * @returns {Promise} - resolves with all slides\n     */\n    remove: (patient, report, ident) => {\n      return $q((resolve, reject) => {\n        $http.delete(`${api}/${patient}/report/${report}/genomic/presentation/slide/${ident}`)\n          .then((result) => {\n            resolve();\n          })\n          .catch((e) => {\n            reject(e);\n          });\n  \n      });\n    },\n  \n  };\n  \n  \n  \n  return $presentation;\n  \n}]);\n","/*\n * BCGSC - IPR-Client Mutation Signature API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.somaticMutations.mutationSignature', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $mutationSignature = {};\n\n  $mutationSignature.all = (pog, report) => {\n\n    let deferred = $q.defer();\n\n    $http.get(api + '/' + pog + '/report/'+ report +'/genomic/somaticMutations/mutationSignature').then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        console.log(error);\n        deferred.reject('Unable to retrieve');\n      }\n    );\n    return deferred.promise;\n\n  };\n\n  return $mutationSignature;\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.somaticMutations.smallMutations', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $smallMutations = {};\n\n\n  $smallMutations.all = (pog, report) => {\n\n    let deferred = $q.defer();\n\n    $http.get(api + '/' + pog + '/report/'+ report +'/genomic/somaticMutations/smallMutations').then(\n      (resp) => {\n        // Successful authentication\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve');\n      }\n    );\n\n    return deferred.promise;\n\n  }\n\n  $smallMutations.one = (pog, report, ident) => {\n    return {\n      update: (data) => {\n        let deferred = $q.defer();\n\n        $http.put(api + '/' + pog + '/report/'+ report +'/genomic/somaticMutations/smallMutations/' + ident, data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to update APC', error);\n            deferred.reject('Unable to update');\n          }\n        );\n\n        return deferred.promise;\n      }\n    }\n  }\n\n  // Get alterations by specific type\n  $smallMutations.getType = (pog, report, type) => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/'  + pog + '/report/'+ report +'/genomic/somaticMutations/smallMutations/' + type).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve requested alterations', error);\n      }\n    );\n\n    return deferred.promise;\n  }\n\n  return $smallMutations;\n\n}]);\n","/*\n * BCGSC - IPR-Client User API\n *\n * This API factory implements the IPR-API. Calls to and from the API are\n * managed through this construct.\n *\n */\napp.factory('api.structuralVariation.sv', ['_', '$http', '$q', (_, $http, $q) => {\n\n  const api = CONFIG.ENDPOINTS.API + '/POG';\n\n  let $sv = {};\n\n\n  $sv.all = (pog, report) => {\n\n    let deferred = $q.defer();\n\n    $http.get(api + '/' + pog + '/report/' + report+ '/genomic/structuralVariation/sv').then(\n      (resp) => {\n        // Successful authentication\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve');\n      }\n    );\n\n    return deferred.promise;\n\n  };\n\n  $sv.one = (pog, report, ident) => {\n    return {\n      update: (data) => {\n        let deferred = $q.defer();\n\n        $http.put(api + '/' + pog + '/report/' + report+ '/genomic/structuralVariation/sv/' + ident, data).then(\n          (resp) => {\n            deferred.resolve(resp.data);\n          },\n          (error) => {\n            console.log('Unable to update APC', error);\n            deferred.reject('Unable to update');\n          }\n        );\n\n        return deferred.promise;\n      }\n    }\n  };\n\n  // Get alterations by specific type\n  $sv.getType = (pog, report, type) => {\n    let deferred = $q.defer();\n\n    $http.get(api + '/'  + pog + '/report/' + report+ '/genomic/structuralVariation/sv/' + type).then(\n      (resp) => {\n        deferred.resolve(resp.data);\n      },\n      (error) => {\n        deferred.reject('Unable to retrieve requested structural variation', error);\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  return $sv;\n\n}]);\n","app.service('$acl', ['_', 'api.session', 'api.user', (_, $session, $user) => {\n  \n  let user;\n  \n  // Init session & services\n  $session.init()\n    .then($user.me)\n    .then((u) => {\n      user = u;\n    })\n    .catch((e) => {\n      console.log('acl failed to get user', e);\n    });\n  \n  \n  const actions = {\n    report: {\n      view: {\n        allow: ['*'],\n        reject: []\n      },\n      edit: {\n        allow: ['admin','analyst','bioinformatician','reviewer'],\n        reject: ['clinician']\n      },\n      remove: {\n        allow: ['admin'],\n        reject: []\n      }\n    },\n    analyses: {\n      view: {\n        allow: ['*'],\n        reject: ['clinician']\n      },\n      edit: {\n        allow: ['projects', 'admin'],\n        reject: ['clinician']\n      },\n      remove: {\n        allow: ['projects', 'admin'],\n        reject: []\n      }\n    },\n    tracking: {\n      view: {\n        allow: ['*'],\n        reject: ['clinician']\n      },\n      edit: {\n        allow: ['*'],\n        reject: ['clinician']\n      },\n      remove: {\n        allow: ['projects', 'admin'],\n        reject: []\n      }\n    }\n  };\n  \n  const resources = {\n    report: {\n      allow: ['*'],\n      reject: []\n    },\n    knowledgebase: {\n      allow: ['*'],\n      reject: ['clinician']\n    },\n    germline: {\n      allow: ['*'],\n      reject: ['clinician']\n    },\n    analyses: {\n      allow: ['*'],\n      reject: ['clinician']\n    },\n    tracking: {\n      allow: ['*'],\n      reject: ['clinician']\n    },\n  };\n  \n  return {\n  \n    /**\n     * Global Permission Resource Lookup\n     *\n     * @param {string} r - Resource name\n     * @param {object} u - User object to override late user values from init promise\n     *\n     * @returns {boolean} - User is allowed to see resource\n     */\n    resource: (r, u=null) => {\n      let permission = false;\n      let resource;\n      \n      if(u) user = u; // Fix for delayed user init response in construct\n      \n      try {\n        resource = resources[r];\n      }\n      catch(e) {\n        console.log('Failed to find resource: ', r);\n        return false;\n      }\n  \n      // Check Allows first\n      let allows = _.intersection(resource.allow, _.map(_.mapValues(user.groups, (r) => { return {name: r.name.toLowerCase()}}), 'name'));\n      if(resource.allow.indexOf('*') > -1) permission = true;\n      if(allows && allows.length > 0) permission = true;\n  \n  \n      // Check Rejections\n      let rejects = _.intersection(resource.reject, _.map(_.mapValues(user.groups, (r) => { return {name: r.name.toLowerCase()}}), 'name'));\n      if(resource.reject.indexOf('*') > -1) permission = false; // No clue why this would exist, but spec allows\n      if(rejects && rejects.length > 0) permission = false;\n  \n      return permission;\n    },\n  \n    /**\n     * Check Action Permission\n     *\n     * Lookup if a user is in a group that allows them to perform a given action\n     *\n     * @param {string} a - The action string to be parsed\n     * @param {object} u - User object to override late user values from init promise\n     *\n     * @returns {boolean}\n     */\n    action: (a, u=null) => {\n      let permission = false;\n      let action;\n      \n      if(u) user = u;\n      \n      try {\n        action = _.get(actions, a);\n        let allow = action.allow;\n        let reject = action.reject;\n      }\n      catch(e) {\n        console.log('Failed to find action: ', a, e);\n        return false;\n    \n      }\n      \n      // Check Allows first\n      let allows = _.intersection(action.allow, _.map(_.mapValues(user.groups, (r) => { return {name: r.name.toLowerCase()}}), 'name'));\n      if(action.allow.indexOf('*') > -1) permission = true;\n      if(allows && allows.length > 0) permission = true;\n  \n  \n      // Check Rejections\n      let rejects = _.intersection(action.reject, _.map(_.mapValues(user.groups, (r) => { return {name: r.name.toLowerCase()}}), 'name'));\n      if(action.reject.indexOf('*') > -1) permission = false; // No clue why this would exist, but spec allows\n      if(rejects && rejects.length > 0) permission = false;\n  \n      return permission;\n    },\n  \n    /**\n     * Is the user in a specified group\n     *\n     * @param {string} group - Group to be checked for membership\n     *\n     */\n    inGroup: (group) => {\n      return !(!_.find(user.groups, {name: group}));\n    },\n  \n    /**\n     * Inject user object to ACL\n     *\n     * @param {object} u - User object\n     */\n    injectUser: (u) => {\n      user = u;\n    }\n  }\n\n}]);","/**\n * Knowledgebase Utilities Factory\n *\n * Some basic functions for managing Knowledge utilities\n *\n */\napp.service('$kbUtils', ['_', (_) => {\n\n\n  return {\n    processReferences: (references) => {\n      let output = [];\n\n      if(references.ident) references = [references];\n      _.forEach(references, (r, k) => {\n        // Build Events Expression Object\n        let refs = {ors: [], ands: []};\n\n        // Split by OR first\n        if (r.events_expression.indexOf('|') > -1) {\n\n          // Take each or block and blow it into \"and\" groups\n          _.forEach(r.events_expression.split('|'), (orGroup, i) => {\n\n            // Are there any \"and\" operators?\n            if (orGroup.indexOf('&') > -1) {\n              // Explode!\n              refs.ors[i] = orGroup.split('&');\n            } else {\n              refs.ors[i] = [orGroup];\n            }\n\n          });\n\n        } else if (r.events_expression.indexOf('&') > -1) {\n          refs.ands = r.events_expression.split('&');\n        } else {\n          refs.ors[0] = [r.events_expression];\n        }\n\n        r.events_expression_expanded = refs;\n\n        if(typeof r.disease_list === 'string') r.disease_list = r.disease_list.split(';');\n        if(typeof r.context === 'string') r.context = r.context.split(';');\n\n        // Add to array\n        output.push(r);\n\n      });\n\n      return output;\n    }\n  }\n\n}]);\n","/*\n * Lodash Factory\n *\n * Allows lodash to be an injectable object into\n * angular modules\n *\n */\napp.factory('_', ['$window', ($window) => {\n    let lodash = $window._;    \n    delete window._;\n    return lodash;\n}]);\n",null,"/**\n * Knowledgebase Utilities Factory\n *\n * Some basic functions for managing Knowledge utilities\n *\n */\napp.service('$ticketBody', ['_', (_) => {\n  \n  \n  return {\n    processReferences: (references) => {\n      let output = [];\n      \n      if(references.ident) references = [references];\n      _.forEach(references, (r, k) => {\n        // Build Events Expression Object\n        let refs = {ors: [], ands: []};\n        \n        // Split by OR first\n        if (r.events_expression.indexOf('|') > -1) {\n          \n          // Take each or block and blow it into \"and\" groups\n          _.forEach(r.events_expression.split('|'), (orGroup, i) => {\n            \n            // Are there any \"and\" operators?\n            if (orGroup.indexOf('&') > -1) {\n              // Explode!\n              refs.ors[i] = orGroup.split('&');\n            } else {\n              refs.ors[i] = [orGroup];\n            }\n            \n          });\n          \n        } else if (r.events_expression.indexOf('&') > -1) {\n          refs.ands = r.events_expression.split('&');\n        } else {\n          refs.ors[0] = [r.events_expression];\n        }\n        \n        r.events_expression_expanded = refs;\n        \n        if(typeof r.disease_list === 'string') r.disease_list = r.disease_list.split(';');\n        if(typeof r.context === 'string') r.context = r.context.split(';');\n        \n        // Add to array\n        output.push(r);\n        \n      });\n      \n      return output;\n    }\n  }\n  \n}]);\n","app.factory('toastService', ['$mdToast', ($mdToast) => {\n  \n  \n  function serverError(errorMessage) {\n    \n    this.message = errorMessage;\n    \n    this.toastOpen = false;\n    \n    if(this.toastOpen) return;\n    \n    $mdToast.show({\n      templateUrl: 'views/toast.html',\n      locals: {\n        message: this.message\n      },\n      hideDelay: 0,\n      position: 'bottom left',\n      controller: ['$scope', '$mdToast', 'message', ($scope, $mdToast, message) => {\n        $scope.message = message;\n        \n        $scope.class_style = \"request-error\";\n        \n        this.toastOpen = true;\n        \n        $scope.closeToast = () => {\n          $mdToast.hide()\n            .then(() => {\n              this.toastOpen = false;\n            });\n        };\n      }]\n    })\n    \n  }\n  \n  return {\n    message: '',\n    serverError: serverError\n  }\n  \n}]);","/**\n * User Settings Service\n *\n * Basic functionality for tracking, getting & setting user settings.\n *\n */\napp.factory('$userSettings', ['_', '$q', 'api.user', function(_, $q, $user) {\n\n  let userSettings = {};\n\n  let $us =  {\n    init: () => {\n      userSettings = $user._me.settings;\n    },\n\n    /**\n     * Retrieve a setting value\n     *\n     * @param {string} setting - the key for the setting value\n     * @returns {*} - Returns the desired value or false if no key exists\n     */\n    get: (setting = undefined) => {\n      if (setting === undefined) return userSettings;\n      \n      if(userSettings === undefined) return {};\n      \n      return userSettings[setting];\n    },\n\n    /**\n     * Save a user setting\n     *\n     * @param {string} setting - Setting key\n     * @param {string} value - Setting value\n     *\n     * @returns {Promise} - Returns the $us.update() promise;\n     */\n    save: (setting, value) => {\n      if(userSettings === undefined) userSettings = {};\n      userSettings[setting] = value;\n      return $us.update();\n\n    },\n\n    /**\n     * Updates\n     *\n     * @returns {Promise} - Returns updated user object\n     */\n    update: () => {\n      let deferred = $q.defer();\n\n      let user = $user._me;\n      user.settings = userSettings; // Overwrite previous settings value\n      \n      $user.update(user).then(\n        (result) => {\n          $user._me = result;\n          deferred.resolve($user._me);\n        },\n        (err) => {\n          console.log('Failed to update user settings', err);\n        }\n      );\n\n      return deferred.promise;\n\n    }\n  };\n\n  return $us;\n\n}]);\n","app.directive('focusMe', function($timeout) {\n  return {\n    link: function(scope, element, attrs) {\n      scope.$watch(attrs.focusMe, function(value) {\n        if(value === true) {\n          $timeout(function() {\n            element[0].focus();\n            scope[attrs.focusMe] = false;\n          }, 100);\n        }\n      });\n    }\n  };\n});","app.directive(\"iprCnv\", ['$q', '_', ($q, _) => {\n\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      cnvs: '=cnvs',\n      pog: '=pog',\n      report: '=report'\n    },\n    templateUrl: 'ipr-cnv/ipr-cnv.html',\n    link: (scope, element, attr) => {\n\n      scope.copyFilter = (copyChange) => {\n        return copyChange.match(/(((\\+|\\-)?)[0-9]{1,2})/g)[0];\n      }\n\n    } // end link\n  } // end return\n\n}]);\n","app.directive(\"iprCopypaste\", ['$q', '_', '$timeout', '$mdToast', ($q, _, $timeout, $mdToast) => {\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      text: '=text',\n    },\n    templateUrl: 'ipr-copypaste/ipr-copypaste.html',\n    link: (scope, element, attr) => {\n\n      scope.changeCopyTooltip = () => {\n        scope.copyTooltip = 'Copied!';\n        $timeout(()=> {\n          scope.copyTooltip = \"Copy to clipboard\";\n        },3000);\n        $mdToast.show($mdToast.simple().textContent('Copied to clipboard!'));\n      };\n\n    } // end link\n  } // end return\n\n}]);\n","app.directive(\"iprDataViewer\", ['$q', '$parse', '$timeout', '$mdDialog', '_', ($q, $parse, $timeout, $mdDialog, _) => {\n\n  return {\n    restrict: 'A',\n    scope: {\n      data: '=iprDataViewer',\n      hidden: '=iprHidden'\n    },\n    transclude: true,\n    template: '<span ng-click=\"openDialog()\" ng-transclude style=\"margin: 0 3px;\"></span>',\n    link: (scope, element, attr) => {\n\n      scope.openDialog = () =>{\n        $mdDialog.show({\n          controller: 'controller.iprDataViewer',\n          clickOutsideToClose: true,\n          locals: {\n            data: scope.data,\n            hidden: scope.hidden\n          },\n          templateUrl: 'ipr-dataViewer/ipr-dataViewer.html'\n        });\n      };\n    },\n  } // end return\n\n}]);\n\n// Dialog Controller\napp.controller(\"controller.iprDataViewer\", ['$q', '_', '$scope', '$mdDialog', 'data', 'hidden', ($q, _, $scope, $mdDialog, data, hidden) => {\n\n  // Ignored columns\n  let ignored = _.merge(['ident', 'id', 'pog_id'], hidden);\n\n  $scope.data = {};\n\n  _.forEach(angular.copy(data), (v, k) => {\n    if(ignored.indexOf(k) === -1) $scope.data[k] = v;\n  });\n\n  $scope.cancel = () => {\n    $mdDialog.cancel();\n  }\n\n}]);","app.directive(\"iprDiscussionEntry\", ['$q', '_', '$mdToast', 'api.presentation', ($q, _, $mdToast, $presentation) => {\n  \n  return {\n    restrict: 'E',\n    scope: {\n      patient: '=patient',\n      report: '=report',\n      entry: '=entry',\n      user: '=user'\n    },\n    templateUrl: 'ipr-discussion-entry/ipr-discussion-entry.html',\n    link: ($scope, element, attr) => {\n    \n      $scope.editing = false; // Editing mode\n      $scope.entryCache = null; // Editing Cache\n      $scope.removed = false; // Entry removed\n      \n      // Canceling edit / restoring previous state\n      $scope.cancelEdit = () => {\n        $scope.entry.body = $scope.entryCache;\n        $scope.entryCache = null;\n        $scope.editing = false;\n      };\n      \n      // Enable editing mode\n      $scope.edit = () => {\n        $scope.entryCache = angular.copy($scope.entry.body);\n        $scope.editing = true;\n      };\n      \n      // Trigger save\n      $scope.save = (f) => {\n        \n        $presentation.discussion.update($scope.patient.POGID, $scope.report.ident, $scope.entry.ident, {body: $scope.entry.body})\n          .then((result) => {\n            $scope.entry = result;\n            $scope.editing = false;\n            $scope.entryCache = null;\n          })\n          .catch((e) => {\n            $mdToast.showSimple('Unable to save the updated entry');\n          });\n        \n      };\n      \n      // Remove entry\n      $scope.remove = () => {\n      \n        $presentation.discussion.remove($scope.patient.POGID, $scope.report.ident, $scope.entry.ident)\n          .then((result) => {\n            $scope.removed = true;\n            $scope.entry.body = null;\n            $scope.editing = false;\n          })\n          .catch((e) => {\n            $scope.editing = false;\n          })\n      \n      }\n    \n    },\n  } // end return\n  \n}]);\n","app.directive(\"iprGeneViewer\", ['$q', '$parse', '$timeout', '$mdDialog', '_', ($q, $parse, $timeout, $mdDialog, _) => {\n  \n  return {\n    restrict: 'E',\n    scope: {\n      pog: '=pog',\n      report: '=report',\n      gene: '=gene'\n    },\n    transclude: true,\n    template: '<span ng-click=\"openDialog()\" ng-transclude style=\"margin: 0 3px;\" title=\"Open Gene Viewer\"></span>',\n    link: (scope, element, attr) => {\n      \n      scope.openDialog = () =>{\n        $mdDialog.show({\n          controller: 'controller.iprGeneViewer',\n          clickOutsideToClose: true,\n          locals: {\n            report: scope.report,\n            gene: scope.gene,\n            pog: scope.pog\n          },\n          templateUrl: 'ipr-gene-viewer/ipr-gene-viewer.dialog.html'\n        });\n      };\n    },\n  } // end return\n  \n}]);\n\n// Dialog Controller\napp.controller(\"controller.iprGeneViewer\", ['$q', '_', '$scope', '$mdDialog', 'api.geneViewer', 'report', 'pog', 'gene', ($q, _, $scope, $mdDialog, $gv, report, pog, gene) => {\n  \n  $scope.loading = true;\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.gene = gene;\n  $scope.samples = [];\n  $scope.alterations = {therapeutic: {}, prognostic: {}, diagnostic: {}, biological: {}, unknown: {}};\n  \n  \n  // Group Entries by Type\n  let groupEntries = (alterations) => {\n    // Process the entries for grouping\n    alterations.forEach((row) => {\n      \n      // Add to samples if not present\n      if($scope.samples.indexOf(row.sample) === -1) $scope.samples.push(row.sample);\n      \n      // Grouping\n      if(!(row.alterationType in $scope.alterations)) $scope.alterations[row.alterationType] = {};\n      \n      \n      // Check if it exists already?\n      if(!(row.gene+'-'+row.variant in $scope.alterations[row.alterationType])) {\n        row.children = [];\n        return $scope.alterations[row.alterationType][row.gene+'-'+row.variant] = row;\n      }\n      \n      // Categorical entry already exists\n      if(row.gene+'-'+row.variant in $scope.alterations[row.alterationType]) {\n        return $scope.alterations[row.alterationType][row.gene+'-'+row.variant]\n          .children[$scope.alterations[row.alterationType][row.gene+'-'+row.variant].children.length] = row;\n      }\n      \n    });\n    \n    _.forEach($scope.alterations, (values, k) => {\n      $scope.alterations[k] = _.values(values);\n      //console.log('Iteree: ', k, values, _.values(values));\n    });\n    \n  };\n  \n  $gv.get(pog.POGID, report.ident, gene).then(\n    (result) => {\n      $scope.data = result;\n      $scope.loading = false;\n      \n      // Group KB match Entries\n      groupEntries($scope.data.kbMatches);\n      \n    }\n  );\n  \n  \n  $scope.cancel = () => {\n    $mdDialog.cancel();\n  }\n  \n}]);","app.directive(\"iprGenomicAlteration\", ['$q', '_', '$mdDialog', '$mdToast', ($q, _, $mdDialog, $mdToast) => {\n  \n  \n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      samples: '=samples',\n      gene: '=gene',\n      pog: '=pog',\n      trigger: '=',\n      report: '=report'\n    },\n    templateUrl: 'ipr-genomicAlteration/ipr-genomicAlteration.html',\n    link: (scope, element, attr) => {\n\n      // Filter reference type\n      scope.refType = (ref) => {\n        if(ref.match(/^[0-9]{8}\\#/)) {\n          return 'pmid';\n        }\n        if(ref.match(/^(?:http(?:s)?:\\/\\/)?(?:[^\\.]+\\.)?[A-z0-9]*\\.[A-z]{2,7}/)) {\n          return 'link';\n        } \n        return 'text';\n      };\n      \n      // Prepend a link with http:// if necessary\n      scope.prependLink = (link) => {\n        return (link.indexOf('http://') == -1) ? 'http://' + link : link;\n      };\n      \n      // Clean up PMIDs\n      scope.cleanPMID = (pmid) => {\n        return pmid.match(/^[0-9]{8}/)[0];\n      };\n      \n      // Update entry icon clicked\n      scope.updateRow = ($event, row) => {\n        \n        $mdDialog.show({\n          targetEvent: $event,\n          templateUrl: 'dashboard/report/genomic/detailedGenomicAnalysis/alterations/alterations.edit.html',\n          clickOutToClose: false,\n          locals: {\n            pog: scope.pog,\n            report: scope.report,\n            gene: row,\n            samples: scope.samples,\n            rowEvent: 'update',\n          },\n          controller: 'controller.dashboard.reports.genomic.detailedGenomicAnalysis.alterations.edit' // End controller\n         \n        }).then((outcome) => {\n          if(outcome) $mdToast.show($mdToast.simple().textContent(outcome));\n            scope.trigger(true);\n          },\n          (error) => {\n            $mdToast.show($mdToast.simple().textContent('No changes have been made'));\n          }\n        );\n      };\n      \n      // Create new entry...\n      scope.createRow = ($event, init) => {\n\n        let gene = angular.copy(init);\n        delete gene.reference;\n        delete gene.evidence;\n        delete gene.therapeuticContext;\n        delete gene.effect;\n        delete gene.association;\n        delete gene.disease;\n\n        $mdDialog.show({\n          targetEvent: $event,\n          templateUrl: 'dashboard/report/genomic/detailedGenomicAnalysis/alterations/alterations.edit.html',\n          clickOutToClose: false,\n          locals: {\n            pog: scope.pog,\n            gene: gene,\n            samples: scope.samples,\n            rowEvent: 'create'\n          },\n          controller: 'controller.dashboard.reports.genomic.detailedGenomicAnalysis.alterations.edit' // End controller\n        });\n      }\n      \n    } // end link\n  }; // end return\n  \n}]);\n","app.directive(\"iprMutationSignature\", ['$q', '_', '$mdDialog', '$mdToast', ($q, _, $mdDialog, $mdToast) => {\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      pog: '=pog',\n      report: '=report',\n      mutationSummary: '=mutationSummary',\n      mutationSignature: '=mutationSignature',\n      mode: '=?mode' // Either normal or editor\n    },\n    templateUrl: 'ipr-mutation-landscape/ipr-mutation-landscape.html',\n    link: (scope, element, attr) => {\n\n      scope.nnlsNormal = false;\n      scope.mutationSort = {col: \"signature\", order: true};\n      scope.selectedSigs = [];\n      scope.modifier = {};\n\n      if(!scope.mode) scope.mode = 'normal';\n\n      let ms = scope.mutationSummary;\n      let mutationSignature = angular.copy(scope.mutationSignature);\n\n      // If mode is pick, preload selected sigs:\n      if(scope.mode === 'pick') {\n        _.forEach(ms.mutationSignature, (v) => {\n          scope.selectedSigs.push(v.ident);\n          scope.modifier[v.ident] = v.modifier;\n        });\n      }\n\n      // For pick mode, adds to selected Sigs\n      scope.addToSelection = (signature) => {\n\n        // Check if it's currently selected\n        let seek = (scope.selectedSigs.indexOf(signature.ident) > -1);\n\n        // Remove from Selected Signatures\n        if(seek) _.pull(scope.selectedSigs, signature.ident);\n\n        // Add to selected Signatures\n        if(!seek) scope.selectedSigs.push(signature.ident);\n\n        scope.updateSelectedSigs();\n\n      };\n\n      // Rebuild Selected Signatures\n      scope.updateSelectedSigs = () => {\n\n        scope.mutationSummary.mutationSignature = [];\n\n        // Rebuild!\n        _.forEach(scope.selectedSigs, (s) => {\n\n          let seek = _.find(mutationSignature, {ident: s});\n\n          console.log('Found a selected entry', seek);\n\n          // Found a seek\n          if(seek) {\n            // Check for modifier\n            if(scope.modifier[seek.ident]) seek.modifier = scope.modifier[seek.ident];\n            scope.mutationSummary.mutationSignature.push(seek);\n          }\n\n        });\n\n      };\n\n      scope.sortMutations = (col) => {\n        // Is this a valid column?\n        if(['signature', 'nnls', 'pearson'].indexOf(col) === -1) return false;\n\n        if(scope.mutationSort.col === col) {\n          scope.mutationSort.order = !scope.mutationSort.order;\n\n        } else {\n          scope.mutationSort.col = col;\n          scope.mutationSort.order = true;\n        }\n\n        processSignature(angular.copy(mutationSignature));\n      };\n\n      // Check if the current mutation is a selected one.\n      scope.isSelectedMutation = (ident) => {\n        let found = _.find(scope.mutationSummary.mutationSignature, (m) => {\n          return m.ident === ident;\n        });\n        return found !== undefined;\n      };\n\n      scope.toggleNnlsNormalize = () => {\n        scope.nnlsNormal = !scope.nnlsNormal;\n        processSignature(angular.copy(mutationSignature));\n      };\n\n      let processSignature = (sigs) => {\n        scope.mutationSignature = [];\n        let nnlsMax = (scope.nnlsNormal) ? 0 : 1;\n\n        _.forEach(sigs, (r, k) => {\n          if(r.nnls > nnlsMax) nnlsMax = r.nnls;\n        });\n\n        _.forEach(sigs, (r, k) => {\n\n          // Round to 3 sigfigs\n          r.pearson = r.pearson.toFixed(3);\n          r.nnls = r.nnls.toFixed(3);\n\n          // Produced rounded numbers\n          r.pearsonColour = Math.round((((r.pearson < 0) ? 0 : r.pearson)  * 100) / 5) * 5;\n          r.nnlsColour = Math.round(((r.nnls/nnlsMax) * 100) / 5) * 5;\n\n          scope.mutationSignature.push(r);\n\n        });\n        scope.mutationSignature = _.sortBy(scope.mutationSignature, scope.mutationSort.col);\n        if(!scope.mutationSort.order) scope.mutationSignature.reverse();``\n      };\n\n      processSignature(angular.copy(mutationSignature));\n\n    } // end link\n  }; // end return\n\n}]);\n","app.directive(\"iprOutlier\", ['$q', '_', ($q, _) => {\n\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      outliers: '=outliers',\n      pog: '=pog',\n      report: '=report',\n      type: '=type',\n      gv: '=?gv'\n    },\n    templateUrl: 'ipr-outlier/ipr-outlier.html',\n    link: (scope, element, attr) => {\n      \n      if(!scope.gv) scope.gv = true;\n\n    } // end link\n  } // end return\n\n}]);\n","app.directive(\"iprPaginate\", ['$q', '_', 'api.pog_analysis_report', '$timeout', ($q, _, $report, $timeout) => {\n  \n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      offset: '=offset',\n      limit: '=limit',\n      total: '=total',\n      refresh: '=refresh'\n    },\n    templateUrl: 'ipr-paginate/ipr-paginate.html',\n    link: (scope, element, attr) => {\n      \n      \n      scope.$watch('limit', (newVal, oldVal) => {\n        if(newVal === oldVal) return;\n        scope.offset = 0;\n        $timeout(() => {\n          scope.refresh();\n        }, 100);\n      });\n      \n      scope.prevPage = () => {\n        scope.offset -= scope.limit;\n        $timeout(() => {\n          scope.refresh();\n        }, 100);\n      };\n      \n      scope.nextPage = () => {\n        scope.offset += scope.limit;\n        $timeout(() => {\n          scope.refresh();\n        }, 100);\n      };\n      \n    } // end link\n  }; // end return\n  \n}]);\n","app.directive(\"iprPogRole\", ['$q', '_', '$mdDialog', '$mdToast', 'indefiniteArticleFilter', ($q, _, $mdDialog, $mdToast, indefiniteArticleFilter) => {\n\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      role: '=role',\n      removeEntry: '=remove'\n    },\n    templateUrl: 'ipr-pog-role/ipr-pog-role.html',\n    link: (scope, element, attr) => {\n\n      scope.remove = ($event) => {\n\n        let confirm = $mdDialog.confirm()\n          .title('Are you sure you want to remove this user?')\n          .textContent('Are you sure you want to remove '+scope.role.user.firstName + ' ' + scope.role.user.lastName + ' as ' + indefiniteArticleFilter(scope.role.role) + ' ' + scope.role.role + '?')\n          .ariaLabel('Confirm remove user')\n          .targetEvent($event)\n          .ok('Confirm')\n          .cancel('Cancel');\n\n          $mdDialog.show(confirm).then(\n            () => {\n              let role = angular.copy(scope.role);\n              $mdToast.show($mdToast.simple().textContent(role.user.firstName + ' ' + role.user.lastName + ' has been removed as ' + indefiniteArticleFilter(scope.role.role) + ' ' + role.role + '.'));\n              // Remove Entry\n              scope.removeEntry(scope.role);\n            },\n            () => {\n              $mdToast.show($mdToast.simple().textContent('No changes were made.'));\n            }\n          );\n      }\n\n    } // end link\n  }; // end return\n\n}]);\n","app.directive(\"iprProgressor\", ['$q', '_', ($q, _) => {\n\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      stages: '=iprStages',\n      active: '=iprActiveStage'\n    },\n    templateUrl: 'ipr-progressor/ipr-progressor.html',\n    link: (scope, element, attr) => {\n\n      scope.changeStage = (stage) => {\n        if(stage < scope.active) scope.active = stage;\n      }\n\n    } // end link\n  }; // end return\n\n}]);\n","app.directive(\"iprRandomQuote\", ['$q', '_', ($q, _) => {\n\n  let quotes = [\n    '\"I dream of a better tomorrow, where chickens can cross the road and not be questioned about their motives.\"',\n    '\"I changed all my passwords to \\'incorrect\\'. So my computer just tells me when I forgot.',\n    '\"No I didn\\'t trip, the floor looked like it needed a hug.\"',\n    '\"Whatever you do in life give 100%.....unless you\\'re giving blood.\"',\n    '\"One time at the beach this guy was swimming in the ocean yelling Help! Shark! Help! I just laughed, I knew that shark wasn\\'t going to help him.',\n    '\"Procrastinator? No, I just wait until the last second to do my work because I will be older, therefore wiser.\"',\n    '\"I do 5 sit-ups every morning. May not sound like much, but there is only so many times you can hit the snooze button...',\n    '\"I feel like getting something done today, so I\\'m just going to sit here until the feeling passes.\"',\n    '\"I was complimented on my driving. Someone left a note on my windshield that said, \\'Parking Fine.\\'',\n    '\"I just dropped my laptop off the boat.....It\\'s a Dell, rolling in the deep.\"',\n    '\"Why do banks lock their pens to the desk? If I\\'m trusting you with my money, don\\'t you think you can trust me with a pen?\"',\n    '\"I really like ceilings......I guess you could call me a ceiling fan.\"',\n    'Grammar is somewhat important. Commas do save lives for instance: \"Let\\'s eat grandpa.\" \"Lets eat, grandpa.\"',\n    '\"I was planning to do something today, but I haven\\'t finished doing nothing from yesterday.\"',\n    '\"Light travels faster than sound. This is why some people appear bright, until you hear them talk.\"',\n    '\"The dictionary is the only place where success comes before work.\"',\n    '\"Better late then never, but never late is better.\"',\n    '\"I wish real life was like cartoons. I could wear the same outfit and nobody would care.\"',\n    '\"I haven\\'t seen any statuses about Ninjas lately....well played Ninjas.\"',\n    'Did you hear about the restaurant on the moon? Great food, no atmosphere.',\n    'What do you call a fake noodle? An Impasta.',\n    'How many apples grow on a tree? All of them.',\n    'Want to hear a joke about paper? Never mind it\\'s tearable.',\n    'I just watched a program about beavers. It was the best dam program I\\'ve ever seen.',\n    'Why did the coffee file a police report? It got mugged.',\n    'How does a penguin build it\\'s house? Igloos it together.',\n    'Why did the scarecrow win an award? Because he was outstanding in his field.',\n    'Why don\\'t skeletons ever go trick or treating? Because they have no body to go with.',\n    'What do you call an elephant that doesn\\'t matter? An irrelephant',\n    'Want to hear a joke about construction? I\\'m still working on it.',\n    'Why couldn\\'t the bicycle stand up by itself? It was two tired.',\n    'What did the grape do when he got stepped on? He let out a little wine.',\n    'I wouldn\\'t buy anything with velcro. It\\'s a total rip-off.',\n    'The shovel was a ground-breaking invention.',\n    '5/4 of people admit that they’re bad with fractions.',\n    'Two goldfish are in a tank. One says to the other, \"do you know how to drive this thing?\"',\n    'The rotation of earth really makes my day.',\n    'I thought about going on an all-almond diet. But that\\'s just nuts',\n    'Why do you never see elephants hiding in trees? Because they\\'re so good at it.',\n    'I used to work in a shoe recycling shop. It was sole destroying.',\n    'I don’t play soccer because I enjoy the sport. I’m just doing it for kicks.',\n    'This graveyard looks overcrowded. People must be dying to get in there.',\n    'What\\'s brown and sticky? A stick.',\n    'The rotation of earth really makes my day.',\n    'What do you call a man with a rubber toe? Roberto.',\n    'The shovel was a ground-breaking invention',\n    'I wouldn\\'t buy anything with velcro. It\\'s a total rip-off.',\n    'Why couldn\\'t the bicycle stand up by itself? It was two tired.',\n    'What do you call an elephant that doesn\\'t matter? An irrelephant',\n    'Why don\\'t skeletons ever go trick or treating? Because they have no body to go with.',\n    'Why did the scarecrow win an award? Because he was outstanding in his field.',\n    'Did you hear about the restaurant on the moon? Great food, no atmosphere.'\n  ];\n\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    templateUrl: 'ipr-random-quote/ipr-random-quote.html',\n    link: (scope, element, attr) => {\n\n      scope.quote = quotes[_.random(0,quotes.length)];\n\n    } // end link\n  } // end return\n\n}]);\n","app.directive(\"iprRecentReports\", ['$q', '_', '$rootScope', '$state', '$interval', '$mdToast', 'api.recentReports', ($q, _, $rootScope, $state, $interval, $mdToast, $recent) => {\n  \n  return {\n    restrict: 'E',\n    transclude: false,\n    templateUrl: 'ipr-recent-reports/ipr-recent-reports.html',\n    link: (scope, element, attr) => {\n  \n      // Local reports collection\n      scope.reports = [];\n  \n      $rootScope.$on('$stateChangeSuccess', (e, toState, toParams, fromState, fromParams) => {\n    \n        if(toState.name.match(/^(dashboard\\.reports\\.pog\\.report)\\.(genomic|probe)\\.([A-z0-9\\.]{2,})$/)) {\n          findOrCreate(toParams.analysis_report, toState.name);\n        }\n    \n      });\n  \n      /**\n       * Remove the selected recent report entry\n       *\n       * @param {string} report - The ident string of the report to be removed\n       */\n      scope.remove = (i) => {\n        \n        $recent.remove(scope.reports[i].report.ident)\n          .then(() => {\n            scope.reports.splice(i,1);\n          })\n          .catch((err) => {\n            console.log(err);\n            $mdToast.showSimple('Failed to remove the recent report entry.');\n          });\n        \n      };\n  \n      scope.goTo = (i) => {\n        $state.go(scope.reports[i].state, {analysis_report: scope.reports[i].report.ident, POG: scope.reports[i].report.pog.POGID});\n        \n      };\n      \n      // Get all at startup\n      $recent.all()\n        .then((result) => {\n          scope.reports = result;\n        })\n        .catch((err) => {\n          $mdToast.showSimple('Failed to get list of recent reports.');\n        });\n      \n      /**\n       * Find or Create Report Entry\n       *\n       * @param {string} report - Report Ident string\n       * @param {string} state - Current state name\n       */\n      let findOrCreate = (report, state) => {\n    \n        let index = _.findIndex(scope.reports, {report: {ident: report}});\n  \n        // Report not yet in try\n        if(index < 0) {\n          $recent.addOrUpdate(report, state)\n            .then((result) => {\n              scope.reports.push(result);\n            })\n            .catch((err) => {\n              $mdToast.showSimple('Failed to add report to recent list');\n            });\n        }\n    \n        // Report in tray, update!\n        if(index > -1) {\n          $recent.addOrUpdate(report, state)\n            .then((result) => {\n              scope.reports[index] = result;\n            })\n            .catch((err) => {\n              $mdToast.showSimple('Failed to add report to recent list');\n            });\n        }\n        \n      };\n      \n    } // end link\n  } // end return\n  \n}]);\n","app.directive(\"iprReportCard\", ['$q', '_', '$mdDialog', '$mdToast', '$state', ($q, _, $mdDialog, $mdToast, $state) => {\n\n\n  return {\n    restrict: 'EA',\n    transclude: false,\n    scope: {\n      report: '=report',\n      pog: '=pog'\n    },\n    templateUrl: 'ipr-report-card/ipr-report-card.html',\n    link: (scope, element, attr) => {\n\n      scope.goToReport = (report) => {\n        if(report.type === 'genomic') $state.go('dashboard.reports.pog.report.genomic.summary', {POG: scope.pog.POGID, analysis_report: report.ident});\n        if(report.type === 'probe') $state.go('dashboard.reports.pog.report.probe.summary', {POG: scope.pog.POGID, analysis_report: report.ident});\n      };\n\n\n    } // end link\n  }; // end return\n\n}]);\n","app.directive(\"iprReportListingCard\", ['$q', '_', '$mdDialog', '$mdToast', '$state', ($q, _, $mdDialog, $mdToast, $state) => {\n\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      report: '=report',\n      pog: '=pog',\n      state: '@state'\n    },\n    templateUrl: 'ipr-report-listing-card/ipr-report-listing-card.html',\n    link: (scope, element, attr) => {\n\n      let pog = scope.pog;\n\n      // Determine if probe/genomic available\n      scope.checkProbeGenomic = (pog, type) => {\n        return (scope.report.type === type);\n      };\n\n      // Get Tumour Content\n      scope.getTumourContent = (pog) => {\n        if(scope.report.type !== 'genomic') return \"N/A\";\n        return scope.report.tumourAnalysis.tumourContent;\n      };\n\n      // Get Ploidy Model Content\n      scope.getPloidy = (pog) => {\n        if(scope.report.type !== 'genomic') return \"N/A\";\n        return scope.report.tumourAnalysis.ploidy;\n      };\n\n      // Get Report\n      scope.getReport = (pog, type) => {\n        return (scope.report.type === type);\n      };\n\n      // Get Role\n      scope.getRoleUser = (pog, role, resp) => {\n        let user =  _.find(scope.report.users, {role: role});\n\n        if(!user) return null;\n\n        switch(resp) {\n          case 'name':\n            return user.user.firstName + ' ' + user.user.lastName;\n            break;\n          case 'username':\n            return user.user.username;\n            break;\n        }\n      };\n\n\n    } // end link\n  }; // end return\n\n}]);\n","app.directive(\"iprReportState\", ['$q', '_', ($q, _) => {\n\n  return {\n    restrict: 'EA',\n    transclude: false,\n    scope: {\n      state: '=state',\n    },\n    templateUrl: 'ipr-report-state/ipr-report-state.html',\n    link: (scope, element, attr) => {\n\n      let parse = (state) => {\n        if(state === 'nonproduction') return 'Non-Production/Test';\n        if(state === 'ready') return 'Ready for analysis';\n        if(state === 'presented') return 'Review/Presentation';\n        if(state === 'active') return 'Analysis underway';\n        if(state === 'archived') return 'Archived';\n        if(state === 'signedoff') return 'Signed-off';\n        if(state === 'reviewed') return 'Reviewed';\n        if(state === 'uploaded') return 'Uploaded';\n      };\n\n      scope.parsedState = parse(scope.state);\n\n\n    } // end link\n  }; // end return\n\n}]);\n","app.directive(\"iprReportTable\", ['$q', '_', 'api.pog_analysis_report', ($q, _, $report) => {\n  \n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      reports: '=reports',\n      clinician: '=clinician',\n      pagination: '=?pagination'\n    },\n    templateUrl: 'ipr-report-table/ipr-report-table.html',\n    link: (scope, element, attr) => {\n      \n      scope.paginate = {\n        limit: scope.pagination.limit,\n        offset: scope.pagination.offset,\n        total: scope.pagination.total\n      };\n      \n      \n      scope.filter = {\n        bound: false,\n        states: 'ready,active,presented',\n        project: 'POG',\n        search: null\n      };\n  \n      scope.loading = false;\n      \n      scope.clearSearch = () => {\n        scope.showSearch = false;\n        scope.focusSearch = false;\n        \n        scope.paginate.offset = 0;\n    \n        let filterCache = scope.filter.search;\n    \n        scope.filter.search = null;\n        if(filterCache !== undefined) scope.refreshReports();\n      };\n  \n      scope.displaySearch = () => {\n        scope.showSearch = true;\n        scope.focusSearch = true;\n      };\n      \n      \n      scope.prevPage = () => {\n        scope.paginate.offset -= scope.paginate.limit;\n        scope.refreshReports();\n      };\n      \n      scope.nextPage = () => {\n        scope.paginate.offset += scope.paginate.limit;\n        scope.refreshReports();\n      };\n      \n      \n      scope.search = () => {\n        scope.paginate.offset = 0;\n        scope.refreshReports();\n      };\n  \n      scope.readState = (s) => {\n        switch(s) {\n          case 'ready':\n            return 'Ready for Analysis';\n            break;\n      \n          case 'active':\n            return 'Analysis underway';\n            break;\n      \n          case 'presented':\n            return 'Presentation';\n            break;\n      \n          case 'archived':\n            return 'Archived';\n            break;\n      \n          default:\n            return 'N/A';\n            break;\n        }\n      };\n      \n      /**\n       * Call API and refresh reports\n       *\n       * Makes call to IPR API with filters and pagination\n       */\n      scope.refreshReports = () => {\n        \n        let opts = {};\n        \n        scope.loading = true;\n        \n        opts.states = scope.filter.states;\n        opts.project = scope.filter.project;\n        opts.paginated = true;\n        opts.offset = scope.paginate.offset;\n        opts.limit = scope.paginate.limit;\n        \n        \n        if(!scope.filter.bound) opts.all = true;\n        if(scope.filter.search) opts.searchText = scope.filter.search;\n        \n        if(scope.clinician) opts.states = 'presented,archived';\n        \n        $report.all(opts)\n          .then((result) => {\n            scope.paginate.total = result.total;\n            scope.reports = result.reports;\n            \n            scope.loading = false;\n          })\n          .catch((err) => {\n          \n          });\n        \n      }\n      \n    } // end link\n  }; // end return\n  \n}]);\n","app.directive(\"iprSectionHide\", ['$q', '_', ($q, _) => {\n  \n  return {\n    restrict: 'EA',\n    transclude: false,\n    scope: {\n      state: '=flipState',\n    },\n    templateUrl: 'ipr-section-hide/ipr-section-hide.html',\n    link: (scope, element, attr) => {\n    \n    } // end link\n  }; // end return\n  \n}]);\n","app.directive(\"iprSmallMutations\", ['$q', '_', '$mdDialog', ($q, _, $mdDialog) => {\n\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      mutations: '=mutations',\n      pog: '=pog',\n      report: '=report'\n    },\n    templateUrl: 'ipr-smallMutations/ipr-smallMutations.html',\n    link: (scope, element, attr) => {\n\n      scope.copyFilter = (copyChange) => {\n        return copyChange.match(/(((\\+|\\-)?)[0-9]{1,2})/g)[0];\n      };\n\n\n      scope.vardbVarLib = ($event, mutation) => {\n\n        let variant = {\n          chromosome: mutation.location.split(':')[0],\n          position: mutation.location.split(':')[1],\n          ref: mutation.refAlt.split('>')[0],\n          alt: mutation.refAlt.split('>')[1],\n        };\n\n        // Prepare mutation for VarDB Lookup=\n        $mdDialog.show({\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          locals: {\n            variant: variant,\n            mutation: mutation\n          },\n          templateUrl: 'ipr-smallMutations/vardb-libraries.html',\n          controller: ['scope', '$mdDialog', '$timeout', 'api.vardb', 'variant', 'mutation', ($scope, $mdDialog, $timeout, $vardb, variant, mutation) => {\n\n            $scope.libraries = [];\n            $scope.loading = true;\n            $scope.mutation = mutation;\n            $scope.step = 0;\n\n            // Find libraries with alternate base\n            $vardb.variantLibraries(variant.chromosome, variant.position, variant.ref, variant.alt).then(\n              (vardbLibs) => {\n                // Create response object\n                let response = {\n                  libraries: [],\n                  total: vardbLibs.total_pog_libraries\n                };\n\n                $scope.step = 1;\n                $timeout(() => { $scope.step = 2}, 1000);\n\n                // Get Library Meta Data\n                $vardb.libraryMeta(vardbLibs.libraries).then(\n                  (meta) => {\n                    response.libraries = meta;\n\n                    $scope.loading = false;\n                    $scope.libraries = response.libraries;\n\n                    console.log('Libraries', $scope.libraries);\n                    console.log('libraries', vardbLibs);\n\n\n                  },\n                  (err) => {\n                    console.log('Unable to get POG libraries', err);\n                  }\n                )\n\n              },\n              (err) => {\n                console.log('Unable to get libaries with variant', err);\n              }\n            );\n\n\n            $scope.cancel = () => {\n              $mdDialog.hide();\n            };\n\n          }]\n        });\n      };\n\n    } // end link\n  } // end return\n\n}]);\n","app.directive(\"iprSv\", ['$q', '_', '$mdDialog', '$mdToast', ($q, _, $mdDialog, $mdToast) => {\n\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      svs: '=svs',\n      pog: '=pog',\n      report: '=report'\n    },\n    templateUrl: 'ipr-sv/ipr-sv.html',\n    link: (scope, element, attr) => {\n\n      scope.svDetails = ($event, sv) => {\n\n        $mdDialog.show({\n          targetEvent: $event,\n          templateUrl: 'ipr-sv/ipr-sv.detail.html',\n          controller: ['$q', 'scope', ($q, $_scope) => {\n            $_scope.sv = sv;\n\n            // Close Modal\n            $_scope.cancel = () => {\n              $mdDialog.cancel();\n            };\n\n            // Extract Ensembl Name from String\n            $_scope.ensemblName = (input) => {\n              return _.first(input.match(/(ENS[A-z0-9]*)/));\n            };\n\n            // Create SVG DOM element from String\n            $_scope.svg = new DOMParser().parseFromString(sv.svg, 'application/xml');\n\n            let xmlSVG = $_scope.svg.getElementsByTagName('svg')[0];\n            xmlSVG.id=\"fusionDiagram\";\n\n\n            // Load in SVG after delay.\n            setTimeout(() => {\n              let svgImage = document.getElementById('svgImage');\n\n              svgImage.appendChild(\n                svgImage.ownerDocument.importNode($_scope.svg.documentElement, true)\n              );\n              let panzoom = svgPanZoom('#fusionDiagram', {\n                preventMouseEventsDefault: true,\n                enableControlIcons: true,\n              });\n              panzoom.resize();\n              panzoom.fit();\n              panzoom.center();\n            },500);\n\n          }],\n          clickOutToClose: false\n        });\n\n      }\n\n    } // end link\n  } // end return\n\n}]);\n","app.directive('iprTicketBody', ['$rootScope', function($rootScope) {\n  return {\n    link: function(scope, element, attrs) {\n      $rootScope.$on('insertText', function(e, val) {\n        let domElement = element[0];\n        \n        // Is there any text selected?\n        if (document.selection) {\n          domElement.focus();\n          let sel = document.selection.createRange();\n          sel.text = val;\n          domElement.focus();\n          \n        // Somewhere not selected, but in the middle\n        } else if (domElement.selectionStart || domElement.selectionStart === 0) {\n          \n          let startPos = domElement.selectionStart;\n          let endPos = domElement.selectionEnd;\n          let scrollTop = domElement.scrollTop;\n          \n          domElement.value = domElement.value.substring(0, startPos) + val + domElement.value.substring(endPos, domElement.value.length);\n          domElement.focus();\n          domElement.selectionStart = startPos + val.length;\n          domElement.selectionEnd = startPos + val.length;\n          domElement.scrollTop = scrollTop;\n          \n        } else {\n          // Add to end\n          domElement.value += val;\n          domElement.focus();\n        }\n        \n      });\n    }\n  }\n}]);","app.directive(\"iprTrackingCard\", ['$q', '_', '$mdDialog', '$mdToast', '$timeout', 'api.tracking.state', 'api.socket', ($q, _, $mdDialog, $mdToast, $timeout, $state, socket) => {\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      state: '=state',\n      noTasks: '=?noTasks'\n    },\n    templateUrl: 'ipr-tracking-card/ipr-tracking-card.html',\n    link: (scope, element, attr) => {\n\n      // Add state status to classList\n      element[0].classList.add(scope.state.status);\n\n      let pog = scope.pog = scope.state.analysis.pog;\n      let analysis = scope.analysis = scope.state.analysis;\n      let state = scope.state;\n      \n      // Sort Tasks by ordinal\n      scope.state.tasks = state.tasks =_.sortBy(scope.state.tasks, 'ordinal');\n      scope.showTasks = false;\n      scope.error = false; // Default error state\n      scope.priority = new Array(analysis.priority);\n      scope.disableTasks = (scope.noTasks !== undefined);\n\n      // Check if there are any failed tasks\n      let checkStates = () => {\n        scope.error = (_.find(scope.state.tasks, {status: 'failed'})) ? true : false;\n        scope.hold =  (_.find(scope.state.tasks, {status: 'hold'})) ? true : false;\n      };\n\n      // Listen for changes to any task in this state\n      socket.on('taskStatusChange', (task) => {\n        if(task.state.ident === scope.state.ident) {\n          checkStates();\n        }\n      });\n\n      // Mouse hover\n      scope.openUserWindow = (assignee) => {\n        assignee.mouseLeft = false;\n        $timeout(() => {\n          if(!assignee.mouseLeft) assignee.show = true;\n        }, 300)\n      };\n\n      scope.closeUserWindow = (assignee) => {\n        assignee.mouseLeft = true;\n\n        $timeout(() => {\n          if(!assignee.keepOpen) assignee.show = false;\n        }, 300)\n      };\n\n      scope.keepUserWindow = (assignee) => {\n        assignee.keepOpen = true;\n      };\n\n      scope.unKeepUserWindow = (assignee) => {\n        assignee.keepOpen=false;\n        assignee.show = false;\n      };\n\n      scope.getTaskStateCount = (state) => {\n        let count = 0;\n\n        _.forEach(scope.state.tasks, (t) => {\n          if(t.status === state) count++;\n        });\n\n        return count;\n      };\n\n      scope.getFirstOutcome = (task) => {\n        let first = \"\";\n        let k = 0;\n        _.forEach(task.outcome, (o, i) => {\n          if(k===0) first = o;\n          k++;\n        });\n        return first.value;\n      };\n\n      scope.getTasks = () => {\n        scope.showTasks = !scope.showTasks;\n      };\n\n      let checkTaskCompletion = () => {\n\n        let completeTasks = 0;\n\n        _.forEach(state.tasks, (task, i) => {\n          if(task.status === 'complete') completeTasks++;\n        });\n\n        if(completeTasks === state.tasks.length) {\n          // Add new state class\n          element[0].classList.remove(scope.state.status);\n          scope.state.status = 'complete';\n          // Add new state class\n          element[0].classList.add(scope.state.status);\n        }\n\n      };\n\n      scope.showTask = ($event, task) => {\n        $mdDialog.show({\n          targetEvent: $event,\n          escapeToClose: false,\n          locals: {\n            task: task,\n            state: state,\n            pog: pog\n          },\n          templateUrl: 'ipr-tracking-card/ipr-tracking-card.task.html',\n          controller: 'controller.ipr-tracking-card.task',\n          clickOutToClose: false\n        }).then(\n          (data) => {\n            // Update scope copy of task - Check for completeness\n            _.forEach(state.tasks, (task, i) => {\n              if(data.task.ident === task.ident) state.tasks[i] = data.task;\n            });\n\n            checkStates();\n            checkTaskCompletion();\n            // Propagate\n            scope.state = state;\n          },\n          (err) => {\n            console.log('Error closing err', err);\n          }\n        );\n      };\n\n\n      scope.showState = ($event) => {\n\n        $mdDialog.show({\n          targetEvent: $event,\n          escapeToClose: false,\n          locals: {\n            state: state,\n            pog: pog\n          },\n          templateUrl: 'ipr-tracking-card/ipr-tracking-card.state.html',\n          controller: 'controller.ipr-tracking-card.state',\n          clickOutToClose: false\n        }).then(\n          (data) => {\n            // Remove Previous state class\n            element[0].classList.remove(scope.state.status);\n\n            checkStates();\n            // Propagate\n            scope.state = data.state;\n            state = data.state;\n            scope.state.tasks = _.sortBy(data.state.tasks, 'ordinal');\n\n            // Add new state class\n            element[0].classList.add(scope.state.status);\n          },\n          (err) => {\n            console.log('Error closing err', err);\n          }\n        );\n      };\n\n      // Trigger State Check\n      checkStates();\n\n    } // end link\n\n  }; // end return\n\n}]);\n","app.controller('controller.ipr-tracking-card.state',\n['_', '$scope', '$q', '$mdDialog', '$mdToast', 'api.tracking.state', 'api.user', 'api.jira', 'pog', 'state',\n(_, $scope, $q, $mdDialog, $mdToast, $state, $user, $jira, pog, state) => {\n\n  $scope.pog = pog;\n  $scope.state = state;\n  $scope.states = [\n    'active',\n    'pending',\n    'complete',\n    'hold',\n    'failed',\n    'cancelled'\n  ];\n\n  $scope.cancel = () => {\n    $mdDialog.hide({state: $scope.state});\n  };\n\n  $scope.updateStatus = (status) => {\n\n    // Update the task's state\n    let updateState = angular.copy($scope.state);\n    updateState.status = status;\n\n    $state.update(state.ident, updateState).then(\n      (result) => {\n        $scope.state = result;\n      },\n      (err) => {\n        console.log('Failed to update task', err);\n      }\n    )\n  };\n\n  // Update State\n  $scope.updateState = (f) => {\n\n    // Update state settings\n    if($scope.assign.user !== null && $scope.assign.user.ident) $scope.state.assignedTo = $scope.assign.user.ident;\n\n    $state.update($scope.state.ident, $scope.state).then(\n      (result) => {\n        $scope.state = result;\n        $mdDialog.hide({state: $scope.state});\n      },\n      (err) => {\n        $mdToast.show($mdToast.simple().textContent('Unable to save state.'));\n        console.log(err);\n      }\n    )\n\n  };\n\n  // Search Users with auto complete\n  $scope.searchUsers = (searchText) => {\n    let deferred = $q.defer();\n\n    if(searchText.length === 0) return [];\n\n    $user.search(searchText).then(\n      (resp) => {\n        deferred.resolve(resp);\n      },\n      (err) => {\n        console.log(err);\n        deferred.reject();\n      }\n    );\n\n    return deferred.promise;\n  };\n\n}]);\n","app.controller('controller.ipr-tracking-card.task',\n['_', '$scope', '$q', '$mdDialog', '$mdToast', 'api.tracking.task', 'api.tracking.state', 'api.user', 'pog', 'state', 'task',\n(_, $scope, $q, $mdDialog, $mdToast, $task, $state, $user, pog, state, task) => {\n\n  $scope.pog = pog;\n  $scope.state = state;\n  $scope.task = task;\n  $scope.addCheckin = false;\n  $scope.assign = {user: null};\n  $scope.showAssignUser = false;\n\n  $scope.cancel = () => {\n    $mdDialog.hide({task: $scope.task, state: state});\n  };\n\n  $scope.toggleCheckIn = () => {\n    $scope.addCheckin = !$scope.addCheckin;\n  };\n\n  $scope.$watch('task.checkins', (newVal, oldVal) => {\n    if($scope.addCheckin) $scope.addCheckin = false;\n  });\n\n  $scope.updateStatus = (status) => {\n\n    // Update the task's state\n    let updateTask = angular.copy($scope.task);\n\n    updateTask.status = status;\n\n    $task.update(updateTask).then(\n      (result) => {\n        $scope.task = result;\n      },\n      (err) => {\n        console.log('Failed to update task', err);\n      }\n    )\n\n  };\n\n  $scope.removeCheckin = (checkin) => {\n\n    $task.revokeCheckin(task.ident, checkin.ident).then(\n      (result) => {\n        // Remove date stamp\n        $scope.task = task = result;\n      }\n    )\n\n  };\n\n  $scope.states = [\n    'pending',\n    'active',\n    'hold',\n    'complete',\n    'failed',\n    'cancelled'\n  ];\n\n  // Search Users with auto complete\n  $scope.searchUsers = (searchText) => {\n    let deferred = $q.defer();\n\n    if(searchText.length === 0) return [];\n\n    $user.search(searchText).then(\n      (resp) => {\n        deferred.resolve(resp);\n      },\n      (err) => {\n        console.log(err);\n        deferred.reject();\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  $scope.assignUser = () => {\n\n    $task.assignUser(task.ident, $scope.assign.user.ident).then(\n      (result) => {\n        $scope.task = task = result;\n        $scope.showAssignUser = false;\n      },\n      (err) => {\n        console.log('Failed to assign user', err);\n      }\n    )\n\n  }\n\n\n}]);\n","app.directive(\"iprTrackingCheckin\", ['$q', '_', '$mdDialog', '$mdToast', '$state', '$timeout', 'api.tracking.task', 'moment', ($q, _, $mdDialog, $mdToast, $state, $timeout, $task, moment) => {\n\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      state: '=state',\n      task: '=task',\n    },\n    templateUrl: 'ipr-tracking-checkin/ipr-tracking-checkin.html',\n    link: (scope, element, attr) => {\n\n      let task = scope.task;\n      let state = scope.state;\n\n      scope.type = task.outcomeType;\n\n      // Build response object\n      scope.outcome = {\n        type: task.outcomeType,\n        value: null\n      };\n\n      /** Submit Check-in **/\n      scope.checkin = () => {\n\n        // If date, reformat\n        if(scope.type === 'date') {\n          scope.outcome.value = moment(scope.outcome.value).toISOString();\n        }\n        \n        // Building check-in body\n        $task.checkInTaskIdent(task.ident, scope.outcome.value).then(\n          (result) => {\n            scope.task = result;\n            task = scope.task;\n          },\n          (err) => {\n            console.log('Failed to check-in', err);\n\n            let message = \"\";\n\n            message += \"Failed to perform checkin.\";\n\n            if(err.data.error && err.data.error.cause && err.data.error.cause.error && err.data.error.cause.error.message) {\n              message += \" Reason: \" + err.data.error.cause.error.message;\n            }\n\n            $mdToast.show($mdToast.simple().textContent(message));\n          }\n        )\n\n      }\n\n    } // end link\n  }; // end return\n\n}]);\n","app.directive(\"iprTumourContent\", ['$q', '_', ($q, _) => {\n  \n  // Return Directive Class\n  return {\n    restrict: 'E',\n    transclude: true,\n    scope: {},\n    templateUrl: 'ipr-tumourContent/ipr-tumourContent.html',\n    link: (scope, element, attr) => {      \n      // Define Scope Details\n      let colourCode = Math.round(((attr.tc == \"ND\") ? 200 : attr.tc) / 5) * 5;\n      \n      scope.tc = attr.tc;\n      element.addClass('tc-'+ colourCode);\n    },\n  }\n  \n}]);\n","/**\n * uiBreadcrumbs automatic breadcrumbs directive for AngularJS & Angular ui-router.\n *\n * https://github.com/michaelbromley/angularUtils/tree/master/src/directives/uiBreadcrumbs\n *\n * Copyright 2014 Michael Bromley <michael@michaelbromley.co.uk>\n */\n\napp.directive('uiBreadcrumbs', ['$interpolate', '$state', function($interpolate, $state) {\n  return {\n    restrict: 'E',\n    templateUrl: function(elem, attrs) {\n      return attrs.templateUrl || templateUrl;\n    },\n    scope: {\n      displaynameProperty: '@',\n      abstractProxyProperty: '@?'\n    },\n    link: function(scope) {\n\n      scope.dataProxy = scope.abstractProxyProperty.split('.')[1];\n\n      scope.breadcrumbs = [];\n      if ($state.$current.name !== '') {\n        updateBreadcrumbsArray();\n      }\n      scope.$on('$stateChangeSuccess', function() {\n        updateBreadcrumbsArray();\n      });\n\n      /**\n       * Start with the current state and traverse up the path to build the\n       * array of breadcrumbs that can be used in an ng-repeat in the template.\n       */\n      function updateBreadcrumbsArray() {\n        var workingState;\n        var displayName;\n        var breadcrumbs = [];\n        var currentState = $state.$current;\n\n        while(currentState && currentState.name !== '') {\n          workingState = getWorkingState(currentState);\n          if (workingState) {\n            displayName = getDisplayName(workingState);\n\n            if (displayName !== false && !stateAlreadyInBreadcrumbs(workingState, breadcrumbs)) {\n\n              let proxyState = workingState.data[scope.dataProxy];\n\n              // If the proxy state is a function, pass in $state and receive string back\n              if(workingState.data && workingState.data[scope.dataProxy] && typeof workingState.data[scope.dataProxy] === 'function') {\n                proxyState = workingState.data[scope.dataProxy]($state);\n              }\n\n              breadcrumbs.push({\n                displayName: displayName,\n                route: (workingState.data && workingState.data[scope.dataProxy]) ? proxyState : workingState.name\n              });\n            }\n          }\n          currentState = currentState.parent;\n        }\n        breadcrumbs.reverse();\n        scope.breadcrumbs = breadcrumbs;\n      }\n\n      /**\n       * Get the state to put in the breadcrumbs array, taking into account that if the current state is abstract,\n       * we need to either substitute it with the state named in the `scope.abstractProxyProperty` property, or\n       * set it to `false` which means this breadcrumb level will be skipped entirely.\n       * @param currentState\n       * @returns {*}\n       */\n      function getWorkingState(currentState) {\n        var proxyStateName;\n        var workingState = currentState;\n        if (currentState.abstract === true) {\n          if (typeof scope.abstractProxyProperty !== 'undefined') {\n            proxyStateName = getObjectValue(scope.abstractProxyProperty, currentState);\n            if (proxyStateName) {\n              workingState = angular.copy($state.get(proxyStateName));\n              if (workingState) {\n                workingState.locals = currentState.locals;\n              }\n            } else {\n              workingState = false;\n            }\n          } else {\n            workingState = false;\n          }\n        }\n        return workingState;\n      }\n\n      /**\n       * Resolve the displayName of the specified state. Take the property specified by the `displayname-property`\n       * attribute and look up the corresponding property on the state's config object. The specified string can be interpolated against any resolved\n       * properties on the state config object, by using the usual {{ }} syntax.\n       * @param currentState\n       * @returns {*}\n       */\n      function getDisplayName(currentState) {\n        var interpolationContext;\n        var propertyReference;\n        var displayName;\n\n        if (!scope.displaynameProperty) {\n          // if the displayname-property attribute was not specified, default to the state's name\n          return currentState.name;\n        }\n        propertyReference = getObjectValue(scope.displaynameProperty, currentState);\n\n        if (propertyReference === false) {\n          return false;\n        } else if (typeof propertyReference === 'undefined') {\n          return currentState.name;\n        } else {\n          // use the $interpolate service to handle any bindings in the propertyReference string.\n          interpolationContext =  (typeof currentState.locals !== 'undefined') ? currentState.locals.globals : currentState;\n          displayName = $interpolate(propertyReference)(interpolationContext);\n          return displayName;\n        }\n      }\n\n      /**\n       * Given a string of the type 'object.property.property', traverse the given context (eg the current $state object) and return the\n       * value found at that path.\n       *\n       * @param objectPath\n       * @param context\n       * @returns {*}\n       */\n      function getObjectValue(objectPath, context) {\n        var i;\n        var propertyArray = objectPath.split('.');\n        var propertyReference = context;\n\n        for (i = 0; i < propertyArray.length; i ++) {\n          if (angular.isDefined(propertyReference[propertyArray[i]])) {\n            propertyReference = propertyReference[propertyArray[i]];\n\n            if(typeof propertyReference === 'function') {\n              propertyReference = propertyReference($state);\n            }\n\n          } else {\n            // if the specified property was not found, default to the state's name\n            return undefined;\n          }\n        }\n        return propertyReference;\n      }\n\n      /**\n       * Check whether the current `state` has already appeared in the current breadcrumbs array. This check is necessary\n       * when using abstract states that might specify a proxy that is already there in the breadcrumbs.\n       * @param state\n       * @param breadcrumbs\n       * @returns {boolean}\n       */\n      function stateAlreadyInBreadcrumbs(state, breadcrumbs) {\n        var i;\n        var alreadyUsed = false;\n        for(i = 0; i < breadcrumbs.length; i++) {\n          if (breadcrumbs[i].route === state.name) {\n            alreadyUsed = true;\n          }\n        }\n        return alreadyUsed;\n      }\n    }\n  };\n}]);",null,"app.directive(\"iprPrintDiagram\", ['$q', '_', '$mdDialog', '$mdToast', ($q, _, $mdDialog, $mdToast) => {\n\n\n  return {\n    restrict: 'E',\n    transclude: false,\n    scope: {\n      sv: '=sv',\n      pog: '=pog',\n      report: '=report',\n    },\n    templateUrl: 'print/ipr-print-diagram/ipr-print-diagram.html',\n    link: (scope, element, attr) => {\n\n      let sv = scope.sv;\n\n      scope.frame = (frame) => {\n        if(frame === 'UNDET') return \"Not determined\";\n        if(frame === 'IN') return \"In frame\";\n        if(frame === 'OUT') return \"Out of frame\";\n      };\n\n      // Extract Ensembl Name from String\n      scope.ensemblName = (input) => {\n        return _.first(input.match(/(ENS[A-z0-9]*)/));\n      };\n\n      // Create SVG DOM element from String\n      scope.svg = new DOMParser().parseFromString(sv.svg, 'application/xml');\n\n      let xmlSVG = scope.svg.getElementsByTagName('svg')[0];\n      xmlSVG.id=\"fusionDiagram-\" + sv.ident;\n\n\n      // Load in SVG after delay.\n      setTimeout(() => {\n        let svgImage = document.getElementById(sv.ident);\n\n        svgImage.appendChild(\n          svgImage.ownerDocument.importNode(scope.svg.documentElement, true)\n        );\n        let panzoom = svgPanZoom(\"#fusionDiagram-\" + sv.ident, {\n          preventMouseEventsDefault: true,\n          enableControlIcons: true,\n        });\n        panzoom.resize();\n        panzoom.fit();\n        panzoom.center();\n        panzoom.disablePan();\n        panzoom.disableMouseWheelZoom();\n        panzoom.disableZoom();\n        panzoom.disableDblClickZoom();\n      },500);\n\n\n    } // end link\n  } // end return\n\n}]);\n","\"use strict\";\n/*\napp.config(['$httpProvider', ($httpProvider) => {\n\n  \n  // Configure interceptor for 403 responses from API\n  $httpProvider.interceptors.push(['$q', '$injector', '$window', ($q, $injector, $window) => {\n    \n    return {\n      // Build Error Response Handler\n      responseError: (responseError) => {\n\n        let $state = $injector.get('$state');\n        let $mdToast = $injector.get('$mdToast');\n        \n        // API Is not Available\n        if(responseError.status === -1) {\n          \n          $mdToast().show($mdToast.simple().textContent('Uh oh! A system error prevented the request from processing.'));\n          \n          return $q.reject(responseError);\n        }\n        \n        // Check if the response has a 403 error status\n        if(responseError.status === 403) {\n          \n          // Get Route details\n          let route = ($state.current && $state.current.name) ? $state.current.name : \"invalud_path\";\n          \n          // If the error happened on a public page, return the intercepted response.\n          if(route.split('.')[0] === 'public') return $q.reject(responseError);\n          \n          // Bad Token or not logged in\n          if(responseError.data.code == 'invalidAuthorizationToken') $state.go('public.login');\n          \n          // Otherwise, user is not permitted to perform this action, but is otherwise logged in\n          return $q.reject(responseError);\n        }\n\n        if(responseError.status >= 400) {\n          return $q.reject(responseError);\n        }\n        \n      } // end ResponseError\n    }; // end return\n    \n  }]);\n  \n}]);\n*/\n\napp.config(['$httpProvider', function($httpProvider) {\n  // Add Error Interceptors Wrapper\n  $httpProvider.interceptors.push('httpInterceptors');\n}]);\n\n// Create Interceptors Factory\napp.factory('httpInterceptors', httpInterceptors);\n\n\n/**\n * HTTP Interceptors handler wrapper\n *\n * @param {object} $rootScope - Root scope object\n * @param {object} $q -\n *\n * @returns {{responseError: (function(*=))}}\n */\nfunction httpInterceptors($rootScope, $q) {\n  /**\n   * Response Error response handler\n   *\n   * @param {object} response - $http response object\n   */\n  return {\n    responseError: (response) => {\n      \n      console.log('Error triggered', response);\n    \n      switch (response.status) {\n        case 500:\n          console.log('500 Error');\n          $rootScope.$broadcast('httpError', {message: 'An unexpected error has occurred. Please try again.'});\n          break;\n      \n        case 405:\n          console.log('405 error');\n          break;\n        case 403:\n          console.log('Access Denied error');\n          $rootScope.$broadcast('httpError', {message: 'You are not authorized to access the requested resource.'});\n          break;\n        case -1:\n          console.log('API Request failed', response);\n          $rootScope.$broadcast('httpError', {message: 'The API server was not able to process the request. See console for details'});\n          break;\n      }\n    \n      return $q.reject(response);\n    }\n  };\n  \n}\n\n// Inject dependencies into wrapper\nhttpInterceptors.$inject = [ '$rootScope', '$q'];","/* /src/config/application.js */\napp.run(($rootScope) => {\n  \n  \n  // On State Change, Show Spinner!\n  $rootScope.$on('$stateChangeStart', (event, toState, toParams, fromState, fromParams) => {\n    $rootScope.showLoader = true;\n  });\n  \n  // On State Change Success, Hide Spinner!\n  $rootScope.$on('$stateChangeSuccess', (event, toState, toParams, fromState, fromParams) => {\n    $rootScope.showLoader = false;\n\n    // If toState\n    if(toState.name === 'public.login') {\n      setTimeout(() => {\n        $rootScope.showLoader = false;\n      }, 200);\n    }\n\n  });\n\n  $rootScope.$on('$stateChangeError', (event, toState, toParams, fromState, fromParams) => {\n\n    console.log('State Change Error:', event, toState, toParams);\n    $rootScope.showLoader = false;\n\n  });\n\n  // Mount configuration\n  $rootScope.PROJECT = CONFIG.PROJECT;\n  $rootScope.CONFIG = CONFIG;\n\n});\n\napp.config(function($mdDateLocaleProvider) {\n  $mdDateLocaleProvider.formatDate = function(date) {\n    return date ? moment(date).format('YYYY-MM-DD') : '';\n  };\n});\n\n/*\napp.factory('httpLoadSpinner', ['$q', '$rootScope', '$injector', ($q, $rootScope, $injector) => {\n\n  return {\n    'request': (config) => {\n      $rootScope.showLoader = true;\n      //console.log(\"Request Made\", config);\n      return config || $q.when(config);\n    },\n    'requestError': (rejection) => {\n      console.log('Request Rejected');\n    },\n    'response': (resp) => {\n      $rootScope.showLoader = false;\n      //console.log('Successful request', resp);\n      return resp || $q.when($resp);\n    },\n    'responseError': (rejection) => {\n      return $q.reject(rejection);\n    }\n  }\n\n}]);\n\napp.config(function ($httpProvider) {\n  $httpProvider.interceptors.push('httpLoadSpinner');\n});\n*/",null,"app.config(['$locationProvider', '$urlRouterProvider', '$stateProvider', '$urlMatcherFactoryProvider', ($locationProvider, $urlRouterProvider, $stateProvider, $urlMatcherFactoryProvider) => {\n\t// Enable HTML5 mode for URL access\n\t$locationProvider.html5Mode(true);\n\n\t// Don't require a perfect URL match (trailing slashes, etc)\n\t$urlMatcherFactoryProvider.strictMode(false);\n\n\t// If no path could be found, send user to 404 error\n\t$urlRouterProvider.otherwise(($injector, $location) => {\n\t\t$injector.get('$state').go('error.404', null, {location: false});\n\t\treturn $location.path();\n\t});\n  \n  \n  \n  // Master State Provider\n\t// All states are defined and configured on this object\n\t$stateProvider\n\n\t\t// Default Public Entrance for Interactive-Pog-Report\n\t\t.state('public', {\n\t\t\tabstract: true,\n\t\t\ttemplateUrl: 'public/layout.html',\n      resolve: {\n\t\t\t  _: ['$q', 'api.session', '$state', ($q, $session, $state) => {\n\t\t\t    return $q((resolve, reject) => {\n         \n\t\t\t      if(!$session.getToken()) return resolve();\n\t\t\t      \n\t\t\t      $session.init().then(\n\t\t\t        (user) => {\n\t\t\t          if(user) $state.go('dashboard.reports.dashboard');\n\t\t\t          reject('Already logged in');\n              },\n              (err) => {\n\t\t\t          resolve();\n              }\n            )\n            \n          });\n          \n        }]\n      }\n\t\t})\n\n\t\t// Request access account for Interactive-Pog-Report\n\t\t.state('public.request', {\n\t\t\turl: '/request',\n\t\t\ttemplateUrl: 'public/request/request.html',\n\t\t\tcontroller: 'controller.public.request'\n\t\t})\n\n\t\t// Login to App\n\t\t.state('public.login', {\n\t\t\turl: '/login',\n\t\t\ttemplateUrl: 'public/login/login.html',\n\t\t\tcontroller: 'controller.public.login'\n\t\t})\n\n\t\t// Errors\n\t\t.state('error', {\n\t\t\tabstract: true,\n\t\t\turl: '/error',\n\t\t\ttemplateUrl: 'errors/error.html',\n\t\t})\n\n\t\t// 403 Error - Unauthorized Access\n\t\t.state('error.403', {\n\t\t\turl: '/403',\n\t\t\ttemplateUrl: 'errors/403.html'\n\t\t})\n\n\t\t// 404 Error - Resource Not Found\n\t\t.state('error.404', {\n\t\t\turl: '/404',\n\t\t\ttemplateUrl: 'errors/404.html'\n\t\t})\n\n\t\t// 500 Error - Server/API Error\n\t\t.state('error.500', {\n\t\t\turl: '/500',\n\t\t\ttemplateUrl: 'errors/500.html'\n\t\t})\n\n\n\t\t// Setup Dashboard state\n\t\t.state('dashboard', {\n\t\t\tabstract: true,\n\t\t\tviews: {\n\t\t\t\t\"@\": {\n\t\t\t\t\ttemplateUrl: 'dashboard/dashboard.html',\n\t\t\t\t\tcontroller: 'controller.dashboard'\n\t\t\t\t},\n\t\t\t\t\"toolbar@dashboard\": {\n\t\t\t\t\ttemplateUrl: 'dashboard/toolbar.html',\n\t\t\t\t\tcontroller: 'controller.dashboard.toolbar'\n\t\t\t\t},\n        \"adminbar@dashboard\": {\n\t\t\t\t  templateUrl: 'dashboard/adminbar/adminbar.html',\n          controller: 'controller.dashboard.adminbar'\n        }\n\t\t\t},\n      data: {\n\t\t\t  displayName: 'Dashboard',\n        breadcrumbProxy: 'dashboard.reports'\n      },\n\t\t\tresolve: {\n\t\t\t  user: ['$q', 'api.session', 'api.user', '$state', '$userSettings', 'api.socket', ($q, $session, $user, $state, $userSettings, socket) => {\n\t\t\t    return $q((resolve, reject) => {\n\t\t\t      // Attempt session initialization\n\t\t\t      $session.init()\n              .then($user.me)\n              .then((user) => {\n                // Session init'd, return user\n                $userSettings.init(); // Init settings\n        \n                resolve(user);\n              })\n              .catch((err) => {\n\t\t            // No session, go to login page\n\t\t            $state.go('public.login');\n\t\t            reject(err);\n\t            });\n\t\t      });\n\t\t    }],\n        isAdmin: ['$q', 'api.user', 'user', ($q, $user, user) => {\n\t\t\t    return $q((resolve, reject) => {\n\t\t\t      resolve($user.isAdmin());\n          });\n        }],\n\t\t    pogs: ['$q', 'api.pog', ($q, $pog) => {\n\t\t      return $q((resolve, reject) => {\n\t\t        $pog.all().then(\n\t\t          (pogs) => {\n\t\t            resolve(pogs);\n\t            },\n\t            (err) => {\n\t              reject(err);\n              }\n\t\t        );\n\n\t        });\n\t      }],\n        projects: ['api.project', ($project) => {\n\t\t\t    return $project.all();\n        }]\n\t\t  }\n\t\t})\n\n    .state('dashboard.home', {\n      url: '/',\n      templateUrl: 'dashboard/home/home.html',\n      controller: 'controller.dashboard.home',\n    })\n\n\t\t// Dashboard Overview/POG Listing\n\t\t.state('dashboard.reports', {\n\t\t  abstract: true,\n\t\t\turl: '/reports',\n      templateUrl: 'dashboard/reports/reports.html',\n      data: {\n        displayName: 'Reports',\n        breadcrumbProxy: 'dashboard.reports.dashboard'\n      },\n      resolve: {\n\t\t    permission: ['$q', '$acl', '$state', 'user', '$mdToast', ($q, $acl, $state, user, $mdToast) => {\n\t\t      return $q((resolve, reject) => {\n          \n\t\t        // Passing option user to avoid delay problem\n\t\t        if(!$acl.action('report.view', user)) {\n\t\t          $mdToast.showSimple('You are not allowed to view reports');\n\t\t          $state.go('dashboard.home');\n      \n              resolve(false);\n            } else {\n              resolve(true);\n            }\n\t\t        \n          });\n        }]\n      }\n\t\t})\n\n    .state('dashboard.reports.dashboard', {\n      url: '/dashboard',\n      templateUrl: 'dashboard/reports/dashboard/dashboard.html',\n      controller: 'controller.dashboard.reports.dashboard',\n      data: {\n        displayName: 'Listing',\n        breadcrumbProxy: ($state) => {\n          if($state.current.name.indexOf('report.probe') > -1) return 'dashboard.reports.probe';\n          if($state.current.name.indexOf('report.genomic') > -1) return 'dashboard.reports.genomic';\n          return 'dashboard.reports.dashboard';\n        }\n      },\n      resolve: {\n        reports: ['$q', 'permission', '$acl', 'api.pog_analysis_report', '$state', ($q, permission, $acl, $report, $state) => {\n          if($acl.inGroup('clinician')) return $state.go('dashboard.reports.genomic');\n          return $report.all({states: 'ready,active'});\n        }]\n      }\n    })\n\n    .state('dashboard.reports.genomic', {\n      url: '/genomic',\n      templateUrl: 'dashboard/reports/genomic/genomic.html',\n      controller: 'controller.dashboard.reports.genomic',\n      data: {\n        displayName: 'Genomic Reports'\n      },\n      resolve: {\n        reports: ['$q', 'permission', '$acl',  'api.pog_analysis_report', '$userSettings', '$state', 'user', ($q, permission, $acl, $report, $userSettings, $state, user) => {\n          let currentUser = $userSettings.get('genomicReportListCurrentUser');\n          let project = $userSettings.get('selectedProject') || undefined;\n          if($acl.inGroup('clinician')) return $state.go('dashboard.reports.clinician');\n          \n          if(currentUser === null || currentUser === undefined || currentUser === true) return $report.all({type: 'genomic', states: 'ready,active,presented', project: project});\n          if(currentUser === false) return $report.all({all:true, type: 'genomic', states: 'ready,active,presented', project: project});\n        }]\n      }\n    })\n    .state('dashboard.reports.probe', {\n      url: '/probe',\n      templateUrl: 'dashboard/reports/probe/probe.html',\n      controller: 'controller.dashboard.reports.probe',\n      data: {\n        displayName: 'Probe Reports'\n      },\n      resolve: {\n        reports: ['$q', 'api.pog_analysis_report', '$userSettings', 'user', ($q, $report, $userSettings) => {\n          let currentUser = $userSettings.get('probeReportListCurrentUser');\n          if(currentUser === null || currentUser === undefined || currentUser === true) return $report.all({type: 'probe', states: 'uploaded,signedoff'});\n          if(currentUser === false) return $report.all({all:true, type: 'probe', states: 'uploaded,signedoff'});\n        }]\n      }\n    })\n    \n    .state('dashboard.reports.clinician', {\n      url: '/clinician',\n      templateUrl: 'dashboard/reports/clinician/clinician.html',\n      controller: 'controller.dashboard.reports.clinician',\n      data: {\n        displayName: 'Clinician Reports'\n      },\n      resolve: {\n        reports: ['$q', 'api.pog_analysis_report', '$userSettings', 'user', ($q, $report, $userSettings, user) => {\n          let settings = {currentUser: $userSettings.get('genomicReportListCurrentUser')};\n          let opts = {\n            project: 'POG',\n            states: 'presented,archived',\n            paginated: true\n          };\n          \n          if(settings.currentUser === false) opts.all = true;\n          \n          return $report.all(opts);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog', {\n      data: {\n        displayName: '{{pog.POGID}}',\n        breadcrumbProxy: 'dashboard.reports.pog.report.listing'\n      },\n      url: '/'+CONFIG.PROJECT.NAME+'/{POG}',\n      controller: 'controller.dashboard.pog',\n      templateUrl: 'dashboard/pog/pog.html',\n      resolve: {\n        pog: ['_', '$q', '$stateParams', 'api.pog', 'user', (_, $q, $stateParams, $pog, user) => {\n          return $q((resolve, reject) => {\n            $pog.id($stateParams.POG).then(\n              (pog) => {\n                pog.myRoles = _.filter(pog.POGUsers, {user: {ident: user.ident}});\n                resolve(pog);\n              },\n              (err) => {\n                reject('Unable to load pog');\n              }\n            )\n          })\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report', {\n      abstract: true,\n      url: '/report',\n      data: {\n        displayName: \"Analysis Reports\",\n        breadcrumbProxy: 'dashboard.reports.pog.report.listing'\n      },\n\t\t\ttemplateUrl: 'dashboard/report/report.html',\n      resolve: {\n        reports: ['$q', '$stateParams', 'api.pog_analysis_report', ($q, $stateParams, $report) => {\n          return $report.pog($stateParams.POG).all();\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.listing', {\n      url: '/listing',\n      data: {\n        displayName: \"Analysis Reports\",\n      },\n\t\t\ttemplateUrl: 'dashboard/report/listing/listing.html',\n      controller: 'controller.dashboard.pog.report.listing',\n    })\n\n\n    /**\n     * Probing\n     *\n     */\n    .state('dashboard.reports.pog.report.probe', {\n      url: '/{analysis_report}/probe',\n      data: {\n        displayName: \"Probe\",\n        breadcrumbProxy: 'dashboard.reports.pog.report.probe.summary'\n      },\n      templateUrl: 'dashboard/report/probe/probe.html',\n      controller: 'controller.dashboard.report.probe',\n      resolve: {\n        report: ['$q', '$stateParams', 'api.pog_analysis_report', ($q, $stateParams, $report) => {\n          return $report.pog($stateParams.POG).get($stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.probe.summary', {\n      url: '/summary',\n      templateUrl: 'dashboard/report/probe/summary/summary.html',\n      controller: 'controller.dashboard.report.probe.summary',\n      data: {\n        displayName: \"Summary\"\n      },\n      resolve: {\n        testInformation: ['$q', '$stateParams', 'api.probe.testInformation', ($q, $stateParams, $ti) => {\n          return $ti.get($stateParams.POG, $stateParams.analysis_report);\n        }],\n        genomicEvents: ['$q', '$stateParams', 'api.summary.genomicEventsTherapeutic', ($q, $stateParams, $get) => {\n          return $get.all($stateParams.POG, $stateParams.analysis_report);\n        }],\n        signature: ['$q', '$stateParams', 'api.probe.signature', ($q, $stateParams, $signature) => {\n          return $signature.get($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.probe.detailedGenomicAnalysis', {\n      url: '/appendices',\n      data: {\n        displayName: \"Appendices\"\n      },\n      templateUrl: 'dashboard/report/probe/detailedGenomicAnalysis/detailedGenomicAnalysis.html',\n      controller: 'controller.dashboard.report.probe.detailedGenomicAnalysis',\n      resolve: {\n        alterations: ['$q', '$stateParams', 'api.probe.alterations', ($q, $stateParams, $alterations) => {\n          return $alterations.getAll($stateParams.POG, $stateParams.analysis_report);\n        }],\n        approvedThisCancer: ['$q', '$stateParams', 'api.probe.alterations', ($q, $stateParams, $alterations) => {\n          return $alterations.getType($stateParams.POG, $stateParams.analysis_report, 'thisCancer');\n        }],\n        approvedOtherCancer: ['$q', '$stateParams', 'api.probe.alterations', ($q, $stateParams, $alterations) => {\n          return $alterations.getType($stateParams.POG, $stateParams.analysis_report, 'otherCancer');\n        }],\n      }\n    })\n\n    .state('dashboard.reports.pog.report.probe.appendices', {\n      url: '/appendices',\n      data: {\n        displayName: \"Appendices\"\n      },\n      templateUrl: 'dashboard/report/probe/appendices/appendices.html',\n      controller: 'controller.dashboard.report.probe.appendices',\n      resolve: {\n        tcgaAcronyms: ['$q', '$stateParams', 'api.appendices', ($q, $stateParams, $appendices) => {\n          return $appendices.tcga($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.probe.meta', {\n      url: '/meta',\n      data: {\n        displayName: \"Report Meta Information\"\n      },\n      templateUrl: 'dashboard/report/probe/meta/meta.html',\n      controller: 'controller.dashboard.report.probe.meta',\n    })\n\n\n    /**\n     * Genomic\n     *\n     */\n    .state('dashboard.reports.pog.report.genomic', {\n      url: '/{analysis_report}/genomic',\n      data: {\n        displayName: \"Genomic\",\n        breadcrumbProxy: 'dashboard.reports.pog.report.genomic.summary'\n      },\n      templateUrl: 'dashboard/report/genomic/genomic.html',\n      controller: 'controller.dashboard.report.genomic',\n      resolve: {\n        report: ['$q', '$stateParams', 'api.pog_analysis_report', ($q, $stateParams, $report) => {\n          return $report.pog($stateParams.POG).get($stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.summary', {\n      url: '/summary',\n      templateUrl: 'dashboard/report/genomic/summary/summary.html',\n      controller: 'controller.dashboard.report.genomic.summary',\n      data: {\n        displayName: \"Summary\"\n      },\n      resolve: {\n        gai: ['$q', '$stateParams', 'api.summary.genomicAterationsIdentified', ($q, $stateParams, $gai) => {\n          return $gai.all($stateParams.POG, $stateParams.analysis_report);\n        }],\n        vc: ['$q', '$stateParams', 'api.summary.variantCounts', ($q, $stateParams, $vc) => {\n          return $vc.get($stateParams.POG, $stateParams.analysis_report);\n        }],\n        get: ['$q', '$stateParams', 'api.summary.genomicEventsTherapeutic', ($q, $stateParams, $get) => {\n          return $get.all($stateParams.POG, $stateParams.analysis_report);\n        }],\n        ms: ['$q', '$stateParams', 'api.summary.mutationSummary', ($q, $stateParams, $ms) => {\n          return $ms.get($stateParams.POG, $stateParams.analysis_report);\n        }],\n        pt: ['$q', '$stateParams', 'api.summary.probeTarget', ($q, $stateParams, $pt) => {\n          return $pt.all($stateParams.POG, $stateParams.analysis_report);\n        }],\n        mutationSignature: ['$q', '$stateParams', 'api.somaticMutations.mutationSignature', ($q, $stateParams, $mutationSignature) => {\n          return $mutationSignature.all($stateParams.POG, $stateParams.analysis_report);\n        }],\n        microbial: ['$q', '$stateParams', 'api.summary.microbial', ($q, $stateParams, $microbial) => {\n          return $microbial.get($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n\n    .state('dashboard.reports.pog.report.genomic.analystComments', {\n      url: '/analystComments',\n      data: {\n        displayName: \"Analyst Comments\"\n      },\n      templateUrl: 'dashboard/report/genomic/analystComments/analystComments.html',\n      controller: 'controller.dashboard.report.genomic.analystComments',\n      resolve: {\n        comments: ['$q', '$stateParams', 'api.summary.analystComments', ($q, $stateParams, $comments) => {\n          return $comments.get($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.pathwayAnalysis', {\n      url: '/pathwayAnalysis',\n      data: {\n        displayName: \"Pathway Analysis\"\n      },\n      templateUrl: 'dashboard/report/genomic/pathwayAnalysis/pathwayAnalysis.html',\n      controller: 'controller.dashboard.report.genomic.pathwayAnalysis',\n      resolve: {\n        pathway: ['$q', '$stateParams', 'api.summary.pathwayAnalysis', ($q, $stateParams, $pathway) => {\n          return $pathway.get($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.knowledgebase', {\n      url: '/knowledgebase',\n      data: {\n        displayName: \"Detailed Genomic Analysis\"\n      },\n      templateUrl: 'dashboard/report/genomic/knowledgebase/knowledgebase.html',\n      controller: 'controller.dashboard.report.genomic.knowledgebase',\n      resolve: {\n        alterations: ['$q', '$stateParams', 'api.detailedGenomicAnalysis.alterations', ($q, $stateParams, $APC) => {\n          return $APC.getAll($stateParams.POG, $stateParams.analysis_report);\n        }],\n        approvedThisCancer: ['$q', '$stateParams', 'api.detailedGenomicAnalysis.alterations', ($q, $stateParams, $APC) => {\n          return $APC.getType($stateParams.POG, $stateParams.analysis_report, 'thisCancer');\n        }],\n        approvedOtherCancer: ['$q', '$stateParams', 'api.detailedGenomicAnalysis.alterations', ($q, $stateParams, $APC) => {\n          return $APC.getType($stateParams.POG, $stateParams.analysis_report, 'otherCancer');\n        }],\n\t\t\t\ttargetedGenes: ['$q', '$stateParams', 'api.detailedGenomicAnalysis.targetedGenes', ($q, $stateParams, $tg) => {\n          return $tg.getAll($stateParams.POG, $stateParams.analysis_report);\n        }],\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.diseaseSpecificAnalysis', {\n      url: '/diseaseSpecificAnalysis',\n      data: {\n        displayName: \"Disease Specific Analysis\"\n      },\n      templateUrl: 'dashboard/report/genomic/diseaseSpecificAnalysis/diseaseSpecificAnalysis.html',\n      controller: 'controller.dashboard.report.genomic.diseaseSpecificAnalysis',\n      resolve: {\n        images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n          return $image.get($stateParams.POG, $stateParams.analysis_report, 'microbial.circos');\n        }],\n        subtypePlotImages: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n          return $image.subtypePlots($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.microbial', {\n      url: '/microbial',\n      data: {\n        displayName: \"Microbial\"\n      },\n      templateUrl: 'dashboard/report/genomic/microbial/microbial.html',\n      controller: 'controller.dashboard.report.genomic.microbial',\n      resolve: {\n        images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n          return $image.get($stateParams.POG, $stateParams.analysis_report, 'microbial.circos');\n        }]\n      }\n    })\n    \n    .state('dashboard.reports.pog.report.genomic.spearman', {\n      url: '/spearman',\n      data: {\n        displayName: \"Spearman Plot Analysis\"\n      },\n      templateUrl: 'dashboard/report/genomic/spearman/spearman.html',\n      controller: 'controller.dashboard.report.genomic.spearman',\n      resolve: {\n        images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n          return $image.get($stateParams.POG, $stateParams.analysis_report, 'expression.chart,expression.legend');\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.smallMutations', {\n      url: '/smallMutations',\n      data: {\n        displayName: \"Somatic Mutations\"\n      },\n      templateUrl: 'dashboard/report/genomic/smallMutations/smallMutations.html',\n      controller: 'controller.dashboard.report.genomic.smallMutations',\n      resolve: {\n        images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n          return $image.get($stateParams.POG, $stateParams.analysis_report, 'mutSignature.corPcors,mutSignature.snvsAllStrelka');\n        }],\n        mutationSummaryImages: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n          return $image.mutationSummary($stateParams.POG, $stateParams.analysis_report);\n        }],\n        ms: ['$q', '$stateParams', 'api.summary.mutationSummary', ($q, $stateParams, $ms) => {\n          return $ms.get($stateParams.POG, $stateParams.analysis_report);\n        }],\n        smallMutations: ['$q', '$stateParams', 'api.somaticMutations.smallMutations', ($q, $stateParams, $smallMuts) => {\n          return $smallMuts.all($stateParams.POG, $stateParams.analysis_report);\n        }],\n        mutationSignature: ['$q', '$stateParams', 'api.somaticMutations.mutationSignature', ($q, $stateParams, $mutationSignature) => {\n          return $mutationSignature.all($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.copyNumberAnalyses', {\n      url: '/copyNumberAnalyses',\n      data: {\n        displayName: \"Copy Number Analyses\"\n      },\n      templateUrl: 'dashboard/report/genomic/copyNumberAnalyses/copyNumberAnalyses.html',\n      controller: 'controller.dashboard.report.genomic.copyNumberAnalyses',\n      resolve: {\n        images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n          return $image.get($stateParams.POG, $stateParams.analysis_report, 'cnvLoh.circos,cnv.1,cnv.2,cnv.3,cnv.4,cnv.5,loh.1,loh.2,loh.3,loh.4,loh.5');\n        }],\n        ms: ['$q', '$stateParams', 'api.summary.mutationSummary', ($q, $stateParams, $ms) => {\n          return $ms.get($stateParams.POG, $stateParams.analysis_report);\n        }],\n        cnvs: ['$q', '$stateParams', 'api.copyNumberAnalyses.cnv', ($q, $stateParams, $cnv) => {\n          return $cnv.all($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.structuralVariation', {\n      url: '/structuralVariation',\n      data: {\n        displayName: \"Structural Variation\"\n      },\n      templateUrl: 'dashboard/report/genomic/structuralVariation/structuralVariation.html',\n      controller: 'controller.dashboard.report.genomic.structuralVariation',\n      resolve: {\n        images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n          return $image.get($stateParams.POG, $stateParams.analysis_report, 'mutation_summary.barplot_sv,mutation_summary.density_plot_sv,circosSv.genome,circosSv.transcriptome');\n        }],\n        ms: ['$q', '$stateParams', 'api.summary.mutationSummary', ($q, $stateParams, $ms) => {\n          return $ms.get($stateParams.POG, $stateParams.analysis_report);\n        }],\n        svs: ['$q', '$stateParams', 'api.structuralVariation.sv', ($q, $stateParams, $sv) => {\n          return $sv.all($stateParams.POG, $stateParams.analysis_report);\n        }],\n        mutationSummaryImages: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n          return $image.mutationSummary($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.expressionAnalysis', {\n      url: '/expressionAnalysis',\n      data: {\n        displayName: \"Expression Analysis\"\n      },\n      templateUrl: 'dashboard/report/genomic/expressionAnalysis/version02/expressionAnalysis.html',\n      controller: 'controller.dashboard.report.genomic.expressionAnalysis',\n      resolve: {\n        ms: ['$q', '$stateParams', 'api.summary.mutationSummary', ($q, $stateParams, $ms) => {\n          return $ms.get($stateParams.POG, $stateParams.analysis_report);\n        }],\n        outliers: ['$q', '$stateParams', 'api.expressionAnalysis.outlier', ($q, $stateParams, $outliers) => {\n          return $outliers.all($stateParams.POG, $stateParams.analysis_report);\n        }],\n        drugTargets: ['$q', '$stateParams', 'api.expressionAnalysis.drugTarget', ($q, $stateParams, $drugTarget) => {\n          return $drugTarget.all($stateParams.POG, $stateParams.analysis_report);\n        }],\n        densityGraphs: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n          return $image.expDensityGraphs($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.discussion', {\n      url: '/discussion',\n      data: {\n        displayName: \"Presentation Discussion\"\n      },\n      templateUrl: 'dashboard/report/genomic/presentation/discussion/discussion.html',\n      controller: 'controller.dashboard.report.genomic.discussion',\n      resolve: {\n        discussions: ['$q', '$stateParams', 'api.presentation', ($q, $stateParams, $presentation) => {\n          return $presentation.discussion.all($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.slide', {\n      url: '/slide',\n      data: {\n        displayName: \"Presentation Slides\"\n      },\n      templateUrl: 'dashboard/report/genomic/presentation/slide/slide.html',\n      controller: 'controller.dashboard.report.genomic.slide',\n      resolve: {\n        slides: ['$q', '$stateParams', 'api.presentation', ($q, $stateParams, $presentation) => {\n          return $presentation.slide.all($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.appendices', {\n      url: '/appendices',\n      data: {\n        displayName: \"Appendices\"\n      },\n      templateUrl: 'dashboard/report/genomic/appendices/appendices.html',\n      controller: 'controller.dashboard.report.genomic.appendices',\n      resolve: {\n        tcgaAcronyms: ['$q', '$stateParams', 'api.appendices', ($q, $stateParams, $appendices) => {\n          return $appendices.tcga($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.meta', {\n      url: '/meta',\n      data: {\n        displayName: \"POG Meta Information\"\n      },\n      templateUrl: 'dashboard/report/genomic/meta/meta.html',\n      controller: 'controller.dashboard.report.genomic.meta',\n    })\n\n    .state('dashboard.reports.pog.report.genomic.history', {\n      url: '/history',\n      data: {\n        displayName: \"Data History\"\n      },\n      templateUrl: 'dashboard/report/genomic/history/history.html',\n      controller: 'controller.dashboard.report.genomic.history',\n      resolve: {\n        history: ['$q', '$stateParams', 'api.pogDataHistory', ($q, $stateParams, $history) => {\n          return $history($stateParams.POG, $stateParams.analysis_report).all();\n        }],\n        tags: ['$q', '$stateParams', 'api.pogDataHistory', ($q, $stateParams, $history) => {\n          return $history($stateParams.POG, $stateParams.analysis_report).tag.all();\n        }]\n      }\n    })\n\n    .state('dashboard.reports.pog.report.genomic.therapeutic', {\n      url: '/therapeutic',\n      data: {\n        displayName: \"Potential Therapeutic Targets\"\n      },\n      templateUrl: 'dashboard/report/genomic/therapeutic/therapeutic.html',\n      controller: 'controller.dashboard.report.genomic.therapeutic',\n      resolve: {\n        therapeutic: ['$q', '$stateParams', 'api.therapeuticOptions', ($q, $stateParams, $therapeutic) => {\n          return $therapeutic.all($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('dashboard.admin', {\n      url: '/admin',\n      data: {\n        displayName: 'Administration'\n      },\n      templateUrl: 'dashboard/admin/admin.html',\n    })\n\n    .state('dashboard.admin.users', {\n      url: '/users',\n      data: {\n        displayName: 'Users & Groups',\n        breadcrumbProxy: 'dashboard.admin.users.userList'\n      },\n      controller: 'controller.dashboard.admin.users',\n      templateUrl: 'dashboard/admin/user/users.html',\n      resolve: {\n        users: ['$q', 'api.user', ($q, $user) => {\n          return $user.all();\n        }],\n        groups: ['$q', 'api.user', ($q, $user) => {\n          return $user.group.all();\n        }]\n      }\n    })\n\n    .state('dashboard.admin.users.userList', {\n      url: '/userList',\n      data: {\n        displayName: 'Users'\n      },\n      controller: 'controller.dashboard.admin.users.userList',\n      templateUrl: 'dashboard/admin/user/userList.html',\n    })\n\n    .state('dashboard.admin.users.groups', {\n      url: '/groups',\n      data: {\n        displayName: 'Groups'\n      },\n      controller: 'controller.dashboard.admin.users.groups',\n      templateUrl: 'dashboard/admin/user/group.html',\n    })\n\n    .state('print', {\n      url: '/print',\n      abstract: true,\n      templateUrl: 'print/print.html',\n      controller: 'controller.print',\n      data: {\n        displayName: 'Print'\n      },\n      resolve: {\n        user: ['$q', 'api.session', '$state', ($q, $session, $state) => {\n          return $q((resolve, reject) => {\n            // Attempt session initialization\n            $session.init().then(\n              (user) => {\n                // Session init'd, return user\n                resolve(user);\n              },\n              (err) => {\n                // No session, go to login page\n                $state.go('public.login');\n                reject(err);\n              }\n            );\n\n          });\n        }],\n      }\n    })\n\n    .state('print.POG', {\n      url: '/POG/:POG',\n      abstract: true,\n      data: {\n        displayName: '{{POG.POGID}}'\n      },\n      template: '<ui-view \\\\>',\n      resolve: {\n        pog: ['$q', '$stateParams', 'api.pog', ($q, $stateParams, $pog) => {\n          return $pog.id($stateParams.POG);\n        }]\n      }\n    })\n\n    .state('print.POG.report', {\n      url: '/report/:analysis_report',\n      abstract: true,\n      template: '<ui-view \\\\>',\n      resolve: {\n        report: ['$q', '$stateParams', 'api.pog_analysis_report', ($q, $stateParams, $report) => {\n          return $report.pog($stateParams.POG).get($stateParams.analysis_report);\n        }]\n      }\n    })\n\n    .state('print.POG.report.genomic', {\n      url: '/genomic',\n      data: {\n        displayName: 'Genomic Report'\n      },\n      views: {\n        \"\": {\n          templateUrl: 'print/report/genomic/genomic.html',\n          controller: 'controller.print.POG.report.genomic',\n        },\n        \"summary@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/summary/summary.html',\n          controller: 'controller.print.POG.report.genomic.summary',\n          resolve: {\n            gai: ['$q', '$stateParams', 'api.summary.genomicAterationsIdentified', ($q, $stateParams, $gai) => {\n              return $gai.all($stateParams.POG, $stateParams.analysis_report);\n            }],\n            get: ['$q', '$stateParams', 'api.summary.genomicEventsTherapeutic', ($q, $stateParams, $get) => {\n              return $get.all($stateParams.POG, $stateParams.analysis_report);\n            }],\n            ms: ['$q', '$stateParams', 'api.summary.mutationSummary', ($q, $stateParams, $ms) => {\n              return $ms.get($stateParams.POG, $stateParams.analysis_report);\n            }],\n            vc: ['$q', '$stateParams', 'api.summary.variantCounts', ($q, $stateParams, $vc) => {\n              return $vc.get($stateParams.POG, $stateParams.analysis_report);\n            }],\n            pt: ['$q', '$stateParams', 'api.summary.probeTarget', ($q, $stateParams, $pt) => {\n              return $pt.all($stateParams.POG, $stateParams.analysis_report);\n            }],\n            mutationSignature: ['$q', '$stateParams', 'api.somaticMutations.mutationSignature', ($q, $stateParams, $mutationSignature) => {\n              return $mutationSignature.all($stateParams.POG, $stateParams.analysis_report);\n            }]\n          }\n        },\n        \"analystComments@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/analystComments/analystComments.html',\n          controller: 'controller.print.POG.report.genomic.analystComments',\n          resolve: {\n            comments: ['$q', '$stateParams', 'api.summary.analystComments', ($q, $stateParams, $comments) => {\n              return $comments.get($stateParams.POG, $stateParams.analysis_report);\n            }],\n          }\n        },\n        \"pathwayAnalysis@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/pathwayAnalysis/pathwayAnalysis.html',\n          controller: 'controller.print.POG.report.genomic.pathwayAnalysis',\n          resolve: {\n            pathway: ['$q', '$stateParams', 'api.summary.pathwayAnalysis', ($q, $stateParams, $pathway) => {\n              return $pathway.get($stateParams.POG, $stateParams.analysis_report);\n            }]\n          }\n        },\n        \"pathwayAnalysisLegend@print.POG.report.genomic\": { templateUrl: 'print/report/genomic/sections/pathwayAnalysis/pathwayAnalysisLegend.html' },\n        \"therapeuticOptions@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/therapeuticOptions/therapeuticOptions.html',\n          controller: 'controller.print.POG.report.genomic.therapeuticOptions',\n          resolve: {\n            therapeutic: ['$q', '$stateParams', 'api.therapeuticOptions', ($q, $stateParams, $therapeutic) => {\n              return $therapeutic.all($stateParams.POG, $stateParams.analysis_report);\n            }],\n          }\n        },\n        \"presentationSlide@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/presentation/slide.html',\n          controller: 'controller.print.POG.report.genomic.slide',\n          resolve: {\n            slides: ['$q', '$stateParams', 'api.presentation', ($q, $stateParams, $presentation) => {\n              return $presentation.slide.all($stateParams.POG, $stateParams.analysis_report);\n            }]\n          }\n        },\n        \"dga@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/dga/dga.html',\n          controller: 'controller.print.POG.report.genomic.dga',\n          resolve: {\n            alterations: ['$q', '$stateParams', 'api.detailedGenomicAnalysis.alterations', ($q, $stateParams, $APC) => {\n              return $APC.getAll($stateParams.POG, $stateParams.analysis_report);\n            }],\n            unknownAlterations: ['$q', '$stateParams', 'api.detailedGenomicAnalysis.alterations', ($q, $stateParams, $APC) => {\n              return $APC.getType($stateParams.POG, $stateParams.analysis_report, 'unknown');\n            }],\n            approvedThisCancer: ['$q', '$stateParams', 'api.detailedGenomicAnalysis.alterations', ($q, $stateParams, $APC) => {\n              return $APC.getType($stateParams.POG, $stateParams.analysis_report, 'thisCancer');\n            }],\n            approvedOtherCancer: ['$q', '$stateParams', 'api.detailedGenomicAnalysis.alterations', ($q, $stateParams, $APC) => {\n              return $APC.getType($stateParams.POG, $stateParams.analysis_report, 'otherCancer');\n            }]\n          }\n        },\n        \"diseaseSpecificAnalysis@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/diseaseSpecificAnalysis/diseaseSpecificAnalysis.html',\n          controller: 'controller.print.POG.report.genomic.diseaseSpecificAnalysis',\n          resolve: {\n            images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n              return $image.get($stateParams.POG, $stateParams.analysis_report, 'microbial.circos');\n            }],\n            subtypePlotImages: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n              return $image.subtypePlots($stateParams.POG, $stateParams.analysis_report);\n            }]\n          }\n        },\n        \"somaticMutations@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/somaticMutations/somaticMutations.html',\n          controller: 'controller.print.POG.report.genomic.somaticMutations',\n          resolve: {\n            images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n              return $image.get($stateParams.POG, $stateParams.analysis_report, 'mutSummary.snv,mutSummary.indel,mutSummary.barSnv,mutSummary.barIndel,mutSignature.corPcors,mutSignature.snvsAllStrelka');\n            }],\n            ms: ['$q', '$stateParams', 'api.summary.mutationSummary', ($q, $stateParams, $ms) => {\n              return $ms.get($stateParams.POG, $stateParams.analysis_report);\n            }],\n            smallMutations: ['$q', '$stateParams', 'api.somaticMutations.smallMutations', ($q, $stateParams, $smallMuts) => {\n              return $smallMuts.all($stateParams.POG, $stateParams.analysis_report);\n            }],\n            mutationSignature: ['$q', '$stateParams', 'api.somaticMutations.mutationSignature', ($q, $stateParams, $mutationSignature) => {\n              return $mutationSignature.all($stateParams.POG, $stateParams.analysis_report);\n            }],\n            mutationSummaryImages: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n              return $image.mutationSummary($stateParams.POG, $stateParams.analysis_report);\n            }],\n          }\n        },\n        \"copyNumberAnalysis@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/copyNumberAnalysis/copyNumberAnalysis.html',\n          controller: 'controller.print.POG.report.genomic.copyNumberAnalysis',\n          resolve: {\n            images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n              return $image.get($stateParams.POG, $stateParams.analysis_report, 'cnvLoh.circos');\n            }],\n            ms: ['$q', '$stateParams', 'api.summary.mutationSummary', ($q, $stateParams, $ms) => {\n              return $ms.get($stateParams.POG, $stateParams.analysis_report);\n            }],\n            cnvs: ['$q', '$stateParams', 'api.copyNumberAnalyses.cnv', ($q, $stateParams, $cnv) => {\n              return $cnv.all($stateParams.POG, $stateParams.analysis_report);\n            }]\n          }\n        },\n        \"copyNumberAnalysisCNVLOH@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/copyNumberAnalysis/copyNumberAnalysisCNVLOH.html',\n          controller: 'controller.print.POG.report.genomic.copyNumberAnalysisCNVLOH',\n          resolve: {\n            images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n              return $image.get($stateParams.POG, $stateParams.analysis_report, 'cnv.1,cnv.2,cnv.3,cnv.4,cnv.5,loh.1,loh.2,loh.3,loh.4,loh.5');\n            }]\n          }\n        },\n        \"structuralVariants@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/structuralVariants/structuralVariants.html',\n          controller: 'controller.print.POG.report.genomic.structuralVariants',\n          resolve: {\n            images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n              return $image.get($stateParams.POG, $stateParams.analysis_report, 'mutSummary.barSv,mutSummary.sv,circosSv.genome,circosSv.transcriptome');\n            }],\n            ms: ['$q', '$stateParams', 'api.summary.mutationSummary', ($q, $stateParams, $ms) => {\n              return $ms.get($stateParams.POG, $stateParams.analysis_report);\n            }],\n            svs: ['$q', '$stateParams', 'api.structuralVariation.sv', ($q, $stateParams, $sv) => {\n              return $sv.all($stateParams.POG, $stateParams.analysis_report);\n            }],\n            mutationSummaryImages: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n              return $image.mutationSummary($stateParams.POG, $stateParams.analysis_report);\n            }]\n          }\n        },\n        \"expressionAnalysis@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/expressionAnalysis/expressionAnalysis.html',\n          controller: 'controller.print.POG.report.genomic.expressionAnalysis',\n          resolve: {\n            images: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n              return $image.get($stateParams.POG, $stateParams.analysis_report, 'expression.chart,expression.legend');\n            }],\n            ms: ['$q', '$stateParams', 'api.summary.mutationSummary', ($q, $stateParams, $ms) => {\n              return $ms.get($stateParams.POG, $stateParams.analysis_report);\n            }],\n            outliers: ['$q', '$stateParams', 'api.expressionAnalysis.outlier', ($q, $stateParams, $outliers) => {\n              return $outliers.all($stateParams.POG, $stateParams.analysis_report);\n            }],\n            drugTargets: ['$q', '$stateParams', 'api.expressionAnalysis.drugTarget', ($q, $stateParams, $drugTarget) => {\n              return $drugTarget.all($stateParams.POG, $stateParams.analysis_report);\n            }],\n            densityGraphs: ['$q', '$stateParams', 'api.image', ($q, $stateParams, $image) => {\n              return $image.expDensityGraphs($stateParams.POG, $stateParams.analysis_report);\n            }]\n          }\n        },\n        \"appendices@print.POG.report.genomic\": {\n          templateUrl: 'print/report/genomic/sections/appendices/appendices.html',\n          controller: 'controller.print.POG.report.genomic.appendices',\n          resolve: {\n            tcgaAcronyms: ['$q', '$stateParams', 'api.appendices', ($q, $stateParams, $appendices) => {\n              return $appendices.tcga($stateParams.POG, $stateParams.analysis_report);\n            }]\n          }\n        }\n      },\n      resolve: {\n        targetedGenes: ['$q', '$stateParams', 'api.detailedGenomicAnalysis.targetedGenes', ($q, $stateParams, $tg) => {\n          return $tg.getAll($stateParams.POG, $stateParams.analysis_report);\n        }]\n      }\n    })\n\n\n\n    .state('print.POG.report.probe', {\n      url: '/probe',\n      data: {\n        displayName: 'Probe Report'\n      },\n      views: {\n        \"\": {\n          templateUrl: 'print/report/probe/probe.html',\n          controller: 'controller.print.POG.report.probe',\n        },\n        \"summary@print.POG.report.probe\": {\n          templateUrl: 'print/report/probe/sections/summary/summary.html',\n          controller: 'controller.print.POG.report.probe.summary',\n          resolve: {\n            testInformation: ['$q', '$stateParams', 'api.probe.testInformation', ($q, $stateParams, $ti) => {\n              return $ti.get($stateParams.POG, $stateParams.analysis_report);\n            }],\n            genomicEvents: ['$q', '$stateParams', 'api.summary.genomicEventsTherapeutic', ($q, $stateParams, $get) => {\n              return $get.all($stateParams.POG, $stateParams.analysis_report);\n            }],\n            metrics: ['$q', 'api.knowledgebase', ($q, $kb) => {\n              return $kb.metrics();\n            }],\n            signature: ['$q', '$stateParams', 'api.probe.signature', ($q, $stateParams, $signature) => {\n              return $signature.get($stateParams.POG, $stateParams.analysis_report);\n            }]\n          }\n        },\n        \"alterations@print.POG.report.probe\": {\n          templateUrl: 'print/report/probe/sections/alterations/alterations.html',\n          controller: 'controller.print.POG.report.probe.alterations',\n          resolve: {\n            alterations: ['$q', '$stateParams', 'api.probe.alterations', ($q, $stateParams, $alterations) => {\n              return $alterations.getAll($stateParams.POG, $stateParams.analysis_report);\n            }],\n            approvedThisCancer: ['$q', '$stateParams', 'api.probe.alterations', ($q, $stateParams, $alterations) => {\n              return $alterations.getType($stateParams.POG, $stateParams.analysis_report, 'thisCancer');\n            }],\n            approvedOtherCancer: ['$q', '$stateParams', 'api.probe.alterations', ($q, $stateParams, $alterations) => {\n              return $alterations.getType($stateParams.POG, $stateParams.analysis_report, 'otherCancer');\n            }]\n          }\n        },\n        \"appendices@print.POG.report.probe\": {\n          templateUrl: 'print/report/probe/sections/appendices/appendices.html',\n          controller: 'controller.print.POG.report.probe.appendices',\n        }\n      }\n    })\n\n    .state('dashboard.knowledgebase', {\n      url: '/knowledgebase',\n      abstract: true,\n      data: {\n        displayName: 'Dashboard',\n        breadcrumbProxy: 'dashboard.knowledgebase.references'\n      },\n      controller: 'knowledgebase',\n      templateUrl: 'dashboard/knowledgebase/knowledgebase.html'\n    })\n\n    .state('dashboard.knowledgebase.dashboard', {\n      url: '/dashboard',\n      data: {\n        displayName: \"Knowledgebase\"\n      },\n      controller: 'knowledgebase.dashboard',\n      templateUrl: 'dashboard/knowledgebase/dashboard/dashboard.html',\n      resolve: {\n        metrics: ['$q', 'api.knowledgebase', ($q, $kb) => {\n          return $kb.metrics();\n        }]\n      }\n    })\n\n    .state('dashboard.knowledgebase.references', {\n      url: '/references',\n      data: {\n        displayName: \"References\"\n      },\n      params: {\n        filters: null\n      },\n      controller: 'knowledgebase.references',\n      templateUrl: 'dashboard/knowledgebase/references/references.html',\n      resolve: {\n        references: ['$q', 'api.knowledgebase', '$stateParams', ($q, $kb, $stateParams) => {\n          if($stateParams.filters) {\n            return $kb.references.all(100, 0, $stateParams.filters);\n          } else {\n            return $kb.references.all(100, 0);\n          }\n        }],\n        ref_count: ['$q', 'api.knowledgebase', '$stateParams',  ($q, $kb, $stateParams) => {\n          if($stateParams.filters !== null) {\n            return $kb.references.count($stateParams.filters);\n          } else {\n            return $kb.references.count();\n          }\n        }],\n        vocabulary: ['$q', 'api.knowledgebase', ($q, $kb) => {\n          return $kb.vocabulary();\n        }]\n      }\n    })\n\n    .state('dashboard.knowledgebase.events', {\n      url: '/events',\n      data: {\n        displayName: \"Events\"\n      },\n      params: {\n        filters: null\n      },\n      controller: 'knowledgebase.events',\n      templateUrl: 'dashboard/knowledgebase/events/events.html',\n      resolve: {\n        events: ['$q', 'api.knowledgebase', '$stateParams', ($q, $kb, $stateParams) => {\n          if($stateParams.filters) {\n            return $kb.events.all(100, 0, $stateParams.filters);\n          } else {\n            return $kb.events.all(100, 0);\n          }\n        }],\n        events_count: ['$q', 'api.knowledgebase', '$stateParams', ($q, $kb, $stateParams) => {\n          if($stateParams.filters !== null) {\n            return $kb.events.count($stateParams.filters);\n          } else {\n            return $kb.events.count();\n          }\n        }]\n      }\n    })\n\n    .state('dashboard.tracking', {\n      url: '/tracking',\n      data: {\n        displayName: 'POG Tracking',\n        breadcrumbProxy: 'dashboard.tracking.board'\n      },\n      controller: 'controller.dashboard.tracking',\n      templateUrl: 'dashboard/tracking/tracking.html',\n      resolve: {\n        definitions: ['$q', 'api.tracking.definition', ($q, $definition) => {\n          return $definition.all();\n        }],\n        // User object injected to ensure settings have been captured\n        myDefinitions: ['$q', '_', 'api.tracking.definition', 'user', '$userSettings', ($q, _, $definition, user, $userSettings) => {\n          return $definition.all({slug: ($userSettings.get('tracking.definition')) ? _.join($userSettings.get('tracking.definition').slug,',') : undefined});\n        }]\n      }\n    })\n\n    .state('dashboard.tracking.board', {\n      url: '/board',\n      data: {\n        displayName: 'Board'\n      },\n      controller: 'controller.dashboard.tracking.board',\n      templateUrl: 'dashboard/tracking/board/board.html',\n      resolve: {\n        states: ['$q', '_', 'api.tracking.state', 'user', '$userSettings', ($q, _, $state, user, $userSettings) => {\n          return $state.all({status: ($userSettings.get('tracking.state')) ? _.join($userSettings.get('tracking.state').status, ',') : 'pending,active,hold,failed'});\n        }]\n      }\n    })\n\n    .state('dashboard.tracking.lane', {\n      url: '/board/:slug',\n      data: {\n        displayName: '{{lane.name}}'\n      },\n      controller: 'controller.dashboard.tracking.lane',\n      templateUrl: 'dashboard/tracking/board/board.lane.html',\n      resolve: {\n        lane: ['$q', '$stateParams', 'api.tracking.definition', ($q, $stateParams, $definition) => {\n          return $definition.retrieve($stateParams.slug);\n        }],\n        states: ['$q', '$stateParams', 'api.tracking.state', ($q, $stateParams, $state) => {\n          return $state.filtered({slug: $stateParams.slug, status: 'active,pending'});\n        }]\n      }\n    })\n\n    .state('dashboard.tracking.definition', {\n      url: '/definition',\n      data: {\n        displayName: 'State Definitions'\n      },\n      controller: 'controller.dashboard.tracking.definition',\n      templateUrl: 'dashboard/tracking/definition/definition.html',\n      resolve: {\n        groups: ['$q', 'api.user', ($q, $user) => {\n          return $user.group.all();\n        }],\n        definitions: ['$q', 'api.tracking.definition', ($q, $definition) => {\n          return $definition.all({hidden: true});\n        }],\n        hooks: ['$q', 'api.tracking.hook', ($q, $hook) => {\n          return $hook.all();\n        }]\n      }\n    })\n\n    .state('dashboard.tracking.assignment', {\n      url: '/assignment/:definition',\n      data: {\n        displayName: 'User Task Assignment'\n      },\n      controller: 'controller.dashboard.tracking.assignment',\n      templateUrl: 'dashboard/tracking/assignment/assignment.html',\n      resolve: {\n        definition: ['$q', '$stateParams', 'api.tracking.definition', ($q, $stateParams, $definition) => {\n          return $definition.retrieve($stateParams.definition);\n        }],\n        ticket_templates: ['$q', '$stateParams', 'api.tracking.ticket_template', ($q, $stateParams, $ticket) => {\n          return $ticket.getDefTasks($stateParams.definition);\n        }],\n        states: ['$q', 'api.tracking.state', 'definition', ($q, $state, definition) => {\n          return $state.filtered({slug: definition.slug, status: 'active,pending'});\n        }],\n        group: ['$q', 'definition', 'api.user', ($q, definition, $user) => {\n          return $user.group.retrieve(definition.group.ident);\n        }],\n        userLoad: ['$q', 'definition', 'api.tracking.definition', ($q, definition, $definition) => {\n          return $definition.userLoad(definition.ident);\n        }]\n      }\n    })\n    \n    .state('dashboard.tracking.ticket_template', {\n      \n      url: '/definition/:definition/ticket/template',\n      data: {\n        displayName: 'Ticket Templates'\n      },\n      controller: 'controller.dashboard.tracking.ticket_template',\n      templateUrl: 'dashboard/tracking/assignment/assignment.ticket_template.html',\n      resolve: {\n        templates: ['$q', '$stateParams', 'api.tracking.ticket_template', ($q, $stateParams, $template) => {\n          return $template.getDefTasks($stateParams.definition);\n        }],\n        definition: ['$q', '$stateParams', 'api.tracking.definition', ($q, $stateParams, $definition) => {\n          return $definition.retrieve($stateParams.definition);\n        }]\n      }\n    })\n    \n    .state('dashboard.biopsy', {\n      url: '/biopsy',\n      data: {\n        displayName: 'Biopsies',\n        breadcrumbProxy: 'dashboard.biopsy.board'\n      },\n      controller: 'controller.dashboard.biopsy',\n      templateUrl: 'dashboard/biopsy/biopsy.html'\n    })\n    \n    .state('dashboard.biopsy.board', {\n      url: '/board',\n      data: {\n        displayName: 'Home'\n      },\n      controller: 'controller.dashboard.biopsy.board',\n      templateUrl: 'dashboard/biopsy/board/board.html',\n      resolve: {\n        analyses: ['$q', 'api.analysis', ($q, $analysis) => {\n          return $analysis.all({paginated: true, project: 'POG'});\n        }],\n        comparators: ['$q', 'api.analysis', ($q, $analysis) => {\n          return $analysis.comparators();\n        }]\n      }\n    })\n    \n    .state('dashboard.germline', {\n      url: '/germline',\n      data: {\n        displayName: 'Germline',\n        breadcrumbProxy: 'dashboard.germline.board'\n      },\n      controller: 'controller.dashboard.germline',\n      templateUrl: 'dashboard/germline/germline.html'\n    })\n    \n    .state('dashboard.germline.board', {\n      url: '/board',\n      data: {\n        displayName: 'Reports'\n      },\n      controller: 'controller.dashboard.germline.board',\n      templateUrl: 'dashboard/germline/board/board.html',\n      resolve: {\n        reports: ['api.germline.report', ($report) => {\n          return $report.all({project: 'POG'});\n        }]\n      }\n    })\n    \n    .state('dashboard.germline.report', {\n      url: '/report/patient/:patient/biopsy/:biopsy/report/:report',\n      data: {\n        displayName: 'Reports'\n      },\n      controller: 'controller.dashboard.germline.report',\n      templateUrl: 'dashboard/germline/report/report.html',\n      resolve: {\n        report: ['api.germline.report', '$stateParams', ($report, $stateParams) => {\n          return $report.one($stateParams.patient, $stateParams.biopsy, $stateParams.report);\n        }]\n      }\n    })\n\n}]);\n","app.controller('controller.dashboard.report.genomic.appendices',\n  ['_', '$q', '$scope', 'api.pog', '$mdDialog', '$mdToast', 'pog', 'report', 'tcgaAcronyms',\n    (_, $q, $scope, $pog, $mdDialog, $mdToast, pog, report, tcga) => {\n\n      $scope.pog = pog;\n      $scope.report = report;\n      $scope.tcga = tcga;\n\n      $scope.hashClean = (i) => {\n        return String(i).replace('#','');\n      }\n\n    }\n  ]\n);\n","app.controller('controller.dashboard.report.genomic.diseaseSpecificAnalysis',\n  ['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'pog', 'images', 'subtypePlotImages',\n    (_, $q, $scope, $state, $mdDialog, $mdToast, $pog, pog, images, subtypePlotImages) => {\n\n      // Load Images into template\n      $scope.images = images;\n\n      // Load Subtype Plot Images into template\n      $scope.subtypePlotImages = subtypePlotImages;\n      $scope.hasSubtypePlot = !(Object.keys(subtypePlotImages).length === 0);\n\n    }\n  ]\n);\n","app.controller('controller.dashboard.report.genomic.analystComments', \n  ['_', '$q', '$scope', '$mdDialog', '$mdToast', '$sce', 'api.pog', 'api.summary.analystComments', 'pog', 'report', 'comments',\n  (_, $q, $scope, $mdDialog, $mdToast, $sce, $pog, $comments, pog, report, analystComments) => {\n\n  $scope.pog = pog;\n  $scope.analystComments = (analystComments === null) ?  \"\" : analystComments.comments;\n  $scope.commentsHTML = $sce.trustAsHtml($scope.analystComments);\n  $scope.comments = analystComments;\n\n\n  // Sign The comments\n  $scope.sign = (role) => {\n\n    // Send signature to API\n    $comments.sign(pog.POGID, report.ident, role).then(\n      (result) => {\n        $scope.comments = result;\n      }\n    )\n  };\n\n  // Sign The comments\n  $scope.revokeSign = (role) => {\n\n    // Send signature to API\n    $comments.revokeSign(pog.POGID, report.ident, role).then(\n      (result) => {\n        $scope.comments = result;\n      }\n    )\n  };\n\n\n    // Editor Update Modal\n  $scope.updateComments = ($event) => {\n    \n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/report/genomic/analystComments/analystComments.edit.html',\n      locals: {\n        pog: pog\n      },\n      clickOutToClose: false,\n      controller: ['$q', '_', '$scope', '$mdDialog', '$timeout', 'api.summary.analystComments', ($q, _, scope, $mdDialog, $timeout, $comments) => {\n        \n        scope.analystComments = analystComments;\n\n        // Cancel Dialog\n        scope.cancel = () => {\n          $mdDialog.cancel('Canceled Edit - No changes made.');\n        };\n        \n        // Update Details\n        scope.update = (f) => {\n          \n          if(f.$invalid) {\n            f.$setDirty();\n            angular.forEach(f.$error, (field) => {\n              angular.forEach(field, (errorField) => {\n                errorField.$setTouched();\n              });\n            });\n            return;\n          }\n          \n          let updatedComment = {'comments': scope.analystComments.comments};\n          \n          $comments.update(pog.POGID, report.ident, updatedComment).then(\n            (result) => {\n              $mdDialog.hide({message: 'Entry has been updated', comment: updatedComment});\n            },\n            (error) => {\n              alert('Unable to update. See console');\n              console.log(error);\n            }\n          );\n          \n        } // End update\n      }]\n    }).then((result) => {\n      // Update current page content\n      $scope.commentsHTML = $sce.trustAsHtml(result.comment.comments);\n      $scope.comments = analystComments = result.comment;\n\n      // Display Message from Hiding\n      $mdToast.show($mdToast.simple().textContent(result.message));\n    }, (error) => {\n      $mdToast.show($mdToast.simple().textContent(error));\n    });\n  }\n  \n}]);\n","app.controller('controller.dashboard.report.genomic.copyNumberAnalyses',\n  ['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'api.somaticMutations.smallMutations', 'pog', 'report', 'ms', 'images', 'cnvs',\n    (_, $q, $scope, $state, $mdDialog, $mdToast, $pog, $smallMutations, pog, report, ms, images, cnvs) => {\n\n      // Load Images into template\n      $scope.images = images;\n      $scope.pog = pog;\n      $scope.report = report;\n      $scope.cnvGroups = {};\n\n\n      $scope.titleMap = {\n        clinical: 'CNVs of Potential Clinical Relevance',\n        nostic: 'CNVs of Prognostic or Diagnostic Relevance',\n        biological: 'CNVs of Biological Relevance',\n        commonAmplified: 'Commonly Amplified Oncogenes with Copy Gains',\n        homodTumourSupress: 'Homozygously Deleted Tumour Suppresors',\n        highlyExpOncoGain: 'Highly Expressed Oncogenes with Copy Gains',\n        lowlyExpTSloss: 'Lowly Expressed Tumour Suppressors with Copy Losses'\n      };\n\n      let processCNV = (cnvs) => {\n\n        let container = {\n          clinical: [],\n          nostic: [],\n          biological: [],\n          commonAmplified: [],\n          homodTumourSupress: [],\n          highlyExpOncoGain: [],\n          lowlyExpTSloss: []\n        };\n\n        // Run over mutations and group\n        _.forEach(cnvs, (row, k) => {\n          if(!(row.cnvVariant in container)) container[row.cnvVariant] = [];\n          // Add to type\n          container[row.cnvVariant].push(row);\n        });\n\n        // Set Small Mutations\n        $scope.cnvGroups = container;\n      };\n\n      processCNV(cnvs);\n\n\n    }\n  ]\n);\n","app.controller('controller.dashboard.report.genomic.history.detail',\n['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'api.pogDataHistory', 'pog', 'entry', 'details', 'tags',\n(_, $q, scope, $state, $mdDialog, $mdToast, $pog, $history, pog, entry, details, tags) => {\n\n  scope.entry = entry;\n  scope.details = details;\n  scope.tags = tags;\n  scope.tagSelected = entry.tags;\n  scope.newEntry = details[entry.new];\n  scope.previousEntry = details[entry.previous];\n  scope.ignored = ['ident', 'dataVersion', 'createdAt', 'updatedAt', 'deletedAt'];\n  scope.tagSearch = {\n    selectedItem: null,\n    searchText: null\n  };\n\n  scope.action = {\n    revert: {\n      disableButton: false,\n      active: false,\n      comment: \"\"\n    },\n    restore: {\n      disableButton: false,\n      active: false,\n      comment: \"\"\n    }\n  };\n\n  scope.test = \"bar\";\n\n  scope.cancel = () => { $mdDialog.cancel() };\n\n  scope.changeFields = [];\n\n  scope.changed = (f) => { return (scope.changeFields.indexOf(f) > -1) };\n\n  // Auto-complete search filter\n  scope.tagSearch.filter = (query) => {\n\n    let deferred = $q.defer();\n\n    $history(pog.POGID, report.ident).tag.search(query).then(\n      (tags) => {\n        deferred.resolve(tags);\n      },\n      (err) => {\n        console.log('Unable to search for tags', err);\n      }\n    );\n    return deferred.promise;\n  };\n\n  // Create new tag on API\n  scope.newTag = (newTag) => {\n    // Create new Tag\n    $history(pog.POGID, report.ident).tag.create({tag: newTag.tag}, entry.ident).then(\n      (resp) => {\n        // Need to find the tag we made, and replace it.\n        let found = false;\n        _.forEach(scope.tagSelected, (v,k) => {\n          if(v.tag === resp.tag) {\n            scope.tagSelected[k] = resp;\n            found = true;\n          }\n        });\n\n        if(!found) scope.tagSelected.push(resp);\n        $mdToast.show($mdToast.simple().textContent('The tag has been added').position('bottom left'));\n      },\n      (err) => {\n        console.log('Failed to create new tag');\n      }\n    );\n  };\n\n  // Remove tag on API\n  scope.removeTag = (removed) => {\n    let cachedTag = angular.copy(removed);\n\n    $history(pog.POGID, report.ident).tag.remove(removed.ident).then(\n      (resp) => {\n        let toast = $mdToast.simple()\n          .textContent('The tag has been removed.')\n          .action('Undo')\n          .highlightAction(true)\n          .highlightClass('md-acceent')\n          .hideDelay(4000)\n          .position('bottom left');\n\n        $mdToast.show(toast).then(\n          (undo) => {\n            // Does the user want to undo?\n            if(undo === 'ok') {\n              // Add it again!\n              scope.newTag({tag: cachedTag.tag});\n            }\n          } // end undo\n        )\n      },\n      (err) => {\n        console.log('Failed to create new tag');\n      }\n    );\n  };\n\n\n  // Revert the opened change\n  scope.revert = () => {\n    // Hit API\n    $history(pog.POGID, report.ident).revert(entry.ident, scope.action.revert.comment).then(\n      (resp) => {\n        // Add to history\n        $mdDialog.hide({event: 'revert', data: resp});\n      },\n      (err) => {\n        console.log('Failed to revert', err);\n        $mdToast.show($mdToast.simple().textContent('Unable to revert the history entry').position('bottom left'));\n      }\n    );\n  };\n\n  // Restore entry\n  scope.restore = () => {\n    let cached = angular.copy(entry);\n    $history(pog.POGID, report.ident).restore(entry.ident, scope.action.restore.comment).then(\n      (result) => {\n        // Add to history\n        $mdDialog.hide({event: 'restore', data: cached});\n      },\n      (err) => {\n        $mdToast.show($mdToast.simple().textContent('Unable to restore the history event').position('bottom left'));\n      }\n    )\n\n  };\n\n  // Transform chip for auto complete\n  scope.transformChip = (tag) => {\n    // If it is an object, it's already a known chip\n    if (angular.isObject(tag)) return tag;\n\n    // Otherwise, create a new one\n    return { tag: tag, type: 'new' }\n  };\n\n\n  // Search for changes\n  let findChanges = (preVal, newVal) => {\n    let ignored = ['dataVersion', 'createdAt', 'updatedAt', 'deletedAt'];\n    _.forEach(preVal, (v, k) => {\n      if(newVal[k] !== v && ignored.indexOf(k) === -1) {\n        scope.changeFields.push(k);\n      }\n    });\n\n  };\n\n  // If it's a change map changes\n  if(entry.type == 'change') {\n    findChanges(scope.previousEntry, scope.newEntry);\n  }\n\n\n}]);\n","app.controller('controller.dashboard.report.genomic.history.export',\n['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', '$timeout', 'api.pog', 'api.pogDataHistory', 'pog',\n(_, $q, scope, $state, $mdDialog, $mdToast, $timeout, $pog, $history, pog) => {\n\n  // Load in values needed\n  scope.pog = pog;\n\n  // Default stage is start\n  scope.stage = 'start';\n  scope.command = '';\n\n  scope.export = {};\n\n  scope.changeCopyTooltip = () => {\n    scope.copyTooltip = 'Copied!';\n    $timeout(()=> {\n      scope.copyTooltip = \"Copy to clipboard\";\n    },3000);\n    $mdToast.show($mdToast.simple().textContent('Copied to clipboard!'));\n  };\n\n  // Close window function\n  scope.cancel = () => { $mdDialog.cancel() };\n\n  scope.runExport = () => {\n    scope.stage = 'running';\n\n\n    $pog.export(pog.POGID).csv().then(\n      (resp) => {\n        scope.command = resp.command;\n        scope.export = resp.export;\n        scope.stage = 'complete';\n\n        $mdToast.show($mdToast.simple().textContent('Export successfully generated'));\n      },\n      (err) => {\n        console.log('Failed to finished export');\n\n      }\n    );\n\n  };\n\n}]);\n","app.controller('controller.dashboard.report.genomic.history',\n['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'pog', 'report', 'api.pogDataHistory', 'history', 'tags',\n(_, $q, $scope, $state, $mdDialog, $mdToast, $pog, pog, report, $history, history, tags) => {\n\n  $scope.history = history;\n  $scope.history = _.sortBy($scope.history, 'createdAt').reverse();\n  $scope.tags = tags;\n\n  // Open history detail\n  $scope.detail = ($event, entry) => {\n\n    $history(pog.POGID, report.ident).detail(entry.ident).then(\n      (details) => {\n        $mdDialog.show({\n          targetEvent: $event,\n          templateUrl: 'dashboard/report/genomic/history/history.detail.html',\n          clickOutToClose: false,\n          locals: {\n            entry: entry,\n            details: details,\n            tags: tags,\n            pog: pog\n          },\n          controller: 'controller.dashboard.report.genomic.history.detail'\n        }).then(\n          (result) => {\n\n            // Revert!\n            console.log('Hidden dialog', event);\n            if(result.event === 'revert') {\n              $scope.history = _.concat(result.data, $scope.history);\n              $mdToast.show($mdToast.simple().textContent('The history event has been reverted'));\n            }\n\n            // Removal\n            if(result.event === 'restore') {\n              // Find and remove the entry from history\n              $scope.history = _.filter($scope.history, (h) => { return (h.ident !== result.data.ident) });\n              $mdToast.show($mdToast.simple().textContent('The history event has been restored'));\n            }\n          },\n          (err) => {\n            console.log('Canceled dialog', err);\n          }\n        );\n      },\n      (err) => {\n        console.log('Unable to load details');\n      }\n    );\n\n  }\n\n}]);\n","app.controller('controller.dashboard.report.genomic.microbial',\n['_', '$q', '$scope', 'pog', 'images',\n(_, $q, $scope, $state, pog, images) => {\n  \n  // Load Images into template\n  $scope.images = images;\n \n}]);\n","app.controller('controller.dashboard.report.genomic.knowledgebase',\n  ['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'api.detailedGenomicAnalysis.alterations', 'pog', 'report', 'alterations', 'approvedThisCancer', 'approvedOtherCancer', 'targetedGenes',\n  (_, $q, $scope, $state, $mdDialog, $mdToast, $pog, $alterations, pog, report, alterations, approvedThisCancer, approvedOtherCancer, targetedGenes) => {\n  \n  $scope.approvedThisCancer = {};\n  $scope.approvedOtherCancer = {};\n  $scope.pog = pog;\n  $scope.report = report;\n  $scope.samples = [];\n  $scope.alterations = {therapeutic: {}, prognostic: {}, diagnostic: {}, biological: {}, unknown: null};\n  $scope.targetedGenes = targetedGenes;\n  $scope.showUnknown = false;\n  $scope.disableUnknownButtons = false;\n\n\n  // Create new entry...\n  $scope.createNewKBEntry = ($event) => {\n\n    let gene = {};\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/report/genomic/detailedGenomicAnalysis/alterations/alterations.edit.html',\n      clickOutToClose: false,\n      locals: {\n        pog: $scope.pog,\n        gene: gene,\n        samples: $scope.samples,\n        rowEvent: 'new',\n        report: report\n      },\n      controller: 'controller.dashboard.reports.genomic.detailedGenomicAnalysis.alterations.edit' // End controller\n    });\n  };\n\n  // Toggle viewing unknowns state\n  $scope.toggleUnknown = () => {\n\n    $scope.disableUnknownButtons = true;\n\n    // Show unknowns\n    if(!$scope.showUnknown) {\n      // First dump all alterations\n      $scope.alterations = {therapeutic: {}, prognostic: {}, diagnostic: {}, biological: {}, unknown: {}};\n\n      // Load unknowns\n      $alterations.getType(pog.POGID, report.ident, 'unknown').then(\n        (resp) => {\n          groupEntries(resp);\n          $scope.showUnknown = true;\n          $scope.disableUnknownButtons = false;\n        },\n        (err) => {\n          console.log('Unable to load unknowns', err);\n        }\n      );\n    }\n\n    // Show All others\n    if($scope.showUnknown) {\n\n      // First dump all alterations\n      $scope.alterations = {therapeutic: {}, prognostic: {}, diagnostic: {}, biological: {}, unknown: null};\n\n      // Load unknowns\n      $alterations.getAll(pog.POGID, report.ident).then(\n        (resp) => {\n          groupEntries(resp);\n          $scope.disableUnknownButtons = $scope.showUnknown = false;\n        },\n        (err) => {\n          console.log('Unable to load unknowns', err);\n        }\n      );\n\n    }\n\n  };\n\n  // Resort Groupings\n  $scope.trigger = (val) => {\n    if(val === false) return;\n\n    // Loop over defined alterations\n    _.forEach($scope.alterations, (v, k) => {\n      // Loop over alterion type\n      _.forEach(v, (row, rowID) => {\n        // Is there a mismatch?\n        if(row && row.alterationType !== k) {\n\n          // Move to new alteration\n          $scope.alterations[row.alterationType].unshift(row);\n\n          $scope.alterations[k].splice(rowID,1);\n        }\n\n      });\n\n    });\n\n  };\n\n  // Filter reference type\n  $scope.refType = (ref) => {\n    if(ref.match(/^[0-9]{8}\\#/)) {\n      return 'pmid';\n    }\n    if(ref.match(/^(?:http(?:s)?:\\/\\/)?(?:[^\\.]+\\.)?[A-z0-9]*\\.[A-z]{2,7}/)) {\n      return 'link';\n    } \n    return 'text';\n  };\n  \n  // Prepend a link with http:// if necessary\n  $scope.prependLink = (link) => {\n    return (link.indexOf('http://') == -1) ? 'http://' + link : link;\n  };\n  \n  // Clean up PMIDs\n  $scope.cleanPMID = (pmid) => {\n    return pmid.match(/^[0-9]{8}/)[0];\n  };\n\n  // Group Alterations by type\n  let groupAlterations = (collection, alterations) => {\n    \n    alterations.forEach((row) => {\n\n      // Modify type\n\n      // Does grouping exist?\n      if(!(row.gene + '-' + row.variant in collection)) {\n        row.children = [];\n        return collection[row.gene + '-' + row.variant] = row; // Add row to collection\n      }\n      \n      if(row.gene + '-' + row.variant in collection) return collection[row.gene + '-' + row.variant].children.push(row);\n      \n    });\n    \n    return _.values(collection);\n    \n  };\n  \n  // Group Entries by Type\n  let groupEntries = (alterations) => {\n    // Process the entries for grouping\n    alterations.forEach((row) => {\n       \n      // Add to samples if not present\n      if($scope.samples.indexOf(row.sample) === -1) $scope.samples.push(row.sample);\n      \n      // Grouping\n      if(!(row.alterationType in $scope.alterations)) $scope.alterations[row.alterationType] = {};\n\n\n      // Check if it exists already?\n      if(!(row.gene+'-'+row.variant in $scope.alterations[row.alterationType])) {\n        row.children = [];\n        return $scope.alterations[row.alterationType][row.gene+'-'+row.variant] = row;\n      }\n      \n      // Categorical entry already exists\n      if(row.gene+'-'+row.variant in $scope.alterations[row.alterationType]) {\n        return $scope.alterations[row.alterationType][row.gene+'-'+row.variant]\n          .children[$scope.alterations[row.alterationType][row.gene+'-'+row.variant].children.length] = row;\n      }\n      \n    });\n    \n    _.forEach($scope.alterations, (values, k) => {\n      $scope.alterations[k] = _.values(values);\n      //console.log('Iteree: ', k, values, _.values(values));\n    });\n        \n  };\n  \n  // Group Entries\n  groupEntries(alterations);\n  \n  // Group Approved\n  $scope.approvedThisCancer = groupAlterations($scope.approvedThisCancer, approvedThisCancer);\n  $scope.approvedOtherCancer = groupAlterations($scope.approvedOtherCancer, approvedOtherCancer);\n    \n}]);\n","app.controller('controller.dashboard.report.genomic.meta',\n['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'api.pog_analysis_report', 'pog', 'report', 'indefiniteArticleFilter',\n(_, $q, $scope, $state, $mdDialog, $mdToast, $pog, $report, pog, report, indefiniteArticleFilter) => {\n\n  $scope.pog = pog;\n  $scope.roles = ['bioinformatician','analyst','reviewer','admin', 'clinician'];\n  $scope.report = report;\n  $scope.reportSettingsChanged = false;\n\n  let reportCache = angular.copy(report);\n\n  // Unbind user\n  let removeEntry = (role) => {\n\n    $report.unbindUser($scope.report.ident, role.user.ident, role.role).then(\n      (result) => {\n        // Find and remove the ident!\n        $scope.report = report = result;\n      },\n      (err) => {\n        $mdToast.show($mdToast.simple().textContent('Failed to unbind user.'))\n      }\n    );\n\n  };\n\n  //\n  $scope.remove = () => {\n    return removeEntry;\n  };\n\n  $scope.roleFilter = (filter) => {\n    return (puser) => {\n      return (puser.role == filter);\n    }\n  };\n\n  // Update Patient Information\n  $scope.addUser = ($event, suggestedRole) => {\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/report/genomic/meta/role.add.html',\n      clickOutToClose: false,\n      controller: ['scope', 'api.user', (scope, $user) => {\n\n        scope.role = {role: suggestedRole};\n\n        scope.cancel = () => {\n          $mdDialog.cancel();\n        };\n\n        scope.searchUsers = (searchText) => {\n          let deferred = $q.defer();\n\n          if(searchText.length === 0) return [];\n\n          $user.search(searchText).then(\n            (resp) => {\n              deferred.resolve(resp);\n            },\n            (err) => {\n              console.log(err);\n              deferred.reject();\n            }\n          );\n\n          return deferred.promise;\n        };\n\n        scope.add = (f) => {\n\n          // Check for valid inputs by touching each entry\n          if(f.$invalid) {\n            f.$setDirty();\n            angular.forEach(f.$error, (field) => {\n              angular.forEach(field, (errorField) => {\n                errorField.$setTouched();\n              });\n            });\n            return;\n          }\n\n          // Perform binding\n          $report.bindUser($scope.report.ident, scope.role.user.ident, scope.role.role).then(\n            (resp) => {\n              $mdDialog.hide({data: resp, message: scope.role.user.firstName + ' ' + scope.role.user.lastName + ' has been added as ' + indefiniteArticleFilter(scope.role.role) + ' ' + scope.role.role});\n            },\n            (err) => {\n              console.log('Binding error', err);\n            }\n          );\n        }; // end Add\n\n      }] // End controller\n\n    }).then(\n      (outcome) => {\n        if (outcome) $mdToast.show($mdToast.simple().textContent(outcome.message));\n        $scope.report = report = outcome.data;\n      },\n      (error) => {\n        $mdToast.show($mdToast.simple().textContent('No changes were made'));\n      }\n    );\n\n  }; // End add user\n\n  $scope.checkChange = () => {\n\n    if($scope.report.type !== reportCache.type) $scope.reportSettingsChanged = true;\n    if($scope.report.state !== reportCache.state) $scope.reportSettingsChanged = true;\n    if($scope.report.reportVersion !== reportCache.reportVersion) $scope.reportSettingsChanged = true;\n    if($scope.report.kbVersion !== reportCache.kbVersion) $scope.reportSettingsChanged = true;\n\n    if($scope.reportSettingsChanged && JSON.stringify($scope.report) === JSON.stringify(reportCache)) {\n      $scope.reportSettingsChanged = false;\n    }\n\n  };\n\n  $scope.updateSettings = () => {\n\n    $scope.reportSettingsChanged = false;\n\n    // Send updated settings to API\n    $report.update($scope.report).then(\n      (result) => {\n        // Report successfully updated\n        $scope.report = result;\n        reportCache = angular.copy(result);\n\n        $mdToast.show($mdToast.simple().textContent('Report settings have been updated.'));\n      },\n      (err) => {\n        // Failed to update, restore from cache.\n        $scope.report = angular.copy(reportCache);\n        $mdToast.show($mdToast.simple().textContent('The report settings could not be updated.'));\n      }\n    )\n\n  }\n\n\n}]);\n","app.controller('controller.dashboard.report.genomic.pathwayAnalysis',\n  ['_', '$q', '$scope', '$mdDialog', '$mdToast', 'api.pog', 'api.summary.pathwayAnalysis', 'FileUploader', 'api.session', 'pog', 'report', 'pathway',\n    (_, $q, $scope, $mdDialog, $mdToast, $pog, $pathway, FileUploader, $session, pog, report, pathway) => {\n\n      $scope.pog = pog;\n\n      let processSVG = (svg) => {\n\n        // Get container div\n        let svgImage = document.getElementById('svgImage');\n\n        if(svgImage.innerHTML.length > 0) {\n          // Destroy so we can build it bigger, faster, better than before!\n          svgImage.innerHTML = '';\n        }\n\n        // Create SVG DOM element from String\n        $scope.pathway = new DOMParser().parseFromString(svg, 'application/xml');\n\n        // Extract SVG element from within XML wrapper.\n        let xmlSVG = $scope.pathway.getElementsByTagName('svg')[0];\n        xmlSVG.id=\"pathway\"; // Set ID that we can grapple.\n        xmlSVG.style = 'width: 100%; height: 800px;'; // Set width & height TODO: Make responsive\n\n        // Create PanZoom object\n        let panZoom = {};\n\n        // Load in SVG after slight delay. (otherwise xmlSVG processing isn't ready.\n        // TODO: Use promises to clean this up.\n        setTimeout(() => {\n          svgImage = document.getElementById('svgImage');\n\n          svgImage.appendChild(\n            svgImage.ownerDocument.importNode($scope.pathway.documentElement, true)\n          );\n          let panZoom = svgPanZoom('#pathway', {\n            preventMouseEventsDefault: true,\n            enableControlIcons: true,\n            controlIconsEnabled: true\n          });\n          panZoom.resize();\n          panZoom.fit();\n          panZoom.center();\n        },100);\n\n      };\n\n      // Show a message if pathway isn't created yet.\n      if(pathway !== null) processSVG(pathway.pathway);\n      if(pathway === null) processSVG('<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xml:space=\"preserve\" width=\"400\"><text x=\"0\" y=\"0\" fill=\"rgb(210,210,210)\">Pathway not yet analyzed.</text></svg>');\n\n\n      /**\n       * Update The SVG Pathway diagram\n       *\n       * @param $event\n       */\n      $scope.update = ($event) => {\n\n        $mdDialog.show({\n          targetEvent: $event,\n          templateUrl: 'dashboard/report/genomic/pathwayAnalysis/pathwayAnalysis.edit.html',\n          locals: {\n            pog: pog\n          },\n          clickOutToClose: false,\n          controller: ['$q', '_', '$scope', '$mdDialog', '$timeout', ($q, _, scope, $mdDialog, $timeout) => {\n\n            scope.process = 'select';\n            scope.progress = 0;\n            scope.filename = \"\";\n\n            // Cancel Dialog\n            scope.cancel = () => {\n              $mdDialog.cancel('Canceled Edit - No changes made.');\n            };\n\n            let selectedItem;\n            let uploader = scope.uploader = new FileUploader({\n              url: CONFIG.ENDPOINTS.API + '/POG/' + pog.POGID +  '/report/' + report.ident + '/genomic/summary/pathwayAnalysis',\n            });\n\n            uploader.headers['Authorization'] = $session.getToken();\n            uploader.method = 'PUT';\n            uploader.alias = \"pathway\";\n\n            // Sync filter\n            uploader.filters.push({\n              name: 'syncFilter',\n              fn: function(item, options) {\n                if(item.type !== \"image/svg+xml\") console.log('That is not an SVG!');\n                return (item.type === \"image/svg+xml\");\n              }\n            });\n\n            uploader.onErrorItem = function(fileItem, response, status, headers) {\n              console.info('onErrorItem', fileItem, response, status, headers);\n            };\n\n            // Kick off upload\n            uploader.onAfterAddingFile = (fileItem) => {\n              console.log('Selected ', fileItem);\n              scope.filename = fileItem.file.name;\n              selectedItem = fileItem;\n              scope.process=\"upload\";\n            };\n\n            uploader.onProgressItem = (fileItem, progress) => {\n              scope.progress = progress;\n            };\n\n            // Initiate Upload\n            scope.initiateUpload = () => {\n              scope.startedUpload = true;\n              uploader.uploadItem(selectedItem);\n            };\n\n            // Only allow 1 upload. When Finished\n            uploader.onCompleteItem = (fileItem, response, status, headers) => {\n              console.info('API Response on complete', response);\n              $mdDialog.hide({data: response, message: 'Pathway Analysis data updated.'})\n            };\n\n          }]\n        }).then((result) => {\n          // Update current page content\n          processSVG(result.data.pathway);\n          // Display Message from Hiding\n          $mdToast.show($mdToast.simple().textContent(result.message));\n        }, (error) => {\n          $mdToast.show($mdToast.simple().textContent(error));\n        });\n      }\n\n    }\n  ]\n);\n","app.controller('controller.dashboard.report.genomic.smallMutations',\n['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'api.somaticMutations.smallMutations', 'api.vardb', 'pog', 'report', 'ms', 'images', 'smallMutations', 'mutationSignature', 'mutationSummaryImages',\n(_, $q, $scope, $state, $mdDialog, $mdToast, $pog, $smallMutations, $vardb, pog, report, ms, images, smallMutations, mutationSignature, mutationSummaryImages) => {\n\n  // Load Images into template\n  $scope.images = images;\n  $scope.pog = pog;\n  $scope.report = report;\n  $scope.smallMutations = {};\n  $scope.mutationSignature = mutationSignature;\n  $scope.ms = null;\n  $scope.mutationSummaryImages = {};\n\n  let processMutations = (muts) => {\n    let mutations = {\n      clinical: [],\n      nostic: [],\n      biological: [],\n      unknown: []\n    };\n\n    // Run over mutations and group\n    _.forEach(muts, (row, k) => {\n      if(!(row.mutationType in mutations)) mutations[row.mutationType] = [];\n      // Add to type\n      mutations[row.mutationType].push(row);\n    });\n\n    // Set Small Mutations\n    $scope.smallMutations = mutations;\n  };\n  \n  let pickCompatator = () => {\n    let search = _.find(ms, {comparator: report.tumourAnalysis.diseaseExpressionComparator});\n    \n    if(!search) search = _.find(ms, {comparator: 'average'});\n    \n    $scope.ms = search;\n  };\n  \n  let processMutationSummaryImages = (images) => {\n    \n    let ssorted = {\n      barplot: {\n        indel: [],\n        snv: [],\n        sv: [],\n      },\n      densityPlot: {\n        indel: [],\n        snv: [],\n        sv: [],\n      },\n      legend: {\n        indel_snv: [],\n        sv: [],\n      }\n    };\n    \n    let sorted = {\n      comparators: [],\n      indel: {\n        barplot: [],\n        densityPlot: [],\n      },\n      snv: {\n        barplot: [],\n        densityPlot: [],\n      },\n      sv: {\n        barplot: [],\n        densityPlot: []\n      },\n      legend: {\n        snv_indel: [],\n        sv: null\n      }\n    };\n    \n    _.forEach(images, (img) => {\n      \n      // If it's an SV image, skip!\n      if(img.filename.indexOf('_sv.') > -1) return;\n      \n      // Explode filename to extract comparator\n      let pieces = img.key.split('.');\n      \n      // If no comparator in key, set to null\n      img.comparator = pieces[2] || null;\n      \n      // If there's no comparator, and the file isn't an sv image, set the comparator to the value selected from tumour analysis (Backwards compatibility for v4.5.1 and older)\n      if(!img.comparator) img.comparator = report.tumourAnalysis.diseaseExpressionComparator; // If no comparator found in image, likely legacy and use report setting.\n      \n      // Legend image\n      if(img.filename.indexOf('legend') > -1 && img.filename.indexOf('snv_indel') > -1) return sorted.legend.snv_indel = img;\n      \n      // Set comparator to lowercase\n      if(img.comparator.toLowerCase() && !_.find(sorted.comparators, {name: img.comparator.toLowerCase()})) sorted.comparators.push({name: img.comparator.toLowerCase(), visible: false});\n      \n      if(pieces[1].indexOf('barplot_indel') > -1 || pieces[1] === 'bar_indel') sorted.indel.barplot.push(img);\n      if(pieces[1].indexOf('barplot_snv') > -1 || pieces[1] === 'bar_snv') sorted.snv.barplot.push(img);\n      \n      if(pieces[1].indexOf('density_plot_indel') > -1 || pieces[1] === 'indel') sorted.indel.densityPlot.push(img);\n      if(pieces[1].indexOf('density_plot_snv') > -1 || pieces[1] === 'snv') sorted.snv.densityPlot.push(img);\n      \n    });\n    \n    console.log(sorted);\n    \n    $scope.mutationSummaryImages = sorted;\n    \n  };\n  \n  \n  /**\n   * Retrieve specific mutation summary image\n   *\n   * @param {string} graph - The type of graph image to be retrieved (barplot, density graph, legend)\n   * @param {string} type - The type of analysis (snv, indel, sv)\n   * @param {string} comparator - OPTIONAL The comparator to be picked\n   *\n   * @returns\n   */\n  $scope.getMutationSummaryImage = (graph, type, comparator=null) => {\n    \n    //return _.find($scope.mutationSummaryImages[type][graph], {comparator: comparator});\n    return _.find($scope.mutationSummaryImages[type][graph], (c) => {\n      return (c.comparator.toLowerCase() === comparator.toLowerCase());\n    });\n    \n  };\n  \n  \n  processMutationSummaryImages(mutationSummaryImages);\n  processMutations(smallMutations);\n  pickCompatator();\n\n}]);\n","app.controller('controller.dashboard.report.genomic.spearman',\n['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'pog', 'images',\n(_, $q, $scope, $state, $mdDialog, $mdToast, $pog, pog, images) => {\n  \n  // Load Images into template\n  $scope.images = images;\n\n  // Convert full hex to 6chr\n  $scope.colourHex = (hex) => {\n    return hex.match(/([A-z0-9]{6}$)/)[0];\n  };\n  \n}]);\n","app.controller('controller.dashboard.report.genomic.structuralVariation',\n['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'pog', 'report', 'images', 'svs', 'ms', 'mutationSummaryImages',\n(_, $q, $scope, $state, $mdDialog, $mdToast, $pog, pog, report, images, svs, ms, mutationSummaryImages) => {\n\n  // Load Images into template\n  $scope.images = images;\n  $scope.pog = pog;\n  $scope.report = report;\n  $scope.ms = ms;\n  $scope.StrucVars = {};\n  \n  \n  let pickCompatator = () => {\n    let search = _.find(ms, {comparator: report.tumourAnalysis.diseaseExpressionComparator});\n    \n    if(!search) search = _.find(ms, {comparator: 'average'});\n    \n    $scope.ms = search;\n  };\n  \n  $scope.titleMap = {\n    clinical: 'Gene Fusions of Potential Clinical Relevance with Genome & Transcriptome Support',\n    nostic: 'Gene Fusions of Prognostic and Diagnostic Relevance',\n    biological: 'Gene Fusions with Biological Relevance',\n    fusionOmicSupport: 'Gene Fusions with Genome and Transcriptome Support'\n  };\n\n  let processMutationSummaryImages = (images) => {\n    \n    let sorted = {\n      comparators: [],\n      sv: {\n        barplot: [],\n        densityPlot: []\n      },\n      legend: {\n        sv: null\n      }\n    };\n    \n    _.forEach(images, (img) => {\n      \n      if(img.key.indexOf('sv') === -1) return;\n  \n      let pieces = img.key.split('.');\n      img.comparator = pieces[2] || null;\n      if(!img.comparator) img.comparator = report.tumourAnalysis.diseaseExpressionComparator; // If no comparator found in image, likely legacy and use report setting.\n  \n      if(img.comparator.toLowerCase() && !_.find(sorted.comparators, {name: img.comparator.toLowerCase()})) sorted.comparators.push({name: img.comparator.toLowerCase(), visible: false});\n  \n      if(pieces[1].indexOf('barplot_sv') > -1 || pieces[1] === 'bar_sv') sorted.sv.barplot.push(img);\n      if(pieces[1].indexOf('density_plot_sv') > -1 || pieces[1] === 'sv') sorted.sv.densityPlot.push(img);\n      \n      if(pieces[1].indexOf('legend_sv') > -1) sorted.legend.sv = img;\n  \n    });\n    \n    console.log('Sorted Images', sorted);\n    \n    $scope.mutationSummaryImages = sorted;\n    \n  };\n  \n  /**\n   * Retrieve specific mutation summary image\n   *\n   * @param {string} graph - The type of graph image to be retrieved (barplot, density graph, legend)\n   * @param {string} type - The type of analysis (snv, indel, sv)\n   * @param {string} comparator - OPTIONAL The comparator to be picked\n   *\n   * @returns\n   */\n  $scope.getMutationSummaryImage = (graph, type, comparator=null) => {\n    \n    if(comparator === null) {\n      let img = $scope.mutationSummaryImages[type][graph];\n      if(img && img.length === 1) return img[0];\n    }\n    return _.find($scope.mutationSummaryImages[type][graph], (c) => {\n      return (c.comparator.toLowerCase() === comparator.toLowerCase());\n    });\n\n  };\n  \n  \n  let processSvs = (structVars) => {\n\n    let svs = {\n      clinical: [],\n      nostic: [],\n      biological: [],\n      fusionOmicSupport: []\n    };\n\n    // Run over mutations and group\n    _.forEach(structVars, (row, k) => {\n      if(!(row.svVariant in svs)) svs[row.svVariant] = [];\n      // Add to type\n      svs[row.svVariant].push(row);\n    });\n\n    // Set Small Mutations\n    $scope.StrucVars = svs;\n  };\n\n  processSvs(svs);\n  pickCompatator();\n  processMutationSummaryImages(mutationSummaryImages);\n\n}]);\n","app.controller('controller.dashboard.report.genomic.summary',\n['_', '$q', '$state', '$scope', 'api.pog', 'api.summary.tumourAnalysis', 'api.summary.patientInformation', 'api.summary.mutationSummary', 'api.summary.genomicAterationsIdentified', '$mdDialog', '$mdToast', 'pog', 'report', 'gai', 'get', 'ms', 'pt', 'vc', 'mutationSignature', 'microbial',\n(_, $q, $state, $scope, $pog, $tumourAnalysis, $patientInformation, $mutationSummary, $gai, $mdDialog, $mdToast, pog, report, gai, get, ms, pt, vc, mutationSignature, microbial) => {\n\n  // Determine which interpreted prevalence value will be displayed\n  ms.snvPercentileCategory = (report.tumourAnalysis.diseaseExpressionComparator === 'average') ? ms.snvPercentileTCGACategory : ms.snvPercentileDiseaseCategory;\n  ms.indelPercentileCategory = (report.tumourAnalysis.diseaseExpressionComparator === 'average') ? ms.indelPercentileTCGACategory : ms.indelPercentileDiseaseCategory;\n\n  $scope.pog = pog;\n  $scope.report = report;\n  $scope.data = {\n    get: get,\n    ms: ms,\n    vc: vc,\n    pt: pt,\n    ta: report.tumourAnalysis,\n    pi: report.patientInformation,\n    microbial: (microbial !== null) ? microbial : {species: \"None\", integrationSite: \"None\"}\n  };\n  $scope.mutationSignature = mutationSignature;\n  $scope.mutationMask = null;\n  $scope.variantCounts = {\n    cnv: 0,\n    smallMutation: 0,\n    expressionOutlier: 0,\n    structuralVariant: 0\n  };\n\n  $scope.toMutations = () => {\n    $state.go('^.somaticMutations');\n  };\n\n  let variantCategory = (variant) => {\n    let cnvs = ['copy gain', 'copy loss', 'amplification', 'Homozygous Loss', 'Homozygous Gain'];\n\n    // Small Mutations\n    if (variant.geneVariant.match(/([A-z0-9]*)\\s(\\(\\p\\.[A-z]*[0-9]*[A-z_0-9]*\\*?\\))/g)) {\n      variant.type = \"smallMutation\";\n      return variant;\n    }\n\n    // Structural Variants\n    if (variant.geneVariant.match(/([A-z0-9]*\\:\\:[A-z0-9]*\\s\\(\\e([0-9]*|\\?)\\:\\e([0-9]*|\\?)\\))/g)) {\n      variant.type = \"structuralVariant\";\n      return variant;\n    }\n\n    // Expression Outliers\n    if (variant.geneVariant.toLowerCase().indexOf('expression') !== -1) {\n      variant.type = \"expressionOutlier\";\n      return variant;\n    }\n\n    // Return CNV mutation\n    variant.type = \"cnv\";\n    return variant;\n\n  };\n\n  // Process variants and create chunks\n  let processVariants = (variants) => {\n\n    let output = [];\n\n    // Reset counts\n    $scope.variantCounts = { cnv: 0, smallMutation: 0, expressionOutlier: 0, structuralVariant: 0 };\n\n    variants.forEach((variant, k) => {\n      // Add processed Variant\n      output.push(variantCategory(variant));\n\n      // Update counts\n      if (!$scope.variantCounts[gai[k].type]) $scope.variantCounts[gai[k].type] = 0;\n      $scope.variantCounts[gai[k].type]++;\n\n    });\n\n    return output;\n  };\n  $scope.geneVariants = processVariants(gai);\n\n\n  $scope.setMutationMask = (mask) => {\n    if($scope.mutationMask === mask) return $scope.mutationMask = null;\n    $scope.mutationMask = mask;\n  };\n\n  $scope.mutationFilter = (mutation) => {\n    return (mutation.type === $scope.mutationMask || $scope.mutationMask === null);\n  };\n\n  // Update Tumour Analysis Details\n  $scope.updateTa = ($event) => {\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/report/genomic/summary/tumourAnalysis.edit.html',\n      clickOutToClose: false,\n      controller: ['scope', (scope) => {\n\n        scope.ta = $scope.data.ta;\n\n        scope.cancel = () => {\n          $mdDialog.cancel('No changes were saved.');\n        };\n\n        scope.update = (f) => {\n          // Check for valid inputs by touching each entry\n          if (f.$invalid) {\n            f.$setDirty();\n            angular.forEach(f.$error, (field) => {\n              angular.forEach(field, (errorField) => {\n                errorField.$setTouched();\n              });\n            });\n            return;\n          }\n\n          console.log($tumourAnalysis);\n\n          // Send updated entry to API\n          $tumourAnalysis.update(pog.POGID, report.ident, scope.ta).then(\n            (result) => {\n              $mdDialog.hide('Entry has been updated');\n            },\n            (error) => {\n              alert('Unable to update. See console');\n              console.log(error);\n            }\n          );\n        }; // End update\n      }] // End controller\n\n    }).then((outcome) => {\n      if (outcome) $mdToast.show($mdToast.simple().textContent(outcome));\n    }, (error) => {\n      $mdToast.show($mdToast.simple().textContent(error));\n    });\n\n  }; // End edit tumour analysis\n\n\n  // Update Tumour Analysis Details\n  $scope.updateMs = ($event) => {\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/report/genomic/summary/mutationSignature.edit.html',\n      clickOutToClose: false,\n      controller: ['scope', (scope) => {\n\n        scope.ta = angular.copy($scope.data.ta); //\n        scope.mutationSignature = $scope.mutationSignature; // Array of all computed signal correlations\n\n        scope.cancel = () => {\n          $mdDialog.cancel('No changes were saved.');\n        };\n\n        scope.update = () => {\n\n          // Send updated entry to API\n          $tumourAnalysis.update($scope.pog.POGID, report.ident, scope.ta).then(\n            (result) => {\n              $mdDialog.hide({message: 'Entry has been updated', data: scope.ta});\n            },\n            (error) => {\n              alert('Unable to update. See console');\n              console.log(error);\n            }\n          );\n\n        }; // End update\n      }] // End controller\n\n    }).then((outcome) => {\n      if (outcome) $mdToast.show($mdToast.simple().textContent(outcome.message));\n      $scope.data.ta = outcome.data;\n    }, (error) => {\n      $mdToast.show($mdToast.simple().textContent(error));\n    });\n\n  }; // End edit tumour analysis\n\n  // Update Patient Information\n  $scope.updatePatient = ($event) => {\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/report/genomic/summary/patientInformation.edit.html',\n      clickOutToClose: false,\n      controller: ['scope', (scope) => {\n\n        scope.pi = angular.copy($scope.data.pi); //\n\n        scope.cancel = () => {\n          $mdDialog.cancel('No changes were saved.');\n        };\n\n\n        scope.update = () => {\n\n          // Send updated entry to API\n          $patientInformation.update($scope.pog.POGID, scope.pi).then(\n            (result) => {\n              $mdDialog.hide({message: 'Entry has been updated', data: scope.pi});\n            },\n            (error) => {\n              alert('Unable to update. See console');\n              console.log(error);\n            }\n          );\n\n        }; // End update\n      }] // End controller\n\n    }).then((outcome) => {\n      if (outcome) $mdToast.show($mdToast.simple().textContent(outcome.message));\n      $scope.data.pi = outcome.data;\n    }, (error) => {\n      $mdToast.show($mdToast.simple().textContent(error));\n    });\n\n  }; // End edit tumour analysis\n\n\n  $scope.data.gai = _.sortBy(gai, 'type');\n\n  /**\n   * Add Alteration\n   */\n  $scope.addAlteration = ($event) => {\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/report/genomic/summary/alteration.add.html',\n      clickOutToClose: false,\n      controller: ['scope', (scope) => {\n        scope.cancel = () => {\n          $mdDialog.cancel({message: 'No changes were saved.'});\n        };\n\n        // Perform Update/Change\n        scope.add = () => {\n\n          // Remove entry\n          $gai.create(pog.POGID, report.ident, scope.alteration).then(\n            (resp) => {\n              // Add to array of alterations\n              gai.push(resp);\n\n              // Reprocess variants\n              $scope.data.gai = processVariants(gai);\n              $scope.data.gai = _.sortBy(gai, 'type');\n\n              $mdDialog.hide({status: true, message: 'Added the new alteration.'});\n            },\n            (err) => {\n              console.log('Unable to remove entries', err);\n              $mdDialog.hide({status: false, message: 'Unable to create the new entry'});\n            }\n          );\n\n        }; // End update\n      }] // End controller\n\n    }).then((outcome) => {\n      if (outcome) $mdToast.show($mdToast.simple().textContent(outcome.message));\n    }, (error) => {\n      $mdToast.show($mdToast.simple().textContent('No changes where made.'));\n    });\n\n  };\n\n  /**\n   * Remove alteration and propagate into other sections\n   *\n   * @param $event\n   * @param alteration\n   */\n  $scope.removeAlteration = function($event, alteration) {\n\n    let tempAlteration = angular.copy(alteration);\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/report/genomic/summary/alteration.remove.html',\n      clickOutToClose: false,\n      controller: ['scope', (scope) => {\n        scope.alteration = alteration;\n\n        scope.cancel = () => {\n          $mdDialog.cancel({message: 'No changes were saved.'});\n        };\n\n        // Perform Update/Change\n        scope.update = (cascade) => {\n\n          // Remove entry\n          $gai.remove(pog.POGID, report.ident, alteration.ident, scope.comment, cascade).then(\n            (resp) => {\n              $scope.data.gai = _.reject($scope.data.gai, (r) => { return (r.ident === alteration.ident); });\n              gai = _.reject(gai, (r) => { return (r.ident === alteration.ident); });\n\n\n              // Remove from Get\n              if(cascade) $scope.data.get = _.reject($scope.data.get, (e) => { return (e.genomicEvent === alteration.geneVariant); });\n\n              // Subtract count\n              $scope.variantCounts[tempAlteration.type]--;\n\n              $mdDialog.hide({status: true, message: 'Successfully removed the '+ ((cascade) ? 'entries' : 'entry') + '.'});\n            },\n            (err) => {\n              console.log('Unable to remove entries', err);\n              $mdDialog.hide({status: true, message: 'Unable to remove the '+ ((cascade) ? 'entries' : 'entry') + '.'});\n            }\n          );\n\n        }; // End update\n      }] // End controller\n\n    }).then((outcome) => {\n      if (outcome) $mdToast.show($mdToast.simple().textContent(outcome.message));\n    }, (error) => {\n      $mdToast.show($mdToast.simple().textContent('No changes where made.'));\n    });\n\n  };\n\n}]);\n","app.controller('controller.dashboard.report.genomic.therapeutic.edit',\n['_', '$q', '$scope', '$mdDialog', '$mdToast', 'api.complete', 'api.therapeuticOptions', 'api.knowledgebase', 'pog', 'report', 'entry', 'newEntry',\n(_, $q, scope, $mdDialog, $mdToast, $complete, $therapeutic, $kb, pog, report, entry, newEntry) => {\n\n  scope.tab = 'listing';\n  scope.entry = (entry || { target: [], targetContext: null, biomarker: [], notes: null });\n  scope.type = (entry) ? entry.type : newEntry;\n  scope.create = (!newEntry);\n  scope.bioMarkerContexts = [\n    {entry: 'overexpressed', description:'a high fold-change alone is of significance'},\n    {entry: 'underexpressed', description:'a low fold-change alone is of significance'},\n    {entry: 'high percentile', description:'high percentile alone is of significance'},\n    {entry: 'low percentile', description:'low percentile alone is of significance'},\n    {entry: 'outlier high', description:'high outlier by both percentile and fold change'},\n    {entry: 'outlier low', description:'low outlier by both percentile and fold change'},\n    {entry: 'amplification', description:'(usually focal or extreme copy number)'},\n    {entry: 'hom-del', description:'homozygous deletion (reviewed as real)'},\n    {entry: 'copy gain', description:'any copy gain deemed significant'},\n    {entry: 'copy loss', description:'any copy loss deemed significant'},\n    {entry: 'LoF mutation', description:'loss-of-function mutation'},\n    {entry: 'GoF mutation', description:'gain-of-function mutation'},\n    {entry: 'SoF mutation', description:'switch-of-function mutation'},\n    {entry: 'DN mutation', description:'dominant-negative mutation'},\n    {entry: 'mutation', description:'significant mutation with no formal functional description'},\n    {entry: 'structural variant', description:'any significant structural variant'},\n    {entry: 'gene-fusion', description:'any significant gene fusion'},\n    {entry: 'mutation signature', description:'any significant mutation signature (specify type in previous field)'},\n    {entry: 'mutation burden', description:'any significant mutation burden'},\n    {entry: 'high expression outlier', description: 'N/A'},\n    {entry: 'low expression outlier', description: 'N/A'},\n    {entry: 'wildtype', description: 'N/A'}\n  ];\n\n  scope.bioMarkerContexts = _.sortBy(scope.bioMarkerContexts, 'entry');\n\n  scope.new = {\n    biomarkerContextValue: null,\n    biomarkerValue: null,\n  };\n\n  scope.removeBiomarkerContext = (marker, context) => {\n    delete scope.entry.biomarker[marker].context.splice(context,1);\n  };\n\n  scope.removeBiomarker = (marker) => {\n    delete scope.entry.biomarker.splice(marker,1);\n  };\n\n  scope.newBiomarkerContext = (marker) => {\n\n    // New Biomarker Entry\n    if(marker===null) {\n      scope.entry.biomarker.push({entry: null, context: [scope.new.biomarkerContextValue]});\n      scope.new.biomarkerContextValue = null; // Blank out!\n      return;\n    }\n\n    if(scope.new.biomarkerContextValue === null) return;\n    scope.entry.biomarker[marker].context.push(scope.new.biomarkerContextValue); // Add new entry\n    scope.new.biomarkerContextValue = null; // Blank out!\n  };\n\n  scope.newBiomarker = () => {\n    if(scope.new.biomarkerValue === null) return;\n    scope.entry.biomarker.push({entry: scope.new.biomarkerValue, context: []});\n    scope.new.biomarkerValue = null;\n  };\n\n  // Need to chipify the geneVar entries\n  let targets = [];\n  if(entry !== null) {\n    _.forEach(entry.target, (e) => {\n      if(e !== null) targets.push({entry: e});\n    });\n  }\n\n  let biomarkers = [];\n  // Transform chip for auto complete\n  scope.transformChip = (geneVar) => {\n    // If it is an object, it's already a known chip\n    if (angular.isObject(geneVar)) return geneVar;\n\n    // Otherwise, create a new one\n    return { geneVar: geneVar, type: 'new' }\n  };\n\n  scope.geneVar = {};\n\n  // Auto-complete search filter\n  scope.geneVar.filter = (query) => {\n    let deferred = $q.defer();\n    if(query.length < 3) deferred.resolve([]);\n\n    if(query.length >= 3) {\n      $kb.genevar(query).then(\n        (entries) => {\n          deferred.resolve(entries);\n        },\n        (err) => {\n          console.log('Unable to search for entries', err);\n        }\n      );\n    }\n    return deferred.promise;\n  };\n\n  scope.geneTarget = {};\n\n  scope.geneTarget.filter = (query) => {\n    return $q((resolve, reject) => {\n      resolve([]);\n    });\n  };\n\n  // Check, clean, and prepare save object\n  scope.save = () => {\n\n    let newTherapeutic = angular.copy(scope.entry);\n\n    // De-objectify targets\n    let targets = [];\n    _.forEach(scope.entry.target, (v)=> {\n      targets.push(v.geneVar);\n    });\n\n    newTherapeutic.target = targets;\n\n    // Is this a new entry?\n    if(newEntry !== false) {\n\n      newTherapeutic.type = newEntry; // Set Type passed by creator\n\n      // Save new entry\n      $therapeutic.create(pog.POGID, report.ident, newTherapeutic).then(\n        (result) => {\n          // New entry created!\n          $mdDialog.hide({status: 'create', data: result});\n        },\n        (err) => {\n          console.log('Unable to create new entry!');\n        }\n      );\n    } else {\n      // Update existing entry\n      $therapeutic.one(pog.POGID, report.ident, ).update(newTherapeutic.ident, newTherapeutic).then(\n        (result) => {\n          // New entry created!\n          $mdDialog.hide({status: 'update', data: result});\n        },\n        (err) => {\n          console.log('Unable to update entry!');\n        }\n      );\n    }\n  };\n\n  // Remove Entry from DB\n  scope.remove = () => {\n    let removed = angular.copy(entry);\n    $mdDialog.hide({status: 'deleted', data: {ident: removed.ident, type: removed.type}});\n\n    $therapeutic.one(pog.POGID, report.ident).remove(entry.ident).then(\n      (result) => {\n        console.log('Entry removed! within modal');\n        // Entry removed!\n        $mdDialog.hide({status: 'deleted', data: removedIdent});\n      },\n      (err) => {\n        console.log('Unable to update entry!');\n      }\n    );\n  };\n\n  scope.cancel = () => {\n    $mdDialog.cancel();\n  }\n\n}]); // End controller\n","app.controller('controller.dashboard.report.genomic.therapeutic',\n['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'pog', 'report', 'api.therapeuticOptions', 'therapeutic',\n(_, $q, $scope, $state, $mdDialog, $mdToast, $pog, pog, report, $therapeutic, therapeutic) => {\n\n  $scope.therapeutic = {\n    therapeutic: [],\n    chemoresistance: []\n  };\n\n  $scope.rowOptions = [];\n\n  // Sort into groups\n  let groupTherapeutics = () => {\n    _.forEach(therapeutic, (v) => {\n      if(v.type === 'therapeutic') {\n        let targets = [];\n        _.forEach(v.target, (e) => {\n          targets.push((angular.isObject(e)) ? e : {geneVar: e});\n        });\n        v.target = targets;\n        $scope.therapeutic.therapeutic.push(v);\n      }\n      if(v.type === 'chemoresistance') $scope.therapeutic.chemoresistance.push(v);\n    });\n  };\n\n  groupTherapeutics();\n\n  // Edit Therapeutic Targets\n  $scope.edit = ($event, entry) => {\n    $mdDialog.show({\n      targetEvent: $event,\n      clickOutsideToClose: false,\n      locals: {\n        newEntry: false,\n        entry: entry,\n        pog: pog,\n        report: report\n      },\n      templateUrl: 'dashboard/report/genomic/therapeutic/therapeutic.edit.html',\n      controller: 'controller.dashboard.report.genomic.therapeutic.edit'\n    }).then(\n      (result) => {\n        // If an existing entry was updated\n        if(result.status === 'updated') {\n          let data = result.data;\n\n          if(data.type === 'therapeutic') data.target = cleanTargets(data.target);\n\n          // Loop over entries in type, find matching ident, and replace\n          _.forEach($scope.therapeutic[data.type], (e, i) => {\n            if(e.ident === data.ident) $scope.therapeutic[data.type][i] = e;\n          });\n\n          $mdToast.show($mdToast.simple({textContent: 'Changes saved'}));\n        }\n\n        // Removing an entry\n        if(result.status === 'deleted') {\n          let data = result.data;\n         _.remove($scope.therapeutic[data.type], (e) => {return (e.ident === data.ident); });\n          $mdToast.show($mdToast.simple({textContent: 'The entry has been removed'}));\n        }\n      },\n      () => {\n        $mdToast.show($mdToast.simple({textContent: 'No changes were made.'}));\n      }\n    );\n  };\n\n  /**\n   * Turn collection into array of targets\n   *\n   * @param targets\n   * @returns {Array}\n   */\n  let cleanTargets = (targets) => {\n    let newTargets = [];\n    _.forEach(targets, (e) => {\n      newTargets.push((angular.isObject(e)) ? e : {geneVar: e});\n    });\n    return newTargets;\n  };\n\n  $scope.newEntry = ($event, type) => {\n\n    // Create new entry by type\n    $mdDialog.show({\n      targetEvent: $event,\n      clickOutsideToClose: false,\n      locals: {\n        newEntry: type,\n        entry: false,\n        pog: pog,\n        report: report\n      },\n      templateUrl: 'dashboard/report/genomic/therapeutic/therapeutic.edit.html',\n      controller: 'controller.dashboard.report.genomic.therapeutic.edit'\n    }).then(\n      (result) => {\n        let data = result.data;\n\n        // If therapeutic\n        if(data.type === 'therapeutic') {\n          data.target = cleanTargets(data.target);\n          $scope.therapeutic.therapeutic.push(data);\n        }\n        if(data.type === 'chemoresistance') $scope.therapeutic.chemoresistance.push(data);\n\n        $mdToast.show($mdToast.simple({textContent: 'New entry saved'}));\n      },\n      (cancel) => {\n        $mdToast.show($mdToast.simple({textContent: 'No changes were made'}));\n      }\n    );\n\n  };\n\n  // Order updated\n  $scope.updateSorting = ($item, $partFrom, $partTo, $indexFrom, $indexTo) => {\n\n    console.log('Item', $item);\n    console.log('partFrom', $partFrom);\n    console.log('partTo', $partTo);\n    console.log('indexFrom', $indexFrom);\n    console.log('indexTo', $indexTo);\n\n    // Loop over each and update their positions\n    let updates = [];\n\n    // Update Each Entry\n    _.forEach($partTo, (e, i) => {\n      e.rank = i;\n      updates.push($therapeutic.one(pog.POGID, report.ident, ).update(e.ident, e))\n    });\n\n    $q.all(updates).then(\n      (result) => {\n        $mdToast.show($mdToast.simple().textContent('Changed order saved'));\n      },\n      (err) => {\n        $mdToast.show($mdToast.simple().textContent('Unable to save the updated order'));\n      }\n    )\n\n  };\n\n\n}]);\n","app.controller('controller.dashboard.report.probe.appendices',\n  ['_', '$q', '$scope', 'api.pog', '$mdDialog', '$mdToast', 'pog', 'report', 'tcgaAcronyms',\n    (_, $q, $scope, $pog, $mdDialog, $mdToast, pog, report, tcga) => {\n\n      $scope.pog = pog;\n      $scope.report = report;\n      $scope.tcga = tcga;\n\n      $scope.hashClean = (i) => {\n        return String(i).replace('#','');\n      }\n\n    }\n  ]\n);\n","app.controller('controller.dashboard.report.probe.detailedGenomicAnalysis',\n  ['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'api.probe.alterations', 'pog', 'report', 'alterations', 'approvedThisCancer', 'approvedOtherCancer',\n    (_, $q, $scope, $state, $mdDialog, $mdToast, $pog, $alterations, pog, report, alterations, approvedThisCancer, approvedOtherCancer) => {\n\n      $scope.approvedThisCancer = {};\n      $scope.approvedOtherCancer = {};\n      $scope.pog = pog;\n      $scope.report = report;\n      $scope.samples = [];\n      $scope.alterations = {therapeutic: {}, prognostic: {}, diagnostic: {}, biological: {}};\n\n      // Create new entry...\n      $scope.createNewKBEntry = ($event) => {\n\n        let gene = {};\n\n        $mdDialog.show({\n          targetEvent: $event,\n          templateUrl: 'dashboard/report/genomic/detailedGenomicAnalysis/alterations/alterations.edit.html',\n          clickOutToClose: false,\n          locals: {\n            pog: $scope.pog,\n            gene: gene,\n            samples: $scope.samples,\n            rowEvent: 'new',\n            report: report\n          },\n          controller: 'controller.dashboard.reports.genomic.detailedGenomicAnalysis.alterations.edit' // End controller\n        });\n      };\n\n      // Resort Groupings\n      $scope.trigger = (val) => {\n        if(val === false) return;\n\n        // Loop over defined alterations\n        _.forEach($scope.alterations, (v, k) => {\n          // Loop over alterion type\n          _.forEach(v, (row, rowID) => {\n            // Is there a mismatch?\n            if(row && row.alterationType !== k) {\n\n              // Move to new alteration\n              $scope.alterations[row.alterationType].unshift(row);\n\n              $scope.alterations[k].splice(rowID,1);\n            }\n\n          });\n\n        });\n\n      };\n\n      // Filter reference type\n      $scope.refType = (ref) => {\n        if(ref.match(/^[0-9]{8}\\#/)) {\n          return 'pmid';\n        }\n        if(ref.match(/^(?:http(?:s)?:\\/\\/)?(?:[^\\.]+\\.)?[A-z0-9]*\\.[A-z]{2,7}/)) {\n          return 'link';\n        }\n        return 'text';\n      };\n\n      // Prepend a link with http:// if necessary\n      $scope.prependLink = (link) => {\n        return (link.indexOf('http://') == -1) ? 'http://' + link : link;\n      };\n\n      // Clean up PMIDs\n      $scope.cleanPMID = (pmid) => {\n        return pmid.match(/^[0-9]{8}/)[0];\n      };\n\n      // Group Alterations by type\n      let groupAlterations = (collection, alterations) => {\n\n        alterations.forEach((row) => {\n\n          // Modify type\n\n          // Does grouping exist?\n          if(!(row.gene + '-' + row.variant in collection)) {\n            row.children = [];\n            return collection[row.gene + '-' + row.variant] = row; // Add row to collection\n          }\n\n          if(row.gene + '-' + row.variant in collection) return collection[row.gene + '-' + row.variant].children.push(row);\n\n        });\n\n        return _.values(collection);\n\n      };\n\n      // Group Entries by Type\n      let groupEntries = (alterations) => {\n        // Process the entries for grouping\n        alterations.forEach((row) => {\n\n          // Add to samples if not present\n          if($scope.samples.indexOf(row.sample) === -1) $scope.samples.push(row.sample);\n\n          // Grouping\n          if(!(row.alterationType in $scope.alterations)) $scope.alterations[row.alterationType] = {};\n\n\n          // Check if it exists already?\n          if(!(row.gene+'-'+row.variant in $scope.alterations[row.alterationType])) {\n            row.children = [];\n            return $scope.alterations[row.alterationType][row.gene+'-'+row.variant] = row;\n          }\n\n          // Categorical entry already exists\n          if(row.gene+'-'+row.variant in $scope.alterations[row.alterationType]) {\n            return $scope.alterations[row.alterationType][row.gene+'-'+row.variant]\n              .children[$scope.alterations[row.alterationType][row.gene+'-'+row.variant].children.length] = row;\n          }\n\n        });\n\n        _.forEach($scope.alterations, (values, k) => {\n          $scope.alterations[k] = _.values(values);\n          //console.log('Iteree: ', k, values, _.values(values));\n        });\n\n      };\n\n      // Group Entries\n      groupEntries(alterations);\n\n      // Group Approved\n      $scope.approvedThisCancer = groupAlterations($scope.approvedThisCancer, approvedThisCancer);\n      $scope.approvedOtherCancer = groupAlterations($scope.approvedOtherCancer, approvedOtherCancer);\n\n    }]);\n","app.controller('controller.dashboard.report.probe.meta',\n['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'api.pog_analysis_report', 'pog', 'report',\n(_, $q, $scope, $state, $mdDialog, $mdToast, $pog, $report, pog, report) => {\n\n  $scope.pog = pog;\n  $scope.report = report;\n  $scope.reportSettingsChanged = false;\n\n  let reportCache = angular.copy(report);\n\n  $scope.checkChange = () => {\n\n    if($scope.report.type !== reportCache.type) $scope.reportSettingsChanged = true;\n    if($scope.report.state !== reportCache.state) $scope.reportSettingsChanged = true;\n    if($scope.report.reportVersion !== reportCache.reportVersion) $scope.reportSettingsChanged = true;\n    if($scope.report.kbVersion !== reportCache.kbVersion) $scope.reportSettingsChanged = true;\n\n    if($scope.reportSettingsChanged && JSON.stringify($scope.report) === JSON.stringify(reportCache)) {\n      $scope.reportSettingsChanged = false;\n    }\n\n  };\n\n  $scope.updateSettings = () => {\n\n    $scope.reportSettingsChanged = false;\n\n    // Send updated settings to API\n    $report.update($scope.report).then(\n      (result) => {\n        // Report successfully updated\n        $scope.report = result;\n        reportCache = angular.copy(result);\n\n        $mdToast.show($mdToast.simple().textContent('Report settings have been updated.'));\n      },\n      (err) => {\n        // Failed to update, restore from cache.\n        $scope.report = angular.copy(reportCache);\n        $mdToast.show($mdToast.simple().textContent('The report settings could not be updated.'));\n      }\n    )\n\n  }\n\n\n}]);\n","app.controller('controller.dashboard.report.probe.summary',\n['_', '$q', '$state', '$scope', 'api.pog', '$mdDialog', '$mdToast', 'pog', 'report', 'testInformation', 'genomicEvents', 'api.probe.signature', 'api.summary.patientInformation', 'api.summary.genomicEventsTherapeutic', 'signature',\n(_, $q, $state, $scope, $pog, $mdDialog, $mdToast, pog, report, testInformation, genomicEvents, $signature, $patientInformation, $get, signature) => {\n\n  $scope.pog = pog;\n  $scope.pi = pog.patientInformation;\n  $scope.report = report;\n  $scope.testInformation = testInformation;\n  $scope.genomicEvents = genomicEvents;\n  $scope.signature = signature;\n\n  // Update Patient Information\n  $scope.updatePatient = ($event) => {\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/report/genomic/summary/patientInformation.edit.html',\n      clickOutToClose: false,\n      controller: ['scope', (scope) => {\n\n        scope.pi = angular.copy($scope.report.patientInformation); //\n\n        scope.cancel = () => {\n          $mdDialog.cancel('No changes were saved.');\n        };\n\n        scope.update = () => {\n\n          // Send updated entry to API\n          $patientInformation.update($scope.pog.POGID, report.ident, scope.pi).then(\n            (result) => {\n              $mdDialog.hide({message: 'Entry has been updated', data: scope.pi});\n            },\n            (error) => {\n              alert('Unable to update. See console');\n              console.log(error);\n            }\n          );\n\n        }; // End update\n      }] // End controller\n\n    }).then((outcome) => {\n      if (outcome) $mdToast.show($mdToast.simple().textContent(outcome.message));\n      $scope.data.pi = outcome.data;\n    }, (error) => {\n      $mdToast.show($mdToast.simple().textContent(error));\n    });\n\n  }; // End edit tumour analysis\n\n\n  // Sign The comments\n  $scope.sign = (role) => {\n\n    // Send signature to API\n    $signature.sign(pog.POGID, report.ident, role).then(\n      (result) => {\n        $scope.signature = result;\n      }\n    )\n  };\n\n  // Sign The comments\n  $scope.revokeSign = (role) => {\n\n    // Send signature to API\n    $signature.revoke(pog.POGID, report.ident, role).then(\n      (result) => {\n        $scope.signature = result;\n      }\n    )\n  };\n\n\n\n  // Update Patient Information\n  $scope.modifyEvent = ($event, event) => {\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/report/probe/summary/summary.events.html',\n      clickOutToClose: false,\n      controller: ['scope', (scope) => {\n\n        scope.event = angular.copy(event);\n\n        scope.cancel = () => {\n          $mdDialog.cancel('No changes were saved.');\n        };\n\n        scope.update = () => {\n\n          // Send updated entry to API\n          $get.update($scope.pog.POGID, report.ident, event.ident, scope.event).then(\n            (result) => {\n              $mdDialog.hide({message: 'Entry has been updated', data: result});\n            },\n            (error) => {\n              alert('Unable to update. See console');\n              console.log(error);\n            }\n          );\n\n        }; // End update\n      }] // End controller\n\n    }).then((outcome) => {\n      if (outcome) $mdToast.show($mdToast.simple().textContent(outcome.message));\n      _.forEach($scope.genomicEvents, (e, i) => {\n        if(e.ident === outcome.data.ident) $scope.genomicEvents[i] = outcome.data;\n      });\n    }, (error) => {\n      $mdToast.show($mdToast.simple().textContent('No changes were saved.'));\n    });\n\n  }; // End edit tumour analysis\n\n}]);\n","app.controller('controller.dashboard.report.genomic.expressionAnalysisv1',\n  ['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'pog', 'report', 'ms', 'outliers', 'protein', 'drugTargets', 'densityGraphs',\n    (_, $q, $scope, $state, $mdDialog, $mdToast, $pog, pog, report, ms, outliers, protein, drugTargets, densityGraphs) => {\n\n      // Load Images into template\n      $scope.pog = pog;\n      $scope.report = report;\n      $scope.expOutliers = {};\n      $scope.expProtein = {};\n      $scope.drugTargets = drugTargets;\n      $scope.densityGraphs = _.chunk(_.values(densityGraphs),2);\n\n      $scope.titleMap = {\n        clinical: 'RNA Expression Level Outliers of Potential Clinical Relevance',\n        nostic: 'RNA Expression Level Outliers of Prognostic or Diagnostic Relevance',\n        biological: 'RNA Expression Level Outliers of Biological Relevance',\n      };\n      \n      $scope.proteinTitleMap = {\n        clinical: 'Protein Expression Level Outliers of Potential Clinical Relevance',\n        nostic: 'Protein Expression Level Outliers of Prognostic or Diagnostic Relevance',\n        biological: 'Protein Expression Level Outliers of Biological Relevance',\n      };\n\n      // Convert full hex to 6chr\n      $scope.colourHex = (hex) => {\n        return hex.match(/([A-z0-9]{6}$)/)[0];\n      };\n\n      $scope.searchDrugs = (query) => {\n\n        return (drug) => {\n          if (!query) return true;\n          // Rever to false return\n          let result = false;\n\n          // Gene Name\n          if (drug.gene.toLowerCase().indexOf(query.toLowerCase()) !== -1) result = true;\n\n          // LOH region\n          if (drug.lohRegion.toLowerCase().indexOf(query.toLowerCase()) !== -1) result = true;\n\n          // Drug Name\n          if (drug.drugOptions.toLowerCase().indexOf(query.toLowerCase()) !== -1) result = true;\n\n          return result;\n\n        };\n      };\n\n      // Sort outliers into categories\n      let processExpression = (input, type) => {\n\n        let expressions = {\n          clinical: [],\n          nostic: [],\n          biological: []\n        };\n        \n        let typekey = 'outlier';\n        if(type === 'outlier') typekey = 'outlierType';\n        if(type === 'protein') typekey = 'proteinType';\n        \n        // Run over mutations and group\n        _.forEach(input, (row, k) => {\n          if(!(row[typekey] in expressions)) expressions[row[typekey]] = [];\n          // Add to type\n          expressions[row[typekey]].push(row);\n        });\n\n        // Set Small Mutations\n  \n        if(type === 'outlier') $scope.expOutliers = expressions;\n        if(type === 'protein') $scope.expProtein = expressions;\n        \n      };\n  \n      processExpression(outliers, 'outlier');\n      processExpression(protein, 'protein');\n\n    }\n  ]\n);\n","app.controller('controller.dashboard.report.genomic.expressionAnalysis',\n  ['_', '$q', '$scope', '$state', '$mdDialog', '$mdToast', 'api.pog', 'pog', 'report', 'ms', 'outliers', 'drugTargets', 'densityGraphs',\n    (_, $q, $scope, $state, $mdDialog, $mdToast, $pog, pog, report, ms, outliers, drugTargets, densityGraphs) => {\n      \n      // Load Images into template\n      $scope.pog = pog;\n      $scope.report = report;\n      \n      $scope.expOutliers = {};\n      $scope.drugTargets = drugTargets;\n      $scope.densityGraphs = _.chunk(_.values(densityGraphs),2);\n      \n      $scope.expSummaryMap = {\n        clinical: 'Expression Level Outliers of Potential Clinical Relevance',\n        nostic: 'Expression Level Outliers of Prognostic or Diagnostic Relevance',\n        biological: 'Expression Level Outliers of Biological Relevance',\n      };\n      \n      $scope.mRNAOutliersMap = {\n        upreg_onco: 'Up-Regulated Oncogenes',\n        downreg_tsg: 'Down-Regulated Tumour Suppressor Genes'\n      };\n      // Convert full hex to 6chr\n      $scope.colourHex = (hex) => {\n        return hex.match(/([A-z0-9]{6}$)/)[0];\n      };\n      \n      $scope.getPtxComparator = () => {\n        \n        if(outliers.length === 0) return {comparator: 'N/A', sumSamples: 0};\n        \n        let comparator = (outliers[0].ptxPercCol) ? outliers[0].ptxPercCol.substring(outliers[0].ptxPercCol.lastIndexOf(\"PTX_POG_\")+8, outliers[0].ptxPercCol.lastIndexOf(\"_percentile\")) : \"N/A\";\n        \n        return comparator;\n      };\n      \n      $scope.searchDrugs = (query) => {\n        \n        return (drug) => {\n          if (!query) return true;\n          // Rever to false return\n          let result = false;\n          \n          // Gene Name\n          if (drug.gene.toLowerCase().indexOf(query.toLowerCase()) !== -1) result = true;\n          \n          // LOH region\n          if (drug.lohRegion.toLowerCase().indexOf(query.toLowerCase()) !== -1) result = true;\n          \n          // Drug Name\n          if (drug.drugOptions.toLowerCase().indexOf(query.toLowerCase()) !== -1) result = true;\n          \n          return result;\n          \n        };\n      };\n      \n      // Sort outliers into categories\n      let processExpression = (input, type) => {\n        \n        let expressions = {\n          clinical: [],\n          nostic: [],\n          biological: [],\n          upreg_onco: [],\n          downreg_tsg: []\n        };\n        \n        let typekey = 'outlierType';\n        if(type === 'outlier') typekey = 'outlierType';\n        \n        // Run over mutations and group\n        _.forEach(input, (row, k) => {\n          if(!(row[typekey] in expressions)) expressions[row[typekey]] = [];\n          // Add to type\n          expressions[row[typekey]].push(row);\n        });\n        \n        $scope.expOutliers = expressions;\n        \n      };\n      \n      let processGraphs = () => {\n        \n        let graphs = {};\n        \n        _.forEach(densityGraphs, (graph) => {\n          let gene = graph.filename.split('.')[0];\n          graphs[gene] = graph;\n        });\n        \n        $scope.densityGraphs = graphs;\n        \n      };\n      \n      processGraphs();\n      processExpression(outliers, 'outlier');\n      \n    }\n  ]\n);\n","app.controller('controller.dashboard.report.genomic.discussion',\n['_', '$q', '$scope', 'pog', 'report', '$mdDialog', '$mdToast', 'api.presentation', 'discussions', 'user',\n(_, $q, $scope, pog, report, $mdDialog, $mdToast, $presentation, discussions, user) => {\n  \n  $scope.pog = pog;\n  $scope.report = report;\n  $scope.discussions = discussions;\n  $scope.new = { body: null };\n  $scope.user = user;\n  \n  $scope.add = (f) => {\n    \n    console.log($scope.new);\n    \n    let data = {\n      body: $scope.new.body\n    };\n    \n    $presentation.discussion.create(pog.POGID, report.ident, data)\n      .then((result) => {\n        $scope.discussions.push(result);\n        $scope.new.body = null;\n      })\n      .catch((e) => {\n        $mdToast.showSimple('Unable to add new discussion entry');\n      });\n    \n  };\n  \n  \n}]);\n","app.controller('controller.dashboard.reports.genomic.detailedGenomicAnalysis.alterations.edit', \n['_', '$scope', '$mdDialog', '$mdToast', 'api.complete', 'api.pubmed', 'api.kb.associations', 'api.knowledgebase', 'api.user', '$interval', '$timeout', 'gene', 'rowEvent', 'samples', 'api.detailedGenomicAnalysis.alterations', 'pog', 'report',\n(_, scope, $mdDialog, $mdToast, $complete, $pubmed, $kbAssoc, $kb, $user, $interval, $timeout, gene, rowEvent, samples, $dgaAPC, pog, report) => {\n  \n  scope.gene = angular.copy(gene);\n  scope.samples = samples;\n  scope.formAction = (rowEvent == 'update') ? 'Update' : 'Create';\n  scope.$alterations = $complete.get('alterations');\n  scope.disableRefTitle = false;\n  scope.reference = {};\n  scope.pog = pog;\n\n  scope.requiredNew = !(rowEvent === 'new'); // For tagging ng-required on values that are optional for newly created entries.\n\n  scope.stages = [\n    {title: 'Report Details', description:'Details that appear in the report', id: \"report\"},\n    {title: 'Reference Details', description: 'Specifics about the source', id: \"reference\"},\n    {title: 'Knowledgebase Entry', description: 'KB database column values', id: \"kb\"}\n  ];\n  let activeStage = scope.activeStage = 0;\n\n  scope.$knowledgebase = $complete.get('knowledgebase');\n  scope.kb = {\n    context: null,\n    events_expression: (rowEvent === 'create') ? null : gene.kb_event_key,\n    type: null,\n    relevance: null,\n    context: null,\n    disease_list: null,\n    evidence: null,\n    id_type: null,\n    id: null,\n    id_title: null,\n    status: 'new',\n    summary: null,\n    update_comments: null,\n    comments: null,\n    user: $user._me.username,\n  };\n\n  scope.events = {\n    valid: false,\n    dirty: true,\n    pristine: true,\n  };\n\n  scope.lastStage = () => {\n    scope.activeStage--;\n  };\n  scope.nextStage = () => {\n    let form;\n    // Try to trigger submit...\n    switch(scope.activeStage) {\n      case 0:\n        form = scope.reportForm;\n        break;\n      case 1:\n        form = scope.referenceForm;\n        break;\n      case 2:\n        form = scope.kbForm;\n        break;\n    }\n\n    form.$setSubmitted();\n    if(form.$valid) {\n      scope.activeStage++;\n    }\n    if(!form.$valid) $mdToast.show($mdToast.simple({textContent:'Please check all the fields for errors'}));\n  };\n\n  scope.submit = () => {\n    scope.kbForm.$setSubmitted();\n\n    if(!scope.kbForm.$valid) $mdToast.show($mdToast.simple({textContent:'Please check all the fields for errors'}));\n\n    // All are valid\n    if(scope.kbForm.$valid) {\n\n      // Remove gene children element from controller element\n      delete scope.gene.children;\n\n      scope.gene.kb_data = scope.kb;\n      scope.gene.kb_data.id = scope.reference.type;\n      scope.gene.kb_data.id_type = scope.gene.reference;\n      scope.gene.kb_data.id_title = scope.reference.title;\n      scope.gene.kb_data.evidence = scope.gene.evidence;\n      scope.gene.kb_data.update_comments = scope.gene.comment;\n      scope.gene.kb_data.summary = scope.reference.summary;\n\n      console.log('submitting gene entry', scope.gene);\n      // Send updated entry to API\n      if(rowEvent === 'new') {\n        $dgaAPC.one(scope.pog.POGID, report.ident, gene.ident).create(scope.gene).then(\n          (result) => {\n            $mdDialog.hide('Entry has been updated');\n          },\n          (error) => {\n            alert('System Error - Unable to update. See console');\n            console.log(error);\n          }\n        );\n      } else {\n        $dgaAPC.one(scope.pog.POGID, report.ident, gene.ident).update(scope.gene).then(\n          (result) => {\n            $mdDialog.hide('Entry has been updated');\n          },\n          (error) => {\n            alert('System Error - Unable to update. See console');\n            console.log(error);\n          }\n        );\n      }\n\n    }\n  };\n\n  // Watch Values and Build KB Entries\n  scope.$watchGroup(['gene.variant_type', 'gene.gene', 'gene.kbVariant', 'gene.alterationType', 'gene.therapeuticContext', 'gene.disease', 'gene.evidence', 'gene.association'], (newVals, oldVals) => {\n        \n    scope.kb.events_expression = newVals[0] + '_' + newVals[1] + ':' + newVals[2];\n    \n    scope.kb.type = newVals[3];\n    scope.kb.context = newVals[4];\n    scope.kb.disease_list = newVals[5];\n    scope.kb.evidence = newVals[6];\n    scope.kb.relevance = newVals[7];\n    \n  });\n  \n  // Close Dialog\n  scope.cancel = () => {\n    $mdDialog.cancel('No changes have been made.');\n  };\n  \n  // Filter Auto-compelte for relevances\n  scope.findRelevance = (searchText) => {\n    return searchText ? scope.$alterations.association.filter( filterFunction(searchText) ) : scope.$alterations.association; \n  };\n  \n  \n  // Filter Auto-compelte for relevances\n  scope.findDisease = (searchText) => {\n    return searchText ? scope.$alterations.disease.filter( filterFunction(searchText) ) : scope.$alterations.disease; \n  };\n  \n  // Autocomplete Filter\n  let filterFunction = (query) => {\n    \n    let lowerCaseQuery = angular.lowercase(query); // Prep input to lowercase\n    \n    // Return search function\n    return (entry) => {            \n      return (entry.indexOf(lowerCaseQuery) > -1);\n    }\n  };\n\n  // Gene association\n  scope.$watch('gene.association', (newVal, oldVal) => {\n\n    let kbLookup = $kbAssoc.association(newVal);\n    console.log('KBLookup result', kbLookup);\n    if(kbLookup) {\n      if(kbLookup == '*') {\n        // Release Relevance Lock\n        scope.relevanceLock=false;\n        scope.gene.alterationType = null;\n        return;\n      }\n      // Maintain Relevance Lock\n      scope.relevanceLock=true;\n      scope.gene.alterationType = kbLookup;\n    }\n    // No match found\n    if(kbLookup === false) {\n      scope.relevanceLock=false;\n      scope.gene.alterationType = null;\n      return;\n    }\n\n  });\n  \n  // Check for pubmed entry if set\n  scope.checkPMID = () => {\n\n    // Disable loading bar\n    scope.refLoading = false;\n\n    if(scope.gene.reference === '' || scope.gene.reference === undefined || scope.gene.reference.length === 0) {\n      scope.disableRefTitle = false;\n      scope.reference.title = \"\";\n      scope.reference.type='other';\n      return;\n    }\n\n    // Define PubMed ID\n    let pmid;\n    \n    // Is this a PMID?\n    if(!scope.gene.reference.match(/^[0-9]{5,8}(\\#?)/)) {\n      scope.disableRefTitle = false;\n      scope.reference.title = \"\";\n      scope.reference.type='other';\n      return\n    }\n    \n    pmid = scope.gene.reference.match(/^[0-9]{5,8}/)[0];\n    \n    // Show reference loading bar\n    scope.refLoading = true;\n\n    // Get PMID and process\n    $pubmed.article(pmid).then(\n      (article) => {\n        scope.disableRefTitle = true;\n        scope.reference.title = article.title;\n        scope.reference.type = 'pubmed';\n        scope.refLoading = false;\n      },\n      (err) => {\n        console.log('Unable to retrieve PubMed Article: ', err);\n      }\n    );\n  };\n\n  // When the modal opens, watch for the events-expression value to load and validate it.\n  scope.$watch('kb.events_expression', (newval, oldval) => {\n\n    // Are we transitioning from an empty form to a prefilled?\n    if((oldval === undefined || oldval === null) && (newval !== undefined && newval !== null)) {\n      scope.validateKBEvents();\n    } else {\n      // If not, are we just looking at a normal typing change?\n      if(scope.events.pristine) scope.validateKBEvents();\n    }\n\n    // If the previous value was null/undefined, mark as no longer pristine.\n    if(newval !== null && newval !== undefined) scope.events.pristine = false;\n  });\n\n\n  // Validate KB Events string\n  scope.validateKBEvents = () => {\n    scope.events.dirty = true;\n    scope.events.valid = false;\n\n    // Try to validate\n    $kb.validate.events(scope.kb.events_expression).then(\n      (result) => {\n        scope.events.dirty = false;\n        scope.events.valid = true;\n      },\n      (err) => {\n        scope.events.dirty = false;\n        scope.events.valid = false;\n      }\n    )\n  };\n\n\n  // Trigger Pubmed Check\n  scope.checkPMID();\n  \n}]); // End controller\n","app.controller('controller.dashboard.reports.genomic.detailedGenomicAnalysis.alterations', \n  ['_', '$scope', '$mdDialog', '$mdToast', 'alterations', (_, $scope, $mdDialog, $mdToast, $alterations) => {\n  \n  console.log('Loaded Genomic/DGA/APC controller!');\n  \n  let pog = 'POG129';\n  $scope.pog = pog;\n  $scope.genes = {};\n  \n  $scope.alterationUpdate = ($event, gene) => {\n    \n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/reports/genomic/detailedGenomicAnalysis/alterations/alterations.edit.html',\n      locals: {\n        pog: pog,\n        gene: gene\n      },\n      clickOutToClose: false,\n      controller: 'controller.dashboard.reports.genomic.detailedGenomicAnalysis.alterations.edit'\n    }).then((outcome) => {\n      if(outcome) $mdToast.show($mdToast.simple().textContent(outcome));\n    }, (error) => {\n      $mdToast.show($mdToast.simple().textContent(error));\n    });\n  };\n  \n  \n  alterations.forEach((row) => {\n        \n    // Check if it exists already?\n    if(!(row.gene+'-'+row.variant in $scope.genes)) {\n      row.children = [];\n      return $scope.genes[row.gene+'-'+row.variant] = row;\n    }\n    \n    \n    if(row.gene+'-'+row.variant in $scope.genes) {\n      return $scope.genes[row.gene+'-'+row.variant].children[$scope.genes[row.gene+'-'+row.variant].children.length] = row;\n    }\n    \n  });\n  \n  \n}]);\n","app.controller('controller.dashboard.report.genomic.slide',\n['_', '$q', '$scope', 'pog', 'report', '$mdDialog', '$mdToast', 'api.presentation', 'slides', 'FileUploader', 'api.session',\n(_, $q, $scope, pog, report, $mdDialog, $mdToast, $presentation, slides, FileUploader, $session) => {\n  \n  $scope.pog = pog;\n  $scope.report = report;\n  $scope.slides = slides;\n  $scope.new = { name: \"\" };\n  \n  \n  $scope.add_step = 'select';\n  $scope.progress = 0;\n  $scope.filename = \"\";\n  \n  // Remove a slide entry\n  $scope.remove = (slide) => {\n    \n    let confirm = $mdDialog.confirm()\n      .title('Confirm Remove')\n      .textContent('Are you sure you want to remove this slide?')\n      .ok('Yes')\n      .cancel('Cancel');\n    \n    $mdDialog.show(confirm)\n      .then((result) => {\n        $presentation.slide.remove(pog.POGID, report.ident, slide.ident)\n          .then((result) => {\n            $scope.slides.splice(_.findKey($scope.slides, {ident: slide.ident}), 1);\n          })\n          .catch((e) => {\n            $mdToast.showSimple('Failed to remove the slide due to an internal server error');\n          });\n      })\n      .catch((e) => {\n        $mdToast.showSimple('No changes made');\n      });\n    \n  };\n  \n  let allowedImageFormats = [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/svg'\n  ];\n  \n  // Cancel Dialog\n  $scope.cancel = () => {\n    $mdDialog.cancel('Canceled Edit - No changes made.');\n  };\n  \n  \n  let selectedItem = null;\n  let uploader = {};\n  \n  let setupUploader = () => {\n    let u = $scope.uploader = new FileUploader({\n      url: `${CONFIG.ENDPOINTS.API}/POG/${pog.POGID}/report/${report.ident}/genomic/presentation/slide`\n    });\n  \n    u.headers['Authorization'] = $session.getToken();\n    u.method = 'POST';\n    u.alias = \"file\";    // Name of the file in the POST\n    \n    selectedItem = null;\n    \n    $scope.progress = 0;\n    \n    return u;\n  };\n  \n  \n  uploader = setupUploader();\n  \n  // Sync filter\n  uploader.filters.push({\n    name: 'syncFilter',\n    fn: function(item, options) {\n      \n      uploader.formData = [{name: $scope.new.name}];\n      if(allowedImageFormats.indexOf(item.type) === -1) {\n        $mdToast.showSimple('Invalid file format provided. Must be an image of type: ' + _.join(allowedImageFormats, ', '));\n        return false;\n      }\n      return true;\n    }\n  });\n  \n  uploader.onErrorItem = function(fileItem, response, status, headers) {\n    console.info('onErrorItem', fileItem, response, status, headers);\n    $mdToast.showSimple('Unable to upload the file: ' + response.message);\n  };\n  \n  // Kick off upload\n  uploader.onAfterAddingFile = (fileItem) => {\n    $scope.filename = fileItem.file.name;\n    selectedItem = fileItem;\n    \n    $scope.add_step = \"upload\"; // Now in the uploading action\n  };\n  \n  uploader.onProgressItem = (fileItem, progress) => {\n    $scope.progress = progress;\n  };\n  \n  // Initiate Upload\n  $scope.initiateUpload = () => {\n    $scope.startedUpload = true;\n    \n    uploader.alias = \"file\";    // Name of the file in the POST\n    uploader.formData = [{name: $scope.new.name}];\n    uploader.uploadItem(selectedItem);\n  };\n  \n  // Only allow 1 upload. When Finished\n  uploader.onCompleteItem = (fileItem, response, status, headers) => {\n    // Add to tabs and notify user of great success\n    $mdToast.showSimple('The slide was successfully uploaded');\n    $scope.slides.push(response);\n    $scope.new.name = \"\";\n    $scope.add_step = 'select';\n    \n    // Cleanup\n    uploader.clearQueue();\n    selectedItem = null;\n    $scope.progress = 0;\n    \n  };\n  \n  \n  \n}]);\n","app.controller('controller.print.POG.report.genomic.analystComments',\n['_', '$scope', '$sce', 'pog', 'report', 'comments', 'api.summary.analystComments',\n(_, $scope, $sce, pog, report, comments, $comments) => {\n\n  // Data\n  $scope.comments = comments;\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.analystParagraphs = [];\n\n  let rawParagraphs = (comments) ? comments.comments.replace(\"<p>\", \"\").split(\"</p>\") : [\"<h1> Draft Report</h1>\", \"No comments yet.\"];\n\n  _.forEach(rawParagraphs, (p) => {\n    if(p.length > 0) $scope.analystParagraphs.push($sce.trustAsHtml(p));\n  });\n\n}]);","app.controller('controller.print.POG.report.genomic.appendices',\n['_', '$scope', 'pog', 'report', 'tcgaAcronyms',\n(_, $scope, pog, report, tcgaAcronyms) => {\n\n  // Data\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.tcgaAcronyms = tcgaAcronyms;\n\n  $scope.config = report.config.split(\"\\n\");\n\n}]);","app.controller('controller.print.POG.report.genomic.copyNumberAnalysis',\n['_', '$scope', '$sce', 'pog', 'report', 'images', 'cnvs', 'ms',\n(_, $scope, $sce, pog, report, images, cnvs, ms) => {\n\n  // Data\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.ms = ms;\n  $scope.images = images;\n  $scope.cnvGroups = {};\n\n\n  let processCNV = (cnvs) => {\n\n    let container = {\n      clinical: [],\n      nostic: [],\n      biological: [],\n      commonAmplified: [],\n      homodTumourSupress: [],\n      highlyExpOncoGain: [],\n      lowlyExpTSloss: []\n    };\n\n    // Run over mutations and group\n    _.forEach(cnvs, (row, k) => {\n      if(!(row.cnvVariant in container)) container[row.cnvVariant] = [];\n      // Add to type\n      container[row.cnvVariant].push(row);\n    });\n\n    // Set Small Mutations\n    $scope.cnvGroups = container;\n  };\n\n  processCNV(cnvs);\n\n  $scope.titleMap = {\n    clinical: 'CNVs of Potential Clinical Relevance',\n    nostic: 'CNVs of Prognostic or Diagnostic Relevance',\n    biological: 'CNVs of Biological Relevance',\n    commonAmplified: 'Commonly Amplified Oncogenes with Copy Gains',\n    homodTumourSupress: 'Homozygously Deleted Tumour Suppresors',\n    highlyExpOncoGain: 'Highly Expressed Oncogenes with Copy Gains',\n    lowlyExpTSloss: 'Lowly Expressed Tumour Suppressors with Copy Losses'\n  };\n\n\n}]);","app.controller('controller.print.POG.report.genomic.copyNumberAnalysisCNVLOH',\n['_', '$scope', '$sce', 'pog', 'report', 'images',\n(_, $scope, $sce, pog, report, images) => {\n\n  // Data\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.images = images;\n\n}]);","app.controller('controller.print.POG.report.genomic.dga',\n['_', '$scope', 'pog', 'report', 'alterations', 'approvedThisCancer', 'approvedOtherCancer', 'targetedGenes', 'unknownAlterations',\n(_, $scope, pog, report, alterations, approvedThisCancer, approvedOtherCancer, targetedGenes, unknownAlterations) => {\n\n  // Data\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.samples = [];\n  $scope.alterations = {therapeutic: {}, prognostic: {}, diagnostic: {}, biological: {}, unknown: {}};\n  $scope.approvedThisCancer = {};\n  $scope.approvedOtherCancer= {};\n  $scope.targetedGenes = targetedGenes;\n\n  alterations = alterations.concat(unknownAlterations);\n\n  // Group Alterations by type\n  let groupAlterations = (collection, alterations) => {\n\n    alterations.forEach((row) => {\n\n      // Modify type\n\n      // Does grouping exist?\n      if(!(row.gene + '-' + row.variant in collection)) {\n        row.children = [];\n        return collection[row.gene + '-' + row.variant] = row; // Add row to collection\n      }\n\n      if(row.gene + '-' + row.variant in collection) return collection[row.gene + '-' + row.variant].children.push(row);\n\n    });\n\n    return _.values(collection);\n\n  };\n\n  // Group Entries by Type\n  let groupEntries = (alterations) => {\n    // Process the entries for grouping\n    alterations.forEach((row) => {\n\n      // Add to samples if not present\n      if($scope.samples.indexOf(row.sample) === -1) $scope.samples.push(row.sample);\n\n      // Grouping\n      if(!(row.alterationType in $scope.alterations)) $scope.alterations[row.alterationType] = {};\n\n      // Check if it exists already?\n      if(!(row.gene+'-'+row.variant in $scope.alterations[row.alterationType])) {\n        row.children = [];\n        return $scope.alterations[row.alterationType][row.gene+'-'+row.variant] = row;\n      }\n\n      // Categorical entry already exists\n      if(row.gene+'-'+row.variant in $scope.alterations[row.alterationType]) {\n        return $scope.alterations[row.alterationType][row.gene+'-'+row.variant]\n          .children[$scope.alterations[row.alterationType][row.gene+'-'+row.variant].children.length] = row;\n      }\n\n    });\n\n    _.forEach($scope.alterations, (values, k) => {\n      $scope.alterations[k] = _.values(values);\n      //console.log('Iteree: ', k, values, _.values(values));\n    });\n\n  };\n\n  // Group Entries\n  groupEntries(alterations);\n\n  // Group Approved\n  $scope.approvedThisCancer = groupAlterations($scope.approvedThisCancer, approvedThisCancer);\n  $scope.approvedOtherCancer = groupAlterations($scope.approvedOtherCancer, approvedOtherCancer);\n\n\n}]);","app.controller('controller.print.POG.report.genomic.diseaseSpecificAnalysis',\n['_', '$scope', '$sce', 'pog', 'report', 'images', 'subtypePlotImages',\n(_, $scope, $sce, pog, report, images, subtypePlotImages) => {\n\n  // Data\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.images = images;\n  $scope.subtypePlotImages = subtypePlotImages;\n  $scope.hasSubtypePlot = !(Object.keys(subtypePlotImages).length === 0);\n\n}]);","app.controller('controller.print.POG.report.genomic.expressionAnalysis',\n['_', '$scope', '$sce', 'pog', 'report', 'images', 'outliers', 'drugTargets', 'densityGraphs',\n(_, $scope, $sce, pog, report, images, outliers, drugTargets, densityGraphs) => {\n\n  // Data\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.images = images;\n  $scope.drugTargets = drugTargets;\n  $scope.densityGraphs = [];\n  $scope.expOutliers = {};\n\n  // Convert full hex to 6chr\n  $scope.colourHex = (hex) => {\n    return hex.match(/([A-z0-9]{6}$)/)[0];\n  };\n  \n  $scope.titleMap = {\n    clinical: 'Expression Level Outliers of Potential Clinical Relevance',\n    nostic: 'Expression Level Outliers of Prognostic or Diagnostic Relevance',\n    biological: 'Expression Level Outliers of Biological Relevance',\n    upreg_onco: 'Up-Regulated Oncogenes',\n    downreg_tsg: 'Down-Regulated Tumour Suppressor Genes'\n  };\n  \n  // Sort outliers into categories\n  let processExpression = (input, type) => {\n    \n    let expressions = {\n      clinical: [],\n      nostic: [],\n      biological: [],\n      upreg_onco: [],\n      downreg_tsg: []\n    };\n    \n    let typekey = 'outlierType';\n    if(type === 'outlier') typekey = 'outlierType';\n    \n    // Run over mutations and group\n    _.forEach(input, (row, k) => {\n      if(!(row[typekey] in expressions)) expressions[row[typekey]] = [];\n      // Add to type\n      expressions[row[typekey]].push(row);\n    });\n    \n    $scope.expOutliers = expressions;\n    \n  };\n  \n  processExpression(outliers, 'outlier');\n\n  let i = 0;\n\n  let arrayGraphs = []\n  _.forEach(densityGraphs, (g) => {\n    arrayGraphs.push(g);\n  });\n\n  while(i < arrayGraphs.length) {\n\n    $scope.densityGraphs.push([arrayGraphs[i], arrayGraphs[i+1]]);\n    i = i + 2;\n  }\n\n}]);","app.controller('controller.print.POG.report.genomic.pathwayAnalysis',\n['_', '$scope', '$timeout', 'pog', 'report', 'pathway',\n(_, $scope, $timeout, pog, report, pathway) => {\n\n  // Data\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.pathwayAnalysis = pathway;\n\n  let processSVG = (svg) => {\n\n    // Get container div\n    let svgImage = document.getElementById('svgImage');\n\n    if(svgImage.innerHTML.length > 0) {\n      // Destroy so we can build it bigger, faster, better than before!\n      svgImage.innerHTML = '';\n    }\n\n    // Create SVG DOM element from String\n    $scope.pathway = new DOMParser().parseFromString(svg, 'application/xml');\n\n    // Extract SVG element from within XML wrapper.\n    let xmlSVG = $scope.pathway.getElementsByTagName('svg')[0];\n    xmlSVG.id=\"pathway\"; // Set ID that we can grapple.\n    xmlSVG.style = 'width: 100%; height: 800px;'; // Set width & height TODO: Make responsive\n\n    // Create PanZoom object\n    let panZoom = {};\n\n    // Load in SVG after slight delay. (otherwise xmlSVG processing isn't ready.\n    // TODO: Use promises to clean this up.\n    setTimeout(() => {\n      svgImage = document.getElementById('svgImage');\n\n      svgImage.appendChild(\n        svgImage.ownerDocument.importNode($scope.pathway.documentElement, true)\n      );\n      let panZoom = svgPanZoom('#pathway', {\n        preventMouseEventsDefault: true,\n        enableControlIcons: false,\n        controlIconsEnabled: false\n      });\n      panZoom.resize();\n      panZoom.fit();\n      panZoom.center();\n      panZoom.disablePan();\n      panZoom.disableMouseWheelZoom();\n      panZoom.disableZoom();\n      panZoom.disableDblClickZoom();\n    },100);\n\n  };\n\n  $timeout(() => {\n    if(pathway !== null) processSVG(pathway.pathway);\n    if(pathway === null) processSVG('<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xml:space=\"preserve\" width=\"400\"><text x=\"0\" y=\"0\" fill=\"rgb(210,210,210)\">Pathway not yet analyzed.</text></svg>');\n  }, 500);\n\n}]);","app.controller('controller.print.POG.report.genomic.slide',\n['_', '$scope', 'pog', 'report', 'slides',\n(_, $scope, pog, report, slides) => {\n  \n  // Data\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.slides = slides;\n  \n}]);","app.controller('controller.print.POG.report.genomic.somaticMutations',\n['_', '$scope', '$sce', 'pog', 'report', 'images', 'ms', 'smallMutations', 'mutationSignature', 'mutationSummaryImages',\n(_, $scope, $sce, pog, report, images, ms, smallMutations, mutationSignature, mutationSummaryImages) => {\n\n  // Data\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.images = images;\n  $scope.smallMutations = {};\n  $scope.mutationSignature = [];\n  $scope.nnlsNormal = false;\n  $scope.ms = null;\n\n  $scope.copyFilter = (copyChange) => {\n    return copyChange.match(/(((\\+|\\-)?)[0-9]{1,2})/g)[0];\n  };\n\n  let processSignature = (sigs) => {\n    $scope.mutationSignature = [];\n    let nnlsMax = ($scope.nnlsNormal) ? 0 : 1;\n\n    _.forEach(sigs, (r, k) => {\n      if(r.nnls > nnlsMax) nnlsMax = r.nnls;\n    });\n\n    _.forEach(sigs, (r, k) => {\n\n      // Round to 3 sigfigs\n      r.pearson = r.pearson.toFixed(3);\n      r.nnls = r.nnls.toFixed(3);\n\n      // Produced rounded numbers\n      r.pearsonColour = Math.round((((r.pearson < 0) ? 0 : r.pearson)  * 100) / 5) * 5;\n      r.nnlsColour = Math.round(((r.nnls/nnlsMax) * 100) / 5) * 5;\n\n      $scope.mutationSignature.push(r);\n\n    });\n\n  };\n\n  let processMutations = (muts) => {\n\n    let mutations = {\n      clinical: [],\n      nostic: [],\n      biological: [],\n      unknown: []\n    };\n\n    // Run over mutations and group\n    _.forEach(muts, (row, k) => {\n      if(!(row.mutationType in mutations)) mutations[row.mutationType] = [];\n      // Add to type\n      mutations[row.mutationType].push(row);\n    });\n\n    // Set Small Mutations\n    $scope.smallMutations = mutations;\n  };\n  \n  let pickCompatator = () => {\n    let search = _.find(ms, {comparator: report.tumourAnalysis.diseaseExpressionComparator});\n    \n    if(!search) search = _.find(ms, {comparator: 'average'});\n    \n    $scope.ms = search;\n  };\n  \n  let processMutationSummaryImages = (images) => {\n    \n    let ssorted = {\n      barplot: {\n        indel: [],\n        snv: [],\n        sv: [],\n      },\n      densityPlot: {\n        indel: [],\n        snv: [],\n        sv: [],\n      },\n      legend: {\n        indel_snv: [],\n        sv: [],\n      }\n    };\n    \n    let sorted = {\n      comparators: [],\n      indel: {\n        barplot: [],\n        densityPlot: [],\n      },\n      snv: {\n        barplot: [],\n        densityPlot: [],\n      },\n      sv: {\n        barplot: [],\n        densityPlot: []\n      },\n      legend: {\n        snv_indel: [],\n        sv: null\n      }\n    };\n    \n    _.forEach(images, (img) => {\n      \n      let pieces = img.key.split('.');\n      img.comparator = pieces[2] || null;\n      if(!img.comparator) img.comparator = report.tumourAnalysis.diseaseExpressionComparator; // If no comparator found in image, likely legacy and use report setting.\n  \n      if(img.comparator && !_.find(sorted.comparators, {name: img.comparator})) sorted.comparators.push({name: img.comparator, visible: false});\n      \n      if(pieces[1].indexOf('barplot_indel') > -1) sorted.indel.barplot.push(img);\n      if(pieces[1].indexOf('barplot_snv') > -1) sorted.snv.barplot.push(img);\n      if(pieces[1].indexOf('barplot_sv') > -1) sorted.sv.barplot.push(img);\n      \n      if(pieces[1].indexOf('density_plot_indel') > -1) sorted.indel.densityPlot.push(img);\n      if(pieces[1].indexOf('density_plot_snv') > -1) sorted.snv.densityPlot.push(img);\n      if(pieces[1].indexOf('density_plot_sv') > -1) sorted.sv.densityPlot.push(img);\n      \n      if(pieces[1].indexOf('legend_snv_indel') > -1) sorted.legend.snv_indel.push(img);\n      if(pieces[1].indexOf('legend_sv') > -1) sorted.legend.sv = img;\n      \n    });\n    \n    $scope.mutationSummaryImages = sorted;\n    \n  };\n  \n  \n  /**\n   * Retrieve specific mutation summary image\n   *\n   * @param {string} graph - The type of graph image to be retrieved (barplot, density graph, legend)\n   * @param {string} type - The type of analysis (snv, indel, sv)\n   * @param {string} comparator - OPTIONAL The comparator to be picked\n   *\n   * @returns\n   */\n  $scope.getMutationSummaryImage = (graph, type, comparator=null) => {\n    \n    return _.find($scope.mutationSummaryImages[type][graph], {comparator: comparator});\n    \n  };\n  \n  \n  processMutationSummaryImages(mutationSummaryImages);\n  processMutations(smallMutations);\n  pickCompatator();\n  \n  processMutations(smallMutations);\n  processSignature(angular.copy(mutationSignature));\n\n}]);","app.controller('controller.print.POG.report.genomic.structuralVariants',\n['_', '$scope', '$sce', 'pog', 'report', 'images', 'ms', 'svs', 'mutationSummaryImages',\n(_, $scope, $sce, pog, report, images, ms, svs, mutationSummaryImages) => {\n\n  // Data\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.images = images;\n  $scope.ms = ms;\n  $scope.allVariants = [];\n\n  $scope.titleMap = {\n    clinical: 'Gene Fusions of Potential Clinical Relevance with Genome & Transcriptome Support',\n    nostic: 'Gene Fusions of Prognostic and Diagnostic Relevance',\n    biological: 'Gene Fusions with Biological Relevance',\n    fusionOmicSupport: 'Gene Fusions with Genome and Transcriptome Support'\n  };\n\n  let processSvs = (structVars) => {\n\n    let svs = {\n      clinical: [],\n      nostic: [],\n      biological: [],\n      fusionOmicSupport: []\n    };\n\n    // Run over mutations and group\n    _.forEach(structVars, (row, k) => {\n      if(!(row.svVariant in svs)) svs[row.svVariant] = [];\n      row.breakpoint = _.join(row.breakpoint.split('|'), '| ');\n      // Add to type\n      svs[row.svVariant].push(row);\n\n      row.svg = $sce.trustAsHtml(row.svg);\n      $scope.allVariants.push(row);\n    });\n\n    // Set Small Mutations\n    $scope.StrucVars = svs;\n  };\n  \n  \n  let pickCompatator = () => {\n    let search = _.find(ms, {comparator: report.tumourAnalysis.diseaseExpressionComparator});\n    \n    if(!search) search = _.find(ms, {comparator: 'average'});\n    \n    $scope.ms = search;\n  };\n  \n  let processMutationSummaryImages = (images) => {\n    \n    let ssorted = {\n      barplot: {\n        indel: [],\n        snv: [],\n        sv: [],\n      },\n      densityPlot: {\n        indel: [],\n        snv: [],\n        sv: [],\n      },\n      legend: {\n        indel_snv: [],\n        sv: [],\n      }\n    };\n    \n    let sorted = {\n      comparators: [],\n      indel: {\n        barplot: [],\n        densityPlot: [],\n      },\n      snv: {\n        barplot: [],\n        densityPlot: [],\n      },\n      sv: {\n        barplot: [],\n        densityPlot: []\n      },\n      legend: {\n        snv_indel: [],\n        sv: null\n      }\n    };\n        \n    _.forEach(images, (img) => {\n      \n      let pieces = img.key.split('.');\n      img.comparator = pieces[2] || null;\n      if(!img.comparator) img.comparator = report.tumourAnalysis.diseaseExpressionComparator; // If no comparator found in image, likely legacy and use report setting.\n  \n      if(img.comparator && !_.find(sorted.comparators, {name: img.comparator})) sorted.comparators.push({name: img.comparator, visible: false});\n      \n      if(pieces[1].indexOf('barplot_indel') > -1) sorted.indel.barplot.push(img);\n      if(pieces[1].indexOf('barplot_snv') > -1) sorted.snv.barplot.push(img);\n      \n      if(pieces[1].indexOf('barplot_sv') > -1) sorted.sv.barplot.push(img);\n      \n      if(pieces[1].indexOf('density_plot_indel') > -1) sorted.indel.densityPlot.push(img);\n      if(pieces[1].indexOf('density_plot_snv') > -1) sorted.snv.densityPlot.push(img);\n      \n      if(pieces[1].indexOf('density_plot_sv') > -1) sorted.sv.densityPlot.push(img);\n      \n      if(pieces[1].indexOf('legend_snv_indel') > -1) sorted.legend.snv_indel.push(img);\n      if(pieces[1].indexOf('legend_sv') > -1) sorted.legend.sv = img;\n      \n    });\n    \n    $scope.mutationSummaryImages = sorted;\n    \n  };\n  \n  /**\n   * Retrieve specific mutation summary image\n   *\n   * @param {string} graph - The type of graph image to be retrieved (barplot, density graph, legend)\n   * @param {string} type - The type of analysis (snv, indel, sv)\n   * @param {string} comparator - OPTIONAL The comparator to be picked\n   *\n   * @returns\n   */\n  $scope.getMutationSummaryImage = (graph, type, comparator=null) => {\n    \n    return _.find($scope.mutationSummaryImages[type][graph], {comparator: comparator});\n    \n  };\n\n  processSvs(svs);\n  pickCompatator();\n  processMutationSummaryImages(mutationSummaryImages);\n\n}]);","app.controller('controller.print.POG.report.genomic.summary',\n['_', '$scope', 'pog', 'report', 'gai', 'get', 'ms', 'vc', 'pt',\n(_, $scope, pog, report, gai, get, ms, vc, pt) => {\n\n  // Data\n  $scope.data = {gai: gai, ms: ms, vc: vc, pt: pt, pi: report.patientInformation, ta: report.tumourAnalysis };\n\n  $scope.data.get = [];\n  $scope.data.get = get;\n  $scope.report = report;\n  $scope.pog = pog;\n\n\n  let variantCategory = (variant) => {\n    let cnvs = ['copy gain', 'copy loss', 'amplification', 'Homozygous Loss', 'Homozygous Gain'];\n\n    // Small Mutations\n    if (variant.geneVariant.match(/([A-z0-9]*)\\s(\\(\\p\\.[A-z]*[0-9]*[A-z_0-9]*\\*?\\))/g)) {\n      variant.type = \"smallMutation\";\n      return variant;\n    }\n\n    // Structural Variants\n    if (variant.geneVariant.match(/([A-z0-9]*\\:\\:[A-z0-9]*\\s\\(\\e([0-9]*|\\?)\\:\\e([0-9]*|\\?)\\))/g)) {\n      variant.type = \"structuralVariant\";\n      return variant;\n    }\n\n    // Expression Outliers\n    if (variant.geneVariant.toLowerCase().indexOf('expression') !== -1) {\n      variant.type = \"expressionOutlier\";\n      return variant;\n    }\n\n    // Return CNV mutation\n    variant.type = \"cnv\";\n    return variant;\n\n  };\n\n  // Process variants and create chunks\n  let processVariants = (variants) => {\n\n    let output = [];\n\n    // Reset counts\n    $scope.variantCounts = { cnv: 0, smallMutation: 0, expressionOutlier: 0, structuralVariant: 0 };\n\n    variants.forEach((variant, k) => {\n      // Add processed Variant\n      output.push(variantCategory(variant));\n\n      // Update counts\n      if (!$scope.variantCounts[gai[k].type]) $scope.variantCounts[gai[k].type] = 0;\n      $scope.variantCounts[gai[k].type]++;\n\n    });\n\n    return output;\n  };\n  $scope.geneVariants = processVariants(gai);\n\n  $scope.mutationBurdenFilter = (input) => {\n    return (input == \"nan [nan]\") ? 'na' : input.replace(/\\[[0-9]*\\]/g, '');\n  };\n\n\n}]);","app.controller('controller.print.POG.report.genomic.therapeuticOptions',\n['_', '$scope', '$sce', 'pog', 'report', 'therapeutic',\n(_, $scope, $sce, pog, report, therapeutic) => {\n\n  // Data\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.therapeutic = {therapeutic: [], chemoresistance: []};\n\n  // Sort into groups\n  let groupTherapeutics = () => {\n    _.forEach(therapeutic, (v) => {\n      if(v.type === 'therapeutic') $scope.therapeutic.therapeutic.push(v);\n      if(v.type === 'chemoresistance') $scope.therapeutic.chemoresistance.push(v);\n    });\n  };\n\n  groupTherapeutics();\n\n}]);","app.controller('controller.print.POG.report.probe.alterations',\n  ['_', '$scope', 'pog', 'report', 'alterations', 'approvedThisCancer', 'approvedOtherCancer',\n    (_, $scope, pog, report, alterations, approvedThisCancer, approvedOtherCancer) => {\n\n      // Data\n      $scope.report = report;\n      $scope.pog = pog;\n      $scope.samples = [];\n      $scope.alterations = {therapeutic: {}, prognostic: {}, diagnostic: {}, biological: {}, unknown: {}};\n      $scope.approvedThisCancer = {};\n      $scope.approvedOtherCancer= {};\n\n      // Group Alterations by type\n      let groupAlterations = (collection, alterations) => {\n\n        alterations.forEach((row) => {\n\n          // Modify type\n\n          // Does grouping exist?\n          if(!(row.gene + '-' + row.variant in collection)) {\n            row.children = [];\n            return collection[row.gene + '-' + row.variant] = row; // Add row to collection\n          }\n\n          if(row.gene + '-' + row.variant in collection) return collection[row.gene + '-' + row.variant].children.push(row);\n\n        });\n\n        return _.values(collection);\n\n      };\n\n      // Group Entries by Type\n      let groupEntries = (alterations) => {\n        // Process the entries for grouping\n        alterations.forEach((row) => {\n\n          // Add to samples if not present\n          if($scope.samples.indexOf(row.sample) === -1) $scope.samples.push(row.sample);\n\n          // Grouping\n          if(!(row.alterationType in $scope.alterations)) $scope.alterations[row.alterationType] = {};\n\n          // Check if it exists already?\n          if(!(row.gene+'-'+row.variant in $scope.alterations[row.alterationType])) {\n            row.children = [];\n            return $scope.alterations[row.alterationType][row.gene+'-'+row.variant] = row;\n          }\n\n          // Categorical entry already exists\n          if(row.gene+'-'+row.variant in $scope.alterations[row.alterationType]) {\n            return $scope.alterations[row.alterationType][row.gene+'-'+row.variant]\n              .children[$scope.alterations[row.alterationType][row.gene+'-'+row.variant].children.length] = row;\n          }\n\n        });\n\n        _.forEach($scope.alterations, (values, k) => {\n          $scope.alterations[k] = _.values(values);\n          //console.log('Iteree: ', k, values, _.values(values));\n        });\n\n      };\n\n      // Group Entries\n      groupEntries(alterations);\n\n      // Group Approved\n      $scope.approvedThisCancer = groupAlterations($scope.approvedThisCancer, approvedThisCancer);\n      $scope.approvedOtherCancer = groupAlterations($scope.approvedOtherCancer, approvedOtherCancer);\n\n\n    }]);","app.controller('controller.print.POG.report.probe.appendices',\n  ['_', '$scope', 'pog', 'report', (_, $scope, pog, report) => {\n\n    $scope.report = report;\n    $scope.pog = pog;\n    $scope.config = report.config.split(\"\\n\");\n\n  }]);","app.controller('controller.print.POG.report.probe.summary',\n['_', '$scope', 'pog', 'report', 'testInformation', 'genomicEvents', 'metrics', 'signature', (_, $scope, pog, report, testInformation, genomicEvents, kbmetrics, signature) => {\n\n  // Data\n  $scope.data = {pi: report.patientInformation, ta: report.tumourAnalysis};\n\n  $scope.report = report;\n  $scope.pog = pog;\n  $scope.testInformation = testInformation;\n  $scope.genomicEvents = genomicEvents;\n  $scope.kbmetrics = kbmetrics;\n  $scope.signature = signature;\n\n  console.log('KB Metrics', kbmetrics);\n\n}]);","app.controller('controller.dashboard',\n  ['_', '$scope', '$state', 'api.pog', 'api.image', '$userSettings', 'user', 'isAdmin', '$acl',\n    (_, $scope, $state, $pog, $image, $userSettings, user, isAdmin, $acl) => {\n      \n      $scope.check = {\n        resource: $acl.resource,\n        action: $acl.action,\n      };\n      \n      $scope.isAdmin = isAdmin;\n      $scope.user = user;\n      $scope.$state = $state;\n\n      $scope.maximized = $userSettings.get('sideBarState');\n      $scope.toggle = () => {\n        $userSettings.save('sideBarState', !$scope.maximized);\n        $scope.maximized = !$scope.maximized;\n      }\n\n    }\n  ]\n);\n","app.controller('controller.dashboard.toolbar.feedback', ['$q', '_', 'scope', 'api.jira', 'api.user', 'api.session', '$mdDialog', ($q, _, scope, $jira, $user, $session, $mdDialog) => {\n\n  // Close Modal\n  scope.cancel = () => {\n    $mdDialog.cancel();\n  };\n\n  scope.feedback = {};\n  scope.state= \"form\";\n\n  scope.user = {\n    username: '',\n    password: ''\n  };\n\n  scope.login = {\n    badCredentials: false,\n    submitting: false\n  };\n\n  // Send Feedback!\n  scope.send = (f) => {\n\n    scope.formSubmitted = true;\n\n    scope.close = () => {\n      $mdDialog.hide();\n    };\n\n    // Append type to title\n    let title = scope.feedback.type + ': '+scope.feedback.title;\n\n    // Send feedback to jira\n    $jira.ticket.create('DEVSU', 'Task', title, scope.feedback.description, {components: [ { name: 'IPR WebApp' }], labels: ['Feedback', scope.feedback.type ]}).then(\n      (res) => {\n        // Response handled\n        scope.state = 'issue';\n        scope.ticket = res;\n        console.log('JIRA subtask create response: ', res);\n      },\n      (err) => {\n        console.log('Unable to send feedback', err);\n      }\n    );\n  };\n\n}]);","app.controller('controller.dashboard.loadPOG',\n  ['_', '$scope', '$mdDialog', 'api.pog', (_, scope, $mdDialog, $pog) => {\n\n    scope.load = {pog: null}\n\n    // Close Dialog\n    scope.cancel = () => {\n      $mdDialog.cancel('No changes have been made.');\n    }\n\n    // Update the specified entry\n    scope.load = (f) => {\n\n      // Check for valid inputs by touching each entry\n      if(f.$invalid) {\n        f.$setDirty();\n        angular.forEach(f.$error, (field) => {\n          angular.forEach(field, (errorField) => {\n            errorField.$setTouched();\n          });\n        });\n        return;\n      }\n\n      // Send updated entry to API\n      $pog.load(scope.load.pog).then(\n        (result) => {\n          $mdDialog.hide('POG has been loaded.');\n        },\n        (error) => {\n          alert('Unable to update. See console');\n          console.log(error);\n        }\n      );\n\n    } // End update\n\n  }]) // End controller\n","app.controller('controller.dashboard.toolbar',\n  ['_', '$scope', '$mdSidenav', '$state', '$mdDialog', '$mdToast', '$timeout', 'api.session', 'isAdmin', \"$userSettings\",\n    (_, $scope, $mdSidenav, $state, $mdDialog, $mdToast, $timeout, $session, isAdmin, $userSettings) => {\n\n      $scope.isAdmin = isAdmin;\n\n      $scope.toggleMenu = () => {\n        $mdSidenav('topLevelNavigation').toggle();\n      };\n      \n\n      // Open Feedback\n      $scope.openFeedback = ($event) => {\n\n        $mdDialog.show({\n          controller: 'controller.dashboard.toolbar.feedback',\n          templateUrl: 'dashboard/feedback.html',\n          targetEvent: $event,\n          clickOutsideToClose: false,\n        }).then(\n          (res) => {\n            // Toast!\n          },\n          (cancel) => {\n            // Toast!\n          }\n        )\n\n      };\n\n      $scope.loadNewPog = ($event) => {\n\n        $mdDialog.show({\n          targetEvent: $event,\n          templateUrl: 'dashboard/loadPOG.html',\n          clickOutToClose: false,\n          controller: 'controller.dashboard.loadPOG'\n        });\n      };\n\n      /**\n       * Log out a user session\n       *\n       */\n      $scope.userLogout = () => {\n\n        $session.logout().then(\n          (resp) => {\n            // Success from API\n            $mdToast.showSimple('You have been logged out.');\n            $state.go('public.login');\n          },\n          (err) => {\n            $mdToast.showSimple('We were not able to log you out.');\n          }\n        );\n\n      }\n\n    }\n  ]\n);\n","app.controller('controller.error', ['_', 'api.jira', '$scope', (_, $jira, $scope) => {\n\n\n\n}]);","app.controller('controller.print', ['_', '$scope',(_, $scope) => {\n\n  $scope.print = true;\n\n}]);","","app.controller('controller.dashboard.biopsy', ['$q', '_', '$scope', ($q, _, $scope) => {\n\n}]);","app.controller('controller.dashboard.adminbar', ['_', '$scope', '$mdSidenav', '$state', '$mdDialog', '$mdToast', 'api.session', 'isAdmin', (_, $scope, $mdSidenav, $state, $mdDialog, $mdToast, $session, isAdmin) => {\n\n\n}]);\n","app.controller('controller.dashboard.home', ['_', '$scope', '$state', (_, $scope, $state) => {\n\n  $state.go('dashboard.reports.dashboard')\n\n\n}]);\n","app.controller('controller.dashboard.germline', ['$q', '_', '$scope', ($q, _, $scope) => {\n\n}]);","app.controller('controller.dashboard.pog', ['_', '$scope', (_, $scope) => {\n\n}]);","app.controller('knowledgebase', ['$q', '$scope', ($q, $scope) => {\n\n\n\n}]);","app.controller('controller.dashboard.pog.report',\n  ['_', '$scope', '$state', 'api.pog', 'api.image', '$userSettings', 'user', 'report',\n    (_, $scope, $state, $pog, $image, $userSettings, user, report) => {\n\n      $scope.user = user;\n      $scope.$state = $state;\n      $scope.report = report;\n\n      console.log('Report', report);\n\n    }\n  ]\n);\n","app.controller('controller.dashboard.tracking',\n['$q', '_', '$scope', 'api.tracking.definition', 'api.tracking.state', 'api.tracking.task', '$mdDialog', '$mdToast',\n($q, _, $scope, $definition, $state, $task, $mdDialog, $mdToast) => {\n\n\n}]);","app.controller('controller.public.login', ['$q', '_', '$scope', 'api.session', 'api.user', '$state', '$acl', '$mdToast', ($q, _, $scope, $session, $user, $state, $acl, $mdToast) => {\n  \n  $scope.user = {\n    username: null,\n    password: null\n  };\n  \n  // Login clicked\n  $scope.login = (f) => {\n    if(f.$invalid) {\n      f.$setDirty();\n      angular.forEach(f.$error, (field) => {\n        angular.forEach(field, (errorField) => {\n          errorField.$setTouched();\n        });\n      });\n      return;\n    }\n\n    // Run session login\n    $session.login($scope.user.username, $scope.user.password)\n      .then($user.me)\n      .then((result) => {\n        $acl.injectUser(result);\n        \n        if($acl.inGroup('clinician')) {\n          $state.go('dashboard.reports.clinician');\n        } else {\n          $state.go('dashboard.reports.dashboard');\n        }\n      })\n      .catch((error) => {\n        if(error.status === 400) return $mdToast.showSimple('Unable to authenticate with the provided credentials');\n        console.log('Error result', error);\n      });\n  }\n  \n}]);\n","app.controller('controller.dashboard.user.groups.edit', ['$q', '_', '$scope', '$mdDialog','api.user', 'editGroup', 'newGroup', 'groupDelete', ($q, _, scope, $mdDialog, $user, editGroup, newGroup, groupDelete) => {\n\n  // Load User into scope\n  scope.group = editGroup;\n  scope.newGroup = newGroup;\n  scope.groupDelete = groupDelete;\n  \n  // Creating new user\n  if(newGroup) {\n    scope.group = {\n      name: '',\n    }\n  }\n\n  scope.searchUsers = (searchText) => {\n    let deferred = $q.defer();\n\n    if(searchText.length === 0) return [];\n\n    $user.search(searchText).then(\n      (resp) => {\n        deferred.resolve(resp);\n      },\n      (err) => {\n        console.log(err);\n        deferred.reject();\n      }\n    );\n\n    return deferred.promise;\n  };\n\n  scope.searchOwner = (searchOwnerText) => {\n    let deferred = $q.defer();\n\n    if(searchOwnerText.length === 0) return [];\n\n    $user.search(searchOwnerText).then(\n      (resp) => {\n        deferred.resolve(resp);\n      },\n      (err) => {\n        console.log(err);\n        deferred.reject();\n      }\n    );\n\n    return deferred.promise;\n  };\n\n\n  scope.cancel = () => {\n    $mdDialog.cancel({status: false, message: \"Could not update this group.\"});\n  };\n\n  scope.addUser = () => {\n\n    if(_.find(scope.group.users, {ident: scope.member.ident})) return alert('This user has already been added to the group');\n\n    // Add user to group\n    $user.group.member(scope.group.ident).add(scope.member.ident).then(\n      (resp) => {\n        scope.group.users.push(resp);\n\n        scope.member = null;\n        scope.searchQuery = '';\n\n      },\n      (err) => {\n        console.log('Unable to add user', err);\n      }\n    )\n\n  };\n\n  // Remove user from group\n  scope.removeUser = ($event, user) => {\n\n    if(confirm('Are you sure you want to remove this '+ user.firstName + ' ' + user.lastName +'from '+ scope.group.name +'?')) {\n      $user.group.member(scope.group.ident).remove(user.ident).then(\n        (resp) => {\n          // Remove entry from group list\n          scope.group.users = _.filter(scope.group.users, (u) => {\n            return (u.ident !== user.ident)\n          });\n        },\n        (err) => {\n          console.log('Unable to remove user from group', err);\n        }\n      );\n    }\n\n  };\n\n  // Validate form and submit\n  scope.update = (f) => {\n    // Check for valid inputs by touching each entry\n    if(f.$invalid) {\n      f.$setDirty();\n      angular.forEach(f.$error, (field) => {\n        angular.forEach(field, (errorField) => {\n          errorField.$setTouched();\n        });\n      });\n      return;\n    }\n\n    scope.group.owner = scope.group.owner.ident;\n    \n    // Send updated user to api\n    if(!newGroup) {\n      $user.group.update(scope.group.ident, scope.group).then(\n        (group) => {\n          // Success\n          $mdDialog.hide({status: true, data: group, message: \"The group has been updated!\"});\n        },\n        (err) => {\n          $mdDialog.cancel({status: false, message: \"Could not update this group.\"});\n        }\n      )\n    }\n    // Send updated user to api\n    if(newGroup) {\n      $user.group.create(scope.group).then(\n        (group) => {\n          // Success\n          $mdDialog.hide({status: true, data: group, message: \"The group has been added!\", newGroup: true});\n        },\n        (err) => {\n          $mdDialog.cancel({status: false, message: \"Could not update this group.\"});\n        }\n      )\n    }\n\n  };\n\n}]);","app.controller('controller.dashboard.admin.users.groups', ['_', '$scope', '$mdSidenav', '$state', '$mdDialog', '$mdToast', 'api.session', 'api.user', 'isAdmin', 'groups', (_, $scope, $mdSidenav, $state, $mdDialog, $mdToast, $session, $user, isAdmin, groups) => {\n\n  $scope.groups = groups;\n\n\n  let deleteGroup = ($event, group) => {\n\n    let confirm = $mdDialog.confirm()\n      .title('Are you sure you want to remove '  + group.name + '?')\n      .htmlContent('Are you sure you want to remove the group <strong>' + group.name + '</strong>?<br /><br />This will <em>not</em> affect access to any other BC GSC services.')\n      .ariaLabel('Remove Group?')\n      .targetEvent($event)\n      .ok('Remove Group')\n      .cancel('Cancel');\n\n    $mdDialog.show(confirm).then(\n      () => {\n        let tempGroup = angular.copy(group);\n        // Remove User\n        $user.group.remove(group).then(\n          (res) => {\n            $scope.groups = _.filter($scope.groups, (g) => {return (g.ident !== tempGroup.ident)});\n            $mdToast.show($mdToast.simple('The group has been removed'));\n          },\n          (err) => {\n            $mdToast.show($mdToast.simple('A technical issue prevented the group from being removed.'));\n          }\n        )\n      }\n    )\n\n  };\n\n  // Function to pass into\n  let passDelete = () => {\n\n    $mdDialog.hide(); // Hide any displayed dialog;\n    return deleteGroup;\n  };\n\n  $scope.groupDiag = ($event, editGroup, newGroup=false) => {\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/admin/user/group.edit.html',\n      clickOutToClose: false,\n      locals: {\n        editGroup: angular.copy(editGroup),\n        newGroup: newGroup,\n        groupDelete: passDelete()\n      },\n      controller: 'controller.dashboard.user.groups.edit'\n    }).then(\n      (resp) => {\n        $mdToast.show($mdToast.simple().textContent(resp.message));\n        _.forEach($scope.groups, (g,i)=>{\n          if(g.ident === resp.data.ident) $scope.groups[i] = resp.data;\n        });\n\n        if(newGroup) {\n          $scope.groups.push(resp.data);\n          $scope.groups = groups = _.sortBy($scope.groups, 'name');\n        }\n      },\n      (err) => {\n        $mdToast.show($mdToast.simple().textContent('The group has not been updated.'));\n      }\n    );\n\n  };\n\n}]);\n","app.controller('controller.dashboard.user.edit', ['$q', '_', '$scope', '$mdDialog','api.user', 'editUser', 'newUser', 'userDelete', ($q, _, scope, $mdDialog, $user, editUser, newUser, userDelete) => {\n\n  // Load User into scope\n  scope.user = editUser;\n  scope.newUser = newUser;\n  scope.userDelete = userDelete;\n\n  // Creating new user\n  if(newUser) {\n    scope.user = {\n      username: '',\n      type: 'bcgsc',\n      firstName: '',\n      lastName: ''\n    }\n  }\n\n  // Setup default user fields\n  scope.local = {\n    newPass: '',\n    newPassConfirm : '',\n  };\n\n  scope.cancel = () => {\n    $mdDialog.cancel({status: false, message: \"Could not update this user.\"});\n  };\n\n  // Validate form and submit\n  scope.update = (f) => {\n    // Check for valid inputs by touching each entry\n    if(f.$invalid) {\n      f.$setDirty();\n      angular.forEach(f.$error, (field) => {\n        angular.forEach(field, (errorField) => {\n          errorField.$setTouched();\n        });\n      });\n      return;\n    }\n\n    // If type === local create password entry\n    if(scope.user.type === 'local' && scope.local.newPass.length > 0) {\n\n      // Check password length\n      if(scope.local.newPass !== scope.local.newPassConfirm) {\n        f.NewPassConfirm.$error.nomatch = true;\n        f.$valid = false;\n        f.$invalid = true;\n        f.NewPassConfirm.$invalid = true;\n        f.NewPassConfirm.$valid = false;\n        return;\n      }\n\n      scope.user.password = scope.local.newPass;\n    } else {\n      scope.user.password = '';\n    }\n\n    // Send updated user to api\n    if(!newUser) {\n      $user.update(scope.user).then(\n        (user) => {\n          // Success\n          $mdDialog.hide({status: true, data: user, message: \"User has been updated!\"});\n        },\n        (err) => {\n          $mdDialog.cancel({status: false, message: \"Could not update this user.\"});\n        }\n      )\n    }\n    // Send updated user to api\n    if(newUser) {\n      $user.create(scope.user).then(\n        (user) => {\n          // Success\n          $mdDialog.hide({status: true, data: user, message: \"User has been added!\", useUser: true});\n        },\n        (err) => {\n          $mdDialog.cancel({status: false, message: \"Could not update this user.\"});\n        }\n      )\n    }\n\n  };\n\n}]);","app.controller('controller.dashboard.admin.users.userList', ['_', '$scope', '$mdSidenav', '$state', '$mdDialog', '$mdToast', 'api.session', 'api.user', 'isAdmin', 'users', (_, $scope, $mdSidenav, $state, $mdDialog, $mdToast, $session, $user, isAdmin, users) => {\n\n  $scope.users = users;\n\n  let deleteUser = ($event, user) => {\n\n    let confirm = $mdDialog.confirm()\n      .title('Are you sure you want to remove '  + user.firstName + ' ' + user.lastName + '?')\n      .htmlContent('Are you sure you want to remove <strong>' + user.firstName + ' ' + user.lastName + '\\'s</strong> access to this system? <br /><br />This will <em>not</em> affect access to any other BC GSC services.')\n      .ariaLabel('Remove User?')\n      .targetEvent($event)\n      .ok('Remove User')\n      .cancel('Cancel');\n\n    $mdDialog.show(confirm).then(\n      () => {\n        let tempUser = angular.copy(user);\n        // Remove User\n        $user.delete(user).then(\n          (res) => {\n            $scope.users = _.filter($scope.users, (u) => {return (u.ident !== tempUser.ident)});\n            $mdToast.show($mdToast.simple('The user has been removed'));\n          },\n          (err) => {\n            $mdToast.show($mdToast.simple('A technical issue prevented the user from being removed.'));\n          }\n        )\n      }\n    )\n\n  };\n\n  // Function to pass into\n  let passDelete = () => {\n\n    $mdDialog.hide(); // Hide any displayed dialog;\n    return deleteUser;\n  };\n\n  $scope.userDiag = ($event, editUser, newUser=false) => {\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/admin/user/user.edit.html',\n      clickOutToClose: false,\n      locals: {\n        editUser: angular.copy(editUser),\n        newUser: newUser,\n        userDelete: passDelete()\n      },\n      controller: 'controller.dashboard.user.edit'\n    }).then(\n      (resp) => {\n        $mdToast.show($mdToast.simple().textContent(resp.message));\n        _.forEach($scope.users, (u,i)=>{\n          if(u.ident == resp.data.ident) $scope.users[i] = resp.data;\n        });\n\n        if(newUser) {\n          $scope.users.push(resp.data);\n          $scope.users = _.sortBy($scope.users, 'username');\n        }\n      },\n      (err) => {\n        $mdToast.show($mdToast.simple().textContent('The user has not been updated.'));\n      }\n    );\n\n  };\n\n}]);\n","app.controller('controller.dashboard.admin.users',\n['_', '$scope', '$mdSidenav', '$state', '$mdDialog', '$mdToast', 'api.session', 'api.user', 'isAdmin', 'groups', 'users',\n(_, $scope, $mdSidenav, $state, $mdDialog, $mdToast, $session, $user, isAdmin, groups, users) => {\n\n  let passDelete = () => { return () => {}};\n\n  $scope.groups = groups;\n\n  $scope.userDiag = ($event, editUser, newUser=false) => {\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/admin/user/user.edit.html',\n      clickOutToClose: false,\n      locals: {\n        editUser: angular.copy(editUser),\n        newUser: newUser,\n        userDelete: passDelete()\n      },\n      controller: 'controller.dashboard.user.edit'\n    }).then(\n      (resp) => {\n        $mdToast.show($mdToast.simple().textContent(resp.message));\n        _.forEach($scope.users, (u,i)=>{\n          if(u.ident == resp.data.ident) $scope.users[i] = resp.data;\n        });\n\n        if(newUser) {\n          users.push(resp.data);\n        }\n      },\n      (err) => {\n        $mdToast.show($mdToast.simple().textContent('The user has not been updated.'));\n      }\n    );\n\n  };\n\n  $scope.groupDiag = ($event, editGroup, newGroup=false) => {\n    \n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/admin/user/group.edit.html',\n      clickOutToClose: false,\n      locals: {\n        editGroup: angular.copy(editGroup),\n        newGroup: newGroup,\n        groupDelete: passDelete()\n      },\n      controller: 'controller.dashboard.user.groups.edit'\n    }).then(\n      (resp) => {\n        $mdToast.show($mdToast.simple().textContent('The group has been added'));\n\n        if(newGroup) {\n          $scope.groups.push(resp.data);\n          $scope.groups = _.sortBy($scope.groups, 'name');\n        }\n      },\n      (err) => {\n        $mdToast.show($mdToast.simple().textContent('The group has not been updated.'));\n      }\n    );\n\n  };\n\n}]);\n","app.controller('controller.dashboard.biopsy.board.add',\n['$scope', '_', '$q', 'api.lims', 'api.bioapps', 'api.analysis', 'api.pog', '$mdDialog', '$mdToast',\n($scope, _, $q, $lims, $bioapps, $analysis, $pog, $mdDialog, $mdToast) => {\n  \n  $scope.stages = [\n    {title: 'Patient', description: 'Meta data about the patient', id: \"patient\", ordinal: 0},\n    {title: 'Details', description: 'Detailed information (optional)', id: \"details\", ordinal: 1}\n  ];\n  let activeStage = $scope.activeStage = 0;\n  \n  $scope.patient = { POGID: null, clinical_biopsy: 'clinspec_', tracking: true, comparators: false, libraries: {} };\n  $scope.detail = {};\n  $scope.source_loading = false;\n  $scope.show_sources = false;\n  $scope.searchPogcache = null;\n  \n  $scope.find_libraries = false;\n  $scope.found_libraries = [];\n  $scope.libraries_loading = false;\n  $scope.physicians = [0];\n  \n  $scope.addPhysician = () => { $scope.physicians.push($scope.physicians.length); console.log('Array: ', $scope.physicians); };\n  $scope.removePhysician = (i) => { $scope.physicians.splice(i,1); };\n  \n  $scope.events = {\n    valid: false,\n    dirty: true,\n    pristine: true,\n  };\n  \n  let threeLetterCodes = [\n    {\"code\": \"BRC\", \"description\": \"Breast\"},\n    {\"code\": \"CNS\", \"description\": \"Central nervous system\"},\n    {\"code\": \"GIC\", \"description\": \"Gastrointestinal\"},\n    {\"code\": \"GUC\", \"description\": \"Genitourinary\"},\n    {\"code\": \"GYN\", \"description\": \"Gynecological\"},\n    {\"code\": \"H&N\", \"description\": \"Head and neck\"},\n    {\"code\": \"HEM\", \"description\": \"Hematological\"},\n    {\"code\": \"NEU\", \"description\": \"Neurological\"},\n    {\"code\": \"PAN\", \"description\": \"Pancreatic\"},\n    {\"code\": \"PRO\", \"description\": \"Prostate\"},\n    {\"code\": \"PUO\", \"description\": \"Primary unknown\"},\n    {\"code\": \"SAR\", \"description\": \"Sarcoma\"},\n    {\"code\": \"SKN\", \"description\": \"Skin\"},\n    {\"code\": \"THR\", \"description\": \"Thoracic\"}\n  ];\n  \n  $scope.$watch('patient.tracking', (newVal, oldVal) => {\n    \n    if(newVal === false && oldVal === true) {\n      $scope.patient.analysis_biopsy = 'biop';\n    } else {\n      $scope.patient.analysis_biopsy = null;\n    }\n  });\n  \n  // Close Dialog\n  $scope.cancel = () => { $mdDialog.cancel(); };\n\n  // Make Input All Uppercase\n  $scope.toUpperCase = () => { $scope.searchQuery = $scope.searchQuery.toUpperCase(); };\n  \n  // Search Users with auto complete\n  $scope.searchPOGs = (searchText) => {\n    \n    return $q((resolve, reject) => {\n      if(searchText.length === 0) return [];\n      \n      $pog.all({query: searchText, all: true}).then(\n        (resp) => { resolve(resp); },\n        (err) => { console.log(err); reject(); }\n      );\n    });\n  };\n  \n  // Search Disease Endpoint\n  $scope.searchDisease = (searchText) => {\n    return $q((resolve, reject) => {\n      if(searchText.length === 0) return [];\n      \n      $lims.diseaseOntology(searchText).then(\n        (resp) => { resolve(resp.results); },\n        (err) => { console.log(err); reject(); }\n      );\n    });\n  };\n  \n  // Search Three Letter Code with auto complete\n  $scope.searchGroups = (searchText) => {\n    return _.filter(threeLetterCodes, (e) => {\n      if(e.code.indexOf(searchText.toUpperCase()) > -1) return e;\n    });\n  };\n  \n  // Find LIMS Sources\n  $scope.limsSources = () => {\n    \n    // Check to see if this is the same value\n    if($scope.searchPogcache === $scope.searchQuery || $scope.searchQuery.length === 0) return; // Same value, btfo!\n    \n    console.log('Searching', $scope.searchQuery);\n    \n    $scope.source_loading = true;\n    $scope.show_sources = true;\n    $scope.pog_sources = [];\n    \n    // Find LIMS sources for this POGID\n    $lims.source($scope.searchQuery)\n      .then((result) => {\n        let sources = {};\n        \n        _.forEach(result.results, (s) => {\n          sources[s.original_source_name] = s;\n        });\n        \n        $scope.source_loading = false;\n        $scope.pog_sources = _.values(sources);\n        $scope.searchPogcache = $scope.searchQuery;\n      })\n      .catch((err) => {\n        console.log('Failed to lookup POG sources');\n      });\n  };\n  \n  // Move back a stage\n  $scope.lastStage = () => {\n    $scope.activeStage--;\n  };\n  \n  // Move forward a stage\n  $scope.nextStage = () => {\n    let form;\n    // Try to trigger submit...\n    switch ($scope.activeStage) {\n      case 1:\n        form = $scope.referenceForm;\n        break;\n      case 0:\n        form = $scope.matching;\n        break;\n    }\n    \n    form.$setSubmitted();\n    if (form.$valid) {\n      $scope.activeStage++;\n    }\n  };\n  \n  // Attempt to guess library names\n  $scope.libraryGuess = () => {\n    \n    $scope.find_libraries = true;\n    $scope.libraries_loading = true;\n    \n    let diseaseLibraries = [];\n    let pogs = {};\n    \n    let pogid = ($scope.patient.POGID) ? $scope.patient.POGID.POGID : $scope.searchQuery;\n    \n    $lims.sample([pogid])\n      .then((result) => {\n        return $q((resolve, reject) => {\n          _.forEach(result.results, (sample) => {\n            \n            let pogid = sample.participant_study_id;\n            let datestamp = sample.sample_collection_time.substring(0,10);\n            \n            let library = {\n              name: sample.library,\n              type: (sample.disease_status === 'Normal') ? 'normal' : null,\n              source: sample.original_source_name,\n              disease: sample.disease,\n              sample_collection_time: sample.sample_collection_time\n            };\n            \n            if(sample.disease_status === 'Diseased' && diseaseLibraries.indexOf(sample.library) === -1) {\n              diseaseLibraries.push(sample.library);\n            }\n            \n            // Check if pog has been seen yet in this cycle\n            if(!pogs[pogid]) pogs[pogid] = {};\n            \n            // Check if this biopsy event date\n            if(!pogs[pogid][datestamp]) pogs[pogid][datestamp] = [];\n            \n            // Has this library name been listed yet?\n            if(!_.find(pogs[pogid][datestamp], {name: library.name})) {\n              pogs[pogid][datestamp].push(library);\n            }\n            \n          });\n          resolve(diseaseLibraries)\n        });\n      })\n      .then($lims.library)\n      .then((result) => {\n        return $q((resolve, reject) => {\n          \n          // Loop over found libraries\n          _.forEach(result.results, (library) => {\n            \n            // Grab associated POG biopsies\n            let pog = pogs[library.full_name.split('-')[0]];\n            \n            // Loop over biopsies\n            _.forEach(pog, (libraries, biopsy_date) => {\n              \n              // The index key of the library we're looking for\n              let i = _.findKey(libraries, {name: library.name});\n              \n              // If the index is valid, store the updated data\n              if(i) {\n                // Types of library strategy mappings\n                if(library.library_strategy === 'WGS') pogs[library.full_name.split('-')[0]][biopsy_date][i].type = 'tumour';\n                if(library.library_strategy.indexOf('RNA') > -1) pogs[library.full_name.split('-')[0]][biopsy_date][i].type = 'transcriptome';\n              }\n              \n            });\n            \n          });\n          \n          resolve();\n          \n        });\n      })\n      .then(() => {\n        \n        // Did we find anything?\n        if(!pogs[pogid]) return;\n        let pog_libs = pogs[pogid];\n        \n        // Organize into object\n        _.forEach(pog_libs, (libs, date) => {\n          \n          let normal = _.find(libs, {type: 'normal'});\n          let tumour = _.find(libs, {type: 'tumour'});\n          let transcriptome = _.find(libs, {type: 'transcriptome'});\n          \n          $scope.found_libraries.push({collection_date: date, normal: normal, tumour: tumour, transcriptome: transcriptome});\n          \n        });\n        \n        $scope.libraries_loading = false;\n        \n      })\n      .catch((err) => {\n        console.log('failed to find/guess libraries', err);\n        \n        $scope.libraries_loading = false;\n      });\n    \n  };\n  \n  /**\n   * Select collection and auto-populate\n   *\n   * @param collection\n   */\n  $scope.selectCollection = (collection) => {\n    \n    console.log('Collection', collection);\n    \n    $scope.patient.libraries.normal = collection.normal.name;\n    $scope.patient.libraries.tumour = collection.tumour.name;\n    $scope.patient.libraries.transcriptome = collection.transcriptome.name;\n  };\n  \n  // Submit Biopsy Entry\n  $scope.submit = (f) => {\n    \n    $scope.sending = true;\n    \n    // Setup submission object\n    let analysis = {\n      POGID: ($scope.patient.POGID) ? $scope.patient.POGID.POGID : $scope.searchQuery,\n      project: 'POG',\n      clinical_biopsy: $scope.patient.clinical_biopsy,\n      disease:  (typeof $scope.patient.disease === 'object') ? $scope.patient.disease.text : $scope.patient.disease,\n      threeLetterCode: (typeof $scope.patient.threeLetterCode === 'object') ? $scope.patient.threeLetterCode.code : $scope.patient.threeLetterCode,\n      biopsy_notes: $scope.patient.biopsy_notes,\n      biopsy_date: $scope.patient.biopsy_date,\n      tracking: $scope.patient.tracking,\n      notes: $scope.patient.notes,\n      pediatric_id: $scope.patient.pediatric_id,\n      physician: [],\n      libraries: null\n    };\n\n    _.forEach($scope.patient.physician, (p) => { analysis.physician.push(p) });\n    \n    // Add libraries and biop if not tracking\n    if(!$scope.patient.tracking) {\n      analysis.libraries = $scope.patient.libraries;\n      analysis.analysis_biopsy = $scope.patient.analysis_biopsy;\n    }\n    \n    $analysis.add(analysis)\n      .then((result) => {\n        /*\n        $scope.analyses.push(result);\n        \n        $scope.analyses = _.sortBy($scope.analyses, ['createdAt']);\n        $scope.analyses = $scope.analyses.reverse();\n        */\n        \n        $mdDialog.hide({result: result});\n      })\n      .catch((err) => {\n        $mdToast.show($mdToast.simple().textContent('Something went wrong! We were unable to add new biopsy.'));\n      });\n    \n  }\n\n}]);","app.controller('controller.dashboard.biopsy.board.edit',\n['$scope', '_', '$q', '$mdDialog', '$mdToast', 'api.lims', 'api.bioapps', 'api.analysis', 'api.pog', 'analysis',\n($scope, _, $q, $mdDialog, $mdToast, $lims, $bioapps, $analysis, $pog, analysis) => {\n  \n  $scope.patient = analysis;\n  \n  console.log('Analysis', analysis);\n  \n  $scope.events = {\n    valid: false,\n    dirty: true,\n    pristine: true,\n  };\n  \n  let threeLetterCodes = [\n    {\"code\": \"BRC\", \"description\": \"Breast\"},\n    {\"code\": \"CNS\", \"description\": \"Central nervous system\"},\n    {\"code\": \"GIC\", \"description\": \"Gastrointestinal\"},\n    {\"code\": \"GUC\", \"description\": \"Genitourinary\"},\n    {\"code\": \"GYN\", \"description\": \"Gynecological\"},\n    {\"code\": \"H&N\", \"description\": \"Head and neck\"},\n    {\"code\": \"HEM\", \"description\": \"Hematological\"},\n    {\"code\": \"NEU\", \"description\": \"Neurological\"},\n    {\"code\": \"PAN\", \"description\": \"Pancreatic\"},\n    {\"code\": \"PRO\", \"description\": \"Prostate\"},\n    {\"code\": \"PUO\", \"description\": \"Primary unknown\"},\n    {\"code\": \"SAR\", \"description\": \"Sarcoma\"},\n    {\"code\": \"SKN\", \"description\": \"Skin\"},\n    {\"code\": \"THR\", \"description\": \"Thoracic\"}\n  ];\n  \n  // Close Dialog\n  $scope.cancel = () => { $mdDialog.cancel(); };\n  \n  // Search Disease Endpoint\n  $scope.searchDisease = (searchText) => {\n    return $q((resolve, reject) => {\n      if(searchText.length === 0) return [];\n      \n      $lims.diseaseOntology(searchText).then(\n        (resp) => { resolve(resp.results); },\n        (err) => { console.log(err); reject(); }\n      );\n    });\n  };\n  \n  // Search Three Letter Code with auto complete\n  $scope.searchGroups = (searchText) => {\n    return _.filter(threeLetterCodes, (e) => {\n      if(e.code.indexOf(searchText.toUpperCase()) > -1) return e;\n    });\n  };\n  \n  /**\n   * Select collection and auto-populate\n   *\n   * @param collection\n   */\n  $scope.selectCollection = (collection) => {\n    \n    console.log('Collection', collection);\n    \n    $scope.patient.libraries.normal = collection.normal.name;\n    $scope.patient.libraries.tumour = collection.tumour.name;\n    $scope.patient.libraries.transcriptome = collection.transcriptome.name;\n  };\n  \n  // Submit Biopsy Entry\n  $scope.save = (f) => {\n    \n    // Setup submission object\n    analysis.priority = $scope.patient.priority;\n    analysis.clinical_biopsy = $scope.patient.clinical_biopsy;\n    analysis.analysis_biopsy = $scope.patient.analysis_biopsy;\n    analysis.disease = (typeof $scope.patient.disease === 'object') ? $scope.patient.disease.text : $scope.patient.disease;\n    analysis.biopsy_notes = $scope.patient.biopsy_notes;\n    analysis.biopsy_date = $scope.patient.biopsy_date;\n    analysis.notes = $scope.patient.notes;\n    analysis.libraries.normal = $scope.patient.libraries.normal;\n    analysis.libraries.tumour = $scope.patient.libraries.tumour;\n    analysis.libraries.transcriptome = $scope.patient.libraries.transcriptome;\n    analysis.threeLetterCode = (typeof $scope.patient.threeLetterCode === 'object') ? $scope.patient.threeLetterCode.code : $scope.patient.threeLetterCode;\n    analysis.date_presentation = $scope.patient.date_presentation;\n    analysis.onco_panel_submitted = $scope.patient.onco_panel_submitted;\n    analysis.date_analysis = $scope.patient.date_analysis;\n    \n    // Add libraries and biop if not tracking\n    if(!$scope.patient.tracking) {\n      analysis.libraries = $scope.patient.libraries;\n      analysis.analysis_biopsy = $scope.patient.analysis_biopsy;\n    }\n    \n    $analysis.update(analysis)\n      .then((result) => {\n        $mdDialog.hide({analysis: result});\n      })\n      .catch((err) => {\n        $mdToast.show($mdToast.simple().textContent('Something went wrong! We were unable to add new biopsy.'));\n      });\n    \n  }\n\n}]);","app.controller('controller.dashboard.biopsy.board.edit_comparator',\n['$scope', '_', '$q', '$mdDialog', '$mdToast', 'api.analysis', 'api.pog', 'analysis', 'comparators',\n($scope, _, $q, $mdDialog, $mdToast, $analysis, $pog, analysis, comparators) => {\n  \n  $scope.patient = analysis;\n  $scope.comparators = comparators;\n  \n  $scope.disease_comparators = (typeof analysis.comparator_disease.all === 'object') ? analysis.comparator_disease.all : [];\n  \n  $scope.comparator_search = {\n    normal_primary: ($scope.patient.comparator_normal.normal_primary) ? $scope.patient.comparator_normal.normal_primary[0] : null,\n    normal_biopsy: ($scope.patient.comparator_normal.normal_biopsy) ? $scope.patient.comparator_normal.normal_biopsy[0] : null,\n    gtex_primary: ($scope.patient.comparator_normal.gtex_primary) ? $scope.patient.comparator_normal.gtex_primary[0] : null,\n    gtex_biopsy: ($scope.patient.comparator_normal.gtex_biopsy) ? $scope.patient.comparator_normal.gtex_biopsy[0] : null,\n  };\n  \n  // Close Dialog\n  $scope.cancel = () => { $mdDialog.cancel(); };\n  \n  // Search Disease Endpoint\n  $scope.searchComparators = (searchText) => {\n    return $q((resolve, reject) => {\n      if(searchText.length === 0) return [];\n      \n      resolve(_.filter(comparators.v9.disease.tcga, (c) => {\n        if(c.code.indexOf(searchText) > -1) return c;\n      }));\n    });\n  };\n  \n  // Search Disease Endpoint\n  $scope.searchNormalComparators = (searchText) => {\n    return $q((resolve, reject) => {\n      if(searchText.length === 0) return [];\n  \n      resolve(_.filter(comparators.v9.normal.illumina, (c) => {\n        if(c.indexOf(searchText) > -1) return c;\n      }));\n      \n    });\n  };\n  \n  // Search Disease Endpoint\n  $scope.searchGtexComparators = (searchText) => {\n    return $q((resolve, reject) => {\n      if(searchText.length === 0) return [];\n     \n      resolve(_.filter(comparators.v9.normal.gtex, (c) => {\n        if(c.code.indexOf(searchText) > -1) return c;\n      }));\n    });\n  };\n  \n  // Mark comparator as for analysis\n  $scope.select_for_analysis = (c) => {\n    $scope.patient.comparator_disease.analysis = c;\n  };\n  \n  // Add found comparator to array\n  $scope.add_comparator = () => {\n    // Is it already in the array?\n    if($scope.disease_comparators.indexOf($scope.comparator_search.entry.code) > -1) return $scope.comparator_search.entry = null;\n    \n    // If it's the first one, its also the default for analysis!\n    if($scope.disease_comparators.length === 0) $scope.patient.comparator_disease.analysis = $scope.comparator_search.entry.code;\n    \n    // Add to array\n    $scope.disease_comparators.push($scope.comparator_search.entry.code);\n    $scope.comparator_search.entry = null;\n  };\n  \n  // Remove Disease Comparator\n  $scope.remove_comp = (c) => {\n    $scope.disease_comparators.splice($scope.disease_comparators.indexOf(c),1);\n  };\n  \n  // Submit Biopsy Entry\n  $scope.save = (f) => {\n    \n    let patient = angular.copy($scope.patient);\n    \n    console.log('Sending object', $scope.patient, $scope.comparator_search);\n    \n    // Setup submission object\n    analysis.comparator_disease = {\n      analysis: patient.comparator_disease.analysis,\n      all: $scope.disease_comparators,\n      tumour_type_report: patient.comparator_disease.tumour_type_report,\n      tumour_type_kb: patient.comparator_disease.tumour_type_kb\n    };\n    analysis.comparator_normal = {\n      normal_primary: [$scope.comparator_search.normal_primary],\n      normal_biopsy: [$scope.comparator_search.normal_biopsy],\n      gtex_primary: [(typeof $scope.comparator_search.gtex_primary === 'object') ? $scope.comparator_search.gtex_primary.code : $scope.comparator_search.gtex_primary ],\n      gtex_biopsy: [(typeof $scope.comparator_search.gtex_biopsy === 'object') ? $scope.comparator_search.gtex_biopsy.code : $scope.comparator_search.gtex_biopsy ]\n    };\n    \n    $analysis.update(analysis)\n      .then((result) => {\n        $mdDialog.hide({analysis: result});\n      })\n      .catch((err) => {\n        $mdToast.show($mdToast.simple().textContent('Something went wrong! We were unable to add new biopsy.'));\n      });\n    \n  }\n\n}]);","app.controller('controller.dashboard.biopsy.board',\n['$q', '_', '$scope', 'api.lims', 'api.bioapps', 'api.analysis', 'api.pog', '$mdDialog', '$mdToast', 'analyses', 'comparators',\n($q, _, $scope, $lims, $bioapps, $analysis, $pog, $mdDialog, $mdToast, analyses, comparators) => {\n  \n  $scope.pogs = {};\n  $scope.searching = false;\n  $scope.analyses = analyses.analysis;\n  $scope.loading = false;\n  $scope.showSearch = false;\n  $scope.focusSearch = false;\n  $scope.active_sheet = 'biopsy';\n  \n  let analysis_query = {\n    search: undefined,\n    paginated: true,\n    project: 'POG'\n  };\n  \n  $scope.paginate = {\n    offset: 0,\n    limit: 25,\n    total: analyses.total\n  };\n  \n  $scope.refreshAnalyses = () => {\n    \n    $scope.loading = true;\n    \n    analysis_query.limit = $scope.paginate.limit;\n    analysis_query.offset = $scope.paginate.offset;\n    \n    $analysis.all(analysis_query)\n      .then((results) => {\n        $scope.loading = false;\n        $scope.analyses = results.analysis;\n        $scope.paginate.total = results.total;\n      })\n      .catch((err) => {\n        $scope.loading = false;\n        $mdToast.show($mdToast.simple().textContent('Unable to retrieve the requested data.'));\n      });\n    \n  };\n  \n  $scope.clearSearch = () => {\n    $scope.showSearch = false;\n    $scope.focusSearch = false;\n    \n    let filterCache = $scope.filter.search;\n    \n    $scope.filter.search = null;\n    analysis_query.search = undefined;\n    if(filterCache !== undefined) $scope.refreshAnalyses();\n  };\n  \n  $scope.displaySearch = () => {\n    $scope.showSearch = true;\n    $scope.focusSearch = true;\n  };\n  \n  \n  /**\n   * Update search criteria and trigger reload\n   */\n  $scope.search = () => {\n    analysis_query.search = $scope.filter.search;\n    $scope.paginate.offset = 0; // start from first page of paginator if performing search\n    $scope.refreshAnalyses();\n  };\n  \n  /**\n   * Get number of keys in objcet\n   * @param {object} obj - Object to return [keys] length\n   * @returns {Number}\n   */\n  $scope.numKeys = (obj) => {\n    return Object.keys(obj).length;\n  };\n  \n  \n  /**\n   * Search LIMS for sources\n   */\n  $scope.sampleSearch = () => {\n    \n    $scope.searching = true;\n    $scope.pogs = {};\n    \n    \n    $lims.sample([$scope.biopsy.search]).then(\n      (result) => {\n        // Empty map\n        $scope.pogs = {};\n        \n        _.forEach(result.results, (r) => {\n        \n          if(!$scope.pogs[r.original_source_name]) {\n          \n            $scope.pogs[r.original_source_name] = {\n              pogid: r.participant_study_id,\n              sample_name: r.original_source_name,\n              date: r.sample_collection_time,\n              anatomic_site: r.anatomic_site,\n              disease: r.disease,\n              libraries: [r.library]\n            }\n          }\n        \n          if($scope.pogs[r.original_source_name] && $scope.pogs[r.original_source_name].libraries.indexOf(r.library) === -1) {\n            $scope.pogs[r.original_source_name].libraries.push(r.library);\n          }\n        \n        });\n  \n        $scope.searching = false;\n      \n        console.log('POGs', $scope.pogs);\n      },\n      (err) => {\n        console.log(\"Error\", err);\n      }\n    )\n    \n  };\n  \n  $scope.openLibrary = (lib) => {\n    \n    $mdDialog.show({\n      templateUrl: 'dashboard/biopsy/board/board.library.html',\n      controller: ['$scope', (scope) => {\n        \n        scope.loading = {library: true, illumina: true};\n        scope.library = {name: lib};\n        scope.illumina = [];\n        \n        scope.cancel = () => {\n          $mdDialog.cancel();\n        };\n        \n        scope.getPoolName = () => {\n          let pool = null;\n          \n          _.forEach(scope.illumina, (r) => {\n            if(r.library.indexOf('IX') > -1) pool = r.library;\n          });\n          \n          if(!pool) return \"N/A\";\n          \n          return pool;\n        };\n        \n        $lims.library(lib).then(\n          (result) => {\n            \n            if(result.hits === 0) {\n              $mdToast.show($mdToast.simple().textContent('Unable to lookup the requested library data in LIMS'));\n            }\n            \n            scope.loading.library = false;\n            scope.library = result.results[0];\n          })\n          .catch((err) => {\n            console.log('Err querying library', err);\n          });\n        \n        $lims.illumina_run([lib])\n          .then((result) => {\n            if(result.hits === 0) {\n              $mdToast.show($mdToast.simple().textContent('Illumina run data not available yet'));\n            }\n            scope.loading.illumina = false;\n            scope.illumina = result.results;\n          })\n          .catch((err) => {\n            console.log('Err querying library', err);\n          });\n        \n      }]\n    })\n    \n  };\n  \n  \n  // Open Source Information\n  $scope.openAnalysis = (analysis) => {\n    \n    $mdDialog.show({\n      templateUrl: 'dashboard/biopsy/board/board.detail.html',\n      controller: ['$scope', (scope) => {\n        \n        scope.loading = true;\n        scope.analysis = analysis;\n        scope.sources = [];\n        \n        scope.cancel = () => {\n          $mdDialog.cancel();\n        };\n        \n        $lims.source(analysis.pog.POGID).then(\n          (result) => {\n            \n            let sources = {};\n            \n            if(result.hits === 0) {\n              $mdToast.show($mdToast.simple().textContent('Unable to lookup the requested library'));\n              $mdDialog.cancel();\n            }\n            \n            _.forEach(result.results, (s) => {\n              sources[s.original_source_name] = s;\n            });\n            \n            scope.sources = _.values(sources);\n  \n            scope.loading = false;\n          })\n          .catch((err) => {\n            console.log('Err querying library', err);\n          });\n        \n      }]\n    })\n    \n  };\n  \n  // Open Source Information\n  $scope.editAnalysis = (analysis) => {\n    \n    $mdDialog.show({\n      templateUrl: 'dashboard/biopsy/board/board.edit.html',\n      controller: 'controller.dashboard.biopsy.board.edit',\n      locals: {\n        analysis: analysis\n      }\n    })\n      .then((result) => {\n        // Find result, and update row\n        let i = _.findIndex(analyses, {ident: result.ident});\n        if(i) analyses[i] = result;\n      \n      });\n    \n  };\n  \n  // Open Source Information\n  $scope.editComparators = (analysis) => {\n    \n    $mdDialog.show({\n      templateUrl: 'dashboard/biopsy/board/board.edit_comparator.html',\n      controller: 'controller.dashboard.biopsy.board.edit_comparator',\n      locals: {\n        analysis: analysis,\n        comparators: comparators\n      }\n    })\n      .then((result) => {\n        // Find result, and update row\n        let i = _.findIndex(analyses, {ident: result.ident});\n        if(i) analyses[i] = result;\n      \n      });\n    \n  };\n  \n  \n  // Open Source Information\n  $scope.addBiopsy = () => {\n    \n    $mdDialog.show({\n      templateUrl: 'dashboard/biopsy/board/board.add.html',\n      controller: 'controller.dashboard.biopsy.board.add'\n    })\n      .then((result) => {\n        if(result.result) $scope.analyses.unshift(result.result);\n      });\n    \n  }\n  \n\n}]);","app.controller('controller.dashboard.germline.board',\n['$q', '_', '$scope', '$window', '$timeout', 'api.germline.report', '$mdDialog', '$mdToast', 'reports',\n($q, _, $scope, $window, $timeout, $report, $mdDialog, $mdToast, reports) => {\n  \n  $scope.reports = reports.reports;\n  \n  $scope.loading = false;\n  $scope.showSearch = true;\n  $scope.focusSearch = false;\n  $scope.filter = {\n    search: null,\n    project: 'POG'\n  };\n  \n  $scope.paginate = {\n    total: reports.total,\n    offset: 0,\n    limit: 25\n  };\n  \n  $scope.clearSearch = () => {\n    //$scope.showSearch = false;\n    $scope.focusSearch = false;\n    \n    let filterCache = $scope.filter.search;\n    \n    $scope.filter.search = null;\n    if(filterCache !== undefined) $scope.refreshReports();\n  };\n  \n  $scope.displaySearch = () => {\n    $scope.showSearch = true;\n    $scope.focusSearch = true;\n  };\n  \n  $scope.hasReview = (report, type) => {\n    return (_.find(report.reviews, {type: type}) !== undefined) ? true : false;\n  };\n  \n  $scope.unsetExported = (report) => {\n    if(report.exported === false) return;\n    \n    report.exported = false;\n    \n    let report_cache = angular.copy(report);\n    report_cache.biofx_assigned = report.biofx_assigned.ident;\n    \n    $report.update(report_cache.analysis.pog.POGID, report_cache.analysis.analysis_biopsy, report_cache.ident, report_cache)\n      .then((result) => {\n        let i = _.findKey($scope.reports, {ident: report_cache.ident});\n        \n        $scope.reports[i] = result;\n        \n      })\n      .catch((e) => {\n        report.exported = true;\n        $mdToast.showSimple('Failed to update report exported status.');\n        console.log(e);\n      });\n    \n  };\n  \n  \n  /**\n   * Update search criteria and trigger reload\n   */\n  $scope.search = () => {\n    $scope.refreshReports();\n  };\n  \n  /**\n   * Reload tracking data from API\n   *\n   */\n  $scope.refreshReports = () => {\n    \n    // start from first page of paginator if performing search\n    if ($scope.filter.search) $scope.paginate.offset = 0;\n\n    let opts = {\n      //offset: $scope.paginate.offset, // sequelize applies limit and offset to subquery, returning incorrect results\n      //limit: $scope.paginate.limit,\n      project: 'POG',\n      search: $scope.filter.search\n    };\n    \n    $report.all(opts).then(\n      (reports) => {\n        $scope.paginate.total = reports.total;\n        // have to manually extract reports based on limit/offset due to sequelize bug\n        let start = $scope.paginate.offset,\n            finish = $scope.paginate.offset + $scope.paginate.limit;\n        $scope.reports = reports.reports.slice(start, finish);\n      },\n      (err) => {\n        console.log('Failed to get updated definitions', err);\n      }\n    )\n    \n  };\n  \n  // Trigger download pipe\n  $scope.getExport = () => {\n    $report.flash_token()\n      .then((token) => {\n        // Open a window for the user with the special url\n        $window.open(`${CONFIG.ENDPOINTS.API}/export/germline_small_mutation/batch/download?reviews=biofx,projects&flash_token=${token.token}`, '_blank');\n        \n        $timeout(() => {\n          $scope.refreshReports();\n        }, 500);\n      })\n      .catch((e) => {\n        $mdToast.showSimple('Failed to retrieve the downloadable export');\n        console.log(e);\n      });\n  }\n  \n  \n}]);","app.controller('controller.dashboard.germline.report',\n['$q', '_', '$scope', '$state', 'api.germline.report', 'api.germline.review', 'api.germline.variant', '$mdDialog', '$mdToast', 'report', 'user',\n($q, _, $scope, $state, $report, $review, $variant, $mdDialog, $mdToast, report, user) => {\n\n  $scope.report = report;\n  $scope.user = user;\n  $scope.addReview = false;\n\n  $scope.hasReview = (report, type) => {\n    return (_.find(report.reviews, {type: type}) !== undefined) ? true : false;\n  };\n\n  $scope.show_extended = false;\n\n  $scope.columns = {\n    flagged: {\n      name: 'Flagged',\n      width: 100,\n      show_always: true,\n      split: ','\n    },\n    clinvar: {\n      name: 'ClinVar',\n      width: 100,\n    },\n    cgl_category: {\n      name: 'CGL Category',\n      width: 100,\n      show_always: false\n    },\n    gmaf: {\n      name: 'GMAF',\n      width: 100,\n      show_always: true\n    },\n    transcript: {\n      name: 'Trancript',\n      width: 100,\n      show_always: true\n    },\n    gene: {\n      name: 'Gene',\n      width: 100,\n      show_always: true\n    },\n    variant: {\n      name: 'Variant',\n      width: 100,\n      show_always: true\n    },\n    impact: {\n      name: 'Impact',\n      width: 100,\n      show_always: true\n    },\n    chromosome: {\n      name: 'Chr',\n      width: 40,\n      show_always: true\n    },\n    position: {\n      name: 'Pos',\n      width: 100,\n      show_always: true\n    },\n    dbSNP: {\n      name: 'dbSNP',\n      width: 100,\n      show_always: true\n    },\n    reference: {\n      name: 'Ref',\n      width: 40,\n      show_always: true\n    },\n    alteration: {\n      name: 'Alt',\n      width: 40,\n      show_always: true\n    },\n    score: {\n      name: 'Score',\n      width: 50,\n      show_always: true\n    },\n    zygosity_germline: {\n      name: 'Zygosity in germline',\n      width: 100,\n      show_always: true\n    },\n    preferred_transcript: {\n      name: 'Preferred Transcript',\n      width: 150,\n      show_always: true,\n    },\n    hgvs_cdna: {\n      name: 'HGVS-cDNA',\n      width: 100,\n      show_always: true\n    },\n    hgvs_protein: {\n      name: 'HGVS-protein',\n      width: 100,\n      show_always: true\n    },\n    zygosity_tumour: {\n      name: 'Zygosity in tumour',\n      width: 100,\n      show_always: true\n    },\n    genomic_variant_reads: {\n      name: 'Genomic variant reads ',\n      tooltip: '(alt/total)',\n      width: 120,\n      show_always: false\n    },\n    rna_variant_reads: {\n      name: 'RNA variant reads',\n      tooltip: '(alt/total)',\n      width: 120,\n      show_always: false\n    },\n    gene_somatic_abberation: {\n      name: 'Gene somatic aberration?',\n      width: 100,\n      show_always: false\n    },\n    notes: {\n      name: 'Notes',\n      width: 100,\n      show_always: true\n    },\n    type: {\n      name: 'Type',\n      width: 100,\n      show_always: true\n    },\n    patient_history: {\n      name: 'Patient History',\n      width: 100,\n      show_always: true,\n    },\n    family_history: {\n      name: 'Family History',\n      width: 100,\n      show_always: true\n    },\n    tcga_comp_norm_percentile: {\n      name: `tcga_comp_norm_percentile`,\n      width: 100,\n      show_always: false\n    },\n    tcga_comp_percentile: {\n      name: `tcga_comp_percentile`,\n      width: 200,\n      show_always: false\n    },\n    gtex_comp_percentile: {\n      name: `gtex_comp_average_percentile`,\n      width: 200,\n      show_always: false\n    },\n    fc_bodymap: {\n      name: `fc_bodymap`,\n      width: 100,\n      show_always: false\n    },\n    gene_expression_rpkm: {\n      name: 'Gene Expression RPKM',\n      width: 100,\n      show_always: true\n    },\n    additional_info: {\n      name: 'Additional Info',\n      width: 100,\n      show_always: false\n    }\n  };\n\n  $scope.getHistory = ($ev, mode, v) => {\n\n    let input = {\n      value: v,\n      mode: mode\n    };\n\n    if(mode === 'patient') input.name = input.placeholder = 'Patient History';\n    if(mode === 'family') input.name = input.placeholder = 'Family History';\n\n    $mdDialog.show({\n      templateUrl: 'dashboard/germline/report/report.input.dialog.html',\n      targetEvent: $ev,\n      clickOutsideToClose: true,\n      controller: ['scope', (scope) => {\n\n        scope.input = input;\n\n        scope.cancel = () => {\n          $mdDialog.cancel();\n        };\n\n        scope.submit = () => {\n          $mdDialog.hide(input);\n        };\n\n      }]\n    })\n      .then((res) => {\n\n        if(mode === 'patient') {\n          _.forEach($scope.report.variants, (v, i) => {\n            $scope.report.variants[i].patient_history = res.value;\n          });\n        }\n        if(mode === 'family') {\n          _.forEach($scope.report.variants, (v, i) => {\n            $scope.report.variants[i].family_history = res.value;\n          });\n        }\n\n        $q.all(_.map($scope.report.variants, (v) => {\n            return $variant.update($scope.report.analysis.pog.POGID, $scope.report.analysis.analysis_biopsy, $scope.report.ident, v.ident, v);\n          }))\n          .then((result) => {\n            console.log('Finished updating rows', result);\n            $mdToast.showSimple('Report has been updated.');\n          })\n\n\n      })\n      .catch((err) => {\n\n      });\n\n\n  };\n\n\n  $scope.review = () => {\n\n    let data = {\n      type: $scope.new.type,\n      comment: $scope.new.comment\n    };\n\n    $review.add($scope.report.analysis.pog.POGID, $scope.report.analysis.analysis_biopsy, $scope.report.ident, data)\n      .then((review) => {\n        $scope.report.reviews.push(review[0]);\n        $mdToast.showSimple('The review has been added.');\n        $scope.addReview = false;\n      })\n      .catch((err) => {\n        $mdToast.showSimple('Failed to add the submitted reviewed.');\n      })\n\n  };\n\n  $scope.toggleVariantHidden = (variant) => {\n\n    variant.hidden = !variant.hidden;\n\n    $variant.update($scope.report.analysis.pog.POGID, $scope.report.analysis.analysis_biopsy, $scope.report.ident, variant.ident, variant)\n      .then((result) => {\n        // Update report in memory with fresh result from API.\n        let i = _.find($scope.report.variants, {ident: result.ident});\n        $scope.report.variants[i] = result;\n      })\n      .catch((e) => {\n        console.log('Hide error', e);\n        $mdToast.showSimple('Failed to update variant with visibility change');\n      });\n\n  };\n\n\n  $scope.removeReview = (review) => {\n\n    $review.remove($scope.report.analysis.pog.POGID, $scope.report.analysis.analysis_biopsy, $scope.report.ident, review.ident)\n      .then((res) =>{\n        $scope.report.reviews.splice(_.findKey($scope.report.reviews, {ident: review.ident}, 1));\n      })\n      .catch((e) => {\n        console.log('Response: ', e);\n        $mdToast.showSimple('Failed to remove the requested review');\n      })\n  }\n\n  $scope.removeReport = () => {\n\n    let confirm = $mdDialog.confirm({\n      title: 'Confirm remove',\n      textContent: 'Are you sure you want to remove this germline report?',\n      ok: 'Remove',\n      cancel: 'Cancel'\n    });\n\n    $mdDialog.show(confirm)\n      .then((response) => {\n          console.log('Response:', response);\n          $report.delete($scope.report.analysis.pog.POGID, $scope.report.analysis.analysis_biopsy, $scope.report.ident)\n            .then(() => {\n              $state.go('dashboard.germline.board');\n            })\n            .catch((e) => {\n              $mdToast.showSimple('Something went wrong and the report has not been removed.');\n            });\n      })\n      .catch((e) => {\n        console.log('Error', e);\n        $mdToast.showSimple('No changes were made.');\n      });\n\n  }\n\n}]);\n","","","app.controller('knowledgebase.dashboard', ['$q', '$scope', '$timeout', '$state', 'metrics', ($q, $scope, $timeout, $state, metrics) => {\n\n  $scope.metrics = metrics;\n\n  $scope.search = {\n    target: 'references',\n    query: null,\n    go: null\n  };\n\n  $scope.totals = {\n    ref: parseInt(metrics.refTotal).toLocaleString(),\n    ev: parseInt(metrics.evTotal).toLocaleString()\n  };\n\n  $scope.doughnut = {};\n  $scope.doughnut.events = {\n    data: [0,0,0,0],\n    labels: [\n      'Approved', 'New', 'Flagged-Incorrect', 'Requires-Review'\n    ],\n    colors: [\n      '#2ECC71',\n      '#19B5FE',\n      '#F22613',\n      '#F9BF3B'\n\n    ],\n    options: {\n      legend: {\n        display: true,\n        position: 'left'\n      }\n    }\n  };\n\n  $scope.doughnut.references = {\n    data: [0,0,0,0],\n    labels: [\n      'Reviewed', 'New', 'Flagged-Incorrect', 'Requires-Review', 'Interim'\n    ],\n    colors: [\n      '#2ECC71',\n      '#19B5FE',\n      '#F22613',\n      '#F9BF3B',\n      '#c104f9',\n\n    ],\n    options: {\n      legend: {\n        display: true,\n        position: 'right'\n      }\n    }\n  };\n\n  $timeout(() => {\n    $scope.doughnut.events.data = [\n      metrics.evApproved,\n      metrics.evNew,\n      metrics.evFlaggedIncorrect,\n      metrics.evRequiresReview\n    ];\n  }, 500);\n\n  $timeout(() => {\n    $scope.doughnut.references.data = [\n      metrics.refReviewed,\n      metrics.refNew,\n      metrics.refFlaggedIncorrect,\n      metrics.refRequiresReview,\n      metrics.refInterim\n    ];\n  },300);\n\n\n  $scope.search.go = () => {\n\n    // Send to correct page with search criteria\n    if($scope.search.target === 'references') $state.go('dashboard.knowledgebase.references', {filters: {search: $scope.search.query}});\n    if($scope.search.target === 'events') $state.go('dashboard.knowledgebase.events', {filters: {search: $scope.search.query}});\n\n  }\n\n}]);","app.controller('knowledgebase.events.edit',\n['_', '$q', '$scope', '$mdDialog', '$mdToast', 'api.complete', 'api.pubmed', 'api.kb.associations', 'api.knowledgebase', 'api.user', 'action', 'event',\n(_, $q, scope, $mdDialog, $mdToast, $complete, $pubmed, $kbAssoc, $kb, $user, action, event) => {\n\n  scope.$alterations = $complete.get('alterations');\n  scope.disableRefTitle = false;\n  scope.event = angular.copy(event);\n  scope.formAction = (action === 'new') ? 'Create' : 'Modify';\n  scope.user = $user._me;\n  scope.action = action;\n\n  scope.events = {\n    valid: false,\n    dirty: true,\n    pristine: true,\n  };\n\n\n\n  scope.submit = () => {\n    scope.matching.$setSubmitted();\n\n    if(!scope.matching.$valid) $mdToast.show($mdToast.simple({textContent:'Please check all the fields for errors'}));\n\n    // All are valid\n    if(scope.matching.$valid) {\n\n      scope.reference.disease_list = _.join(scope.disease.all, ';');\n\n      // Send updated entry to API\n      if(action === 'new') {\n        // Submit new entry\n        $kb.references.create(scope.reference).then(\n          (newEntry) => {\n            $mdDialog.hide({status: 'new', data: newEntry});\n          },\n          (err) => {\n            console.log('Unable to create entry', err);\n            $mdToast.show($mdToast.simple({textContent: 'Unable to add new entry. Please try again. If this continues to fail, please leave feedback.'}));\n          }\n        )\n      } else {\n        // Update Existing Entry\n        $kb.references.update(scope.reference).then(\n          (updateEntry) => {\n            console.log('Entry saved', updateEntry);\n            $mdDialog.hide({status: 'update', data: updateEntry});\n          },\n          (err) => {\n            console.log('Unable to update entry', err);\n            $mdToast.show($mdToast.simple({textContent: 'Unable to update the entry. Please try again. If this continues to fail, please leave feedback.'}));\n          }\n        )\n      }\n\n    }\n  };\n\n  // Close Dialog\n  scope.cancel = () => {\n    $mdDialog.cancel('No changes have been made.');\n  };\n\n\n  // When the modal opens, watch for the events-expression value to load and validate it.\n  scope.$watch('matching.key', (newval, oldval) => {\n\n    // Are we transitioning from an empty form to a prefilled?\n    if((oldval === undefined || oldval === null) && (newval !== undefined && newval !== null)) {\n      scope.validateKBEvents();\n    } else {\n      // If not, are we just looking at a normal typing change?\n      if(scope.events.pristine) scope.validateKBEvents();\n    }\n\n    // If the previous value was null/undefined, mark as no longer pristine.\n    if(newval !== null && newval !== undefined) scope.events.pristine = false;\n  });\n\n\n  // Validate KB Events string\n  scope.validateKBEvents = () => {\n    scope.events.dirty = true;\n    scope.events.valid = false;\n\n    if(scope.event.key === '' || scope.event.key === undefined || scope.event.key === null) {\n      scope.events.dirty = false;\n      scope.events.valid = false;\n      return;\n    }\n\n    // Try to validate\n    $kb.validate.events(scope.event.key).then(\n      (result) => {\n        scope.events.dirty = false;\n        scope.events.valid = true;\n\n        // FIll out other fields\n        scope.event.type = scope.event.key.split('_')[0];\n        scope.event.name = scope.event.key.split('_')[1];\n        scope.event.display_coord = scope.event.key.split('_')[2];\n\n      },\n      (err) => {\n        scope.events.dirty = false;\n        scope.events.valid = false;\n      }\n    )\n  };\n\n}]); // End controller\n","app.controller('knowledgebase.events.filter',\n  ['$q', '_', '$scope', '$mdDialog', 'api.knowledgebase', 'filters',\n    ($q, _, scope, $mdDialog, $kb, filters) => {\n\n      scope.cancel = () => {\n        $mdDialog.hide();\n      };\n\n      // Setup starting place filters\n      scope.filter = filters;\n      if(!scope.filter.key) scope.filter.key = [];\n      if(!scope.filter.name) scope.filter.name = [];\n      if(!scope.filter.display_coord) scope.filter.display_coord = [];\n      if(!scope.filter.notation) scope.filter.notation = [];\n      if(!scope.filter.related_events) scope.filter.related_events = [];\n\n      // Set Vocab\n      scope.new = {\n        values: {\n          key: null,\n          name: null,\n          display_coord: null,\n          notation: null,\n          related_events: null\n        }\n      };\n\n      // Transform chip for auto complete\n      scope.transformChip = (disease) => {\n        // If it is an object, it's already a known chip\n        if (angular.isObject(disease)) return disease;\n\n        // Otherwise, create a new one\n        return { disease: disease, type: 'new' }\n      };\n\n\n      // Auto-complete search filter\n      scope.disease = {search: []};\n      scope.disease.filter = (query) => {\n        let deferred = $q.defer();\n        if(query.length < 3) deferred.resolve([]);\n\n        if(query.length >= 3) {\n          $kb.diseaseOntology(query).then(\n            (entries) => {\n              deferred.resolve(entries);\n            },\n            (err) => {\n              console.log('Unable to search for disease-ontology entries', err);\n            }\n          );\n        }\n        return deferred.promise;\n      };\n\n      // New Freeform Entry\n      scope.new.action = (type) => {\n        if(scope.new.values[type] === null || scope.new.values[type] === undefined) return null;\n\n        // Create new Disease entry filter\n        scope.filter[type].push(scope.new.values[type]);\n        scope.disease.search[scope.disease.search.length] = scope.new.values[type];\n        scope.new.values[type] = null;\n      };\n\n      // Remove filter entry\n      scope.removeFilterEntry = (type, index) => {\n        scope.filter[type].splice(index, 1);\n      };\n\n      scope.save = () => {\n        $mdDialog.hide(scope.filter);\n      }\n\n    }]);","app.controller('knowledgebase.events',\n['$rootScope', '$q', '_', '$scope', '$sanitize', '$mdDialog', '$mdToast', '$kbUtils', 'api.knowledgebase', 'events', 'events_count',\n($rootScope, $q, _, $scope, $sanitize, $mdDialog, $mdToast, $kbUtils, $kb, events, events_count) => {\n\n  $scope.events = events;\n\n  // Open Filters Modal\n  $scope.openFilters = ($event) => {\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/knowledgebase/events/events.filter.html',\n      locals: {\n        filters: $paginate.filters,\n      },\n      clickOutToClose: false,\n      controller: 'knowledgebase.events.filter'\n    }).then(\n      // Save Filters\n      (filters) => {\n        $paginate.setFilters(filters); // Updated Filters\n        $paginate.updateFilters(); // Refresh Pagination\n      },\n      // Cancel\n      () => {\n\n      }\n    );\n  };\n\n  let $paginate = {\n    current: 1,         // current page\n    limit: 100,         // # of records per page\n    offset: 0,          // Current offset\n    pages: 0,           // Total Pages\n    records: events_count.events, // Total References,\n    filters: {},        // Filters\n\n    /**\n     * Setup the page count\n     */\n    calcPages: () => {\n      $paginate.pages = _.ceil(parseInt($paginate.records)/$paginate.limit);\n    },\n\n    /**\n     * Pages to display\n     *\n     * @returns {object} - Returns object with min, max properties.\n     */\n    displayPages: () => {\n      let min = ($paginate.current - 3 < 1) ? 1 : ($paginate.current - 3);\n      let upperPad = (min < 3) ? (4-min) : 0;\n      let max = ($paginate.current + (4+upperPad) > $paginate.pages) ? $paginate.pages : ($paginate.current + (4 + upperPad));\n      let pages = [];\n\n      for(let i=min; i < max; i++) {\n        pages.push(i);\n      }\n\n      return pages;\n    },\n\n    /**\n     * Update Count\n     */\n    updateCount: () => {\n      $kb.events.count($paginate.filters).then(\n        (count) => {\n          $paginate.records = count.events;\n          $paginate.calcPages(); // Recount Pages\n        },\n        (err) => {\n\n        }\n      )\n    },\n\n    /**\n     * Set Filters\n     *\n     * @param {object} filters - Hashmap of filter query values\n     */\n    setFilters: (filters) => {\n      let newFilters = {};\n      _.forEach(filters, (value, filter) => {\n        if(value.length > 0) newFilters[filter] = value;\n      });\n\n      // Did the user clear the filters?\n      if(_.size(newFilters) === 0) return $paginate.filters = {};\n\n      $paginate.filters = newFilters;\n\n    },\n\n    /**\n     * Updated filters\n     */\n    updateFilters: () => {\n      $paginate.updateCount();\n      $paginate.changePage(1);\n    },\n\n    /**\n     * Refresh current page\n     */\n    refresh: () => {\n      $paginate.changePage($paginate.current); // Trigger change page with current value\n    },\n\n    /**\n     * Remove a filter\n     *\n     * @param {string} filter - The filter type to be spliced\n     * @param {int} i - The array ID to be spliced\n     */\n    removeFilter: (filter, i) => {\n      $paginate.filters[filter].splice(i,1);\n      // If it's now empty, remove it\n      if($paginate.filters[filter].length === 0) delete $paginate.filters[filter];\n      $paginate.updateFilters(); // Refresh Pagination\n    },\n\n    /**\n     * Change Page\n     */\n    changePage: (target) => {\n\n      $rootScope.showLoader = true;\n\n      // Attempt to load the next page\n      let startRecord = $paginate.limit * (target-1); // -1 as we're 0 based.\n\n      $kb.events.all($paginate.limit, startRecord, $paginate.filters).then(\n        (results) => {\n\n          let rowsWindow = document.getElementById('kbViewerWindow');\n          rowsWindow.scrollTop = 0;\n\n          // Process Events\n          $scope.events = results;\n\n          $paginate.current = target;\n          $rootScope.showLoader = false;\n        },\n        (err) => {\n\n        }\n      )\n    }\n  };\n\n  /**\n   * Open modal for new dialog\n   *\n   * @param $event\n   */\n  $scope.newReference = ($event) => {\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/knowledgebase/events/events.edit.html',\n      locals: {\n        action: 'new',\n        event: {}\n      },\n      multiple: true,\n      clickOutToClose: false,\n      controller: 'knowledgebase.events.edit'\n    }).then(\n      // Save Filters\n      (result) => {\n\n        if(result.status === 'new') {\n          // New Entry Added, refresh!\n          $paginate.refresh();\n          $mdToast.show($mdToast.simple({textContent: 'New entry successfully added'}))\n        }\n\n      },\n      // Cancel\n      () => {\n\n      }\n    );\n  };\n\n  $paginate.calcPages();\n  $scope.paginate = $paginate;\n\n}]);","app.controller('knowledgebase.references.edit',\n['_', '$q', '$scope', '$mdDialog', '$mdToast', 'api.complete', 'api.pubmed', 'api.kb.associations', 'api.knowledgebase', 'api.user', 'action', 'reference', 'vocabulary',\n(_, $q, scope, $mdDialog, $mdToast, $complete, $pubmed, $kbAssoc, $kb, $user, action, reference, vocabulary) => {\n\n  scope.$alterations = $complete.get('alterations');\n  scope.disableRefTitle = false;\n  scope.reference = angular.copy(reference);\n  scope.reference.context = _.join(scope.reference.context, ';');\n  scope.reference.disease_list = _.join(scope.reference.disease_list, ';');\n  scope.formAction = (action === 'new') ? 'Create' : 'Modify';\n  scope.vocabulary = vocabulary;\n  scope.user = $user._me;\n  scope.action = action;\n\n  scope.disease = {};\n  scope.disease.all = [];\n  scope.disease.new = '';\n  scope.disease.all = reference.disease_list;\n\n  scope.context = {};\n  scope.context.all = [];\n  scope.context.new = '';\n  scope.context.all = reference.context;\n\n  console.log(scope.context, reference);\n\n  console.log(scope.reference);\n  console.log('User', $user);\n\n  scope.stages = [\n    {title: 'Event Statement', description: 'Characterization details', id: \"matching\", ordinal: 0},\n    {title: 'Reference Details', description: 'Specifics about the source', id: \"reference\", ordinal: 1}\n  ];\n  let activeStage = scope.activeStage = 0;\n\n  scope.$knowledgebase = $complete.get('knowledgebase');\n\n  scope.events = {\n    valid: false,\n    dirty: true,\n    pristine: true,\n  };\n\n  scope.lastStage = () => {\n    scope.activeStage--;\n  };\n  scope.nextStage = () => {\n    let form;\n    // Try to trigger submit...\n    switch(scope.activeStage) {\n      case 1:\n        form = scope.referenceForm;\n        break;\n      case 0:\n        form = scope.matching;\n        break;\n    }\n\n    form.$setSubmitted();\n    if(form.$valid) {\n      scope.activeStage++;\n    }\n\n    console.log('Stage validity:', form.$valid, form);\n\n    if(!form.$valid) $mdToast.show($mdToast.simple({textContent:'Please check all the fields for errors'}));\n  };\n\n  scope.submit = () => {\n    scope.matching.$setSubmitted();\n\n    if(!scope.matching.$valid) $mdToast.show($mdToast.simple({textContent:'Please check all the fields for errors'}));\n\n    // All are valid\n    if(scope.matching.$valid) {\n\n      scope.reference.disease_list = _.join(scope.disease.all, ';');\n      scope.reference.context = _.join(scope.context.all, ';');\n\n      // Send updated entry to API\n      if(action === 'new') {\n        // Submit new entry\n        $kb.references.create(scope.reference).then(\n          (newEntry) => {\n            $mdDialog.hide({status: 'new', data: newEntry});\n          },\n          (err) => {\n            console.log('Unable to create entry', err);\n            $mdToast.show($mdToast.simple({textContent: 'Unable to add new entry. Please try again. If this continues to fail, please leave feedback.'}));\n          }\n        )\n      } else {\n        // Update Existing Entry\n        $kb.references.update(scope.reference).then(\n          (updateEntry) => {\n            console.log('Entry saved', updateEntry);\n            $mdDialog.hide({status: 'update', data: updateEntry});\n          },\n          (err) => {\n            console.log('Unable to update entry', err);\n            $mdToast.show($mdToast.simple({textContent: 'Unable to update the entry. Please try again. If this continues to fail, please leave feedback.'}));\n          }\n        )\n      }\n\n    }\n  };\n\n  // Close Dialog\n  scope.cancel = () => {\n    $mdDialog.cancel('No changes have been made.');\n  };\n\n  // Filter Auto-compelte for relevances\n  scope.findRelevance = (searchText) => {\n    return searchText ? scope.$alterations.association.filter( filterFunction(searchText) ) : scope.$alterations.association;\n  };\n\n\n  // Filter Auto-compelte for relevances\n  scope.findDisease = (searchText) => {\n    return searchText ? scope.$alterations.disease.filter( filterFunction(searchText) ) : scope.$alterations.disease;\n  };\n\n  // Autocomplete Filter\n  let filterFunction = (query) => {\n\n    let lowerCaseQuery = angular.lowercase(query); // Prep input to lowercase\n\n    // Return search function\n    return (entry) => {\n      return (entry.indexOf(lowerCaseQuery) > -1);\n    }\n  };\n\n  // Check for pubmed entry if set\n  scope.checkPMID = () => {\n\n    // Disable loading bar\n    scope.refLoading = false;\n\n    if(scope.reference.id_type !== 'pubmed') return;\n    if(scope.reference.ref_id === null || scope.reference.ref_id === '') return;\n\n    // Define PubMed ID\n    let pmid;\n\n    pmid = scope.reference.ref_id.match(/^[0-9]{2,9}/)[0];\n\n    // Show reference loading bar\n    scope.refLoading = true;\n\n    // Get PMID and process\n    $pubmed.article(pmid).then(\n      (article) => {\n        scope.disableRefTitle = true;\n        scope.reference.id_title = article.title;\n        scope.reference.id_type = 'pubmed';\n        scope.refLoading = false;\n      },\n      (err) => {\n        console.log('Unable to retrieve PubMed Article: ', err);\n      }\n    );\n  };\n\n  // When the modal opens, watch for the events-expression value to load and validate it.\n  scope.$watch('matching.events_expression', (newval, oldval) => {\n\n    // Are we transitioning from an empty form to a prefilled?\n    if((oldval === undefined || oldval === null) && (newval !== undefined && newval !== null)) {\n      scope.validateKBEvents();\n    } else {\n      // If not, are we just looking at a normal typing change?\n      if(scope.events.pristine) scope.validateKBEvents();\n    }\n\n    // If the previous value was null/undefined, mark as no longer pristine.\n    if(newval !== null && newval !== undefined) scope.events.pristine = false;\n  });\n\n  // Auto-complete filter\n  scope.disease.add = (entry) => {\n    if(scope.disease.all === undefined) scope.disease.all = [];\n    if(entry === null || entry === \"\") return;\n    scope.disease.all.push(entry);\n    scope.disease.new = null;\n  };\n  scope.disease.remove = (i) => {\n    scope.disease.all.splice(i,1);\n  };\n\n  // Auto-complete filter\n  scope.context.add = (entry) => {\n    if(scope.context.all === undefined) scope.context.all = [];\n    if(entry === null || entry === \"\") return;\n    scope.context.all.push(entry);\n    scope.context.new = null;\n  };\n  scope.context.remove = (i) => {\n    scope.context.all.splice(i,1);\n  };\n\n  scope.disease.filter = (query) => {\n    let deferred = $q.defer();\n    if(query.length < 3) deferred.resolve([]);\n\n    if(query.length >= 3) {\n      $kb.diseaseOntology(query).then(\n        (entries) => {\n          deferred.resolve(entries);\n        },\n        (err) => {\n          console.log('Unable to search for disease-ontology entries', err);\n        }\n      );\n    }\n    return deferred.promise;\n  };\n\n  // Validate KB Events string\n  scope.validateKBEvents = () => {\n    scope.events.dirty = true;\n    scope.events.valid = false;\n\n    if(scope.reference.events_expression === '' || scope.reference.events_expression === undefined || scope.reference.events_expression === null) {\n      scope.events.dirty = false;\n      scope.events.valid = false;\n      return;\n    }\n\n    // Try to validate\n    $kb.validate.events(scope.reference.events_expression).then(\n      (result) => {\n        scope.events.dirty = false;\n        scope.events.valid = true;\n      },\n      (err) => {\n        scope.events.dirty = false;\n        scope.events.valid = false;\n      }\n    )\n  };\n\n}]); // End controller\n","app.controller('knowledgebase.references.filter',\n['$q', '_', '$scope', '$mdDialog', 'api.knowledgebase', 'vocabulary', 'filters',\n($q, _, scope, $mdDialog, $kb, vocabulary, filters) => {\n\n  scope.cancel = () => {\n    $mdDialog.hide();\n  };\n\n  // Setup starting place filters\n  scope.filter = filters;\n  if(!scope.filter.disease_list) scope.filter.disease_list = [];\n  if(!scope.filter.context) scope.filter.context = [];\n  if(!scope.filter.evidence) scope.filter.evidence = [];\n  if(!scope.filter.events_expression) scope.filter.events_expression = [];\n\n  // Set Vocab\n  scope.vocabulary = vocabulary;\n  scope.new = {\n    values: {\n      disease_list: null,\n      context: null,\n      evidence: null,\n      events_expression: null\n    }\n  };\n\n  // Transform chip for auto complete\n  scope.transformChip = (disease) => {\n    // If it is an object, it's already a known chip\n    if (angular.isObject(disease)) return disease;\n\n    // Otherwise, create a new one\n    return { disease: disease, type: 'new' }\n  };\n\n\n  // Auto-complete search filter\n  scope.disease = {search: []};\n  scope.disease.filter = (query) => {\n    let deferred = $q.defer();\n    if(query.length < 3) deferred.resolve([]);\n\n    if(query.length >= 3) {\n      $kb.diseaseOntology(query).then(\n        (entries) => {\n          deferred.resolve(entries);\n        },\n        (err) => {\n          console.log('Unable to search for disease-ontology entries', err);\n        }\n      );\n    }\n    return deferred.promise;\n  };\n\n  // New Freeform Entry\n  scope.new.action = (type) => {\n    if(scope.new.values[type] === null || scope.new.values[type] === undefined) return null;\n\n    // Create new Disease entry filter\n    scope.filter[type].push(scope.new.values[type]);\n    scope.disease.search[scope.disease.search.length] = scope.new.values[type];\n    scope.new.values[type] = null;\n  };\n\n  // Remove filter entry\n  scope.removeFilterEntry = (type, index) => {\n    scope.filter[type].splice(index, 1);\n  };\n\n  scope.save = () => {\n    $mdDialog.hide(scope.filter);\n  }\n\n}]);","app.controller('knowledgebase.references',\n['$rootScope', '$q', '_', '$scope', '$sanitize', '$mdDialog', '$mdToast', '$kbUtils', 'api.knowledgebase', 'references', 'ref_count', 'vocabulary',\n($rootScope, $q, _, $scope, $sanitize, $mdDialog, $mdToast, $kbUtils, $kb, references, ref_count, vocabulary) => {\n\n  $scope.references = [];\n\n  // Toggle Events Expression Dropper\n  $scope.showEvExDropper = (ref) => {\n    if(ref.events_expression_expanded.ors.length > 1 || ref.events_expression_expanded.ands.length > 1) ref.showEEs = !ref.showEEs;\n  };\n\n  // Toggle Dropper\n  $scope.showDropper = (arr, toggle, sw) => {\n    if(arr.length > 1) toggle[sw] = !toggle[sw];\n  };\n\n  // Determine if this reference has children\n  $scope.hasChildren = (ref) => {\n    return (ref.events_expression_expanded.ors.length > 1 || ref.events_expression_expanded.ands.length > 1);\n  };\n\n  $scope.threeLetter = (str) => {\n    return str.substring(0,3);\n  } ;\n  \n  // Open Filters Modal\n  $scope.openFilters = ($event) => {\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/knowledgebase/references/references.filter.html',\n      locals: {\n        filters: $paginate.filters,\n        vocabulary: vocabulary\n      },\n      clickOutToClose: false,\n      controller: 'knowledgebase.references.filter'\n    }).then(\n      // Save Filters\n      (filters) => {\n        $paginate.setFilters(filters); // Updated Filters\n        $paginate.updateFilters(); // Refresh Pagination\n      },\n      // Cancel\n      () => {\n\n      }\n    );\n  };\n\n  $scope.search = {};\n  $scope.search.go = () => {\n    $paginate.filters.search = $scope.search.query;\n    $paginate.refresh();\n  };\n\n  // Open Filters Modal\n  $scope.openView = ($event, reference) => {\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/knowledgebase/references/references.view.html',\n      locals: {\n        reference: reference,\n        vocabulary: vocabulary\n      },\n      resolve: {\n        history: ['$q', 'api.knowledgebase', ($q, $kb) => {\n          return $kb.history('reference', reference.ident);\n        }]\n      },\n      clickOutToClose: false,\n      controller: 'knowledgebase.references.view'\n    }).then(\n      // Save Filters\n      () => {\n      },\n      // Cancel\n      () => {\n\n      }\n    );\n\n  };\n\n  let $paginate = {\n    current: 1,         // current page\n    limit: 100,         // # of records per page\n    offset: 0,          // Current offset\n    pages: 0,           // Total Pages\n    records: ref_count.references, // Total References,\n    filters: {},        // Filters\n\n    /**\n     * Setup the page count\n     */\n    calcPages: () => {\n      $paginate.pages = _.ceil(parseInt($paginate.records)/$paginate.limit);\n    },\n\n    /**\n     * Pages to display\n     *\n     * @returns {object} - Returns object with min, max properties.\n     */\n    displayPages: () => {\n      let min = ($paginate.current - 3 < 1) ? 1 : ($paginate.current - 3);\n      let upperPad = (min < 3) ? (4-min) : 0;\n      let max = ($paginate.current + (4+upperPad) > $paginate.pages) ? $paginate.pages : ($paginate.current + (4 + upperPad));\n      let pages = [];\n\n      for(let i=min; i < max; i++) {\n        pages.push(i);\n      }\n\n      return pages;\n    },\n\n    /**\n     * Update Count\n     */\n    updateCount: () => {\n      $kb.references.count($paginate.filters).then(\n        (count) => {\n          $paginate.records = count.references;\n          $paginate.calcPages(); // Recount Pages\n        },\n        (err) => {\n\n        }\n      )\n    },\n\n    /**\n     * Set Filters\n     *\n     * @param {object} filters - Hashmap of filter query values\n     */\n    setFilters: (filters) => {\n      let newFilters = {};\n      _.forEach(filters, (value, filter) => {\n        if(value.length > 0) newFilters[filter] = value;\n      });\n\n      // Did the user clear the filters?\n      if(_.size(newFilters) === 0) return $paginate.filters = {};\n\n      $paginate.filters = newFilters;\n\n    },\n\n    /**\n     * Updated filters\n     */\n    updateFilters: () => {\n      $paginate.updateCount();\n      $paginate.changePage(1);\n    },\n\n    /**\n     * Refresh current page\n     */\n    refresh: () => {\n      $paginate.changePage($paginate.current); // Trigger change page with current value\n    },\n\n    /**\n     * Remove a filter\n     *\n     * @param {string} filter - The filter type to be spliced\n     * @param {int} i - The array ID to be spliced\n     */\n    removeFilter: (filter, i) => {\n      $paginate.filters[filter].splice(i,1);\n      // If it's now empty, remove it\n      if($paginate.filters[filter].length === 0) delete $paginate.filters[filter];\n      $paginate.updateFilters(); // Refresh Pagination\n    },\n\n    /**\n     * Change Page\n     */\n    changePage: (target) => {\n\n      $rootScope.showLoader = true;\n\n      // Attempt to load the next page\n      let startRecord = $paginate.limit * (target-1); // -1 as we're 0 based.\n\n      $kb.references.all($paginate.limit, startRecord, $paginate.filters).then(\n        (results) => {\n\n          let rowsWindow = document.getElementById('kbViewerWindow');\n          rowsWindow.scrollTop = 0;\n\n          // Process References\n          $scope.references = $kbUtils.processReferences(results);\n\n          $paginate.current = target;\n          $rootScope.showLoader = false;\n        },\n        (err) => {\n\n        }\n      )\n    }\n  };\n\n  /**\n   * Open modal for new dialog\n   *\n   * @param $event\n   */\n  $scope.newReference = ($event) => {\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/knowledgebase/references/references.edit.html',\n      locals: {\n        action: 'new',\n        vocabulary: vocabulary,\n        reference: {}\n      },\n      multiple: true,\n      clickOutToClose: false,\n      controller: 'knowledgebase.references.edit'\n    }).then(\n      // Save Filters\n      (result) => {\n\n        if(result.status === 'new') {\n          // New Entry Added, refresh!\n          $paginate.refresh();\n          $mdToast.show($mdToast.simple({textContent: 'New entry successfully added'}))\n        }\n\n      },\n      // Cancel\n      () => {\n\n      }\n    );\n  };\n\n  // Loop over references and process groups\n  $scope.references = $kbUtils.processReferences(references);\n\n  $paginate.calcPages();\n  $scope.paginate = $paginate;\n\n}]);","app.controller('knowledgebase.references.view',\n['$q', '_', '$scope', '$mdDialog', '$mdToast', '$kbUtils', 'api.knowledgebase', 'reference', 'history','vocabulary',\n($q, _, scope, $mdDialog, $mdToast, $kbUtils, $kb, reference, history, vocabulary) => {\n\n  scope.reference = reference;\n  scope.history = history;\n  scope.vocabulary = vocabulary;\n\n  scope.cancel = () => {\n    $mdDialog.hide();\n  };\n\n  scope.editingStatus = false;\n  scope.toggleEdit = () => {\n    console.log('Triggering');\n    scope.editingStatus = !scope.editingStatus;\n  };\n\n  scope.edit = ($event) => {\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/knowledgebase/references/references.edit.html',\n      locals: {\n        reference: reference,\n        action: 'edit',\n        vocabulary: vocabulary\n      },\n      multiple: true,\n      clickOutToClose: false,\n      controller: 'knowledgebase.references.edit'\n    }).then(\n      // Save Filters\n      (result) => {\n        if(result.status === 'update') {\n\n          console.log('Updated reference', result);\n\n          scope.reference = $kbUtils.processReferences(result.data);\n          scope.reference = result.data;\n          reference = scope.reference;\n\n          $kb.history('reference', scope.reference.ident).then(\n            (history) => {\n              scope.history = history;\n            },\n            (err) => {\n              console.log('Unable to retrieve updated history.');\n            }\n          );\n\n          $mdToast.show($mdToast.simple({textContent: 'The entry has been updated'}));\n        }\n      },\n      // Cancel\n      () => {\n        $mdToast.show($mdToast.simple({textContent: 'No changes were saved'}));\n      }\n    );\n  };\n\n  // Update Reference Status\n  scope.updateStatus = () => {\n\n    // Send status update\n    $kb.references.status(scope.reference, scope.reference.status, scope.update.comments).then(\n      (result) => {\n        // Update Result\n        scope.reference = $kbUtils.processReferences(result)[0];\n\n        // Update History\n        $kb.history('reference', scope.reference.ident).then(\n          (history) => {\n            scope.history = history;\n          },\n          (err) => {\n            console.log('Unable to retrieve updated history.');\n          }\n        );\n\n        scope.editingStatus = false;\n        $mdToast.show($mdToast.simple({textContent: 'The entry has been updated'}));\n      },\n      (err) => {\n        console.log('Unable to update reference status');\n      }\n    )\n\n  }\n\n}]);","app.controller('controller.dashboard.report.genomic', \n  ['_', '$q', '$scope', '$state', '$timeout', '$window', 'api.pog', 'pog', 'report', '$mdDialog', '$mdToast',\n  (_, $q, $scope, $state, $timeout, $window, $pog, pog, report, $mdDialog, $mdToast) => {\n\n  $scope.pog = pog;\n  $scope.report = report;\n\n  $scope.openPrint = () => {\n    // State go!\n    $window.open($state.href('print.POG.report.genomic',{POG: pog.POGID, analysis_report: report.ident}), '_blank');\n  };\n  \n  $scope.sections = [\n    {\n      name: 'Analyst Comments',\n      state: 'analystComments',\n      meta: false,\n      showChildren: false,\n      clinician: true,\n      children: []\n    },\n    {\n      name: 'Pathway Analysis',\n      state: 'pathwayAnalysis',\n      meta: false,\n      showChildren: false,\n      clinician: true,\n      children: []\n    },\n    {\n      name: 'Potential Therapeutic Targets',\n      state: 'therapeutic',\n      meta: false,\n      showChildren: false,\n      clinician: true,\n      children: []\n    },\n    {\n      name: 'Presentation',\n      state: 'presentation',\n      meta: false,\n      showChildren: false,\n      clinician: true,\n      children: [\n        {name: 'Additional Information', state: 'slide'},\n        {name: 'Discussion Notes', state: 'discussion'}\n      ]\n    },\n    {\n      name: 'Detailed Genomic Analysis',\n      state: null,\n      meta: false,\n      showChildren: false,\n      clinician: true,\n      category: true,\n      children: [\n        { name: 'Knowledgebase Matches', state: 'knowledgebase'},\n        { name: 'DNA Repair', state: null, disabled: true},\n        { name: 'Microbial', state: 'microbial'},\n        { name: 'Spearman', state: 'spearman'},\n        { name: 'HRD', state: 'hrd', disabled: true},\n        { name: 'Disease Specific', state: 'diseaseSpecificAnalysis'},\n      ]\n    },\n    {\n      name: 'Somatic',\n      state: null,\n      meta: false,\n      showChildren: false,\n      clinician: true,\n      category: true,\n      children: [\n        { name: 'Small Mutations', state: 'smallMutations'},\n        { name: 'Copy Number Variants', state: 'copyNumberAnalyses'},\n        { name: 'Structural Variants', state: 'structuralVariation'},\n      ]\n    },\n    {\n      name: 'Expression',\n      state: 'expressionAnalysis',\n      meta: false,\n      showChildren: false,\n      clinician: true,\n      children: []\n    },\n    {\n      name: 'Appendices',\n      state: 'appendices',\n      meta: false,\n      showChildren: false,\n      clinician: true,\n      children: []\n    },\n    {\n      name: 'History',\n      state: 'history',\n      meta: true,\n      showChildren: false,\n      clinician: false,\n      children: []\n    },\n    {\n      name: 'Report Settings',\n      state: 'meta',\n      meta: true,\n      showChildren: false,\n      clinician: false,\n      children: []\n    }\n  ];\n\n  /**\n   * Check if the provided state is the current one\n   *\n   * @param state\n   * @returns {boolean}\n   */\n  $scope.activeSection = (state) => {\n    if($state.current.name.indexOf(state) > -1) {\n      return true;\n    }\n    return false;\n  };\n\n  $scope.goToReportSection = (goto) => {\n    \n    $state.go('dashboard.reports.pog.report.genomic.' + goto);\n  };\n\n\n  /**\n   * Open export modal\n   *\n   */\n  $scope.openExport = ($event) => {\n    $mdDialog.show({\n      controller: 'controller.dashboard.report.genomic.history.export',\n      templateUrl: 'dashboard/report/genomic/history/history.export.html',\n      targetEvent: $event,\n      locals: {pog: pog},\n      clickOutsideToClose: false,\n    }).then(\n      (result) => {\n        // Result of hidden\n      },\n      () => {\n        // Closed\n      }\n    );\n  };\n  \n}]);\n","app.controller('controller.dashboard.pog.report.listing',\n  ['_', '$scope', '$state', 'api.pog', 'api.image', '$userSettings', 'user', 'reports', 'pog',\n    (_, $scope, $state, $pog, $image, $userSettings, user, reports, pog) => {\n\n      $scope.user = user;\n      $scope.$state = $state;\n      $scope.reports = _.sortBy(reports, ['createdAt']).reverse();\n      $scope.pog = pog;\n      \n    }\n  ]\n);\n","app.controller('controller.dashboard.report.probe',\n['_', '$q', '$scope', '$state', '$timeout', '$window', 'api.pog', 'pog', 'report',\n(_, $q, $scope, $state, $timeout, $window, $pog, pog, report) => {\n\n  $scope.pog = pog;\n\n  $scope.openPrint = () => {\n    // State go!\n    $window.open($state.href('print.POG.report.probe',{POG: pog.POGID, analysis_report: report.ident}), '_blank');\n  };\n\n  /**\n   * Check if the provided state is the current one\n   *\n   * @param state\n   * @returns {boolean}\n   */\n  $scope.activeSection = (section) => {\n    if($state.current.name.indexOf(section.state) > -1) {\n      return true;\n    }\n    return false;\n  };\n\n\n  $scope.goToReportSection = (goto) => {\n\n    $state.go('^.' + goto);\n  };\n\n}]);\n","app.controller('controller.dashboard.reports.clinician', ['_', '$q', '$rootScope', '$scope', '$state', 'reports', (_, $q, $rootScope, $scope, $state, reports) => {\n  \n  $scope.reports = _.orderBy(reports.reports, ['pog.POGID', 'createdAt'], ['desc', 'desc']);\n  \n  $scope.pagination = {\n    offset: 0,\n    limit: 25,\n    total: reports.total\n  };\n  \n}]);\n","app.controller('controller.dashboard.reports.dashboard', ['_', '$q', '$rootScope', '$scope', '$state', 'reports', (_, $q, $rootScope, $scope, $state, reports) => {\n  \n  reports = _.orderBy(reports, ['state', 'patientInformation.caseType', 'analysis.pog.POGID'], ['asc', 'desc', 'asc']);\n\n  $scope.currentCases = reports;\n  $scope.upstreamCases = [];\n  \n  $rootScope.$watch('_clinicianMode', (newVal, oldVal) => {\n    if(newVal) $state.go('dashboard.reports.genomic');\n  });\n\n}]);\n","app.controller('controller.dashboard.reports.genomic', ['_', '$q', '$rootScope', '$scope', 'api.pog_analysis_report', 'reports', '$mdDialog', 'user', '$userSettings', 'projects',  (_, $q, $rootScope, $scope, $report, reports, $mdDialog, user, $userSettings, projects) => {\n\n  $scope.reports = reports = _.orderBy(reports, ['analysis.pog.POGID','createdAt'], ['asc','desc']);\n  $scope.archived = false;\n  $scope.nonproduction = false;\n  $scope.loading = false;\n  $scope.selectedProject = ($userSettings.get('selectedProject') === undefined) ? null : $userSettings.get('selectedProject');\n\n  $scope.roles = [\n    'bioinformatician',\n    'analyst',\n    'reviewer',\n    'admin',\n    'clinician'\n  ];\n  \n  $scope.projects = projects;\n\n  $scope.states = {\n    ready: true,\n    active: true,\n    presented: true,\n    archived: false,\n    nonproduction: false\n  };\n  \n  // Clinician Mode Override\n  if($rootScope._clinicianMode) {\n    $scope.selectedProject = 'POG';\n    if($userSettings.get('selectedProject') === undefined) $userSettings.save('selectedProject', 'POG');\n    $scope.states = {\n      ready: false,\n      active: false,\n      presented: true,\n      archived: true,\n      nonproduction: false\n    }\n  }\n\n  $scope.filter ={\n    currentUser: ($userSettings.get('genomicReportListCurrentUser') === undefined) ? true : $userSettings.get('genomicReportListCurrentUser'),\n    query: null\n  };\n\n  if($userSettings.get('genomicReportListCurrentUser') === undefined) $userSettings.save('genomicReportListCurrentUser', true);\n\n  $scope.numReports = (state) => {\n    return _.filter(reports, {state: state}).length;\n  };\n\n  $scope.$watch('filter.currentUser', (newVal, oldVal) => {\n    // Ignore onload message\n    if(JSON.stringify(newVal) === JSON.stringify(oldVal)) return;\n    $userSettings.save('genomicReportListCurrentUser', newVal);\n  });\n  \n  $scope.$watch('selectedProject', (newVal, oldVal) => {\n    if(JSON.stringify(newVal) === JSON.stringify(oldVal)) return;\n    $userSettings.save('selectedProject', newVal);\n  });\n\n  $scope.refreshList = () => {\n    let states = [];\n    _.each($scope.states, (v,k) => {\n      if(v) states.push(k);\n    });\n    $scope.loading = true;\n    $report.all({all: !$scope.filter.currentUser, query: $scope.filter.query, role: $scope.filter.role, states: _.join(states, ','), type: 'genomic', project: $scope.selectedProject }).then(\n      (result) => {\n        $scope.loading = false;\n        $scope.reports = reports = result;\n        $scope.reports = reports = _.orderBy(result, ['analysis.pog.POGID','createdAt'], ['asc','desc']);\n        associateUsers();\n      },\n      (err) => {\n        console.log('Unable to get reports', err);\n      }\n    )\n  };\n\n  let associateUsers = () => {\n    // Filter Users For a POG\n    _.forEach($scope.reports, (r, i) => {\n      // Loop over pogusers\n      $scope.reports[i].myRoles = _.filter(r.users, {user: {ident: user.ident}});\n    });\n  };\n\n  associateUsers();\n\n  $scope.searchPogs = (state, query) => {\n\n    return (report) => {\n\n      if(!query) query = \"\";\n\n      // Define Return result\n      let result = false;\n\n      // Run over each split by space\n      _.forEach(query.split(' '), (q) => {\n\n        if(report.state !== state) return false;\n\n\n        if(q.length === 0) return result = true;\n\n        // Pog ID?\n        if(report.analysis.pog.POGID.toLowerCase().indexOf(q.toLowerCase()) !== -1) result = true;\n\n        // Tumour Type\n        if(report.patientInformation !== null && report.patientInformation.tumourType && report.patientInformation.tumourType.toLowerCase().indexOf(q.toLowerCase()) !== -1) result = true;\n\n        // Tumour Type & Ploidy Model\n        //if(pog.patientInformation.tumourType && pog.patientInformation.tumourType.toLowerCase().indexOf(q.toLowerCase()) !== -1) result = true;\n        if(!report.tumourAnalysis) return;\n\n        if(report.tumourAnalysis && report.tumourAnalysis.ploidy && report.tumourAnalysis.ploidy.toLowerCase().indexOf(q.toLowerCase()) !== -1) result = true;\n\n        // Comparators\n        if(report.tumourAnalysis && report.tumourAnalysis.diseaseExpressionComparator && report.tumourAnalysis.diseaseExpressionComparator.toLowerCase().indexOf(q.toLowerCase()) !== -1) result = true; // Disease\n        if(report.tumourAnalysis && report.tumourAnalysis.normalExpressionComparator && report.tumourAnalysis.normalExpressionComparator.toLowerCase().indexOf(q.toLowerCase()) !== -1) result = true; // Normal\n\n        // TC Search TODO: Cleanup to single line using regex. Proof of concept/do they want this?\n        if(q.toLowerCase().indexOf('tc>') !== -1) (report.tumourAnalysis.tumourContent > parseInt(_.last(q.split('>')))) ? result = true : null;\n        if(q.toLowerCase().indexOf('tc<') !== -1) (report.tumourAnalysis.tumourContent < parseInt(_.last(q.split('<')))) ? result = true : null;\n        if(q.toLowerCase().indexOf('tc=') !== -1) (report.tumourAnalysis.tumourContent === parseInt(_.last(q.split('=')))) ? result = true : null;\n\n        // Search Users\n        _.forEach(report.users, (p) => {\n          if(p.user.firstName.indexOf(q) > -1) result = true;\n          if(p.user.lastName.indexOf(q) > -1) result = true;\n          if(p.user.username.indexOf(q) > -1) result = true;\n        });\n\n\n      });\n\n      return result;\n\n    };\n\n  };\n\n  $scope.filterFn = (pogInput) => {\n    console.log(pogInput);\n    return true;\n  };\n\n  // Show Dialog with searching tips\n  $scope.showFilterTips = ($event) => {\n\n    let alert = $mdDialog.show(\n      $mdDialog.alert()\n        .clickOutsideToClose(true)\n        .title('POG Searching Tips')\n        .htmlContent(\"The search bar can filter the listing of POGs using a number of special terms. <ul><li>Filter by tumour content: <code>tc>50 tc<40 tc=35</code></li><li>Filter by POG: <code>pog544</code></li><li>By ploidy: <code>diploid</code></li><li>By user involved: <code>bpierce</code>, <code>Brandon</code></li> <li>By disease: <code>melanoma</code></li> <li>By comparators: <code>BRCA</code>, <code>breast</code></li></ul>\")\n        .ok('Got it!')\n        .targetEvent($event)\n    );\n\n  };\n\n\n}]);\n","app.controller('controller.dashboard.reports.probe', ['_', '$q', '$scope', 'api.pog_analysis_report', 'reports', '$mdDialog', 'user', '$userSettings',  (_, $q, $scope, $report, reports, $mdDialog, user, $userSettings) => {\n\n  $scope.reports = reports;\n  $scope.archived = false;\n  $scope.nonproduction = false;\n  $scope.loading = false;\n\n  $scope.roles = [\n    'bioinformatician',\n    'analyst',\n    'reviewer',\n    'admin',\n    'clinician'\n  ];\n\n  $scope.states = {\n    uploaded: true,\n    signedoff: true,\n    reviewed: false,\n    nonproduction: false\n  };\n\n  $scope.filter ={\n    currentUser: ($userSettings.get('probeReportListCurrentUser') === undefined) ? true : $userSettings.get('probeReportListCurrentUser'),\n    query: null\n  };\n\n  if($userSettings.get('probeReportListCurrentUser') === undefined) $userSettings.save('probeReportListCurrentUser', true);\n\n  $scope.numReports = (state) => {\n    return _.filter(reports, {state: state}).length;\n  };\n\n  $scope.$watch('filter.currentUser', (newVal, oldVal) => {\n    // Ignore onload message\n    if(JSON.stringify(newVal) === JSON.stringify(oldVal)) return;\n    $userSettings.save('probeReportListCurrentUser', newVal);\n\n  });\n\n  $scope.refreshList = () => {\n\n    let states = [];\n    _.each($scope.states, (v,k) => {\n      if(v) states.push(k);\n    });\n\n    $scope.loading = true;\n    $report.all({all: !$scope.filter.currentUser, query: $scope.filter.query, role: $scope.filter.role, states: _.join(states, ','), type: 'probe'}).then(\n      (result) => {\n        $scope.loading = false;\n        $scope.reports = reports = result;\n        associateUsers();\n      },\n      (err) => {\n        console.log('Unable to get pogs', err);\n      }\n    )\n  };\n\n  let associateUsers = () => {\n    // Filter Users For a POG\n    _.forEach($scope.reports, (r, i) => {\n      // Loop over pogusers\n      $scope.reports[i].myRoles = _.filter(r.users, {user: {ident: user.ident}});\n    });\n  };\n\n  associateUsers();\n\n  $scope.searchPogs = (state, query) => {\n\n    return (report) => {\n      if(!query) query = \"\";\n\n      // Define Return result\n      let result = false;\n\n      // Run over each split by space\n      _.forEach(query.split(' '), (q) => {\n\n        if(report.state !== state) return false;\n\n\n        if(q.length === 0) return result = true;\n\n        // Pog ID?\n        if(report.analysis.pog.POGID.toLowerCase().indexOf(q.toLowerCase()) !== -1) result = true;\n\n        if(report.patientInformation !== null && report.patientInformation.tumourType && report.patientInformation.tumourType.toLowerCase().indexOf(q.toLowerCase()) !== -1) result = true;\n\n        // Tumour Type & Ploidy Model\n        //if(pog.patientInformation.tumourType && pog.patientInformation.tumourType.toLowerCase().indexOf(q.toLowerCase()) !== -1) result = true;\n        if(!report.tumourAnalysis) return;\n        if(report.tumourAnalysis && report.tumourAnalysis.ploidy && report.tumourAnalysis.ploidy.toLowerCase().indexOf(q.toLowerCase()) !== -1) result = true;\n\n        // TC Search TODO: Cleanup to single line using regex. Proof of concept/do they want this?\n        if(q.toLowerCase().indexOf('tc>') !== -1) (report.tumourAnalysis.tumourContent > parseInt(_.last(q.split('>')))) ? result = true : null;\n        if(q.toLowerCase().indexOf('tc<') !== -1) (report.tumourAnalysis.tumourContent < parseInt(_.last(q.split('<')))) ? result = true : null;\n        if(q.toLowerCase().indexOf('tc=') !== -1) (report.tumourAnalysis.tumourContent === parseInt(_.last(q.split('=')))) ? result = true : null;\n\n        // Search Users\n        _.forEach(report.users, (p) => {\n          if(p.user.firstName.indexOf(q) > -1) result = true;\n          if(p.user.lastName.indexOf(q) > -1) result = true;\n          if(p.user.username.indexOf(q) > -1) result = true;\n        });\n\n\n      });\n\n      return result;\n\n    };\n\n  };\n\n  $scope.filterFn = (pogInput) => {\n    console.log(pogInput);\n    return true;\n  };\n\n  // Show Dialog with searching tips\n  $scope.showFilterTips = ($event) => {\n\n    let alert = $mdDialog.show(\n      $mdDialog.alert()\n        .clickOutsideToClose(true)\n        .title('POG Searching Tips')\n        .htmlContent(\"The search bar can filter the listing of POGs using a number of special terms. <ul><li>Filter by tumour content: <code>tc>50 tc<40 tc=35</code></li><li>Filter by POG: <code>pog544</code></li><li>By tumour type: <code>brca</code></li><li>By ploidy: <code>diploid</code></li><li>By user involved: <code>bpierce</code>, <code>Brandon</code></li> <li>By disease: <code>melanoma</code></li> </ul>\")\n        .ok('Got it!')\n        .targetEvent($event)\n    );\n\n  };\n\n\n}]);\n","app.controller('controller.print.POG.report.probe', ['_', '$scope', 'pog', 'report', (_, $scope, pog, report) => {\n\n  $scope.report = report;\n  $scope.pog = pog;\n\n}]);","app.controller('controller.print.POG.report.genomic',\n['_', '$scope', '$timeout', '$sce', 'pog', 'report',\n(_, $scope, $timeout, $sce, pog, report) => {\n\n\n  //$scope.pathwayAnalysis = pathway;\n  $scope.samples = [];\n  $scope.report = report;\n  $scope.pog = pog;\n\n}]);","app.controller('controller.dashboard.tracking.board',\n['$q', '_', '$scope', 'api.tracking.definition', 'api.tracking.state', 'api.tracking.task', '$interval', '$mdDialog', '$mdToast', '$userSettings', 'states', 'definitions', 'myDefinitions', 'api.socket',\n($q, _, $scope, $definition, $state, $task, $interval, $mdDialog, $mdToast, $userSettings, states, definitions, myDefinitions, socket) => {\n\n  $scope.allDefinitions = definitions; // All definitions for picking from\n  $scope.definitions = myDefinitions; // Definitions set by user\n  $scope.sortedStates = {};\n  $scope.filter = {\n    hidden: false,\n    state: ($userSettings.get('tracking.state')) ? $userSettings.get('tracking.state') : {status: ['active', 'pending', 'hold', 'failed']},\n    definition: ($userSettings.get('tracking.definition')) ? $userSettings.get('tracking.definition') : {slug: ['projects', 'sequencing', 'bioapps'], hidden: false},\n  };\n  $scope.refreshing = false;\n  $scope.tracking_loading = false;\n  \n  socket.on('taskStatusChange', (task) => {\n\n    let s = _.findKey($scope.sortedStates[task.state.slug], (s) => {\n      return (s.ident === task.state.ident);\n    });\n\n    let t = _.findKey($scope.sortedStates[task.state.slug][s].tasks, (t) => {\n      return (t.ident === task.ident);\n    });\n\n    $scope.sortedStates[task.state.slug][s].tasks[t] = task;\n\n  });\n\n  // Sort States\n  let sortStates = (statesInput) => {\n\n    $scope.sortedStates = {};\n\n    _.forEach(statesInput, (s) => {\n      if(!$scope.sortedStates[s.slug]) $scope.sortedStates[s.slug] = [];\n      $scope.sortedStates[s.slug].push(s);\n    });\n\n  };\n  \n  $scope.toggleDefFilter = (def) => {\n    if($scope.filter.definition.slug.indexOf(def.slug) > -1) {\n      $scope.filter.definition.slug.splice($scope.filter.definition.slug.indexOf(def.slug), 1);\n    }else {\n      $scope.filter.definition.slug.push(def.slug);\n    }\n  };\n\n  $scope.searchPogs = (definition, query) => {\n\n    return (state) => {\n      if (!query) query = \"\";\n\n      // Define Return result\n      let result = false;\n\n      // Run over each split by space\n      _.forEach(query.split(' '), (q) => {\n\n        if (q.length === 0) return result = true;\n\n        // Pog ID?\n        if (state.analysis.pog.POGID.toLowerCase().indexOf(q.toLowerCase()) !== -1) result = true;\n\n      });\n\n      return result;\n\n    };\n  };\n  \n  // When the options panel closes, refresh the cases\n  $scope.$watch('showOptions', (newVal, oldVal) => {\n    if(oldVal === true && newVal === false) $scope.refreshList();\n  });\n  \n  \n  /**\n   * Reload tracking data from API\n   *\n   * @param {boolean} ninja - If true, do the update transparently\n   */\n  $scope.refreshList = (ninja=false) => {\n    let opts = {\n      hidden: $scope.filter.hidden,\n      slug: _.join($scope.filter.definition.slug, ',')\n    };\n    \n    if(!ninja) $scope.refreshing = true;\n    $scope.tracking_loading = true;\n    \n    $definition.all(opts).then(\n      (result) => {\n        $scope.definitions = result;\n        \n        if(!ninja) $userSettings.save('tracking.definition', $scope.filter.definition);\n        \n        $state.all({status: _.join($scope.filter.state.status, ','), slug: _.join($scope.filter.definition.slug, ',')})\n          .then((result) => {\n            sortStates(result);\n            $scope.refreshing = false;\n            $scope.tracking_loading = false;\n  \n            if(!ninja) $userSettings.save('tracking.state', $scope.filter.state);\n            \n          })\n          .catch((err) => {\n            console.log('Failed to get updated tracking data: ', err);\n            $mdToast.showSimple('Unable to get latest tracking data');\n          });\n        \n      },\n      (err) => {\n        console.log('Failed to get updated definitions', err);\n      }\n    )\n\n  };\n\n  // Open modal for new tracking\n  $scope.trackNewPOG = ($event) => {\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/tracking/board/board.new.html',\n      controller: ['$q', 'scope', 'api.lims', 'api.pog', 'api.tracking', ($q, scope, $lims, $pog, $tracking) => {\n\n\n        scope.cancel = () => {\n          $mdDialog.cancel();\n        };\n\n        scope.submit = (f) => {\n          // Check Validation\n          console.log('Check validation of form', f);\n\n          if(scope.track.POGID === undefined || scope.track.POGID === null) scope.track.POGID = scope.searchQuery;\n          if(typeof scope.track.POGID === 'object') scope.track.POGID = scope.track.POGID.POGID;\n\n          if(typeof scope.track.disease === 'object') scope.track.disease = scope.track.disease.text;\n\n          // Submit data to API\n          $tracking.init(scope.track).then(\n            (result) => {\n\n              // Add new states to array\n              $mdDialog.hide({states: result});\n\n            },\n            (err) => {\n              console.log('Failed to init tracking', err);\n            }\n          )\n\n        };\n\n        // Search Users with auto complete\n        scope.searchDisease = (searchText) => {\n\n          return $q((resolve, reject) => {\n            if(searchText.length === 0) return [];\n\n            $lims.diseaseOntology(searchText).then(\n              (resp) => {\n\n                resolve(resp.results);\n              },\n              (err) => {\n                console.log(err);\n                reject();\n              }\n            );\n          });\n        };\n\n        // Search Users with auto complete\n        scope.searchPOGs = (searchText) => {\n\n          return $q((resolve, reject) => {\n            if(searchText.length === 0) return [];\n\n            $pog.all({query: searchText, all: true}).then(\n              (resp) => {\n\n                resolve(resp);\n              },\n              (err) => {\n                console.log(err);\n                reject();\n              }\n            );\n          });\n        };\n\n\n      }]\n    })\n      // Modal closed\n      .then(\n        // Successfully\n        (result) => {\n\n          // Take result, merge with existing and sort\n          states = states.concat(result.states);\n          sortStates(states);\n\n          $mdToast.show($mdToast.simple().textContent('Tracking successfully initialized.'));\n        },\n        // Canceled\n        () => {\n          $mdToast.show($mdToast.simple().textContent('No tracking initialized.'));\n        }\n      )\n\n  };\n\n  sortStates(_.orderBy(states, ['status', 'analysis.pog.POGID'], ['asc','desc']));\n  \n  // Start polling states for updates\n  /*$interval(() => {\n    $scope.refreshList(true);\n  }, 30000); */\n\n}]);","app.controller('controller.dashboard.tracking.lane.checkin',\n['_', '$scope', '$q', '$mdDialog', '$mdToast', 'moment', 'api.tracking.state', 'api.tracking.task', 'api.user', 'api.jira', 'state', 'task',\n(_, $scope, $q, $mdDialog, $mdToast, $moment, $state, $task, $user, $jira, state, task) => {\n  \n  $scope.state = state;\n  $scope.task = task;\n  $scope.checkin = {outcome: null};\n  $scope.states = [\n    'pending',\n    'active',\n    'complete',\n    'hold',\n    'failed',\n    'cancelled'\n  ];\n  \n  $scope.date = moment().toISOString();\n  \n  /**\n   * Update status for task\n   * @param {string} status\n   */\n  $scope.updateStatus = (status) => {\n    \n    // Update the task's state\n    let updateTask = angular.copy($scope.task);\n    \n    updateTask.status = status;\n    \n    $task.update(updateTask).then(\n      (result) => {\n        $scope.task = task = result;\n        \n        // Update state\n        updateStateTask(task);\n      },\n      (err) => {\n        console.log('Failed to update task', err);\n      }\n    )\n    \n  };\n  \n  $scope.cancel = () => {\n    $mdDialog.cancel({state: $scope.state});\n  };\n  \n  $scope.close = () => {\n    $mdDialog.hide({state: $scope.state});\n  };\n  \n  /**\n   * Update the task definition in state.tasks[]\n   * @param task\n   */\n  let updateStateTask = (task) => {\n    // Find and update task row in state\n    let i = _.findIndex(state.tasks, {ident: task.ident});\n    $scope.state.tasks[i] = state.tasks[i] = $scope.task;\n  };\n  \n  /**\n   * Revoke a check-in\n   *\n   * @param {object} checkin\n   */\n  $scope.revokeCheckin = (checkin) => {\n    $task.revokeCheckin(task.ident, checkin.ident)\n      .then((result) => {\n        let i = _.findIndex($scope.task.checkins, {ident: checkin.ident});\n  \n        task.checkins.splice(i, 1);\n        $scope.task = task;\n        \n        // Update in state\n        updateStateTask(task);\n        \n        $mdToast.showSimple('Task check-in has been revoked.');\n      })\n      .catch((err) => {\n        $mdToast.showSimple('Unable to remove the task check-in.');\n      });\n  };\n  \n  /**\n   * Add new Checkin\n   *\n   */\n  $scope.checkin = () => {\n    \n    // If date, reformat\n    if(task.outcomeType === 'date') {\n      $scope.checkin.outcome = moment($scope.checkin.outcome).toISOString();\n    }\n    \n    // Building check-in body\n    $task.checkInTaskIdent(task.ident, $scope.checkin.outcome).then(\n      (result) => {\n        $scope.task = task = result;\n        \n        // Update in state\n        updateStateTask(task);\n        \n      },\n      (err) => {\n        \n        let message = \"\";\n        message += \"Failed to perform checkin.\";\n        \n        if(err.data.error && err.data.error.cause && err.data.error.cause.error && err.data.error.cause.error.message) {\n          message += \" Reason: \" + err.data.error.cause.error.message;\n        }\n        \n        $mdToast.showSimple(message);\n      }\n    )\n    \n  }\n  \n}]);\n","app.controller('controller.dashboard.tracking.lane',\n['$q', '_', '$scope', 'api.tracking.definition', 'api.tracking.state', 'api.tracking.task', 'api.socket', '$mdDialog', '$mdToast', 'lane', 'states',\n($q, _, $scope, $definition, $state, $task, $socket, $mdDialog, $mdToast, lane, states) => {\n  \n  $scope.lane = lane;\n  $scope.states = _.orderBy(states, ['status', 'analysis.pog.POGID'], ['asc','desc']);\n  $scope.cols = [];\n  $scope.showFilter = false;\n  $scope.focusFilter = false;\n  \n  $scope.displayFilter = () => {\n    $scope.showFilter = true;\n    $scope.focusFilter = true;\n  };\n  \n  // Create Task Columns\n  _.forEach(states, (s) => {\n    _.forEach(s.tasks, (t) => {\n      if(!_.find($scope.cols, {slug: t.slug})) {\n        $scope.cols.push(t);\n      }\n    });\n  });\n  \n  $scope.cols = _.orderBy($scope.cols, 'ordinal');\n  $scope.getStateTask = (state, col) => {\n    \n    let search = _.find(state.tasks, {slug: col.slug});\n    \n    if(!search) return null;\n    \n    return search;\n    \n  };\n  \n  /**\n   * Open Task check-in editor\n   *\n   * @param {object} state - State object\n   * @param {object} task - Task object\n   */\n  $scope.editValue = (state, task) => {\n    \n    $mdDialog.show({\n      controller: 'controller.dashboard.tracking.lane.checkin',\n      templateUrl: 'dashboard/tracking/board/board.lane.checkin.html',\n      locals: {\n        task: task,\n        state: state\n      }\n    })\n      .then((result) => {\n        if(result.state) {\n          let i = _.findIndex(states, {ident: result.state.ident});\n          if(i) $scope.states[i] = states[i] = result.state;\n        }\n      })\n      .catch((err) => {\n        $mdToast.showSimple('No changes where saved.');\n      })\n    \n  };\n  \n}]);","app.controller('controller.dashboard.tracking.assignment',\n['$q', '_', '$scope', 'api.tracking.definition', 'api.tracking.state', 'api.tracking.task', 'api.analysis', 'api.jira', '$interpolate', '$mdDialog', '$mdToast', 'definition', 'states', 'group', 'userLoad', 'ticket_templates',\n($q, _, $scope, $definition, $state, $task, $analysis, $jira, $interpolate, $mdDialog, $mdToast, definition, states, group, userLoad, ticket_templates) => {\n\n  $scope.definition = definition;\n  $scope.assign = {};\n  $scope.group = group;\n  $scope.states = _.orderBy(states, ['status', 'analysis.pog.POGID'], ['asc','desc']);\n  $scope.userLoad = userLoad;\n  $scope.ticket_templates = ticket_templates;\n  $scope.ticket = {\n    create: true,\n    template: (ticket_templates.length > 0) ? ticket_templates[0].ident : null\n  };\n\n  // Click state becomes active\n  $scope.selectState = (state) => {\n    $scope.assign = state;\n    if(state.jira) $scope.ticket.create = false;\n  };\n\n  // Cancel editing the selected state\n  $scope.cancelAnalysis= () => {\n    $scope.assign = {};\n    $mdToast.show($mdToast.simple().textContent('No changes have been saved.'));\n  };\n\n  // The select all checkbox state has changed\n  $scope.selectAllChanged = () => {\n    _.forEach($scope.assign.taskSelection, (v, i) => {\n      $scope.assign.taskSelection[i] = $scope.selectAll;\n    });\n  };\n\n  // Toggle row selection for task\n  $scope.clickToggle = (value) => {\n    return value = !value;\n  };\n\n  // Simple get percentage with floor\n  $scope.getFloor = (value) => {\n    return Math.floor(value);\n  };\n\n  // Submit new assignments for all checked tasks\n  $scope.assignUsers = (task) => {\n    \n    // Lock assign button\n    $scope.assign.submitting = true;\n\n    let promises = [];\n\n    let selectedUser = _.find(group.users, {ident: $scope.assign.user}).username;\n    \n    _.forEach($scope.assign.taskSelection, (set, task) => {\n      if(set) promises.push($task.assignUser(task, $scope.assign.user));\n    });\n    \n\n    $q.all(promises).then(\n      (result) => {\n\n        // Load users, apply and get updated values\n        $definition.userLoad(definition.ident).then(\n          (ul) => {\n            $scope.userLoad = userLoad = ul;\n            \n            // Create Ticket\n            if($scope.ticket.create) {\n              generateTicket($scope.assign.analysis, $scope.assign.tasks)\n                .then((result) => {\n      \n                  result.options.assignee = selectedUser;\n      \n                  $jira.ticket.create(result.project, result.type, result.summary, result.description, result.options)\n                    .then((result) => {\n                      $scope.ticket.created = result;\n                      $scope.assign.submitting = false;\n                      $scope.assign.jira = {ticket: result.key};\n                      \n                      $state.update($scope.assign.ident, $scope.assign)\n                        .then((result) => {\n                          console.log('Updated state!', result);\n                        })\n                        .catch((err) => {\n                          console.log('Unable to save ticket to state', err);\n                        });\n                      \n                    })\n                    .catch((err) => {\n                      $mdToast.showSimple('Failed to create JIRA ticket!');\n                      console.log('Failed to create JIRA ticket');\n                      console.log(err);\n                    });\n      \n                });\n            }\n            \n            // Not creating a ticket\n            if(!$scope.ticket.create) {\n              $scope.assign.submitting = false;\n            }\n            \n            \n            $mdToast.show($mdToast.simple().textContent('The selected user has been bound'));\n            $scope.UserAssignment.$setPristine();\n\n            _.forEach(result, (t) => {\n\n              _.forEach($scope.assign.tasks, (at, i) => {\n\n                if(t.ident === at.ident) $scope.assign.tasks[i] = t;\n\n              });\n\n            });\n\n\n            // Reset list of tasks checkboxes\n            _.forEach($scope.assign.taskSelection, (uc, k) => {\n              $scope.assign.taskSelection[k] = false;\n            });\n            // Reset all Checkbox\n            $scope.selectAll = false;\n\n          },\n          (err) => {\n            console.log('Unable to load userLoad details');\n          }\n        );\n\n        // Create JIRA ticket\n        if($scope.assign.jira === null) {\n        \n        \n        \n        }\n        \n\n      },\n      (err) => {\n        console.log('Failed to update tasks:', err);\n      }\n    )\n\n  };\n  \n  let generateTicket = (analysis, tasks) => {\n    return $q((resolve, reject) => {\n      \n      let response = {description: null, summary: null};\n      let template = _.find(ticket_templates, {ident: $scope.ticket.template});\n      \n      response.project = template.project;\n      response.type = template.issueType;\n      response.options = {\n        labels: template.tags,\n        components: _.map(template.components, (c) => { return {name: c}}),\n      };\n  \n      if (template.security) response.security = true;\n      \n      // Call API to get extended\n      $analysis.extended(analysis.ident)\n        .then((result) => {\n  \n          response.summary = $interpolate(template.summary)(result);\n          //let body = $interpolate(template.body)(result);\n          \n          response.description = \"\";\n          response.description += \"^This ticket has been automatically regenerated by IPR. Any manual edits made to it will not be preserved^\\n\";\n          response.description += \"h2. Case Details\\n\";\n          response.description += \"|| {{patient}} || {{threeLetterCode}} ||\\n\";\n          response.description += \"| Priority | \" + parsePriority(analysis.priority) + \" |\\n\";\n          response.description += \"| Disease | {{disease}} |\\n\";\n          response.description += \"| Biopsy Details | {{biopsy_notes}} |\\n\";\n          response.description += \"| Age | {{age}} |\\n\";\n          response.description += \"| Sex | {{sex}} |\\n\";\n          response.description += \"| Biopsy | {{biop}} |\\n\";\n          response.description += \"| Normal Library | {{lib_normal}} |\\n\";\n          response.description += \"| Tumour Library | {{lib_tumour}} ({{pool_tumour}}) |\\n\";\n          response.description += \"| RNA Library | {{lib_rna}} ({{pool_rna}}) |\\n\";\n          \n          response.description += \"\\\\\\\\ \\n\";\n          \n          response.description += \"{panel:title=\" + definition.name + \" |borderStyle=solid|borderColor=#ccc|titleBGColor=#f5f5f5|bgColor=#FFFFFF}\\n\";\n          response.description += template.body + \"\\n\";\n          response.description += \"{panel}\\n\\n\";\n          \n          response.description += \"h2. Progress\\n\";\n          response.description += \"|| Task || Status || Result ||\\n\";\n          \n          _.forEach(tasks, (t) => {\n            response.description += \"| \" + t.name + \"| \" + parseStatus(t.status).string + \" |\" + ((t.checkins.length > 0) ? t.checkins[0].outcome : '-') + \"|\\n\";\n          });\n          \n          response.description += \"\\n\\n\";\n  \n          response.description += `| ${parseStatus('pending').string} Pending | ${parseStatus('active').string} Active | ${parseStatus('complete').string} Complete | ${parseStatus('failed').string} Failed | ${parseStatus('hold').string} Hold |\\n\\n`;\n          \n          response.description += \"{panel:title=Case Notes|borderStyle=solid|borderColor=#ccc|titleBGColor=#f5f5f5|bgColor=#FFFFFF}\\n\";\n          response.description += \"None.\\n\";\n          response.description += \"{panel}\\n\\n\\n\";\n          \n          response.description = $interpolate(response.description)(result);\n          \n          resolve(response);\n        })\n        .catch((err) => {\n          $mdToast.showSimple(`Error: Failed to get necessary details to create ticket ${err.data.message}`);\n          console.log('Failed to generate ticket body & template');\n          console.log(err);\n        })\n      \n    });\n  };\n  \n  $scope.preview_ticket = (analysis, tasks) => {\n    \n    $mdDialog.show({\n      templateUrl: 'dashboard/tracking/assignment/assignment.ticket_preview.html',\n      controller: ['$scope', (scope) => {\n        \n        let template = _.find(ticket_templates, {ident: $scope.ticket.template});\n        \n        \n        \n        scope.analysis = analysis;\n        scope.definition = definition;\n        scope.loading = true;\n        scope.extended = null;\n        scope.tasks = tasks;\n        scope.summary = null;\n        scope.body = null;\n        \n        // Call API to get extended\n        $analysis.extended(analysis.ident)\n          .then((result) => {\n          \n            //let parsed_template_summary = $compile('<span>' + template.summary + '</span>')(result);\n            scope.summary = $interpolate(template.summary)(result);\n            scope.body = $interpolate(template.body)(result);\n          \n            scope.loading = false;\n            scope.extended = result;\n          })\n          .catch((err) => {\n            $mdToast.showSimple(`Error: Failed to get necessary details to create ticket ${err.data.message}`);\n            $mdDialog.cancel();\n            console.log('Failed to get extended analysis results', err);\n          });\n        \n        // Close Dialog\n        scope.close = () => {\n          $mdDialog.hide();\n        };\n        \n        // Map Parse Status function from parent\n        scope.parseStatus = parseStatus;\n        \n        // Map Parse Priority function from parent\n        scope.parsePriority = parsePriority;\n        \n      }]\n    })\n    \n  };\n  \n  let parseStatus = (status) => {\n    \n    let response;\n    \n    switch(status) {\n      case 'pending':\n        response = {string: '(off)', image: 'https://bcgsc.ca/jira/images/icons/emoticons/lightbulb.png'};\n        break;\n      case 'active':\n        response = {string: '(on)', image: 'https://bcgsc.ca/jira/images/icons/emoticons/lightbulb_on.png'};\n        break;\n      case 'complete':\n        response = {string: '(/)', image: 'https://bcgsc.ca/jira/images/icons/emoticons/check.png'};\n        break;\n      case 'hold':\n        response = {string: '(!)', image: 'https://bcgsc.ca/jira/images/icons/emoticons/warning.png'};\n        break;\n      case 'failed':\n      case 'cancelled':\n        response = {string: '(x)', image: 'https://bcgsc.ca/jira/images/icons/emoticons/error.png'};\n        break;\n    }\n    \n    return response;\n  };\n  \n  let parsePriority = (priority) => {\n    if(priority === 1) return 'low';\n    if(priority === 2) return 'Normal';\n    if(priority === 3) return 'High';\n  }\n\n\n}]);","app.controller('controller.dashboard.tracking.ticket_template',\n['$rootScope', '$scope', '$q', '_', '$mdToast', 'api.tracking.ticket_template', 'api.jira', 'definition', 'templates',\n($rootScope, $scope, $q, _, $mdToast, $template, $jira, definition, templates) => {\n  \n  $scope.definition = definition;\n  $scope.templates = templates;\n  $scope.editing = {};\n  \n  $scope.variables = [\n    { name: 'Patient ID', tag: 'patient' },\n    { name: 'Patient Sex', tag: 'sex' },\n    { name: 'Patient Age', tag: 'age' },\n    { name: 'Normal Library', tag: 'lib_normal' },\n    { name: 'Tumour Library', tag: 'lib_tumour' },\n    { name: 'Tumour Pool', tag: 'pool_tumour' },\n    { name: 'RNA Library', tag: 'lib_rna' },\n    { name: 'RNA Pool', tag: 'pool_rna' },\n    { name: 'Disease', tag: 'disease' },\n    { name: 'Biopsy Notes', tag: 'biopsy_notes' },\n    { name: 'BioApps Biop#', tag: 'biop' },\n    { name: 'Num RNA lanes Seq\\'d', tag: 'num_lanes_rna' },\n    { name: 'Num Tumour lanes Seq\\'d', tag: 'num_lanes_tumour' },\n    { name: 'RNA Sequencer', tag: 'sequencer_rna' },\n    { name: 'Tumour Sequencer', tag: 'sequencer_tumour' },\n    { name: 'Priority', tag: 'priority' },\n    { name: 'Presenter', tag: 'presenter' },\n    { name: 'BioFXician', tag: 'biofxician' },\n    { name: 'Analysis Due', tag: 'analysis_due' },\n    //{ name: 'BioFX Due', tag: 'biofx_due' },\n  ];\n  \n  $scope.insertVar = (v) => {\n    $rootScope.$broadcast('insertText', '{{'+v+'}}');\n  };\n  \n  /**\n   * Select an existing template to modify\n   *\n   * @param {object} template - Load template into form for editing\n   */\n  $scope.selectTemplate = (template) => {\n    $scope.editing = template;\n    $scope.editing.new = false;\n    \n    if(template.security === 10010) $scope.editing.pog_restricted = true;\n    \n    $scope.getProject(template.project);\n  };\n  \n  /**\n   * Setup form to create new template\n   *\n   */\n  $scope.newTemplate = () => {\n    $scope.editing = { name: null, new:true, body: \"\", tags: [] };\n  };\n  \n  /**\n   * Cancel editing\n   *\n   */\n  $scope.cancelEditing = () => {\n    $scope.editing = {};\n    $mdToast.show($mdToast.simple().textContent('No changes have been saved.'));\n  };\n  \n  /**\n   * Search JIRA project namespaces\n   *\n   * @param searchText\n   * @returns {Promise}\n   */\n  $scope.searchProjects = (searchText) => {\n    return $q((resolve, reject) => {\n      if(searchText.length === 0) return [];\n      \n      $jira.projects.all(searchText)\n        .then((resp) => {\n          resolve(_.filter(resp, (r) => { if(r.key.toLowerCase().indexOf(searchText.toLowerCase()) > -1 || r.name.toLowerCase().indexOf(searchText.toLowerCase()) > -1 ) return r; }));\n        })\n        .catch((err) => {\n          console.log(err);\n          reject();\n        });\n    });\n  };\n  \n  /**\n   * Get Components\n   *\n   */\n  $scope.getProject = () => {\n    \n    if($scope.editing.project === undefined || $scope.editing.project === null) {\n      return [];\n    }\n    \n    if(!$scope.editing.components) $scope.editing.components = [];\n    \n    let projectKey = null;\n    \n    if(typeof $scope.editing.project === 'object') projectKey = $scope.editing.project.key;\n    if(typeof $scope.editing.project === 'string') projectKey = $scope.editing.project;\n    \n    $jira.projects.get(projectKey)\n      .then((project) => {\n        $scope.components = project.components;\n        $scope.issueTypes = project.issueTypes;\n      })\n      .catch((err) => {\n        console.log('Failed to retrieve components', err);\n      });\n    \n    $jira.priority()\n      .then((priorities) => {\n        $scope.priorities = priorities;\n      })\n      .catch((err) => {\n        console.log('Failed to retrieve ticket priorities', err);\n      });\n    \n    /*\n      !! This endpoint does not support CORS retrieval.\n    $jira.projects.getSecurityLevels($scope.editing.project.id)\n      .then((levels) => {\n        // Check for POG-Restricted security level\n        let found = _.find(levels, {name: 'POG Restricted'});\n        \n        $scope.pogRestricted = (found);\n        console.log('The project has a secured setting?', $scope.pogRestricted);\n        \n      })\n      .catch((err) => {\n      \n      });\n    */\n  };\n  \n  \n  $scope.removeTemplate = () => {\n    \n    // If it's never been persisted, clear the form.\n    if($scope.editing.new) {\n      $scope.editing = {};\n      return;\n    }\n    \n    $template.remove(definition.ident, $scope.editing.ident)\n      .then((res) => {\n        \n        // Find and remove entry\n        let i = _.findIndex($scope.templates, {ident: $scope.editing.ident});\n        delete $scope.templates[i];\n        templates = $scope.templates;\n        \n        // Reset Form\n        $scope.editing = {};\n      \n      })\n      .catch((err) => {\n      \n      });\n    \n  };\n  \n  \n  $scope.save = (f) => {\n    console.log('Submitted form', f, $scope.editing);\n    \n    // Remap Project Key\n    if(typeof $scope.editing.project === 'object' && $scope.editing.project.key) $scope.editing.project = $scope.editing.project.key;\n    if(typeof $scope.editing.project !== 'string') return $mdToast.showSimple('There was a problem with the project name.');\n    \n    if($scope.editing.pog_restricted) $scope.editing.security = 10010;\n    \n    if($scope.editing.new) {\n  \n      $template.create(definition.ident, $scope.editing)\n        .then((template) => {\n          $scope.templates.push(template);\n          $scope.editing = {};\n          $mdToast.showSimple('The ticket template has been saved.');\n        })\n        .catch((err) => {\n          $mdToast.showSimple('Failed to save the ticket template.');\n        });\n    }\n    \n    if(!$scope.editing.new) {\n    \n      $template.update(definition.ident, $scope.editing)\n        .then((template) => {\n          // Find existing and replace\n          let i = _.findIndex($scope.templates, {ident: template.ident});\n  \n          $scope.templates[i] = template;\n          templates = $scope.templates;\n  \n          $mdToast.showSimple('The ticket template has been saved.');\n        })\n        .catch((err) => {\n          $mdToast.showSimple('Failed to save the ticket template.');\n        });\n      \n    }\n  }\n  \n}]);","app.controller('controller.dashboard.tracking.definition.hook',\n['$scope', '_', '$interpolate', '$mdDialog', '$mdToast', 'api.tracking.hook', 'tasks', 'hook', 'definition',\n($scope, _, $interpolate, $mdDialog, $mdToast, $hook, tasks, hook, definition) => {\n  \n  $scope.hook = hook;\n  $scope.tasks = tasks;\n  $scope.showConfirmDelete = false; // By default do not show the remove confirmation button\n  $scope.new = !(hook.ident);\n  \n  $scope.hook.target_string = _.join(hook.target, ', ');\n  \n  $scope.cancel = () => {\n    $mdDialog.cancel({event: 'cancel'});\n  };\n  \n  $scope.remove = () => {\n    \n    if(!$scope.hook.ident) $mdDialog.cancel();\n    \n    $hook.remove($scope.hook.ident)\n      .then(() => {\n        $mdDialog.cancel({event: 'remove', hook: $scope.hook, ident: $scope.hook.ident});\n      })\n      .catch((e) => {\n        $mdToast.showSimple('Failed to remove hook.');\n      });\n    \n  };\n  \n  $scope.submit = (f) => {\n    \n    // Recreate target list\n    $scope.hook.target = $scope.hook.target_string.split(',').map((i) => { console.log(i.trim()); return i.trim();})\n    \n    \n    // Create or Save\n    if(hook.ident && hook.ident.length > 0) {\n      // Save\n      \n      $hook.update(hook.ident, hook)\n        .then((resp) => {\n          $mdDialog.hide(resp);\n        })\n        .catch((e) => {\n          $mdToast.showSimple('Failed to update the hook: ' + e.data.message);\n        });\n      \n    } else {\n      \n      $scope.hook.state_name = definition.slug;\n      // Create\n      $hook.create(hook)\n        .then((resp) => {\n          $mdDialog.hide(resp);\n        })\n        .catch((e) => {\n          $mdToast.showSimple('Failed to create the hook: ' + e.data.message);\n        });\n    }\n    \n  }\n  \n}]);","app.controller('controller.dashboard.tracking.definition',\n['$q', '_', '$scope', 'api.tracking.definition', 'api.tracking.state', 'api.tracking.task', '$mdDialog', '$mdToast', 'definitions', 'groups', 'hooks',\n($q, _, $scope, $definition, $state, $task, $mdDialog, $mdToast, definitions, groups, hooks) => {\n\n  $scope.definitions = _.sortBy(definitions, 'ordinal');\n  \n  $scope.editing = {};\n  $scope.groups = groups;\n  $scope.hooks = hooks;\n\n  $scope.selectDefinition = (definition) => {\n    $scope.editing = definition;\n    $scope.editing.new = false;\n  };\n\n  $scope.newDefinition = () => {\n    $scope.editing = { name: null, new:true, tasks: [] };\n  };\n\n  $scope.cancelEditing = () => {\n    $scope.editing = {};\n    $mdToast.show($mdToast.simple().textContent('No changes have been saved.'));\n  };\n  \n  $scope.getHooksByState = (state) => {\n    return _.filter($scope.hooks, {state_name: state});\n  };\n  \n  $scope.openHook = (hook) => {\n    \n    $mdDialog.show({\n      templateUrl: 'dashboard/tracking/definition/definition.hook.html',\n      controller: 'controller.dashboard.tracking.definition.hook',\n      locals: {\n        hook: hook,\n        tasks: $scope.editing.tasks,\n        definition: $scope.editing\n      }\n    })\n      .then((h) => {\n        if(!_.find($scope.hooks, {ident: h.ident})) $scope.hooks.push(h);\n      })\n      .catch((e) => {\n        if(!e) e = {event: 'cancel'};\n        \n        switch(e.event) {\n          case 'remove':\n            let i = _.findKey($scope.hooks, {ident: e.ident});\n            $scope.hooks.splice(i,1);\n            break;\n        }\n      });\n    \n  };\n\n  // Save Definitions editor form\n  $scope.save = () => {\n\n    // Validate Form\n\n    // Get Group Ident\n    $scope.entry = angular.copy($scope.editing);\n    $scope.entry.group = $scope.editing.group;\n\n    // Updating or Editing\n    if($scope.editing.new) {\n\n      $scope.editing.ordinal = $scope.definitions.length + 1;\n\n      $definition.create($scope.entry).then(\n        (result) => {\n          $scope.definitions.push(result);\n          $scope.editing = {};\n        },\n        (err) => {\n          console.log('Failed to create definition');\n          $mdToast.show($mdToast.simple('Failed to create new definition'));\n        }\n      )\n\n    } else {\n\n      // Submit to DB\n      $definition.update($scope.editing.ident, $scope.entry).then(\n        (result) => {\n\n          // Find existing and replace\n          let i = _.findIndex($scope.definitions, {ident: result.ident});\n\n          $scope.definitions[i] = result;\n          definitions = $scope.definitions;\n\n          $mdToast.show($mdToast.simple().textContent('The definition has been saved'));\n\n        },\n        (err) => {\n\n        }\n      )\n    }\n\n  };\n\n  // Open Task Editor\n  $scope.taskEditor = ($event, task=false, i=null) => {\n\n    $mdDialog.show({\n      targetEvent: $event,\n      templateUrl: 'dashboard/tracking/definition/definition.task.html',\n      controller: ['$q', 'scope', ($q, scope) => {\n\n        let taskCopy = angular.copy(task);\n\n        scope.new = (typeof task !== \"object\");\n        scope.task = (typeof task !== \"object\") ? {status: 'pending', checkInsTarget: 1, } : task;\n        scope.taskIndex = i;\n\n        scope.cancel = () => {\n          $mdDialog.cancel();\n          task = taskCopy;\n        };\n\n        scope.submit = (f) => {\n          // Check Validation\n\n          if(scope.new) $scope.editing.tasks.push(scope.task);\n\n          $mdDialog.hide();\n        };\n\n        // Remove the current entry\n        scope.remove = () => {\n\n          $scope.editing.tasks.splice(i,1);\n          $mdDialog.hide();\n        };\n\n      }]\n    })\n\n  };\n\n  // Update ordinal of definitions\n  $scope.updateOrdinal = () => {\n\n    // Array of promises to be watched\n    let promises = [];\n\n    // Loop over entries and set ordinal, then update entry\n    _.forEach($scope.definitions, (def, i) => {\n\n      $scope.definitions[i].ordinal = i+1;\n\n      // Update definitions\n      promises.push($definition.update(def.ident, def))\n\n    });\n\n    $q.all(promises).then(\n      (result) => {\n        $mdToast.show($mdToast.simple().textContent('Updated order has been saved'));\n      },\n      (err) => {\n        console.log('Unable to update definition ordinals', err);\n      }\n    )\n\n\n\n  }\n\n\n\n}]);","app.controller('controller.dashboard.tracking.definition.ticket',\n['$scope', '_', '$interpolate', '$mdDialog', '$mdToast', 'api.jira', 'definition',\n($scope, _, $interpolate, $mdDialog, $mdToast, $jira, definition) => {\n  \n\n\n}]);"]}