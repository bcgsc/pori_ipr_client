import React, {
  useEffect, useState, useRef,
} from 'react';
import { UncontrolledReactSVGPanZoom } from 'react-svg-pan-zoom';
import InlineSVG from 'svg-inline-react';
import AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';

import './index.scss';

type SvgImageProps = {
  image: string;
  isPrint?: boolean;
};

const PRINT_WIDTH = 816;
const ICON_WIDTH = 48;

const SvgImage = ({
  image,
  isPrint = false,
}: SvgImageProps): JSX.Element => {
  const Viewer = useRef();
  const [svgHeight, setSvgHeight] = useState<number>();
  const [svgWidth, setSvgWidth] = useState<number>();
  const [processedImage, setProcessedImage] = useState('');

  useEffect(() => {
    if (processedImage) {
      const svg = new DOMParser().parseFromString(processedImage, 'image/svg+xml');
      const [svgElem] = svg.getElementsByTagName('svg');
      setSvgHeight(svgElem?.height?.baseVal?.value || PRINT_WIDTH);
      setSvgWidth(svgElem?.width?.baseVal?.value || PRINT_WIDTH);
    }
  }, [processedImage]);

  useEffect(() => {
    if (image) {
      const replacer = (matched: string) => {
        const prop = matched.match(/(?<=")[^:]+/);
        const val = matched.match(/(?<=:\s*)[^\s][^;]+/);
        return `${prop}="${val}"`;
      };
      /* This handles SVGs generated by Abobe Illustrator */
      /* Regex finds style="prop: value" in the svg tag and replaces with the attr prop="value" */
      setProcessedImage(
        image.replace(
          /(?<=<svg[^>]*?)style=((\\?"[^"]*?\\?")|(\\?'[^']*?\\?'))/g,
          replacer,
        ),
      );
    }
    return () => setProcessedImage('');
  }, [image]);

  const handleFit = () => {
    Viewer?.current?.fitToViewer();
  };

  return (
    <div className="svg-image">
      {processedImage && svgHeight && svgWidth && (
        <AutoSizer disableHeight defaultWidth={PRINT_WIDTH} onResize={handleFit}>
          {({ width = PRINT_WIDTH }) => (
            <UncontrolledReactSVGPanZoom
              ref={Viewer}
              /*
                 48px is removed since with a float icon to the right
                 then the SVG is moved down too far.
              */
              width={width - ICON_WIDTH}
              height={svgHeight}
              background="#FFFFFF"
              detectAutoPan={false}
              defaultTool="auto"
              customMiniature={() => null}
              customToolbar={isPrint ? () => null : undefined}
              toolbarProps={{ position: 'left' }}
            >
              <svg width={svgWidth} height={svgHeight}>
                <InlineSVG src={processedImage} raw />
              </svg>
            </UncontrolledReactSVGPanZoom>
          )}
        </AutoSizer>
      )}
    </div>
  );
};

export default SvgImage;
